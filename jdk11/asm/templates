
----------------------------------------------------------------------
Interpreter

code size        =    119K bytes
total space      =    119K bytes
wasted space     =      0K bytes

# of codelets    =    271
avg codelet size =    452 bytes


----------------------------------------------------------------------
slow signature handler  [0x00007fafb8c64520, 0x00007fafb8c646e0]  448 bytes

Loaded disassembler from /usr/lib/jvm/jdk11/lib/server/hsdis-amd64.so
Argument 0 is unknown.RIP: 0x7fafb8c64520 Code size: 0x000001c0
[Disassembling for mach='amd64']
  0x00007fafb8c64520: mov     %rsp,%rcx
  0x00007fafb8c64523: sub     $0x70,%rsp
  0x00007fafb8c64527: callq   0x7fafb8c64531
  0x00007fafb8c6452c: jmpq    0x7fafb8c645c9
  0x00007fafb8c64531: mov     %r14,%rdx
  0x00007fafb8c64534: mov     %rbx,%rsi
  0x00007fafb8c64537: lea     0x8(%rsp),%rax
  0x00007fafb8c6453c: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c64540: mov     %r15,%rdi
  0x00007fafb8c64543: vzeroupper
  0x00007fafb8c64546: mov     %rbp,0x330(%r15)
  0x00007fafb8c6454d: mov     %rax,0x320(%r15)
  0x00007fafb8c64554: test    $0xf,%esp
  0x00007fafb8c6455a: je      0x7fafb8c64572
  0x00007fafb8c64560: sub     $0x8,%rsp
  0x00007fafb8c64564: callq   0x7fafd7d7b3a0
  0x00007fafb8c64569: add     $0x8,%rsp
  0x00007fafb8c6456d: jmpq    0x7fafb8c64577
  0x00007fafb8c64572: callq   0x7fafd7d7b3a0
  0x00007fafb8c64577: movabs  $0x0,%r10
  0x00007fafb8c64581: mov     %r10,0x320(%r15)
  0x00007fafb8c64588: movabs  $0x0,%r10
  0x00007fafb8c64592: mov     %r10,0x330(%r15)
  0x00007fafb8c64599: movabs  $0x0,%r10
  0x00007fafb8c645a3: mov     %r10,0x328(%r15)
  0x00007fafb8c645aa: vzeroupper
  0x00007fafb8c645ad: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c645b5: je      0x7fafb8c645c0
  0x00007fafb8c645bb: jmpq    0x7fafb8c5c780
  0x00007fafb8c645c0: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c645c4: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c645c8: retq
  0x00007fafb8c645c9: mov     0x28(%rsp),%ecx
  0x00007fafb8c645cd: test    $0x1,%ecx
  0x00007fafb8c645d3: jne     0x7fafb8c645e4
  0x00007fafb8c645d9: vmovss  0x30(%rsp),%xmm0
  0x00007fafb8c645df: jmpq    0x7fafb8c645ea
  0x00007fafb8c645e4: vmovsd  0x30(%rsp),%xmm0
  0x00007fafb8c645ea: test    $0x2,%ecx
  0x00007fafb8c645f0: jne     0x7fafb8c64601
  0x00007fafb8c645f6: vmovss  0x38(%rsp),%xmm1
  0x00007fafb8c645fc: jmpq    0x7fafb8c64607
  0x00007fafb8c64601: vmovsd  0x38(%rsp),%xmm1
  0x00007fafb8c64607: test    $0x4,%ecx
  0x00007fafb8c6460d: jne     0x7fafb8c6461e
  0x00007fafb8c64613: vmovss  0x40(%rsp),%xmm2
  0x00007fafb8c64619: jmpq    0x7fafb8c64624
  0x00007fafb8c6461e: vmovsd  0x40(%rsp),%xmm2
  0x00007fafb8c64624: test    $0x8,%ecx
  0x00007fafb8c6462a: jne     0x7fafb8c6463b
  0x00007fafb8c64630: vmovss  0x48(%rsp),%xmm3
  0x00007fafb8c64636: jmpq    0x7fafb8c64641
  0x00007fafb8c6463b: vmovsd  0x48(%rsp),%xmm3
  0x00007fafb8c64641: test    $0x10,%ecx
  0x00007fafb8c64647: jne     0x7fafb8c64658
  0x00007fafb8c6464d: vmovss  0x50(%rsp),%xmm4
  0x00007fafb8c64653: jmpq    0x7fafb8c6465e
  0x00007fafb8c64658: vmovsd  0x50(%rsp),%xmm4
  0x00007fafb8c6465e: test    $0x20,%ecx
  0x00007fafb8c64664: jne     0x7fafb8c64675
  0x00007fafb8c6466a: vmovss  0x58(%rsp),%xmm5
  0x00007fafb8c64670: jmpq    0x7fafb8c6467b
  0x00007fafb8c64675: vmovsd  0x58(%rsp),%xmm5
  0x00007fafb8c6467b: test    $0x40,%ecx
  0x00007fafb8c64681: jne     0x7fafb8c64692
  0x00007fafb8c64687: vmovss  0x60(%rsp),%xmm6
  0x00007fafb8c6468d: jmpq    0x7fafb8c64698
  0x00007fafb8c64692: vmovsd  0x60(%rsp),%xmm6
  0x00007fafb8c64698: test    $0x80,%ecx
  0x00007fafb8c6469e: jne     0x7fafb8c646af
  0x00007fafb8c646a4: vmovss  0x68(%rsp),%xmm7
  0x00007fafb8c646aa: jmpq    0x7fafb8c646b5
  0x00007fafb8c646af: vmovsd  0x68(%rsp),%xmm7
  0x00007fafb8c646b5: mov     0x20(%rbx),%ecx
  0x00007fafb8c646b8: test    $0x8,%ecx
  0x00007fafb8c646be: cmove   (%rsp),%rsi
  0x00007fafb8c646c3: mov     0x8(%rsp),%rdx
  0x00007fafb8c646c8: mov     0x10(%rsp),%rcx
  0x00007fafb8c646cd: mov     0x18(%rsp),%r8
  0x00007fafb8c646d2: mov     0x20(%rsp),%r9
  0x00007fafb8c646d7: add     $0x70,%rsp
  0x00007fafb8c646db: retq
  0x00007fafb8c646dc: nopl    0x0(%rax)

----------------------------------------------------------------------
error exits  [0x00007fafb8c64700, 0x00007fafb8c64800]  256 bytes

Argument 0 is unknown.RIP: 0x7fafb8c64700 Code size: 0x00000100
  0x00007fafb8c64700: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c64705: sub     $0x80,%rsp
  0x00007fafb8c6470c: mov     %rax,0x78(%rsp)
  0x00007fafb8c64711: mov     %rcx,0x70(%rsp)
  0x00007fafb8c64716: mov     %rdx,0x68(%rsp)
  0x00007fafb8c6471b: mov     %rbx,0x60(%rsp)
  0x00007fafb8c64720: mov     %rbp,0x50(%rsp)
  0x00007fafb8c64725: mov     %rsi,0x48(%rsp)
  0x00007fafb8c6472a: mov     %rdi,0x40(%rsp)
  0x00007fafb8c6472f: mov     %r8,0x38(%rsp)
  0x00007fafb8c64734: mov     %r9,0x30(%rsp)
  0x00007fafb8c64739: mov     %r10,0x28(%rsp)
  0x00007fafb8c6473e: mov     %r11,0x20(%rsp)
  0x00007fafb8c64743: mov     %r12,0x18(%rsp)
  0x00007fafb8c64748: mov     %r13,0x10(%rsp)
  0x00007fafb8c6474d: mov     %r14,0x8(%rsp)
  0x00007fafb8c64752: mov     %r15,(%rsp)
  0x00007fafb8c64756: movabs  $0x7fafd846142b,%rdi
  0x00007fafb8c64760: movabs  $0x7fafb8c64700,%rsi
  0x00007fafb8c6476a: mov     %rsp,%rdx
  0x00007fafb8c6476d: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c64771: callq   0x7fafd7fdd230
  0x00007fafb8c64776: hlt
  0x00007fafb8c64777: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c6477c: sub     $0x80,%rsp
  0x00007fafb8c64783: mov     %rax,0x78(%rsp)
  0x00007fafb8c64788: mov     %rcx,0x70(%rsp)
  0x00007fafb8c6478d: mov     %rdx,0x68(%rsp)
  0x00007fafb8c64792: mov     %rbx,0x60(%rsp)
  0x00007fafb8c64797: mov     %rbp,0x50(%rsp)
  0x00007fafb8c6479c: mov     %rsi,0x48(%rsp)
  0x00007fafb8c647a1: mov     %rdi,0x40(%rsp)
  0x00007fafb8c647a6: mov     %r8,0x38(%rsp)
  0x00007fafb8c647ab: mov     %r9,0x30(%rsp)
  0x00007fafb8c647b0: mov     %r10,0x28(%rsp)
  0x00007fafb8c647b5: mov     %r11,0x20(%rsp)
  0x00007fafb8c647ba: mov     %r12,0x18(%rsp)
  0x00007fafb8c647bf: mov     %r13,0x10(%rsp)
  0x00007fafb8c647c4: mov     %r14,0x8(%rsp)
  0x00007fafb8c647c9: mov     %r15,(%rsp)
  0x00007fafb8c647cd: movabs  $0x7fafd8460cd0,%rdi
  0x00007fafb8c647d7: movabs  $0x7fafb8c64777,%rsi
  0x00007fafb8c647e1: mov     %rsp,%rdx
  0x00007fafb8c647e4: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c647e8: callq   0x7fafd7fdd230
  0x00007fafb8c647ed: hlt
  0x00007fafb8c647ee: nop
  0x00007fafb8c647f0: add     %al,(%rax)
  0x00007fafb8c647f2: add     %al,(%rax)
  0x00007fafb8c647f4: add     %al,(%rax)
  0x00007fafb8c647f6: add     %al,(%rax)
  0x00007fafb8c647f8: add     %al,(%rax)
  0x00007fafb8c647fa: add     %al,(%rax)
  0x00007fafb8c647fc: add     %al,(%rax)
  0x00007fafb8c647fe: add     %al,(%rax)

----------------------------------------------------------------------
return entry points  [0x00007fafb8c64820, 0x00007fafb8c65360]  2880 bytes

Argument 0 is unknown.RIP: 0x7fafb8c64820 Code size: 0x00000b40
  0x00007fafb8c64820: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c64824: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c6482c: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c64830: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c64834: movzwl  0x1(%r13),%ecx
  0x00007fafb8c64839: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c6483d: shl     $0x2,%ecx
  0x00007fafb8c64840: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c64844: and     $0xff,%ebx
  0x00007fafb8c6484a: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c6484e: movzbl  0x1(%r13),%ebx
  0x00007fafb8c64853: incq    %r13
  0x00007fafb8c64856: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c64860: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c64864: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c64868: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c64870: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c64874: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c64878: movzwl  0x1(%r13),%ecx
  0x00007fafb8c6487d: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c64881: shl     $0x2,%ecx
  0x00007fafb8c64884: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c64888: and     $0xff,%ebx
  0x00007fafb8c6488e: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c64892: movzbl  0x1(%r13),%ebx
  0x00007fafb8c64897: incq    %r13
  0x00007fafb8c6489a: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c648a4: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c648a8: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c648ac: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c648b4: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c648b8: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c648bc: movzwl  0x1(%r13),%ecx
  0x00007fafb8c648c1: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c648c5: shl     $0x2,%ecx
  0x00007fafb8c648c8: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c648cc: and     $0xff,%ebx
  0x00007fafb8c648d2: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c648d6: movzbl  0x1(%r13),%ebx
  0x00007fafb8c648db: incq    %r13
  0x00007fafb8c648de: movabs  $0x7fafd89a7080,%r10
  0x00007fafb8c648e8: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c648ec: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c648f0: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c648f8: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c648fc: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c64900: movzwl  0x1(%r13),%ecx
  0x00007fafb8c64905: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c64909: shl     $0x2,%ecx
  0x00007fafb8c6490c: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c64910: and     $0xff,%ebx
  0x00007fafb8c64916: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c6491a: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6491f: incq    %r13
  0x00007fafb8c64922: movabs  $0x7fafd89a6880,%r10
  0x00007fafb8c6492c: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c64930: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c64934: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c6493c: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c64940: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c64944: movzwl  0x1(%r13),%ecx
  0x00007fafb8c64949: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c6494d: shl     $0x2,%ecx
  0x00007fafb8c64950: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c64954: and     $0xff,%ebx
  0x00007fafb8c6495a: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c6495e: movzbl  0x1(%r13),%ebx
  0x00007fafb8c64963: incq    %r13
  0x00007fafb8c64966: movabs  $0x7fafd89a6080,%r10
  0x00007fafb8c64970: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c64974: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c64978: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c64980: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c64984: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c64988: mov     0xffffffffffffffd8(%rbp),%rbx
  0x00007fafb8c6498c: test    %rbx,%rbx
  0x00007fafb8c6498f: je      0x7fafb8c64a25
  0x00007fafb8c64995: cmpb    $0xba,0x0(%r13)
  0x00007fafb8c6499a: je      0x7fafb8c649bb
  0x00007fafb8c649a0: cmpb    $0xe9,0x0(%r13)
  0x00007fafb8c649a5: je      0x7fafb8c649bb
  0x00007fafb8c649ab: mov     0xffffffffffffffe8(%rbp),%rcx
  0x00007fafb8c649af: cmpw    $0x121,0x28(%rcx)
  0x00007fafb8c649b5: jne     0x7fafb8c64a25
  0x00007fafb8c649bb: mov     %rax,%rcx
  0x00007fafb8c649be: test    %rcx,%rcx
  0x00007fafb8c649c1: jne     0x7fafb8c649cd
  0x00007fafb8c649c3: orq     $0x1,0xfffffffffffffff8(%rbx)
  0x00007fafb8c649cb: jmp     0x7fafb8c64a25
  0x00007fafb8c649cd: mov     0x8(%rcx),%ecx
  0x00007fafb8c649d0: movabs  $0x800000000,%r12
  0x00007fafb8c649da: add     %r12,%rcx
  0x00007fafb8c649dd: xor     %r12,%r12
  0x00007fafb8c649e0: xor     0xfffffffffffffff8(%rbx),%rcx
  0x00007fafb8c649e4: test    $0xfffffffffffffffc,%rcx
  0x00007fafb8c649eb: je      0x7fafb8c64a25
  0x00007fafb8c649ed: test    $0x2,%rcx
  0x00007fafb8c649f4: jne     0x7fafb8c64a25
  0x00007fafb8c649f6: cmpq    $0x0,0xfffffffffffffff8(%rbx)
  0x00007fafb8c649fe: je      0x7fafb8c64a21
  0x00007fafb8c64a00: cmpq    $0x1,0xfffffffffffffff8(%rbx)
  0x00007fafb8c64a08: je      0x7fafb8c64a21
  0x00007fafb8c64a0a: xor     0xfffffffffffffff8(%rbx),%rcx
  0x00007fafb8c64a0e: test    $0xfffffffffffffffc,%rcx
  0x00007fafb8c64a15: je      0x7fafb8c64a25
  0x00007fafb8c64a17: orq     $0x2,0xfffffffffffffff8(%rbx)
  0x00007fafb8c64a1f: jmp     0x7fafb8c64a25
  0x00007fafb8c64a21: mov     %rcx,0xfffffffffffffff8(%rbx)
  0x00007fafb8c64a25: movzwl  0x1(%r13),%ecx
  0x00007fafb8c64a2a: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c64a2e: shl     $0x2,%ecx
  0x00007fafb8c64a31: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c64a35: and     $0xff,%ebx
  0x00007fafb8c64a3b: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c64a3f: movzbl  0x1(%r13),%ebx
  0x00007fafb8c64a44: incq    %r13
  0x00007fafb8c64a47: movabs  $0x7fafd89a7880,%r10
  0x00007fafb8c64a51: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c64a55: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c64a59: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c64a61: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c64a65: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c64a69: movzwl  0x1(%r13),%ecx
  0x00007fafb8c64a6e: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c64a72: shl     $0x2,%ecx
  0x00007fafb8c64a75: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c64a79: and     $0xff,%ebx
  0x00007fafb8c64a7f: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c64a83: movzbl  0x2(%r13),%ebx
  0x00007fafb8c64a88: add     $0x2,%r13
  0x00007fafb8c64a8c: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c64a96: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c64a9a: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c64a9e: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c64aa6: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c64aaa: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c64aae: movzwl  0x1(%r13),%ecx
  0x00007fafb8c64ab3: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c64ab7: shl     $0x2,%ecx
  0x00007fafb8c64aba: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c64abe: and     $0xff,%ebx
  0x00007fafb8c64ac4: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c64ac8: movzbl  0x2(%r13),%ebx
  0x00007fafb8c64acd: add     $0x2,%r13
  0x00007fafb8c64ad1: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c64adb: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c64adf: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c64ae3: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c64aeb: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c64aef: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c64af3: movzwl  0x1(%r13),%ecx
  0x00007fafb8c64af8: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c64afc: shl     $0x2,%ecx
  0x00007fafb8c64aff: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c64b03: and     $0xff,%ebx
  0x00007fafb8c64b09: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c64b0d: movzbl  0x2(%r13),%ebx
  0x00007fafb8c64b12: add     $0x2,%r13
  0x00007fafb8c64b16: movabs  $0x7fafd89a7080,%r10
  0x00007fafb8c64b20: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c64b24: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c64b28: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c64b30: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c64b34: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c64b38: movzwl  0x1(%r13),%ecx
  0x00007fafb8c64b3d: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c64b41: shl     $0x2,%ecx
  0x00007fafb8c64b44: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c64b48: and     $0xff,%ebx
  0x00007fafb8c64b4e: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c64b52: movzbl  0x2(%r13),%ebx
  0x00007fafb8c64b57: add     $0x2,%r13
  0x00007fafb8c64b5b: movabs  $0x7fafd89a6880,%r10
  0x00007fafb8c64b65: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c64b69: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c64b6d: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c64b75: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c64b79: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c64b7d: movzwl  0x1(%r13),%ecx
  0x00007fafb8c64b82: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c64b86: shl     $0x2,%ecx
  0x00007fafb8c64b89: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c64b8d: and     $0xff,%ebx
  0x00007fafb8c64b93: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c64b97: movzbl  0x2(%r13),%ebx
  0x00007fafb8c64b9c: add     $0x2,%r13
  0x00007fafb8c64ba0: movabs  $0x7fafd89a6080,%r10
  0x00007fafb8c64baa: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c64bae: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c64bb2: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c64bba: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c64bbe: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c64bc2: mov     0xffffffffffffffd8(%rbp),%rbx
  0x00007fafb8c64bc6: test    %rbx,%rbx
  0x00007fafb8c64bc9: je      0x7fafb8c64c5f
  0x00007fafb8c64bcf: cmpb    $0xba,0x0(%r13)
  0x00007fafb8c64bd4: je      0x7fafb8c64bf5
  0x00007fafb8c64bda: cmpb    $0xe9,0x0(%r13)
  0x00007fafb8c64bdf: je      0x7fafb8c64bf5
  0x00007fafb8c64be5: mov     0xffffffffffffffe8(%rbp),%rcx
  0x00007fafb8c64be9: cmpw    $0x121,0x28(%rcx)
  0x00007fafb8c64bef: jne     0x7fafb8c64c5f
  0x00007fafb8c64bf5: mov     %rax,%rcx
  0x00007fafb8c64bf8: test    %rcx,%rcx
  0x00007fafb8c64bfb: jne     0x7fafb8c64c07
  0x00007fafb8c64bfd: orq     $0x1,0xfffffffffffffff8(%rbx)
  0x00007fafb8c64c05: jmp     0x7fafb8c64c5f
  0x00007fafb8c64c07: mov     0x8(%rcx),%ecx
  0x00007fafb8c64c0a: movabs  $0x800000000,%r12
  0x00007fafb8c64c14: add     %r12,%rcx
  0x00007fafb8c64c17: xor     %r12,%r12
  0x00007fafb8c64c1a: xor     0xfffffffffffffff8(%rbx),%rcx
  0x00007fafb8c64c1e: test    $0xfffffffffffffffc,%rcx
  0x00007fafb8c64c25: je      0x7fafb8c64c5f
  0x00007fafb8c64c27: test    $0x2,%rcx
  0x00007fafb8c64c2e: jne     0x7fafb8c64c5f
  0x00007fafb8c64c30: cmpq    $0x0,0xfffffffffffffff8(%rbx)
  0x00007fafb8c64c38: je      0x7fafb8c64c5b
  0x00007fafb8c64c3a: cmpq    $0x1,0xfffffffffffffff8(%rbx)
  0x00007fafb8c64c42: je      0x7fafb8c64c5b
  0x00007fafb8c64c44: xor     0xfffffffffffffff8(%rbx),%rcx
  0x00007fafb8c64c48: test    $0xfffffffffffffffc,%rcx
  0x00007fafb8c64c4f: je      0x7fafb8c64c5f
  0x00007fafb8c64c51: orq     $0x2,0xfffffffffffffff8(%rbx)
  0x00007fafb8c64c59: jmp     0x7fafb8c64c5f
  0x00007fafb8c64c5b: mov     %rcx,0xfffffffffffffff8(%rbx)
  0x00007fafb8c64c5f: movzwl  0x1(%r13),%ecx
  0x00007fafb8c64c64: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c64c68: shl     $0x2,%ecx
  0x00007fafb8c64c6b: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c64c6f: and     $0xff,%ebx
  0x00007fafb8c64c75: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c64c79: movzbl  0x2(%r13),%ebx
  0x00007fafb8c64c7e: add     $0x2,%r13
  0x00007fafb8c64c82: movabs  $0x7fafd89a7880,%r10
  0x00007fafb8c64c8c: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c64c90: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c64c94: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c64c9c: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c64ca0: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c64ca4: movzwl  0x1(%r13),%ecx
  0x00007fafb8c64ca9: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c64cad: shl     $0x2,%ecx
  0x00007fafb8c64cb0: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c64cb4: and     $0xff,%ebx
  0x00007fafb8c64cba: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c64cbe: movzbl  0x3(%r13),%ebx
  0x00007fafb8c64cc3: add     $0x3,%r13
  0x00007fafb8c64cc7: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c64cd1: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c64cd5: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c64cd9: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c64ce1: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c64ce5: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c64ce9: movzwl  0x1(%r13),%ecx
  0x00007fafb8c64cee: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c64cf2: shl     $0x2,%ecx
  0x00007fafb8c64cf5: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c64cf9: and     $0xff,%ebx
  0x00007fafb8c64cff: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c64d03: movzbl  0x3(%r13),%ebx
  0x00007fafb8c64d08: add     $0x3,%r13
  0x00007fafb8c64d0c: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c64d16: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c64d1a: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c64d1e: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c64d26: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c64d2a: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c64d2e: movzwl  0x1(%r13),%ecx
  0x00007fafb8c64d33: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c64d37: shl     $0x2,%ecx
  0x00007fafb8c64d3a: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c64d3e: and     $0xff,%ebx
  0x00007fafb8c64d44: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c64d48: movzbl  0x3(%r13),%ebx
  0x00007fafb8c64d4d: add     $0x3,%r13
  0x00007fafb8c64d51: movabs  $0x7fafd89a7080,%r10
  0x00007fafb8c64d5b: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c64d5f: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c64d63: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c64d6b: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c64d6f: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c64d73: movzwl  0x1(%r13),%ecx
  0x00007fafb8c64d78: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c64d7c: shl     $0x2,%ecx
  0x00007fafb8c64d7f: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c64d83: and     $0xff,%ebx
  0x00007fafb8c64d89: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c64d8d: movzbl  0x3(%r13),%ebx
  0x00007fafb8c64d92: add     $0x3,%r13
  0x00007fafb8c64d96: movabs  $0x7fafd89a6880,%r10
  0x00007fafb8c64da0: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c64da4: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c64da8: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c64db0: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c64db4: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c64db8: movzwl  0x1(%r13),%ecx
  0x00007fafb8c64dbd: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c64dc1: shl     $0x2,%ecx
  0x00007fafb8c64dc4: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c64dc8: and     $0xff,%ebx
  0x00007fafb8c64dce: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c64dd2: movzbl  0x3(%r13),%ebx
  0x00007fafb8c64dd7: add     $0x3,%r13
  0x00007fafb8c64ddb: movabs  $0x7fafd89a6080,%r10
  0x00007fafb8c64de5: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c64de9: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c64ded: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c64df5: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c64df9: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c64dfd: mov     0xffffffffffffffd8(%rbp),%rbx
  0x00007fafb8c64e01: test    %rbx,%rbx
  0x00007fafb8c64e04: je      0x7fafb8c64e9a
  0x00007fafb8c64e0a: cmpb    $0xba,0x0(%r13)
  0x00007fafb8c64e0f: je      0x7fafb8c64e30
  0x00007fafb8c64e15: cmpb    $0xe9,0x0(%r13)
  0x00007fafb8c64e1a: je      0x7fafb8c64e30
  0x00007fafb8c64e20: mov     0xffffffffffffffe8(%rbp),%rcx
  0x00007fafb8c64e24: cmpw    $0x121,0x28(%rcx)
  0x00007fafb8c64e2a: jne     0x7fafb8c64e9a
  0x00007fafb8c64e30: mov     %rax,%rcx
  0x00007fafb8c64e33: test    %rcx,%rcx
  0x00007fafb8c64e36: jne     0x7fafb8c64e42
  0x00007fafb8c64e38: orq     $0x1,0xfffffffffffffff8(%rbx)
  0x00007fafb8c64e40: jmp     0x7fafb8c64e9a
  0x00007fafb8c64e42: mov     0x8(%rcx),%ecx
  0x00007fafb8c64e45: movabs  $0x800000000,%r12
  0x00007fafb8c64e4f: add     %r12,%rcx
  0x00007fafb8c64e52: xor     %r12,%r12
  0x00007fafb8c64e55: xor     0xfffffffffffffff8(%rbx),%rcx
  0x00007fafb8c64e59: test    $0xfffffffffffffffc,%rcx
  0x00007fafb8c64e60: je      0x7fafb8c64e9a
  0x00007fafb8c64e62: test    $0x2,%rcx
  0x00007fafb8c64e69: jne     0x7fafb8c64e9a
  0x00007fafb8c64e6b: cmpq    $0x0,0xfffffffffffffff8(%rbx)
  0x00007fafb8c64e73: je      0x7fafb8c64e96
  0x00007fafb8c64e75: cmpq    $0x1,0xfffffffffffffff8(%rbx)
  0x00007fafb8c64e7d: je      0x7fafb8c64e96
  0x00007fafb8c64e7f: xor     0xfffffffffffffff8(%rbx),%rcx
  0x00007fafb8c64e83: test    $0xfffffffffffffffc,%rcx
  0x00007fafb8c64e8a: je      0x7fafb8c64e9a
  0x00007fafb8c64e8c: orq     $0x2,0xfffffffffffffff8(%rbx)
  0x00007fafb8c64e94: jmp     0x7fafb8c64e9a
  0x00007fafb8c64e96: mov     %rcx,0xfffffffffffffff8(%rbx)
  0x00007fafb8c64e9a: movzwl  0x1(%r13),%ecx
  0x00007fafb8c64e9f: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c64ea3: shl     $0x2,%ecx
  0x00007fafb8c64ea6: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c64eaa: and     $0xff,%ebx
  0x00007fafb8c64eb0: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c64eb4: movzbl  0x3(%r13),%ebx
  0x00007fafb8c64eb9: add     $0x3,%r13
  0x00007fafb8c64ebd: movabs  $0x7fafd89a7880,%r10
  0x00007fafb8c64ec7: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c64ecb: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c64ecf: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c64ed7: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c64edb: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c64edf: movzwl  0x1(%r13),%ecx
  0x00007fafb8c64ee4: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c64ee8: shl     $0x2,%ecx
  0x00007fafb8c64eeb: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c64eef: and     $0xff,%ebx
  0x00007fafb8c64ef5: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c64ef9: movzbl  0x4(%r13),%ebx
  0x00007fafb8c64efe: add     $0x4,%r13
  0x00007fafb8c64f02: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c64f0c: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c64f10: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c64f14: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c64f1c: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c64f20: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c64f24: movzwl  0x1(%r13),%ecx
  0x00007fafb8c64f29: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c64f2d: shl     $0x2,%ecx
  0x00007fafb8c64f30: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c64f34: and     $0xff,%ebx
  0x00007fafb8c64f3a: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c64f3e: movzbl  0x4(%r13),%ebx
  0x00007fafb8c64f43: add     $0x4,%r13
  0x00007fafb8c64f47: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c64f51: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c64f55: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c64f59: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c64f61: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c64f65: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c64f69: movzwl  0x1(%r13),%ecx
  0x00007fafb8c64f6e: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c64f72: shl     $0x2,%ecx
  0x00007fafb8c64f75: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c64f79: and     $0xff,%ebx
  0x00007fafb8c64f7f: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c64f83: movzbl  0x4(%r13),%ebx
  0x00007fafb8c64f88: add     $0x4,%r13
  0x00007fafb8c64f8c: movabs  $0x7fafd89a7080,%r10
  0x00007fafb8c64f96: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c64f9a: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c64f9e: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c64fa6: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c64faa: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c64fae: movzwl  0x1(%r13),%ecx
  0x00007fafb8c64fb3: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c64fb7: shl     $0x2,%ecx
  0x00007fafb8c64fba: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c64fbe: and     $0xff,%ebx
  0x00007fafb8c64fc4: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c64fc8: movzbl  0x4(%r13),%ebx
  0x00007fafb8c64fcd: add     $0x4,%r13
  0x00007fafb8c64fd1: movabs  $0x7fafd89a6880,%r10
  0x00007fafb8c64fdb: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c64fdf: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c64fe3: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c64feb: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c64fef: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c64ff3: movzwl  0x1(%r13),%ecx
  0x00007fafb8c64ff8: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c64ffc: shl     $0x2,%ecx
  0x00007fafb8c64fff: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c65003: and     $0xff,%ebx
  0x00007fafb8c65009: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c6500d: movzbl  0x4(%r13),%ebx
  0x00007fafb8c65012: add     $0x4,%r13
  0x00007fafb8c65016: movabs  $0x7fafd89a6080,%r10
  0x00007fafb8c65020: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c65024: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c65028: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c65030: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c65034: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c65038: mov     0xffffffffffffffd8(%rbp),%rbx
  0x00007fafb8c6503c: test    %rbx,%rbx
  0x00007fafb8c6503f: je      0x7fafb8c650d5
  0x00007fafb8c65045: cmpb    $0xba,0x0(%r13)
  0x00007fafb8c6504a: je      0x7fafb8c6506b
  0x00007fafb8c65050: cmpb    $0xe9,0x0(%r13)
  0x00007fafb8c65055: je      0x7fafb8c6506b
  0x00007fafb8c6505b: mov     0xffffffffffffffe8(%rbp),%rcx
  0x00007fafb8c6505f: cmpw    $0x121,0x28(%rcx)
  0x00007fafb8c65065: jne     0x7fafb8c650d5
  0x00007fafb8c6506b: mov     %rax,%rcx
  0x00007fafb8c6506e: test    %rcx,%rcx
  0x00007fafb8c65071: jne     0x7fafb8c6507d
  0x00007fafb8c65073: orq     $0x1,0xfffffffffffffff8(%rbx)
  0x00007fafb8c6507b: jmp     0x7fafb8c650d5
  0x00007fafb8c6507d: mov     0x8(%rcx),%ecx
  0x00007fafb8c65080: movabs  $0x800000000,%r12
  0x00007fafb8c6508a: add     %r12,%rcx
  0x00007fafb8c6508d: xor     %r12,%r12
  0x00007fafb8c65090: xor     0xfffffffffffffff8(%rbx),%rcx
  0x00007fafb8c65094: test    $0xfffffffffffffffc,%rcx
  0x00007fafb8c6509b: je      0x7fafb8c650d5
  0x00007fafb8c6509d: test    $0x2,%rcx
  0x00007fafb8c650a4: jne     0x7fafb8c650d5
  0x00007fafb8c650a6: cmpq    $0x0,0xfffffffffffffff8(%rbx)
  0x00007fafb8c650ae: je      0x7fafb8c650d1
  0x00007fafb8c650b0: cmpq    $0x1,0xfffffffffffffff8(%rbx)
  0x00007fafb8c650b8: je      0x7fafb8c650d1
  0x00007fafb8c650ba: xor     0xfffffffffffffff8(%rbx),%rcx
  0x00007fafb8c650be: test    $0xfffffffffffffffc,%rcx
  0x00007fafb8c650c5: je      0x7fafb8c650d5
  0x00007fafb8c650c7: orq     $0x2,0xfffffffffffffff8(%rbx)
  0x00007fafb8c650cf: jmp     0x7fafb8c650d5
  0x00007fafb8c650d1: mov     %rcx,0xfffffffffffffff8(%rbx)
  0x00007fafb8c650d5: movzwl  0x1(%r13),%ecx
  0x00007fafb8c650da: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c650de: shl     $0x2,%ecx
  0x00007fafb8c650e1: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c650e5: and     $0xff,%ebx
  0x00007fafb8c650eb: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c650ef: movzbl  0x4(%r13),%ebx
  0x00007fafb8c650f4: add     $0x4,%r13
  0x00007fafb8c650f8: movabs  $0x7fafd89a7880,%r10
  0x00007fafb8c65102: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c65106: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c6510a: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c65112: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c65116: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c6511a: movzwl  0x1(%r13),%ecx
  0x00007fafb8c6511f: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c65123: shl     $0x2,%ecx
  0x00007fafb8c65126: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c6512a: and     $0xff,%ebx
  0x00007fafb8c65130: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c65134: movzbl  0x5(%r13),%ebx
  0x00007fafb8c65139: add     $0x5,%r13
  0x00007fafb8c6513d: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c65147: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6514b: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c6514f: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c65157: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6515b: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c6515f: movzwl  0x1(%r13),%ecx
  0x00007fafb8c65164: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c65168: shl     $0x2,%ecx
  0x00007fafb8c6516b: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c6516f: and     $0xff,%ebx
  0x00007fafb8c65175: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c65179: movzbl  0x5(%r13),%ebx
  0x00007fafb8c6517e: add     $0x5,%r13
  0x00007fafb8c65182: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c6518c: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c65190: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c65194: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c6519c: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c651a0: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c651a4: movzwl  0x1(%r13),%ecx
  0x00007fafb8c651a9: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c651ad: shl     $0x2,%ecx
  0x00007fafb8c651b0: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c651b4: and     $0xff,%ebx
  0x00007fafb8c651ba: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c651be: movzbl  0x5(%r13),%ebx
  0x00007fafb8c651c3: add     $0x5,%r13
  0x00007fafb8c651c7: movabs  $0x7fafd89a7080,%r10
  0x00007fafb8c651d1: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c651d5: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c651d9: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c651e1: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c651e5: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c651e9: movzwl  0x1(%r13),%ecx
  0x00007fafb8c651ee: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c651f2: shl     $0x2,%ecx
  0x00007fafb8c651f5: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c651f9: and     $0xff,%ebx
  0x00007fafb8c651ff: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c65203: movzbl  0x5(%r13),%ebx
  0x00007fafb8c65208: add     $0x5,%r13
  0x00007fafb8c6520c: movabs  $0x7fafd89a6880,%r10
  0x00007fafb8c65216: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6521a: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c6521e: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c65226: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6522a: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c6522e: movzwl  0x1(%r13),%ecx
  0x00007fafb8c65233: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c65237: shl     $0x2,%ecx
  0x00007fafb8c6523a: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c6523e: and     $0xff,%ebx
  0x00007fafb8c65244: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c65248: movzbl  0x5(%r13),%ebx
  0x00007fafb8c6524d: add     $0x5,%r13
  0x00007fafb8c65251: movabs  $0x7fafd89a6080,%r10
  0x00007fafb8c6525b: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6525f: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c65263: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c6526b: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6526f: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c65273: mov     0xffffffffffffffd8(%rbp),%rbx
  0x00007fafb8c65277: test    %rbx,%rbx
  0x00007fafb8c6527a: je      0x7fafb8c65310
  0x00007fafb8c65280: cmpb    $0xba,0x0(%r13)
  0x00007fafb8c65285: je      0x7fafb8c652a6
  0x00007fafb8c6528b: cmpb    $0xe9,0x0(%r13)
  0x00007fafb8c65290: je      0x7fafb8c652a6
  0x00007fafb8c65296: mov     0xffffffffffffffe8(%rbp),%rcx
  0x00007fafb8c6529a: cmpw    $0x121,0x28(%rcx)
  0x00007fafb8c652a0: jne     0x7fafb8c65310
  0x00007fafb8c652a6: mov     %rax,%rcx
  0x00007fafb8c652a9: test    %rcx,%rcx
  0x00007fafb8c652ac: jne     0x7fafb8c652b8
  0x00007fafb8c652ae: orq     $0x1,0xfffffffffffffff8(%rbx)
  0x00007fafb8c652b6: jmp     0x7fafb8c65310
  0x00007fafb8c652b8: mov     0x8(%rcx),%ecx
  0x00007fafb8c652bb: movabs  $0x800000000,%r12
  0x00007fafb8c652c5: add     %r12,%rcx
  0x00007fafb8c652c8: xor     %r12,%r12
  0x00007fafb8c652cb: xor     0xfffffffffffffff8(%rbx),%rcx
  0x00007fafb8c652cf: test    $0xfffffffffffffffc,%rcx
  0x00007fafb8c652d6: je      0x7fafb8c65310
  0x00007fafb8c652d8: test    $0x2,%rcx
  0x00007fafb8c652df: jne     0x7fafb8c65310
  0x00007fafb8c652e1: cmpq    $0x0,0xfffffffffffffff8(%rbx)
  0x00007fafb8c652e9: je      0x7fafb8c6530c
  0x00007fafb8c652eb: cmpq    $0x1,0xfffffffffffffff8(%rbx)
  0x00007fafb8c652f3: je      0x7fafb8c6530c
  0x00007fafb8c652f5: xor     0xfffffffffffffff8(%rbx),%rcx
  0x00007fafb8c652f9: test    $0xfffffffffffffffc,%rcx
  0x00007fafb8c65300: je      0x7fafb8c65310
  0x00007fafb8c65302: orq     $0x2,0xfffffffffffffff8(%rbx)
  0x00007fafb8c6530a: jmp     0x7fafb8c65310
  0x00007fafb8c6530c: mov     %rcx,0xfffffffffffffff8(%rbx)
  0x00007fafb8c65310: movzwl  0x1(%r13),%ecx
  0x00007fafb8c65315: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c65319: shl     $0x2,%ecx
  0x00007fafb8c6531c: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c65320: and     $0xff,%ebx
  0x00007fafb8c65326: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c6532a: movzbl  0x5(%r13),%ebx
  0x00007fafb8c6532f: add     $0x5,%r13
  0x00007fafb8c65333: movabs  $0x7fafd89a7880,%r10
  0x00007fafb8c6533d: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c65341: nopl    0x0(%rax)
  0x00007fafb8c65348: add     %al,(%rax)
  0x00007fafb8c6534a: add     %al,(%rax)
  0x00007fafb8c6534c: add     %al,(%rax)
  0x00007fafb8c6534e: add     %al,(%rax)
  0x00007fafb8c65350: add     %al,(%rax)
  0x00007fafb8c65352: add     %al,(%rax)
  0x00007fafb8c65354: add     %al,(%rax)
  0x00007fafb8c65356: add     %al,(%rax)
  0x00007fafb8c65358: add     %al,(%rax)
  0x00007fafb8c6535a: add     %al,(%rax)
  0x00007fafb8c6535c: add     %al,(%rax)
  0x00007fafb8c6535e: add     %al,(%rax)

----------------------------------------------------------------------
invoke return entry points  [0x00007fafb8c65380, 0x00007fafb8c65d80]  2560 bytes

Argument 0 is unknown.RIP: 0x7fafb8c65380 Code size: 0x00000a00
  0x00007fafb8c65380: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c65384: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c6538c: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c65390: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c65394: movzwl  0x1(%r13),%ecx
  0x00007fafb8c65399: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c6539d: shl     $0x2,%ecx
  0x00007fafb8c653a0: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c653a4: and     $0xff,%ebx
  0x00007fafb8c653aa: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c653ae: movzbl  0x3(%r13),%ebx
  0x00007fafb8c653b3: add     $0x3,%r13
  0x00007fafb8c653b7: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c653c1: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c653c5: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c653c9: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c653d1: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c653d5: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c653d9: movzwl  0x1(%r13),%ecx
  0x00007fafb8c653de: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c653e2: shl     $0x2,%ecx
  0x00007fafb8c653e5: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c653e9: and     $0xff,%ebx
  0x00007fafb8c653ef: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c653f3: movzbl  0x5(%r13),%ebx
  0x00007fafb8c653f8: add     $0x5,%r13
  0x00007fafb8c653fc: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c65406: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6540a: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c6540e: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c65416: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6541a: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c6541e: mov     0x1(%r13),%ecx
  0x00007fafb8c65422: not     %ecx
  0x00007fafb8c65424: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c65428: shl     $0x2,%ecx
  0x00007fafb8c6542b: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c6542f: and     $0xff,%ebx
  0x00007fafb8c65435: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c65439: movzbl  0x5(%r13),%ebx
  0x00007fafb8c6543e: add     $0x5,%r13
  0x00007fafb8c65442: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c6544c: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c65450: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c65454: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c6545c: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c65460: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c65464: movzwl  0x1(%r13),%ecx
  0x00007fafb8c65469: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c6546d: shl     $0x2,%ecx
  0x00007fafb8c65470: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c65474: and     $0xff,%ebx
  0x00007fafb8c6547a: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c6547e: movzbl  0x3(%r13),%ebx
  0x00007fafb8c65483: add     $0x3,%r13
  0x00007fafb8c65487: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c65491: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c65495: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c65499: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c654a1: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c654a5: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c654a9: movzwl  0x1(%r13),%ecx
  0x00007fafb8c654ae: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c654b2: shl     $0x2,%ecx
  0x00007fafb8c654b5: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c654b9: and     $0xff,%ebx
  0x00007fafb8c654bf: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c654c3: movzbl  0x5(%r13),%ebx
  0x00007fafb8c654c8: add     $0x5,%r13
  0x00007fafb8c654cc: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c654d6: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c654da: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c654de: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c654e6: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c654ea: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c654ee: mov     0x1(%r13),%ecx
  0x00007fafb8c654f2: not     %ecx
  0x00007fafb8c654f4: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c654f8: shl     $0x2,%ecx
  0x00007fafb8c654fb: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c654ff: and     $0xff,%ebx
  0x00007fafb8c65505: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c65509: movzbl  0x5(%r13),%ebx
  0x00007fafb8c6550e: add     $0x5,%r13
  0x00007fafb8c65512: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c6551c: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c65520: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c65524: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c6552c: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c65530: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c65534: movzwl  0x1(%r13),%ecx
  0x00007fafb8c65539: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c6553d: shl     $0x2,%ecx
  0x00007fafb8c65540: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c65544: and     $0xff,%ebx
  0x00007fafb8c6554a: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c6554e: movzbl  0x3(%r13),%ebx
  0x00007fafb8c65553: add     $0x3,%r13
  0x00007fafb8c65557: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c65561: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c65565: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c65569: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c65571: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c65575: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c65579: movzwl  0x1(%r13),%ecx
  0x00007fafb8c6557e: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c65582: shl     $0x2,%ecx
  0x00007fafb8c65585: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c65589: and     $0xff,%ebx
  0x00007fafb8c6558f: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c65593: movzbl  0x5(%r13),%ebx
  0x00007fafb8c65598: add     $0x5,%r13
  0x00007fafb8c6559c: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c655a6: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c655aa: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c655ae: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c655b6: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c655ba: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c655be: mov     0x1(%r13),%ecx
  0x00007fafb8c655c2: not     %ecx
  0x00007fafb8c655c4: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c655c8: shl     $0x2,%ecx
  0x00007fafb8c655cb: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c655cf: and     $0xff,%ebx
  0x00007fafb8c655d5: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c655d9: movzbl  0x5(%r13),%ebx
  0x00007fafb8c655de: add     $0x5,%r13
  0x00007fafb8c655e2: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c655ec: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c655f0: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c655f4: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c655fc: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c65600: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c65604: movzwl  0x1(%r13),%ecx
  0x00007fafb8c65609: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c6560d: shl     $0x2,%ecx
  0x00007fafb8c65610: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c65614: and     $0xff,%ebx
  0x00007fafb8c6561a: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c6561e: movzbl  0x3(%r13),%ebx
  0x00007fafb8c65623: add     $0x3,%r13
  0x00007fafb8c65627: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c65631: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c65635: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c65639: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c65641: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c65645: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c65649: movzwl  0x1(%r13),%ecx
  0x00007fafb8c6564e: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c65652: shl     $0x2,%ecx
  0x00007fafb8c65655: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c65659: and     $0xff,%ebx
  0x00007fafb8c6565f: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c65663: movzbl  0x5(%r13),%ebx
  0x00007fafb8c65668: add     $0x5,%r13
  0x00007fafb8c6566c: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c65676: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6567a: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c6567e: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c65686: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6568a: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c6568e: mov     0x1(%r13),%ecx
  0x00007fafb8c65692: not     %ecx
  0x00007fafb8c65694: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c65698: shl     $0x2,%ecx
  0x00007fafb8c6569b: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c6569f: and     $0xff,%ebx
  0x00007fafb8c656a5: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c656a9: movzbl  0x5(%r13),%ebx
  0x00007fafb8c656ae: add     $0x5,%r13
  0x00007fafb8c656b2: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c656bc: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c656c0: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c656c4: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c656cc: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c656d0: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c656d4: movzwl  0x1(%r13),%ecx
  0x00007fafb8c656d9: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c656dd: shl     $0x2,%ecx
  0x00007fafb8c656e0: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c656e4: and     $0xff,%ebx
  0x00007fafb8c656ea: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c656ee: movzbl  0x3(%r13),%ebx
  0x00007fafb8c656f3: add     $0x3,%r13
  0x00007fafb8c656f7: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c65701: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c65705: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c65709: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c65711: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c65715: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c65719: movzwl  0x1(%r13),%ecx
  0x00007fafb8c6571e: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c65722: shl     $0x2,%ecx
  0x00007fafb8c65725: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c65729: and     $0xff,%ebx
  0x00007fafb8c6572f: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c65733: movzbl  0x5(%r13),%ebx
  0x00007fafb8c65738: add     $0x5,%r13
  0x00007fafb8c6573c: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c65746: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6574a: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c6574e: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c65756: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6575a: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c6575e: mov     0x1(%r13),%ecx
  0x00007fafb8c65762: not     %ecx
  0x00007fafb8c65764: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c65768: shl     $0x2,%ecx
  0x00007fafb8c6576b: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c6576f: and     $0xff,%ebx
  0x00007fafb8c65775: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c65779: movzbl  0x5(%r13),%ebx
  0x00007fafb8c6577e: add     $0x5,%r13
  0x00007fafb8c65782: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c6578c: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c65790: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c65794: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c6579c: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c657a0: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c657a4: movzwl  0x1(%r13),%ecx
  0x00007fafb8c657a9: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c657ad: shl     $0x2,%ecx
  0x00007fafb8c657b0: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c657b4: and     $0xff,%ebx
  0x00007fafb8c657ba: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c657be: movzbl  0x3(%r13),%ebx
  0x00007fafb8c657c3: add     $0x3,%r13
  0x00007fafb8c657c7: movabs  $0x7fafd89a6080,%r10
  0x00007fafb8c657d1: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c657d5: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c657d9: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c657e1: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c657e5: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c657e9: movzwl  0x1(%r13),%ecx
  0x00007fafb8c657ee: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c657f2: shl     $0x2,%ecx
  0x00007fafb8c657f5: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c657f9: and     $0xff,%ebx
  0x00007fafb8c657ff: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c65803: movzbl  0x5(%r13),%ebx
  0x00007fafb8c65808: add     $0x5,%r13
  0x00007fafb8c6580c: movabs  $0x7fafd89a6080,%r10
  0x00007fafb8c65816: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6581a: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c6581e: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c65826: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6582a: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c6582e: mov     0x1(%r13),%ecx
  0x00007fafb8c65832: not     %ecx
  0x00007fafb8c65834: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c65838: shl     $0x2,%ecx
  0x00007fafb8c6583b: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c6583f: and     $0xff,%ebx
  0x00007fafb8c65845: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c65849: movzbl  0x5(%r13),%ebx
  0x00007fafb8c6584e: add     $0x5,%r13
  0x00007fafb8c65852: movabs  $0x7fafd89a6080,%r10
  0x00007fafb8c6585c: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c65860: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c65864: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c6586c: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c65870: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c65874: movzwl  0x1(%r13),%ecx
  0x00007fafb8c65879: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c6587d: shl     $0x2,%ecx
  0x00007fafb8c65880: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c65884: and     $0xff,%ebx
  0x00007fafb8c6588a: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c6588e: movzbl  0x3(%r13),%ebx
  0x00007fafb8c65893: add     $0x3,%r13
  0x00007fafb8c65897: movabs  $0x7fafd89a6880,%r10
  0x00007fafb8c658a1: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c658a5: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c658a9: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c658b1: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c658b5: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c658b9: movzwl  0x1(%r13),%ecx
  0x00007fafb8c658be: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c658c2: shl     $0x2,%ecx
  0x00007fafb8c658c5: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c658c9: and     $0xff,%ebx
  0x00007fafb8c658cf: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c658d3: movzbl  0x5(%r13),%ebx
  0x00007fafb8c658d8: add     $0x5,%r13
  0x00007fafb8c658dc: movabs  $0x7fafd89a6880,%r10
  0x00007fafb8c658e6: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c658ea: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c658ee: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c658f6: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c658fa: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c658fe: mov     0x1(%r13),%ecx
  0x00007fafb8c65902: not     %ecx
  0x00007fafb8c65904: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c65908: shl     $0x2,%ecx
  0x00007fafb8c6590b: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c6590f: and     $0xff,%ebx
  0x00007fafb8c65915: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c65919: movzbl  0x5(%r13),%ebx
  0x00007fafb8c6591e: add     $0x5,%r13
  0x00007fafb8c65922: movabs  $0x7fafd89a6880,%r10
  0x00007fafb8c6592c: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c65930: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c65934: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c6593c: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c65940: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c65944: movzwl  0x1(%r13),%ecx
  0x00007fafb8c65949: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c6594d: shl     $0x2,%ecx
  0x00007fafb8c65950: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c65954: and     $0xff,%ebx
  0x00007fafb8c6595a: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c6595e: movzbl  0x3(%r13),%ebx
  0x00007fafb8c65963: add     $0x3,%r13
  0x00007fafb8c65967: movabs  $0x7fafd89a7080,%r10
  0x00007fafb8c65971: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c65975: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c65979: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c65981: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c65985: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c65989: movzwl  0x1(%r13),%ecx
  0x00007fafb8c6598e: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c65992: shl     $0x2,%ecx
  0x00007fafb8c65995: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c65999: and     $0xff,%ebx
  0x00007fafb8c6599f: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c659a3: movzbl  0x5(%r13),%ebx
  0x00007fafb8c659a8: add     $0x5,%r13
  0x00007fafb8c659ac: movabs  $0x7fafd89a7080,%r10
  0x00007fafb8c659b6: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c659ba: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c659be: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c659c6: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c659ca: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c659ce: mov     0x1(%r13),%ecx
  0x00007fafb8c659d2: not     %ecx
  0x00007fafb8c659d4: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c659d8: shl     $0x2,%ecx
  0x00007fafb8c659db: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c659df: and     $0xff,%ebx
  0x00007fafb8c659e5: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c659e9: movzbl  0x5(%r13),%ebx
  0x00007fafb8c659ee: add     $0x5,%r13
  0x00007fafb8c659f2: movabs  $0x7fafd89a7080,%r10
  0x00007fafb8c659fc: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c65a00: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c65a04: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c65a0c: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c65a10: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c65a14: mov     0xffffffffffffffd8(%rbp),%rbx
  0x00007fafb8c65a18: test    %rbx,%rbx
  0x00007fafb8c65a1b: je      0x7fafb8c65ab1
  0x00007fafb8c65a21: cmpb    $0xba,0x0(%r13)
  0x00007fafb8c65a26: je      0x7fafb8c65a47
  0x00007fafb8c65a2c: cmpb    $0xe9,0x0(%r13)
  0x00007fafb8c65a31: je      0x7fafb8c65a47
  0x00007fafb8c65a37: mov     0xffffffffffffffe8(%rbp),%rcx
  0x00007fafb8c65a3b: cmpw    $0x121,0x28(%rcx)
  0x00007fafb8c65a41: jne     0x7fafb8c65ab1
  0x00007fafb8c65a47: mov     %rax,%rcx
  0x00007fafb8c65a4a: test    %rcx,%rcx
  0x00007fafb8c65a4d: jne     0x7fafb8c65a59
  0x00007fafb8c65a4f: orq     $0x1,0xfffffffffffffff8(%rbx)
  0x00007fafb8c65a57: jmp     0x7fafb8c65ab1
  0x00007fafb8c65a59: mov     0x8(%rcx),%ecx
  0x00007fafb8c65a5c: movabs  $0x800000000,%r12
  0x00007fafb8c65a66: add     %r12,%rcx
  0x00007fafb8c65a69: xor     %r12,%r12
  0x00007fafb8c65a6c: xor     0xfffffffffffffff8(%rbx),%rcx
  0x00007fafb8c65a70: test    $0xfffffffffffffffc,%rcx
  0x00007fafb8c65a77: je      0x7fafb8c65ab1
  0x00007fafb8c65a79: test    $0x2,%rcx
  0x00007fafb8c65a80: jne     0x7fafb8c65ab1
  0x00007fafb8c65a82: cmpq    $0x0,0xfffffffffffffff8(%rbx)
  0x00007fafb8c65a8a: je      0x7fafb8c65aad
  0x00007fafb8c65a8c: cmpq    $0x1,0xfffffffffffffff8(%rbx)
  0x00007fafb8c65a94: je      0x7fafb8c65aad
  0x00007fafb8c65a96: xor     0xfffffffffffffff8(%rbx),%rcx
  0x00007fafb8c65a9a: test    $0xfffffffffffffffc,%rcx
  0x00007fafb8c65aa1: je      0x7fafb8c65ab1
  0x00007fafb8c65aa3: orq     $0x2,0xfffffffffffffff8(%rbx)
  0x00007fafb8c65aab: jmp     0x7fafb8c65ab1
  0x00007fafb8c65aad: mov     %rcx,0xfffffffffffffff8(%rbx)
  0x00007fafb8c65ab1: movzwl  0x1(%r13),%ecx
  0x00007fafb8c65ab6: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c65aba: shl     $0x2,%ecx
  0x00007fafb8c65abd: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c65ac1: and     $0xff,%ebx
  0x00007fafb8c65ac7: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c65acb: movzbl  0x3(%r13),%ebx
  0x00007fafb8c65ad0: add     $0x3,%r13
  0x00007fafb8c65ad4: movabs  $0x7fafd89a7880,%r10
  0x00007fafb8c65ade: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c65ae2: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c65ae6: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c65aee: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c65af2: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c65af6: mov     0xffffffffffffffd8(%rbp),%rbx
  0x00007fafb8c65afa: test    %rbx,%rbx
  0x00007fafb8c65afd: je      0x7fafb8c65b93
  0x00007fafb8c65b03: cmpb    $0xba,0x0(%r13)
  0x00007fafb8c65b08: je      0x7fafb8c65b29
  0x00007fafb8c65b0e: cmpb    $0xe9,0x0(%r13)
  0x00007fafb8c65b13: je      0x7fafb8c65b29
  0x00007fafb8c65b19: mov     0xffffffffffffffe8(%rbp),%rcx
  0x00007fafb8c65b1d: cmpw    $0x121,0x28(%rcx)
  0x00007fafb8c65b23: jne     0x7fafb8c65b93
  0x00007fafb8c65b29: mov     %rax,%rcx
  0x00007fafb8c65b2c: test    %rcx,%rcx
  0x00007fafb8c65b2f: jne     0x7fafb8c65b3b
  0x00007fafb8c65b31: orq     $0x1,0xfffffffffffffff8(%rbx)
  0x00007fafb8c65b39: jmp     0x7fafb8c65b93
  0x00007fafb8c65b3b: mov     0x8(%rcx),%ecx
  0x00007fafb8c65b3e: movabs  $0x800000000,%r12
  0x00007fafb8c65b48: add     %r12,%rcx
  0x00007fafb8c65b4b: xor     %r12,%r12
  0x00007fafb8c65b4e: xor     0xfffffffffffffff8(%rbx),%rcx
  0x00007fafb8c65b52: test    $0xfffffffffffffffc,%rcx
  0x00007fafb8c65b59: je      0x7fafb8c65b93
  0x00007fafb8c65b5b: test    $0x2,%rcx
  0x00007fafb8c65b62: jne     0x7fafb8c65b93
  0x00007fafb8c65b64: cmpq    $0x0,0xfffffffffffffff8(%rbx)
  0x00007fafb8c65b6c: je      0x7fafb8c65b8f
  0x00007fafb8c65b6e: cmpq    $0x1,0xfffffffffffffff8(%rbx)
  0x00007fafb8c65b76: je      0x7fafb8c65b8f
  0x00007fafb8c65b78: xor     0xfffffffffffffff8(%rbx),%rcx
  0x00007fafb8c65b7c: test    $0xfffffffffffffffc,%rcx
  0x00007fafb8c65b83: je      0x7fafb8c65b93
  0x00007fafb8c65b85: orq     $0x2,0xfffffffffffffff8(%rbx)
  0x00007fafb8c65b8d: jmp     0x7fafb8c65b93
  0x00007fafb8c65b8f: mov     %rcx,0xfffffffffffffff8(%rbx)
  0x00007fafb8c65b93: movzwl  0x1(%r13),%ecx
  0x00007fafb8c65b98: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c65b9c: shl     $0x2,%ecx
  0x00007fafb8c65b9f: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c65ba3: and     $0xff,%ebx
  0x00007fafb8c65ba9: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c65bad: movzbl  0x5(%r13),%ebx
  0x00007fafb8c65bb2: add     $0x5,%r13
  0x00007fafb8c65bb6: movabs  $0x7fafd89a7880,%r10
  0x00007fafb8c65bc0: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c65bc4: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c65bc8: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c65bd0: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c65bd4: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c65bd8: mov     0xffffffffffffffd8(%rbp),%rbx
  0x00007fafb8c65bdc: test    %rbx,%rbx
  0x00007fafb8c65bdf: je      0x7fafb8c65c75
  0x00007fafb8c65be5: cmpb    $0xba,0x0(%r13)
  0x00007fafb8c65bea: je      0x7fafb8c65c0b
  0x00007fafb8c65bf0: cmpb    $0xe9,0x0(%r13)
  0x00007fafb8c65bf5: je      0x7fafb8c65c0b
  0x00007fafb8c65bfb: mov     0xffffffffffffffe8(%rbp),%rcx
  0x00007fafb8c65bff: cmpw    $0x121,0x28(%rcx)
  0x00007fafb8c65c05: jne     0x7fafb8c65c75
  0x00007fafb8c65c0b: mov     %rax,%rcx
  0x00007fafb8c65c0e: test    %rcx,%rcx
  0x00007fafb8c65c11: jne     0x7fafb8c65c1d
  0x00007fafb8c65c13: orq     $0x1,0xfffffffffffffff8(%rbx)
  0x00007fafb8c65c1b: jmp     0x7fafb8c65c75
  0x00007fafb8c65c1d: mov     0x8(%rcx),%ecx
  0x00007fafb8c65c20: movabs  $0x800000000,%r12
  0x00007fafb8c65c2a: add     %r12,%rcx
  0x00007fafb8c65c2d: xor     %r12,%r12
  0x00007fafb8c65c30: xor     0xfffffffffffffff8(%rbx),%rcx
  0x00007fafb8c65c34: test    $0xfffffffffffffffc,%rcx
  0x00007fafb8c65c3b: je      0x7fafb8c65c75
  0x00007fafb8c65c3d: test    $0x2,%rcx
  0x00007fafb8c65c44: jne     0x7fafb8c65c75
  0x00007fafb8c65c46: cmpq    $0x0,0xfffffffffffffff8(%rbx)
  0x00007fafb8c65c4e: je      0x7fafb8c65c71
  0x00007fafb8c65c50: cmpq    $0x1,0xfffffffffffffff8(%rbx)
  0x00007fafb8c65c58: je      0x7fafb8c65c71
  0x00007fafb8c65c5a: xor     0xfffffffffffffff8(%rbx),%rcx
  0x00007fafb8c65c5e: test    $0xfffffffffffffffc,%rcx
  0x00007fafb8c65c65: je      0x7fafb8c65c75
  0x00007fafb8c65c67: orq     $0x2,0xfffffffffffffff8(%rbx)
  0x00007fafb8c65c6f: jmp     0x7fafb8c65c75
  0x00007fafb8c65c71: mov     %rcx,0xfffffffffffffff8(%rbx)
  0x00007fafb8c65c75: mov     0x1(%r13),%ecx
  0x00007fafb8c65c79: not     %ecx
  0x00007fafb8c65c7b: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c65c7f: shl     $0x2,%ecx
  0x00007fafb8c65c82: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c65c86: and     $0xff,%ebx
  0x00007fafb8c65c8c: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c65c90: movzbl  0x5(%r13),%ebx
  0x00007fafb8c65c95: add     $0x5,%r13
  0x00007fafb8c65c99: movabs  $0x7fafd89a7880,%r10
  0x00007fafb8c65ca3: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c65ca7: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c65cab: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c65cb3: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c65cb7: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c65cbb: movzwl  0x1(%r13),%ecx
  0x00007fafb8c65cc0: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c65cc4: shl     $0x2,%ecx
  0x00007fafb8c65cc7: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c65ccb: and     $0xff,%ebx
  0x00007fafb8c65cd1: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c65cd5: movzbl  0x3(%r13),%ebx
  0x00007fafb8c65cda: add     $0x3,%r13
  0x00007fafb8c65cde: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c65ce8: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c65cec: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c65cf0: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c65cf8: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c65cfc: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c65d00: movzwl  0x1(%r13),%ecx
  0x00007fafb8c65d05: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c65d09: shl     $0x2,%ecx
  0x00007fafb8c65d0c: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c65d10: and     $0xff,%ebx
  0x00007fafb8c65d16: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c65d1a: movzbl  0x5(%r13),%ebx
  0x00007fafb8c65d1f: add     $0x5,%r13
  0x00007fafb8c65d23: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c65d2d: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c65d31: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c65d35: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c65d3d: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c65d41: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c65d45: mov     0x1(%r13),%ecx
  0x00007fafb8c65d49: not     %ecx
  0x00007fafb8c65d4b: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c65d4f: shl     $0x2,%ecx
  0x00007fafb8c65d52: mov     0x40(%rbx,%rcx,8),%ebx
  0x00007fafb8c65d56: and     $0xff,%ebx
  0x00007fafb8c65d5c: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c65d60: movzbl  0x5(%r13),%ebx
  0x00007fafb8c65d65: add     $0x5,%r13
  0x00007fafb8c65d69: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c65d73: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c65d77: nop
  0x00007fafb8c65d78: add     %al,(%rax)
  0x00007fafb8c65d7a: add     %al,(%rax)
  0x00007fafb8c65d7c: add     %al,(%rax)
  0x00007fafb8c65d7e: add     %al,(%rax)

----------------------------------------------------------------------
earlyret entry points  [0x00007fafb8c65da0, 0x00007fafb8c68860]  10944 bytes

Argument 0 is unknown.RIP: 0x7fafb8c65da0 Code size: 0x00002ac0
  0x00007fafb8c65da0: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c65da4: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c65da8: mov     0xffffffffffffffb8(%rbp),%rsp
  0x00007fafb8c65dac: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c65db4: mov     0x4b0(%r15),%rcx
  0x00007fafb8c65dbb: movl    $0xb,0x78(%rcx)
  0x00007fafb8c65dc2: movl    $0x0,0x80(%rcx)
  0x00007fafb8c65dcc: movl    $0xb,0x78(%rcx)
  0x00007fafb8c65dd3: movabs  $0x0,%r10
  0x00007fafb8c65ddd: mov     %r10,0x80(%rcx)
  0x00007fafb8c65de4: mov     0x4b0(%r15),%rcx
  0x00007fafb8c65deb: movl    $0x0,0x74(%rcx)
  0x00007fafb8c65df2: mov     0x3dd(%r15),%bl
  0x00007fafb8c65df9: movb    $0x0,0x3dd(%r15)
  0x00007fafb8c65e01: mov     0xffffffffffffffe8(%rbp),%rcx
  0x00007fafb8c65e05: mov     0x20(%rcx),%ecx
  0x00007fafb8c65e08: test    $0x20,%ecx
  0x00007fafb8c65e0e: je      0x7fafb8c65f12
  0x00007fafb8c65e14: testb   $0xff,%bl
  0x00007fafb8c65e17: jne     0x7fafb8c6601d
  0x00007fafb8c65e1d: lea     0xffffffffffffffa8(%rbp),%rsi
  0x00007fafb8c65e21: mov     0x8(%rsi),%rax
  0x00007fafb8c65e25: test    %rax,%rax
  0x00007fafb8c65e28: jne     0x7fafb8c65e33
  0x00007fafb8c65e2e: jmpq    0x7fafb8c65f12
  0x00007fafb8c65e33: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c65e37: lea     (%rsi),%rax
  0x00007fafb8c65e3a: mov     0x8(%rsi),%rcx
  0x00007fafb8c65e3e: movq    $0x0,0x8(%rsi)
  0x00007fafb8c65e46: mov     (%rcx),%rdx
  0x00007fafb8c65e49: and     $0x7,%rdx
  0x00007fafb8c65e4d: cmp     $0x5,%rdx
  0x00007fafb8c65e51: je      0x7fafb8c65f0e
  0x00007fafb8c65e57: mov     (%rax),%rdx
  0x00007fafb8c65e5a: test    %rdx,%rdx
  0x00007fafb8c65e5d: je      0x7fafb8c65f0e
  0x00007fafb8c65e63: lock cmpxchg %rdx,(%rcx)
  0x00007fafb8c65e68: je      0x7fafb8c65f0e
  0x00007fafb8c65e6e: mov     %rcx,0x8(%rsi)
  0x00007fafb8c65e72: callq   0x7fafb8c65e7c
  0x00007fafb8c65e77: jmpq    0x7fafb8c65f0e
  0x00007fafb8c65e7c: lea     0x8(%rsp),%rax
  0x00007fafb8c65e81: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c65e85: mov     %r15,%rdi
  0x00007fafb8c65e88: vzeroupper
  0x00007fafb8c65e8b: mov     %rbp,0x330(%r15)
  0x00007fafb8c65e92: mov     %rax,0x320(%r15)
  0x00007fafb8c65e99: test    $0xf,%esp
  0x00007fafb8c65e9f: je      0x7fafb8c65eb7
  0x00007fafb8c65ea5: sub     $0x8,%rsp
  0x00007fafb8c65ea9: callq   0x7fafd7d82470
  0x00007fafb8c65eae: add     $0x8,%rsp
  0x00007fafb8c65eb2: jmpq    0x7fafb8c65ebc
  0x00007fafb8c65eb7: callq   0x7fafd7d82470
  0x00007fafb8c65ebc: movabs  $0x0,%r10
  0x00007fafb8c65ec6: mov     %r10,0x320(%r15)
  0x00007fafb8c65ecd: movabs  $0x0,%r10
  0x00007fafb8c65ed7: mov     %r10,0x330(%r15)
  0x00007fafb8c65ede: movabs  $0x0,%r10
  0x00007fafb8c65ee8: mov     %r10,0x328(%r15)
  0x00007fafb8c65eef: vzeroupper
  0x00007fafb8c65ef2: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c65efa: je      0x7fafb8c65f05
  0x00007fafb8c65f00: jmpq    0x7fafb8c5c780
  0x00007fafb8c65f05: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c65f09: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c65f0d: retq
  0x00007fafb8c65f0e: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c65f12: mov     0xffffffffffffffb8(%rbp),%rsi
  0x00007fafb8c65f16: lea     0xffffffffffffffb8(%rbp),%rbx
  0x00007fafb8c65f1a: jmpq    0x7fafb8c66018
  0x00007fafb8c65f1f: mov     %rsi,%rsi
  0x00007fafb8c65f22: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c65f26: lea     (%rsi),%rax
  0x00007fafb8c65f29: mov     0x8(%rsi),%rcx
  0x00007fafb8c65f2d: movq    $0x0,0x8(%rsi)
  0x00007fafb8c65f35: mov     (%rcx),%rdx
  0x00007fafb8c65f38: and     $0x7,%rdx
  0x00007fafb8c65f3c: cmp     $0x5,%rdx
  0x00007fafb8c65f40: je      0x7fafb8c65ffd
  0x00007fafb8c65f46: mov     (%rax),%rdx
  0x00007fafb8c65f49: test    %rdx,%rdx
  0x00007fafb8c65f4c: je      0x7fafb8c65ffd
  0x00007fafb8c65f52: lock cmpxchg %rdx,(%rcx)
  0x00007fafb8c65f57: je      0x7fafb8c65ffd
  0x00007fafb8c65f5d: mov     %rcx,0x8(%rsi)
  0x00007fafb8c65f61: callq   0x7fafb8c65f6b
  0x00007fafb8c65f66: jmpq    0x7fafb8c65ffd
  0x00007fafb8c65f6b: lea     0x8(%rsp),%rax
  0x00007fafb8c65f70: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c65f74: mov     %r15,%rdi
  0x00007fafb8c65f77: vzeroupper
  0x00007fafb8c65f7a: mov     %rbp,0x330(%r15)
  0x00007fafb8c65f81: mov     %rax,0x320(%r15)
  0x00007fafb8c65f88: test    $0xf,%esp
  0x00007fafb8c65f8e: je      0x7fafb8c65fa6
  0x00007fafb8c65f94: sub     $0x8,%rsp
  0x00007fafb8c65f98: callq   0x7fafd7d82470
  0x00007fafb8c65f9d: add     $0x8,%rsp
  0x00007fafb8c65fa1: jmpq    0x7fafb8c65fab
  0x00007fafb8c65fa6: callq   0x7fafd7d82470
  0x00007fafb8c65fab: movabs  $0x0,%r10
  0x00007fafb8c65fb5: mov     %r10,0x320(%r15)
  0x00007fafb8c65fbc: movabs  $0x0,%r10
  0x00007fafb8c65fc6: mov     %r10,0x330(%r15)
  0x00007fafb8c65fcd: movabs  $0x0,%r10
  0x00007fafb8c65fd7: mov     %r10,0x328(%r15)
  0x00007fafb8c65fde: vzeroupper
  0x00007fafb8c65fe1: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c65fe9: je      0x7fafb8c65ff4
  0x00007fafb8c65fef: jmpq    0x7fafb8c5c780
  0x00007fafb8c65ff4: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c65ff8: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c65ffc: retq
  0x00007fafb8c65ffd: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c66001: jmpq    0x7fafb8c65f12
  0x00007fafb8c66006: cmpq    $0x0,0x8(%rsi)
  0x00007fafb8c6600e: jne     0x7fafb8c65f1f
  0x00007fafb8c66014: add     $0x10,%rsi
  0x00007fafb8c66018: cmp     %rbx,%rsi
  0x00007fafb8c6601b: jne     0x7fafb8c66006
  0x00007fafb8c6601d: cmpb    $0x0,0x1fd11c73(%rip)
  0x00007fafb8c66024: je      0x7fafb8c66054
  0x00007fafb8c6602a: mov     0xffffffffffffffe8(%rbp),%rsi
  0x00007fafb8c6602e: mov     %r15,%rdi
  0x00007fafb8c66031: test    $0xf,%esp
  0x00007fafb8c66037: je      0x7fafb8c6604f
  0x00007fafb8c6603d: sub     $0x8,%rsp
  0x00007fafb8c66041: callq   0x7fafd81e7140
  0x00007fafb8c66046: add     $0x8,%rsp
  0x00007fafb8c6604a: jmpq    0x7fafb8c66054
  0x00007fafb8c6604f: callq   0x7fafd81e7140
  0x00007fafb8c66054: mov     0xfffffffffffffff8(%rbp),%rbx
  0x00007fafb8c66058: cmpl    $0x3,0x408(%r15)
  0x00007fafb8c66063: je      0x7fafb8c661af
  0x00007fafb8c66069: cmp     0x418(%r15),%rbx
  0x00007fafb8c66070: jle     0x7fafb8c661af
  0x00007fafb8c66076: mov     %r15,%rdi
  0x00007fafb8c66079: test    $0xf,%esp
  0x00007fafb8c6607f: je      0x7fafb8c66097
  0x00007fafb8c66085: sub     $0x8,%rsp
  0x00007fafb8c66089: callq   0x7fafd81ee2f0
  0x00007fafb8c6608e: add     $0x8,%rsp
  0x00007fafb8c66092: jmpq    0x7fafb8c6609c
  0x00007fafb8c66097: callq   0x7fafd81ee2f0
  0x00007fafb8c6609c: callq   0x7fafb8c660a6
  0x00007fafb8c660a1: jmpq    0x7fafb8c66138
  0x00007fafb8c660a6: lea     0x8(%rsp),%rax
  0x00007fafb8c660ab: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c660af: mov     %r15,%rdi
  0x00007fafb8c660b2: vzeroupper
  0x00007fafb8c660b5: mov     %rbp,0x330(%r15)
  0x00007fafb8c660bc: mov     %rax,0x320(%r15)
  0x00007fafb8c660c3: test    $0xf,%esp
  0x00007fafb8c660c9: je      0x7fafb8c660e1
  0x00007fafb8c660cf: sub     $0x8,%rsp
  0x00007fafb8c660d3: callq   0x7fafd7d7ef30
  0x00007fafb8c660d8: add     $0x8,%rsp
  0x00007fafb8c660dc: jmpq    0x7fafb8c660e6
  0x00007fafb8c660e1: callq   0x7fafd7d7ef30
  0x00007fafb8c660e6: movabs  $0x0,%r10
  0x00007fafb8c660f0: mov     %r10,0x320(%r15)
  0x00007fafb8c660f7: movabs  $0x0,%r10
  0x00007fafb8c66101: mov     %r10,0x330(%r15)
  0x00007fafb8c66108: movabs  $0x0,%r10
  0x00007fafb8c66112: mov     %r10,0x328(%r15)
  0x00007fafb8c66119: vzeroupper
  0x00007fafb8c6611c: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c66124: je      0x7fafb8c6612f
  0x00007fafb8c6612a: jmpq    0x7fafb8c5c780
  0x00007fafb8c6612f: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c66133: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c66137: retq
  0x00007fafb8c66138: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c6613d: sub     $0x80,%rsp
  0x00007fafb8c66144: mov     %rax,0x78(%rsp)
  0x00007fafb8c66149: mov     %rcx,0x70(%rsp)
  0x00007fafb8c6614e: mov     %rdx,0x68(%rsp)
  0x00007fafb8c66153: mov     %rbx,0x60(%rsp)
  0x00007fafb8c66158: mov     %rbp,0x50(%rsp)
  0x00007fafb8c6615d: mov     %rsi,0x48(%rsp)
  0x00007fafb8c66162: mov     %rdi,0x40(%rsp)
  0x00007fafb8c66167: mov     %r8,0x38(%rsp)
  0x00007fafb8c6616c: mov     %r9,0x30(%rsp)
  0x00007fafb8c66171: mov     %r10,0x28(%rsp)
  0x00007fafb8c66176: mov     %r11,0x20(%rsp)
  0x00007fafb8c6617b: mov     %r12,0x18(%rsp)
  0x00007fafb8c66180: mov     %r13,0x10(%rsp)
  0x00007fafb8c66185: mov     %r14,0x8(%rsp)
  0x00007fafb8c6618a: mov     %r15,(%rsp)
  0x00007fafb8c6618e: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c66198: movabs  $0x7fafb8c66138,%rsi
  0x00007fafb8c661a2: mov     %rsp,%rdx
  0x00007fafb8c661a5: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c661a9: callq   0x7fafd7fdd230
  0x00007fafb8c661ae: hlt
  0x00007fafb8c661af: leave
  0x00007fafb8c661b0: pop     %rsi
  0x00007fafb8c661b1: mov     %rbx,%rsp
  0x00007fafb8c661b4: jmpq    %rsi
  0x00007fafb8c661b6: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c661ba: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c661be: mov     0xffffffffffffffb8(%rbp),%rsp
  0x00007fafb8c661c2: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c661ca: mov     0x4b0(%r15),%rcx
  0x00007fafb8c661d1: vmovsd  0x80(%rcx),%xmm0
  0x00007fafb8c661d9: movl    $0xb,0x78(%rcx)
  0x00007fafb8c661e0: movl    $0x0,0x80(%rcx)
  0x00007fafb8c661ea: movl    $0xb,0x78(%rcx)
  0x00007fafb8c661f1: movabs  $0x0,%r10
  0x00007fafb8c661fb: mov     %r10,0x80(%rcx)
  0x00007fafb8c66202: mov     0x4b0(%r15),%rcx
  0x00007fafb8c66209: movl    $0x0,0x74(%rcx)
  0x00007fafb8c66210: mov     0x3dd(%r15),%bl
  0x00007fafb8c66217: movb    $0x0,0x3dd(%r15)
  0x00007fafb8c6621f: mov     0xffffffffffffffe8(%rbp),%rcx
  0x00007fafb8c66223: mov     0x20(%rcx),%ecx
  0x00007fafb8c66226: test    $0x20,%ecx
  0x00007fafb8c6622c: je      0x7fafb8c6634b
  0x00007fafb8c66232: testb   $0xff,%bl
  0x00007fafb8c66235: jne     0x7fafb8c66468
  0x00007fafb8c6623b: sub     $0x10,%rsp
  0x00007fafb8c6623f: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c66244: lea     0xffffffffffffffa8(%rbp),%rsi
  0x00007fafb8c66248: mov     0x8(%rsi),%rax
  0x00007fafb8c6624c: test    %rax,%rax
  0x00007fafb8c6624f: jne     0x7fafb8c66263
  0x00007fafb8c66255: vmovsd  (%rsp),%xmm0
  0x00007fafb8c6625a: add     $0x10,%rsp
  0x00007fafb8c6625e: jmpq    0x7fafb8c6634b
  0x00007fafb8c66263: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c66267: lea     (%rsi),%rax
  0x00007fafb8c6626a: mov     0x8(%rsi),%rcx
  0x00007fafb8c6626e: movq    $0x0,0x8(%rsi)
  0x00007fafb8c66276: mov     (%rcx),%rdx
  0x00007fafb8c66279: and     $0x7,%rdx
  0x00007fafb8c6627d: cmp     $0x5,%rdx
  0x00007fafb8c66281: je      0x7fafb8c6633e
  0x00007fafb8c66287: mov     (%rax),%rdx
  0x00007fafb8c6628a: test    %rdx,%rdx
  0x00007fafb8c6628d: je      0x7fafb8c6633e
  0x00007fafb8c66293: lock cmpxchg %rdx,(%rcx)
  0x00007fafb8c66298: je      0x7fafb8c6633e
  0x00007fafb8c6629e: mov     %rcx,0x8(%rsi)
  0x00007fafb8c662a2: callq   0x7fafb8c662ac
  0x00007fafb8c662a7: jmpq    0x7fafb8c6633e
  0x00007fafb8c662ac: lea     0x8(%rsp),%rax
  0x00007fafb8c662b1: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c662b5: mov     %r15,%rdi
  0x00007fafb8c662b8: vzeroupper
  0x00007fafb8c662bb: mov     %rbp,0x330(%r15)
  0x00007fafb8c662c2: mov     %rax,0x320(%r15)
  0x00007fafb8c662c9: test    $0xf,%esp
  0x00007fafb8c662cf: je      0x7fafb8c662e7
  0x00007fafb8c662d5: sub     $0x8,%rsp
  0x00007fafb8c662d9: callq   0x7fafd7d82470
  0x00007fafb8c662de: add     $0x8,%rsp
  0x00007fafb8c662e2: jmpq    0x7fafb8c662ec
  0x00007fafb8c662e7: callq   0x7fafd7d82470
  0x00007fafb8c662ec: movabs  $0x0,%r10
  0x00007fafb8c662f6: mov     %r10,0x320(%r15)
  0x00007fafb8c662fd: movabs  $0x0,%r10
  0x00007fafb8c66307: mov     %r10,0x330(%r15)
  0x00007fafb8c6630e: movabs  $0x0,%r10
  0x00007fafb8c66318: mov     %r10,0x328(%r15)
  0x00007fafb8c6631f: vzeroupper
  0x00007fafb8c66322: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c6632a: je      0x7fafb8c66335
  0x00007fafb8c66330: jmpq    0x7fafb8c5c780
  0x00007fafb8c66335: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c66339: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c6633d: retq
  0x00007fafb8c6633e: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c66342: vmovsd  (%rsp),%xmm0
  0x00007fafb8c66347: add     $0x10,%rsp
  0x00007fafb8c6634b: mov     0xffffffffffffffb8(%rbp),%rsi
  0x00007fafb8c6634f: lea     0xffffffffffffffb8(%rbp),%rbx
  0x00007fafb8c66353: jmpq    0x7fafb8c66463
  0x00007fafb8c66358: sub     $0x10,%rsp
  0x00007fafb8c6635c: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c66361: mov     %rsi,%rsi
  0x00007fafb8c66364: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c66368: lea     (%rsi),%rax
  0x00007fafb8c6636b: mov     0x8(%rsi),%rcx
  0x00007fafb8c6636f: movq    $0x0,0x8(%rsi)
  0x00007fafb8c66377: mov     (%rcx),%rdx
  0x00007fafb8c6637a: and     $0x7,%rdx
  0x00007fafb8c6637e: cmp     $0x5,%rdx
  0x00007fafb8c66382: je      0x7fafb8c6643f
  0x00007fafb8c66388: mov     (%rax),%rdx
  0x00007fafb8c6638b: test    %rdx,%rdx
  0x00007fafb8c6638e: je      0x7fafb8c6643f
  0x00007fafb8c66394: lock cmpxchg %rdx,(%rcx)
  0x00007fafb8c66399: je      0x7fafb8c6643f
  0x00007fafb8c6639f: mov     %rcx,0x8(%rsi)
  0x00007fafb8c663a3: callq   0x7fafb8c663ad
  0x00007fafb8c663a8: jmpq    0x7fafb8c6643f
  0x00007fafb8c663ad: lea     0x8(%rsp),%rax
  0x00007fafb8c663b2: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c663b6: mov     %r15,%rdi
  0x00007fafb8c663b9: vzeroupper
  0x00007fafb8c663bc: mov     %rbp,0x330(%r15)
  0x00007fafb8c663c3: mov     %rax,0x320(%r15)
  0x00007fafb8c663ca: test    $0xf,%esp
  0x00007fafb8c663d0: je      0x7fafb8c663e8
  0x00007fafb8c663d6: sub     $0x8,%rsp
  0x00007fafb8c663da: callq   0x7fafd7d82470
  0x00007fafb8c663df: add     $0x8,%rsp
  0x00007fafb8c663e3: jmpq    0x7fafb8c663ed
  0x00007fafb8c663e8: callq   0x7fafd7d82470
  0x00007fafb8c663ed: movabs  $0x0,%r10
  0x00007fafb8c663f7: mov     %r10,0x320(%r15)
  0x00007fafb8c663fe: movabs  $0x0,%r10
  0x00007fafb8c66408: mov     %r10,0x330(%r15)
  0x00007fafb8c6640f: movabs  $0x0,%r10
  0x00007fafb8c66419: mov     %r10,0x328(%r15)
  0x00007fafb8c66420: vzeroupper
  0x00007fafb8c66423: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c6642b: je      0x7fafb8c66436
  0x00007fafb8c66431: jmpq    0x7fafb8c5c780
  0x00007fafb8c66436: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6643a: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c6643e: retq
  0x00007fafb8c6643f: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c66443: vmovsd  (%rsp),%xmm0
  0x00007fafb8c66448: add     $0x10,%rsp
  0x00007fafb8c6644c: jmpq    0x7fafb8c6634b
  0x00007fafb8c66451: cmpq    $0x0,0x8(%rsi)
  0x00007fafb8c66459: jne     0x7fafb8c66358
  0x00007fafb8c6645f: add     $0x10,%rsi
  0x00007fafb8c66463: cmp     %rbx,%rsi
  0x00007fafb8c66466: jne     0x7fafb8c66451
  0x00007fafb8c66468: cmpb    $0x0,0x1fd11828(%rip)
  0x00007fafb8c6646f: je      0x7fafb8c664b1
  0x00007fafb8c66475: sub     $0x10,%rsp
  0x00007fafb8c66479: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6647e: mov     0xffffffffffffffe8(%rbp),%rsi
  0x00007fafb8c66482: mov     %r15,%rdi
  0x00007fafb8c66485: test    $0xf,%esp
  0x00007fafb8c6648b: je      0x7fafb8c664a3
  0x00007fafb8c66491: sub     $0x8,%rsp
  0x00007fafb8c66495: callq   0x7fafd81e7140
  0x00007fafb8c6649a: add     $0x8,%rsp
  0x00007fafb8c6649e: jmpq    0x7fafb8c664a8
  0x00007fafb8c664a3: callq   0x7fafd81e7140
  0x00007fafb8c664a8: vmovsd  (%rsp),%xmm0
  0x00007fafb8c664ad: add     $0x10,%rsp
  0x00007fafb8c664b1: mov     0xfffffffffffffff8(%rbp),%rbx
  0x00007fafb8c664b5: cmpl    $0x3,0x408(%r15)
  0x00007fafb8c664c0: je      0x7fafb8c6660c
  0x00007fafb8c664c6: cmp     0x418(%r15),%rbx
  0x00007fafb8c664cd: jle     0x7fafb8c6660c
  0x00007fafb8c664d3: mov     %r15,%rdi
  0x00007fafb8c664d6: test    $0xf,%esp
  0x00007fafb8c664dc: je      0x7fafb8c664f4
  0x00007fafb8c664e2: sub     $0x8,%rsp
  0x00007fafb8c664e6: callq   0x7fafd81ee2f0
  0x00007fafb8c664eb: add     $0x8,%rsp
  0x00007fafb8c664ef: jmpq    0x7fafb8c664f9
  0x00007fafb8c664f4: callq   0x7fafd81ee2f0
  0x00007fafb8c664f9: callq   0x7fafb8c66503
  0x00007fafb8c664fe: jmpq    0x7fafb8c66595
  0x00007fafb8c66503: lea     0x8(%rsp),%rax
  0x00007fafb8c66508: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c6650c: mov     %r15,%rdi
  0x00007fafb8c6650f: vzeroupper
  0x00007fafb8c66512: mov     %rbp,0x330(%r15)
  0x00007fafb8c66519: mov     %rax,0x320(%r15)
  0x00007fafb8c66520: test    $0xf,%esp
  0x00007fafb8c66526: je      0x7fafb8c6653e
  0x00007fafb8c6652c: sub     $0x8,%rsp
  0x00007fafb8c66530: callq   0x7fafd7d7ef30
  0x00007fafb8c66535: add     $0x8,%rsp
  0x00007fafb8c66539: jmpq    0x7fafb8c66543
  0x00007fafb8c6653e: callq   0x7fafd7d7ef30
  0x00007fafb8c66543: movabs  $0x0,%r10
  0x00007fafb8c6654d: mov     %r10,0x320(%r15)
  0x00007fafb8c66554: movabs  $0x0,%r10
  0x00007fafb8c6655e: mov     %r10,0x330(%r15)
  0x00007fafb8c66565: movabs  $0x0,%r10
  0x00007fafb8c6656f: mov     %r10,0x328(%r15)
  0x00007fafb8c66576: vzeroupper
  0x00007fafb8c66579: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c66581: je      0x7fafb8c6658c
  0x00007fafb8c66587: jmpq    0x7fafb8c5c780
  0x00007fafb8c6658c: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c66590: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c66594: retq
  0x00007fafb8c66595: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c6659a: sub     $0x80,%rsp
  0x00007fafb8c665a1: mov     %rax,0x78(%rsp)
  0x00007fafb8c665a6: mov     %rcx,0x70(%rsp)
  0x00007fafb8c665ab: mov     %rdx,0x68(%rsp)
  0x00007fafb8c665b0: mov     %rbx,0x60(%rsp)
  0x00007fafb8c665b5: mov     %rbp,0x50(%rsp)
  0x00007fafb8c665ba: mov     %rsi,0x48(%rsp)
  0x00007fafb8c665bf: mov     %rdi,0x40(%rsp)
  0x00007fafb8c665c4: mov     %r8,0x38(%rsp)
  0x00007fafb8c665c9: mov     %r9,0x30(%rsp)
  0x00007fafb8c665ce: mov     %r10,0x28(%rsp)
  0x00007fafb8c665d3: mov     %r11,0x20(%rsp)
  0x00007fafb8c665d8: mov     %r12,0x18(%rsp)
  0x00007fafb8c665dd: mov     %r13,0x10(%rsp)
  0x00007fafb8c665e2: mov     %r14,0x8(%rsp)
  0x00007fafb8c665e7: mov     %r15,(%rsp)
  0x00007fafb8c665eb: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c665f5: movabs  $0x7fafb8c66595,%rsi
  0x00007fafb8c665ff: mov     %rsp,%rdx
  0x00007fafb8c66602: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c66606: callq   0x7fafd7fdd230
  0x00007fafb8c6660b: hlt
  0x00007fafb8c6660c: leave
  0x00007fafb8c6660d: pop     %rsi
  0x00007fafb8c6660e: mov     %rbx,%rsp
  0x00007fafb8c66611: jmpq    %rsi
  0x00007fafb8c66613: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c66617: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c6661b: mov     0xffffffffffffffb8(%rbp),%rsp
  0x00007fafb8c6661f: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c66627: mov     0x4b0(%r15),%rcx
  0x00007fafb8c6662e: vmovss  0x80(%rcx),%xmm0
  0x00007fafb8c66636: movl    $0xb,0x78(%rcx)
  0x00007fafb8c6663d: movl    $0x0,0x80(%rcx)
  0x00007fafb8c66647: movl    $0xb,0x78(%rcx)
  0x00007fafb8c6664e: movabs  $0x0,%r10
  0x00007fafb8c66658: mov     %r10,0x80(%rcx)
  0x00007fafb8c6665f: mov     0x4b0(%r15),%rcx
  0x00007fafb8c66666: movl    $0x0,0x74(%rcx)
  0x00007fafb8c6666d: mov     0x3dd(%r15),%bl
  0x00007fafb8c66674: movb    $0x0,0x3dd(%r15)
  0x00007fafb8c6667c: mov     0xffffffffffffffe8(%rbp),%rcx
  0x00007fafb8c66680: mov     0x20(%rcx),%ecx
  0x00007fafb8c66683: test    $0x20,%ecx
  0x00007fafb8c66689: je      0x7fafb8c667a8
  0x00007fafb8c6668f: testb   $0xff,%bl
  0x00007fafb8c66692: jne     0x7fafb8c668c5
  0x00007fafb8c66698: sub     $0x8,%rsp
  0x00007fafb8c6669c: vmovss  %xmm0,(%rsp)
  0x00007fafb8c666a1: lea     0xffffffffffffffa8(%rbp),%rsi
  0x00007fafb8c666a5: mov     0x8(%rsi),%rax
  0x00007fafb8c666a9: test    %rax,%rax
  0x00007fafb8c666ac: jne     0x7fafb8c666c0
  0x00007fafb8c666b2: vmovss  (%rsp),%xmm0
  0x00007fafb8c666b7: add     $0x8,%rsp
  0x00007fafb8c666bb: jmpq    0x7fafb8c667a8
  0x00007fafb8c666c0: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c666c4: lea     (%rsi),%rax
  0x00007fafb8c666c7: mov     0x8(%rsi),%rcx
  0x00007fafb8c666cb: movq    $0x0,0x8(%rsi)
  0x00007fafb8c666d3: mov     (%rcx),%rdx
  0x00007fafb8c666d6: and     $0x7,%rdx
  0x00007fafb8c666da: cmp     $0x5,%rdx
  0x00007fafb8c666de: je      0x7fafb8c6679b
  0x00007fafb8c666e4: mov     (%rax),%rdx
  0x00007fafb8c666e7: test    %rdx,%rdx
  0x00007fafb8c666ea: je      0x7fafb8c6679b
  0x00007fafb8c666f0: lock cmpxchg %rdx,(%rcx)
  0x00007fafb8c666f5: je      0x7fafb8c6679b
  0x00007fafb8c666fb: mov     %rcx,0x8(%rsi)
  0x00007fafb8c666ff: callq   0x7fafb8c66709
  0x00007fafb8c66704: jmpq    0x7fafb8c6679b
  0x00007fafb8c66709: lea     0x8(%rsp),%rax
  0x00007fafb8c6670e: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c66712: mov     %r15,%rdi
  0x00007fafb8c66715: vzeroupper
  0x00007fafb8c66718: mov     %rbp,0x330(%r15)
  0x00007fafb8c6671f: mov     %rax,0x320(%r15)
  0x00007fafb8c66726: test    $0xf,%esp
  0x00007fafb8c6672c: je      0x7fafb8c66744
  0x00007fafb8c66732: sub     $0x8,%rsp
  0x00007fafb8c66736: callq   0x7fafd7d82470
  0x00007fafb8c6673b: add     $0x8,%rsp
  0x00007fafb8c6673f: jmpq    0x7fafb8c66749
  0x00007fafb8c66744: callq   0x7fafd7d82470
  0x00007fafb8c66749: movabs  $0x0,%r10
  0x00007fafb8c66753: mov     %r10,0x320(%r15)
  0x00007fafb8c6675a: movabs  $0x0,%r10
  0x00007fafb8c66764: mov     %r10,0x330(%r15)
  0x00007fafb8c6676b: movabs  $0x0,%r10
  0x00007fafb8c66775: mov     %r10,0x328(%r15)
  0x00007fafb8c6677c: vzeroupper
  0x00007fafb8c6677f: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c66787: je      0x7fafb8c66792
  0x00007fafb8c6678d: jmpq    0x7fafb8c5c780
  0x00007fafb8c66792: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c66796: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c6679a: retq
  0x00007fafb8c6679b: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6679f: vmovss  (%rsp),%xmm0
  0x00007fafb8c667a4: add     $0x8,%rsp
  0x00007fafb8c667a8: mov     0xffffffffffffffb8(%rbp),%rsi
  0x00007fafb8c667ac: lea     0xffffffffffffffb8(%rbp),%rbx
  0x00007fafb8c667b0: jmpq    0x7fafb8c668c0
  0x00007fafb8c667b5: sub     $0x8,%rsp
  0x00007fafb8c667b9: vmovss  %xmm0,(%rsp)
  0x00007fafb8c667be: mov     %rsi,%rsi
  0x00007fafb8c667c1: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c667c5: lea     (%rsi),%rax
  0x00007fafb8c667c8: mov     0x8(%rsi),%rcx
  0x00007fafb8c667cc: movq    $0x0,0x8(%rsi)
  0x00007fafb8c667d4: mov     (%rcx),%rdx
  0x00007fafb8c667d7: and     $0x7,%rdx
  0x00007fafb8c667db: cmp     $0x5,%rdx
  0x00007fafb8c667df: je      0x7fafb8c6689c
  0x00007fafb8c667e5: mov     (%rax),%rdx
  0x00007fafb8c667e8: test    %rdx,%rdx
  0x00007fafb8c667eb: je      0x7fafb8c6689c
  0x00007fafb8c667f1: lock cmpxchg %rdx,(%rcx)
  0x00007fafb8c667f6: je      0x7fafb8c6689c
  0x00007fafb8c667fc: mov     %rcx,0x8(%rsi)
  0x00007fafb8c66800: callq   0x7fafb8c6680a
  0x00007fafb8c66805: jmpq    0x7fafb8c6689c
  0x00007fafb8c6680a: lea     0x8(%rsp),%rax
  0x00007fafb8c6680f: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c66813: mov     %r15,%rdi
  0x00007fafb8c66816: vzeroupper
  0x00007fafb8c66819: mov     %rbp,0x330(%r15)
  0x00007fafb8c66820: mov     %rax,0x320(%r15)
  0x00007fafb8c66827: test    $0xf,%esp
  0x00007fafb8c6682d: je      0x7fafb8c66845
  0x00007fafb8c66833: sub     $0x8,%rsp
  0x00007fafb8c66837: callq   0x7fafd7d82470
  0x00007fafb8c6683c: add     $0x8,%rsp
  0x00007fafb8c66840: jmpq    0x7fafb8c6684a
  0x00007fafb8c66845: callq   0x7fafd7d82470
  0x00007fafb8c6684a: movabs  $0x0,%r10
  0x00007fafb8c66854: mov     %r10,0x320(%r15)
  0x00007fafb8c6685b: movabs  $0x0,%r10
  0x00007fafb8c66865: mov     %r10,0x330(%r15)
  0x00007fafb8c6686c: movabs  $0x0,%r10
  0x00007fafb8c66876: mov     %r10,0x328(%r15)
  0x00007fafb8c6687d: vzeroupper
  0x00007fafb8c66880: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c66888: je      0x7fafb8c66893
  0x00007fafb8c6688e: jmpq    0x7fafb8c5c780
  0x00007fafb8c66893: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c66897: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c6689b: retq
  0x00007fafb8c6689c: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c668a0: vmovss  (%rsp),%xmm0
  0x00007fafb8c668a5: add     $0x8,%rsp
  0x00007fafb8c668a9: jmpq    0x7fafb8c667a8
  0x00007fafb8c668ae: cmpq    $0x0,0x8(%rsi)
  0x00007fafb8c668b6: jne     0x7fafb8c667b5
  0x00007fafb8c668bc: add     $0x10,%rsi
  0x00007fafb8c668c0: cmp     %rbx,%rsi
  0x00007fafb8c668c3: jne     0x7fafb8c668ae
  0x00007fafb8c668c5: cmpb    $0x0,0x1fd113cb(%rip)
  0x00007fafb8c668cc: je      0x7fafb8c6690e
  0x00007fafb8c668d2: sub     $0x8,%rsp
  0x00007fafb8c668d6: vmovss  %xmm0,(%rsp)
  0x00007fafb8c668db: mov     0xffffffffffffffe8(%rbp),%rsi
  0x00007fafb8c668df: mov     %r15,%rdi
  0x00007fafb8c668e2: test    $0xf,%esp
  0x00007fafb8c668e8: je      0x7fafb8c66900
  0x00007fafb8c668ee: sub     $0x8,%rsp
  0x00007fafb8c668f2: callq   0x7fafd81e7140
  0x00007fafb8c668f7: add     $0x8,%rsp
  0x00007fafb8c668fb: jmpq    0x7fafb8c66905
  0x00007fafb8c66900: callq   0x7fafd81e7140
  0x00007fafb8c66905: vmovss  (%rsp),%xmm0
  0x00007fafb8c6690a: add     $0x8,%rsp
  0x00007fafb8c6690e: mov     0xfffffffffffffff8(%rbp),%rbx
  0x00007fafb8c66912: cmpl    $0x3,0x408(%r15)
  0x00007fafb8c6691d: je      0x7fafb8c66a69
  0x00007fafb8c66923: cmp     0x418(%r15),%rbx
  0x00007fafb8c6692a: jle     0x7fafb8c66a69
  0x00007fafb8c66930: mov     %r15,%rdi
  0x00007fafb8c66933: test    $0xf,%esp
  0x00007fafb8c66939: je      0x7fafb8c66951
  0x00007fafb8c6693f: sub     $0x8,%rsp
  0x00007fafb8c66943: callq   0x7fafd81ee2f0
  0x00007fafb8c66948: add     $0x8,%rsp
  0x00007fafb8c6694c: jmpq    0x7fafb8c66956
  0x00007fafb8c66951: callq   0x7fafd81ee2f0
  0x00007fafb8c66956: callq   0x7fafb8c66960
  0x00007fafb8c6695b: jmpq    0x7fafb8c669f2
  0x00007fafb8c66960: lea     0x8(%rsp),%rax
  0x00007fafb8c66965: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c66969: mov     %r15,%rdi
  0x00007fafb8c6696c: vzeroupper
  0x00007fafb8c6696f: mov     %rbp,0x330(%r15)
  0x00007fafb8c66976: mov     %rax,0x320(%r15)
  0x00007fafb8c6697d: test    $0xf,%esp
  0x00007fafb8c66983: je      0x7fafb8c6699b
  0x00007fafb8c66989: sub     $0x8,%rsp
  0x00007fafb8c6698d: callq   0x7fafd7d7ef30
  0x00007fafb8c66992: add     $0x8,%rsp
  0x00007fafb8c66996: jmpq    0x7fafb8c669a0
  0x00007fafb8c6699b: callq   0x7fafd7d7ef30
  0x00007fafb8c669a0: movabs  $0x0,%r10
  0x00007fafb8c669aa: mov     %r10,0x320(%r15)
  0x00007fafb8c669b1: movabs  $0x0,%r10
  0x00007fafb8c669bb: mov     %r10,0x330(%r15)
  0x00007fafb8c669c2: movabs  $0x0,%r10
  0x00007fafb8c669cc: mov     %r10,0x328(%r15)
  0x00007fafb8c669d3: vzeroupper
  0x00007fafb8c669d6: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c669de: je      0x7fafb8c669e9
  0x00007fafb8c669e4: jmpq    0x7fafb8c5c780
  0x00007fafb8c669e9: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c669ed: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c669f1: retq
  0x00007fafb8c669f2: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c669f7: sub     $0x80,%rsp
  0x00007fafb8c669fe: mov     %rax,0x78(%rsp)
  0x00007fafb8c66a03: mov     %rcx,0x70(%rsp)
  0x00007fafb8c66a08: mov     %rdx,0x68(%rsp)
  0x00007fafb8c66a0d: mov     %rbx,0x60(%rsp)
  0x00007fafb8c66a12: mov     %rbp,0x50(%rsp)
  0x00007fafb8c66a17: mov     %rsi,0x48(%rsp)
  0x00007fafb8c66a1c: mov     %rdi,0x40(%rsp)
  0x00007fafb8c66a21: mov     %r8,0x38(%rsp)
  0x00007fafb8c66a26: mov     %r9,0x30(%rsp)
  0x00007fafb8c66a2b: mov     %r10,0x28(%rsp)
  0x00007fafb8c66a30: mov     %r11,0x20(%rsp)
  0x00007fafb8c66a35: mov     %r12,0x18(%rsp)
  0x00007fafb8c66a3a: mov     %r13,0x10(%rsp)
  0x00007fafb8c66a3f: mov     %r14,0x8(%rsp)
  0x00007fafb8c66a44: mov     %r15,(%rsp)
  0x00007fafb8c66a48: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c66a52: movabs  $0x7fafb8c669f2,%rsi
  0x00007fafb8c66a5c: mov     %rsp,%rdx
  0x00007fafb8c66a5f: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c66a63: callq   0x7fafd7fdd230
  0x00007fafb8c66a68: hlt
  0x00007fafb8c66a69: leave
  0x00007fafb8c66a6a: pop     %rsi
  0x00007fafb8c66a6b: mov     %rbx,%rsp
  0x00007fafb8c66a6e: jmpq    %rsi
  0x00007fafb8c66a70: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c66a74: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c66a78: mov     0xffffffffffffffb8(%rbp),%rsp
  0x00007fafb8c66a7c: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c66a84: mov     0x4b0(%r15),%rcx
  0x00007fafb8c66a8b: mov     0x80(%rcx),%rax
  0x00007fafb8c66a92: movl    $0xb,0x78(%rcx)
  0x00007fafb8c66a99: movl    $0x0,0x80(%rcx)
  0x00007fafb8c66aa3: movl    $0xb,0x78(%rcx)
  0x00007fafb8c66aaa: movabs  $0x0,%r10
  0x00007fafb8c66ab4: mov     %r10,0x80(%rcx)
  0x00007fafb8c66abb: mov     0x4b0(%r15),%rcx
  0x00007fafb8c66ac2: movl    $0x0,0x74(%rcx)
  0x00007fafb8c66ac9: mov     0x3dd(%r15),%bl
  0x00007fafb8c66ad0: movb    $0x0,0x3dd(%r15)
  0x00007fafb8c66ad8: mov     0xffffffffffffffe8(%rbp),%rcx
  0x00007fafb8c66adc: mov     0x20(%rcx),%ecx
  0x00007fafb8c66adf: test    $0x20,%ecx
  0x00007fafb8c66ae5: je      0x7fafb8c66c10
  0x00007fafb8c66aeb: testb   $0xff,%bl
  0x00007fafb8c66aee: jne     0x7fafb8c66d3a
  0x00007fafb8c66af4: sub     $0x10,%rsp
  0x00007fafb8c66af8: mov     %rax,(%rsp)
  0x00007fafb8c66afc: movabs  $0x0,%r10
  0x00007fafb8c66b06: mov     %r10,0x8(%rsp)
  0x00007fafb8c66b0b: lea     0xffffffffffffffa8(%rbp),%rsi
  0x00007fafb8c66b0f: mov     0x8(%rsi),%rax
  0x00007fafb8c66b13: test    %rax,%rax
  0x00007fafb8c66b16: jne     0x7fafb8c66b29
  0x00007fafb8c66b1c: mov     (%rsp),%rax
  0x00007fafb8c66b20: add     $0x10,%rsp
  0x00007fafb8c66b24: jmpq    0x7fafb8c66c10
  0x00007fafb8c66b29: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c66b2d: lea     (%rsi),%rax
  0x00007fafb8c66b30: mov     0x8(%rsi),%rcx
  0x00007fafb8c66b34: movq    $0x0,0x8(%rsi)
  0x00007fafb8c66b3c: mov     (%rcx),%rdx
  0x00007fafb8c66b3f: and     $0x7,%rdx
  0x00007fafb8c66b43: cmp     $0x5,%rdx
  0x00007fafb8c66b47: je      0x7fafb8c66c04
  0x00007fafb8c66b4d: mov     (%rax),%rdx
  0x00007fafb8c66b50: test    %rdx,%rdx
  0x00007fafb8c66b53: je      0x7fafb8c66c04
  0x00007fafb8c66b59: lock cmpxchg %rdx,(%rcx)
  0x00007fafb8c66b5e: je      0x7fafb8c66c04
  0x00007fafb8c66b64: mov     %rcx,0x8(%rsi)
  0x00007fafb8c66b68: callq   0x7fafb8c66b72
  0x00007fafb8c66b6d: jmpq    0x7fafb8c66c04
  0x00007fafb8c66b72: lea     0x8(%rsp),%rax
  0x00007fafb8c66b77: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c66b7b: mov     %r15,%rdi
  0x00007fafb8c66b7e: vzeroupper
  0x00007fafb8c66b81: mov     %rbp,0x330(%r15)
  0x00007fafb8c66b88: mov     %rax,0x320(%r15)
  0x00007fafb8c66b8f: test    $0xf,%esp
  0x00007fafb8c66b95: je      0x7fafb8c66bad
  0x00007fafb8c66b9b: sub     $0x8,%rsp
  0x00007fafb8c66b9f: callq   0x7fafd7d82470
  0x00007fafb8c66ba4: add     $0x8,%rsp
  0x00007fafb8c66ba8: jmpq    0x7fafb8c66bb2
  0x00007fafb8c66bad: callq   0x7fafd7d82470
  0x00007fafb8c66bb2: movabs  $0x0,%r10
  0x00007fafb8c66bbc: mov     %r10,0x320(%r15)
  0x00007fafb8c66bc3: movabs  $0x0,%r10
  0x00007fafb8c66bcd: mov     %r10,0x330(%r15)
  0x00007fafb8c66bd4: movabs  $0x0,%r10
  0x00007fafb8c66bde: mov     %r10,0x328(%r15)
  0x00007fafb8c66be5: vzeroupper
  0x00007fafb8c66be8: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c66bf0: je      0x7fafb8c66bfb
  0x00007fafb8c66bf6: jmpq    0x7fafb8c5c780
  0x00007fafb8c66bfb: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c66bff: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c66c03: retq
  0x00007fafb8c66c04: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c66c08: mov     (%rsp),%rax
  0x00007fafb8c66c0c: add     $0x10,%rsp
  0x00007fafb8c66c10: mov     0xffffffffffffffb8(%rbp),%rsi
  0x00007fafb8c66c14: lea     0xffffffffffffffb8(%rbp),%rbx
  0x00007fafb8c66c18: jmpq    0x7fafb8c66d35
  0x00007fafb8c66c1d: sub     $0x10,%rsp
  0x00007fafb8c66c21: mov     %rax,(%rsp)
  0x00007fafb8c66c25: movabs  $0x0,%r10
  0x00007fafb8c66c2f: mov     %r10,0x8(%rsp)
  0x00007fafb8c66c34: mov     %rsi,%rsi
  0x00007fafb8c66c37: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c66c3b: lea     (%rsi),%rax
  0x00007fafb8c66c3e: mov     0x8(%rsi),%rcx
  0x00007fafb8c66c42: movq    $0x0,0x8(%rsi)
  0x00007fafb8c66c4a: mov     (%rcx),%rdx
  0x00007fafb8c66c4d: and     $0x7,%rdx
  0x00007fafb8c66c51: cmp     $0x5,%rdx
  0x00007fafb8c66c55: je      0x7fafb8c66d12
  0x00007fafb8c66c5b: mov     (%rax),%rdx
  0x00007fafb8c66c5e: test    %rdx,%rdx
  0x00007fafb8c66c61: je      0x7fafb8c66d12
  0x00007fafb8c66c67: lock cmpxchg %rdx,(%rcx)
  0x00007fafb8c66c6c: je      0x7fafb8c66d12
  0x00007fafb8c66c72: mov     %rcx,0x8(%rsi)
  0x00007fafb8c66c76: callq   0x7fafb8c66c80
  0x00007fafb8c66c7b: jmpq    0x7fafb8c66d12
  0x00007fafb8c66c80: lea     0x8(%rsp),%rax
  0x00007fafb8c66c85: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c66c89: mov     %r15,%rdi
  0x00007fafb8c66c8c: vzeroupper
  0x00007fafb8c66c8f: mov     %rbp,0x330(%r15)
  0x00007fafb8c66c96: mov     %rax,0x320(%r15)
  0x00007fafb8c66c9d: test    $0xf,%esp
  0x00007fafb8c66ca3: je      0x7fafb8c66cbb
  0x00007fafb8c66ca9: sub     $0x8,%rsp
  0x00007fafb8c66cad: callq   0x7fafd7d82470
  0x00007fafb8c66cb2: add     $0x8,%rsp
  0x00007fafb8c66cb6: jmpq    0x7fafb8c66cc0
  0x00007fafb8c66cbb: callq   0x7fafd7d82470
  0x00007fafb8c66cc0: movabs  $0x0,%r10
  0x00007fafb8c66cca: mov     %r10,0x320(%r15)
  0x00007fafb8c66cd1: movabs  $0x0,%r10
  0x00007fafb8c66cdb: mov     %r10,0x330(%r15)
  0x00007fafb8c66ce2: movabs  $0x0,%r10
  0x00007fafb8c66cec: mov     %r10,0x328(%r15)
  0x00007fafb8c66cf3: vzeroupper
  0x00007fafb8c66cf6: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c66cfe: je      0x7fafb8c66d09
  0x00007fafb8c66d04: jmpq    0x7fafb8c5c780
  0x00007fafb8c66d09: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c66d0d: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c66d11: retq
  0x00007fafb8c66d12: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c66d16: mov     (%rsp),%rax
  0x00007fafb8c66d1a: add     $0x10,%rsp
  0x00007fafb8c66d1e: jmpq    0x7fafb8c66c10
  0x00007fafb8c66d23: cmpq    $0x0,0x8(%rsi)
  0x00007fafb8c66d2b: jne     0x7fafb8c66c1d
  0x00007fafb8c66d31: add     $0x10,%rsi
  0x00007fafb8c66d35: cmp     %rbx,%rsi
  0x00007fafb8c66d38: jne     0x7fafb8c66d23
  0x00007fafb8c66d3a: cmpb    $0x0,0x1fd10f56(%rip)
  0x00007fafb8c66d41: je      0x7fafb8c66d90
  0x00007fafb8c66d47: sub     $0x10,%rsp
  0x00007fafb8c66d4b: mov     %rax,(%rsp)
  0x00007fafb8c66d4f: movabs  $0x0,%r10
  0x00007fafb8c66d59: mov     %r10,0x8(%rsp)
  0x00007fafb8c66d5e: mov     0xffffffffffffffe8(%rbp),%rsi
  0x00007fafb8c66d62: mov     %r15,%rdi
  0x00007fafb8c66d65: test    $0xf,%esp
  0x00007fafb8c66d6b: je      0x7fafb8c66d83
  0x00007fafb8c66d71: sub     $0x8,%rsp
  0x00007fafb8c66d75: callq   0x7fafd81e7140
  0x00007fafb8c66d7a: add     $0x8,%rsp
  0x00007fafb8c66d7e: jmpq    0x7fafb8c66d88
  0x00007fafb8c66d83: callq   0x7fafd81e7140
  0x00007fafb8c66d88: mov     (%rsp),%rax
  0x00007fafb8c66d8c: add     $0x10,%rsp
  0x00007fafb8c66d90: mov     0xfffffffffffffff8(%rbp),%rbx
  0x00007fafb8c66d94: cmpl    $0x3,0x408(%r15)
  0x00007fafb8c66d9f: je      0x7fafb8c66eeb
  0x00007fafb8c66da5: cmp     0x418(%r15),%rbx
  0x00007fafb8c66dac: jle     0x7fafb8c66eeb
  0x00007fafb8c66db2: mov     %r15,%rdi
  0x00007fafb8c66db5: test    $0xf,%esp
  0x00007fafb8c66dbb: je      0x7fafb8c66dd3
  0x00007fafb8c66dc1: sub     $0x8,%rsp
  0x00007fafb8c66dc5: callq   0x7fafd81ee2f0
  0x00007fafb8c66dca: add     $0x8,%rsp
  0x00007fafb8c66dce: jmpq    0x7fafb8c66dd8
  0x00007fafb8c66dd3: callq   0x7fafd81ee2f0
  0x00007fafb8c66dd8: callq   0x7fafb8c66de2
  0x00007fafb8c66ddd: jmpq    0x7fafb8c66e74
  0x00007fafb8c66de2: lea     0x8(%rsp),%rax
  0x00007fafb8c66de7: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c66deb: mov     %r15,%rdi
  0x00007fafb8c66dee: vzeroupper
  0x00007fafb8c66df1: mov     %rbp,0x330(%r15)
  0x00007fafb8c66df8: mov     %rax,0x320(%r15)
  0x00007fafb8c66dff: test    $0xf,%esp
  0x00007fafb8c66e05: je      0x7fafb8c66e1d
  0x00007fafb8c66e0b: sub     $0x8,%rsp
  0x00007fafb8c66e0f: callq   0x7fafd7d7ef30
  0x00007fafb8c66e14: add     $0x8,%rsp
  0x00007fafb8c66e18: jmpq    0x7fafb8c66e22
  0x00007fafb8c66e1d: callq   0x7fafd7d7ef30
  0x00007fafb8c66e22: movabs  $0x0,%r10
  0x00007fafb8c66e2c: mov     %r10,0x320(%r15)
  0x00007fafb8c66e33: movabs  $0x0,%r10
  0x00007fafb8c66e3d: mov     %r10,0x330(%r15)
  0x00007fafb8c66e44: movabs  $0x0,%r10
  0x00007fafb8c66e4e: mov     %r10,0x328(%r15)
  0x00007fafb8c66e55: vzeroupper
  0x00007fafb8c66e58: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c66e60: je      0x7fafb8c66e6b
  0x00007fafb8c66e66: jmpq    0x7fafb8c5c780
  0x00007fafb8c66e6b: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c66e6f: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c66e73: retq
  0x00007fafb8c66e74: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c66e79: sub     $0x80,%rsp
  0x00007fafb8c66e80: mov     %rax,0x78(%rsp)
  0x00007fafb8c66e85: mov     %rcx,0x70(%rsp)
  0x00007fafb8c66e8a: mov     %rdx,0x68(%rsp)
  0x00007fafb8c66e8f: mov     %rbx,0x60(%rsp)
  0x00007fafb8c66e94: mov     %rbp,0x50(%rsp)
  0x00007fafb8c66e99: mov     %rsi,0x48(%rsp)
  0x00007fafb8c66e9e: mov     %rdi,0x40(%rsp)
  0x00007fafb8c66ea3: mov     %r8,0x38(%rsp)
  0x00007fafb8c66ea8: mov     %r9,0x30(%rsp)
  0x00007fafb8c66ead: mov     %r10,0x28(%rsp)
  0x00007fafb8c66eb2: mov     %r11,0x20(%rsp)
  0x00007fafb8c66eb7: mov     %r12,0x18(%rsp)
  0x00007fafb8c66ebc: mov     %r13,0x10(%rsp)
  0x00007fafb8c66ec1: mov     %r14,0x8(%rsp)
  0x00007fafb8c66ec6: mov     %r15,(%rsp)
  0x00007fafb8c66eca: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c66ed4: movabs  $0x7fafb8c66e74,%rsi
  0x00007fafb8c66ede: mov     %rsp,%rdx
  0x00007fafb8c66ee1: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c66ee5: callq   0x7fafd7fdd230
  0x00007fafb8c66eea: hlt
  0x00007fafb8c66eeb: leave
  0x00007fafb8c66eec: pop     %rsi
  0x00007fafb8c66eed: mov     %rbx,%rsp
  0x00007fafb8c66ef0: jmpq    %rsi
  0x00007fafb8c66ef2: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c66ef6: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c66efa: mov     0xffffffffffffffb8(%rbp),%rsp
  0x00007fafb8c66efe: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c66f06: mov     0x4b0(%r15),%rcx
  0x00007fafb8c66f0d: mov     0x80(%rcx),%eax
  0x00007fafb8c66f13: movl    $0xb,0x78(%rcx)
  0x00007fafb8c66f1a: movl    $0x0,0x80(%rcx)
  0x00007fafb8c66f24: movl    $0xb,0x78(%rcx)
  0x00007fafb8c66f2b: movabs  $0x0,%r10
  0x00007fafb8c66f35: mov     %r10,0x80(%rcx)
  0x00007fafb8c66f3c: mov     0x4b0(%r15),%rcx
  0x00007fafb8c66f43: movl    $0x0,0x74(%rcx)
  0x00007fafb8c66f4a: mov     0x3dd(%r15),%bl
  0x00007fafb8c66f51: movb    $0x0,0x3dd(%r15)
  0x00007fafb8c66f59: mov     0xffffffffffffffe8(%rbp),%rcx
  0x00007fafb8c66f5d: mov     0x20(%rcx),%ecx
  0x00007fafb8c66f60: test    $0x20,%ecx
  0x00007fafb8c66f66: je      0x7fafb8c67079
  0x00007fafb8c66f6c: testb   $0xff,%bl
  0x00007fafb8c66f6f: jne     0x7fafb8c6718c
  0x00007fafb8c66f75: push    %rax
  0x00007fafb8c66f76: lea     0xffffffffffffffa8(%rbp),%rsi
  0x00007fafb8c66f7a: mov     0x8(%rsi),%rax
  0x00007fafb8c66f7e: test    %rax,%rax
  0x00007fafb8c66f81: jne     0x7fafb8c66f93
  0x00007fafb8c66f87: mov     (%rsp),%eax
  0x00007fafb8c66f8a: add     $0x8,%rsp
  0x00007fafb8c66f8e: jmpq    0x7fafb8c67079
  0x00007fafb8c66f93: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c66f97: lea     (%rsi),%rax
  0x00007fafb8c66f9a: mov     0x8(%rsi),%rcx
  0x00007fafb8c66f9e: movq    $0x0,0x8(%rsi)
  0x00007fafb8c66fa6: mov     (%rcx),%rdx
  0x00007fafb8c66fa9: and     $0x7,%rdx
  0x00007fafb8c66fad: cmp     $0x5,%rdx
  0x00007fafb8c66fb1: je      0x7fafb8c6706e
  0x00007fafb8c66fb7: mov     (%rax),%rdx
  0x00007fafb8c66fba: test    %rdx,%rdx
  0x00007fafb8c66fbd: je      0x7fafb8c6706e
  0x00007fafb8c66fc3: lock cmpxchg %rdx,(%rcx)
  0x00007fafb8c66fc8: je      0x7fafb8c6706e
  0x00007fafb8c66fce: mov     %rcx,0x8(%rsi)
  0x00007fafb8c66fd2: callq   0x7fafb8c66fdc
  0x00007fafb8c66fd7: jmpq    0x7fafb8c6706e
  0x00007fafb8c66fdc: lea     0x8(%rsp),%rax
  0x00007fafb8c66fe1: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c66fe5: mov     %r15,%rdi
  0x00007fafb8c66fe8: vzeroupper
  0x00007fafb8c66feb: mov     %rbp,0x330(%r15)
  0x00007fafb8c66ff2: mov     %rax,0x320(%r15)
  0x00007fafb8c66ff9: test    $0xf,%esp
  0x00007fafb8c66fff: je      0x7fafb8c67017
  0x00007fafb8c67005: sub     $0x8,%rsp
  0x00007fafb8c67009: callq   0x7fafd7d82470
  0x00007fafb8c6700e: add     $0x8,%rsp
  0x00007fafb8c67012: jmpq    0x7fafb8c6701c
  0x00007fafb8c67017: callq   0x7fafd7d82470
  0x00007fafb8c6701c: movabs  $0x0,%r10
  0x00007fafb8c67026: mov     %r10,0x320(%r15)
  0x00007fafb8c6702d: movabs  $0x0,%r10
  0x00007fafb8c67037: mov     %r10,0x330(%r15)
  0x00007fafb8c6703e: movabs  $0x0,%r10
  0x00007fafb8c67048: mov     %r10,0x328(%r15)
  0x00007fafb8c6704f: vzeroupper
  0x00007fafb8c67052: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c6705a: je      0x7fafb8c67065
  0x00007fafb8c67060: jmpq    0x7fafb8c5c780
  0x00007fafb8c67065: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c67069: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c6706d: retq
  0x00007fafb8c6706e: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c67072: mov     (%rsp),%eax
  0x00007fafb8c67075: add     $0x8,%rsp
  0x00007fafb8c67079: mov     0xffffffffffffffb8(%rbp),%rsi
  0x00007fafb8c6707d: lea     0xffffffffffffffb8(%rbp),%rbx
  0x00007fafb8c67081: jmpq    0x7fafb8c67187
  0x00007fafb8c67086: push    %rax
  0x00007fafb8c67087: mov     %rsi,%rsi
  0x00007fafb8c6708a: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c6708e: lea     (%rsi),%rax
  0x00007fafb8c67091: mov     0x8(%rsi),%rcx
  0x00007fafb8c67095: movq    $0x0,0x8(%rsi)
  0x00007fafb8c6709d: mov     (%rcx),%rdx
  0x00007fafb8c670a0: and     $0x7,%rdx
  0x00007fafb8c670a4: cmp     $0x5,%rdx
  0x00007fafb8c670a8: je      0x7fafb8c67165
  0x00007fafb8c670ae: mov     (%rax),%rdx
  0x00007fafb8c670b1: test    %rdx,%rdx
  0x00007fafb8c670b4: je      0x7fafb8c67165
  0x00007fafb8c670ba: lock cmpxchg %rdx,(%rcx)
  0x00007fafb8c670bf: je      0x7fafb8c67165
  0x00007fafb8c670c5: mov     %rcx,0x8(%rsi)
  0x00007fafb8c670c9: callq   0x7fafb8c670d3
  0x00007fafb8c670ce: jmpq    0x7fafb8c67165
  0x00007fafb8c670d3: lea     0x8(%rsp),%rax
  0x00007fafb8c670d8: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c670dc: mov     %r15,%rdi
  0x00007fafb8c670df: vzeroupper
  0x00007fafb8c670e2: mov     %rbp,0x330(%r15)
  0x00007fafb8c670e9: mov     %rax,0x320(%r15)
  0x00007fafb8c670f0: test    $0xf,%esp
  0x00007fafb8c670f6: je      0x7fafb8c6710e
  0x00007fafb8c670fc: sub     $0x8,%rsp
  0x00007fafb8c67100: callq   0x7fafd7d82470
  0x00007fafb8c67105: add     $0x8,%rsp
  0x00007fafb8c67109: jmpq    0x7fafb8c67113
  0x00007fafb8c6710e: callq   0x7fafd7d82470
  0x00007fafb8c67113: movabs  $0x0,%r10
  0x00007fafb8c6711d: mov     %r10,0x320(%r15)
  0x00007fafb8c67124: movabs  $0x0,%r10
  0x00007fafb8c6712e: mov     %r10,0x330(%r15)
  0x00007fafb8c67135: movabs  $0x0,%r10
  0x00007fafb8c6713f: mov     %r10,0x328(%r15)
  0x00007fafb8c67146: vzeroupper
  0x00007fafb8c67149: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c67151: je      0x7fafb8c6715c
  0x00007fafb8c67157: jmpq    0x7fafb8c5c780
  0x00007fafb8c6715c: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c67160: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c67164: retq
  0x00007fafb8c67165: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c67169: mov     (%rsp),%eax
  0x00007fafb8c6716c: add     $0x8,%rsp
  0x00007fafb8c67170: jmpq    0x7fafb8c67079
  0x00007fafb8c67175: cmpq    $0x0,0x8(%rsi)
  0x00007fafb8c6717d: jne     0x7fafb8c67086
  0x00007fafb8c67183: add     $0x10,%rsi
  0x00007fafb8c67187: cmp     %rbx,%rsi
  0x00007fafb8c6718a: jne     0x7fafb8c67175
  0x00007fafb8c6718c: cmpb    $0x0,0x1fd10b04(%rip)
  0x00007fafb8c67193: je      0x7fafb8c671cb
  0x00007fafb8c67199: push    %rax
  0x00007fafb8c6719a: mov     0xffffffffffffffe8(%rbp),%rsi
  0x00007fafb8c6719e: mov     %r15,%rdi
  0x00007fafb8c671a1: test    $0xf,%esp
  0x00007fafb8c671a7: je      0x7fafb8c671bf
  0x00007fafb8c671ad: sub     $0x8,%rsp
  0x00007fafb8c671b1: callq   0x7fafd81e7140
  0x00007fafb8c671b6: add     $0x8,%rsp
  0x00007fafb8c671ba: jmpq    0x7fafb8c671c4
  0x00007fafb8c671bf: callq   0x7fafd81e7140
  0x00007fafb8c671c4: mov     (%rsp),%eax
  0x00007fafb8c671c7: add     $0x8,%rsp
  0x00007fafb8c671cb: mov     0xfffffffffffffff8(%rbp),%rbx
  0x00007fafb8c671cf: cmpl    $0x3,0x408(%r15)
  0x00007fafb8c671da: je      0x7fafb8c67326
  0x00007fafb8c671e0: cmp     0x418(%r15),%rbx
  0x00007fafb8c671e7: jle     0x7fafb8c67326
  0x00007fafb8c671ed: mov     %r15,%rdi
  0x00007fafb8c671f0: test    $0xf,%esp
  0x00007fafb8c671f6: je      0x7fafb8c6720e
  0x00007fafb8c671fc: sub     $0x8,%rsp
  0x00007fafb8c67200: callq   0x7fafd81ee2f0
  0x00007fafb8c67205: add     $0x8,%rsp
  0x00007fafb8c67209: jmpq    0x7fafb8c67213
  0x00007fafb8c6720e: callq   0x7fafd81ee2f0
  0x00007fafb8c67213: callq   0x7fafb8c6721d
  0x00007fafb8c67218: jmpq    0x7fafb8c672af
  0x00007fafb8c6721d: lea     0x8(%rsp),%rax
  0x00007fafb8c67222: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c67226: mov     %r15,%rdi
  0x00007fafb8c67229: vzeroupper
  0x00007fafb8c6722c: mov     %rbp,0x330(%r15)
  0x00007fafb8c67233: mov     %rax,0x320(%r15)
  0x00007fafb8c6723a: test    $0xf,%esp
  0x00007fafb8c67240: je      0x7fafb8c67258
  0x00007fafb8c67246: sub     $0x8,%rsp
  0x00007fafb8c6724a: callq   0x7fafd7d7ef30
  0x00007fafb8c6724f: add     $0x8,%rsp
  0x00007fafb8c67253: jmpq    0x7fafb8c6725d
  0x00007fafb8c67258: callq   0x7fafd7d7ef30
  0x00007fafb8c6725d: movabs  $0x0,%r10
  0x00007fafb8c67267: mov     %r10,0x320(%r15)
  0x00007fafb8c6726e: movabs  $0x0,%r10
  0x00007fafb8c67278: mov     %r10,0x330(%r15)
  0x00007fafb8c6727f: movabs  $0x0,%r10
  0x00007fafb8c67289: mov     %r10,0x328(%r15)
  0x00007fafb8c67290: vzeroupper
  0x00007fafb8c67293: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c6729b: je      0x7fafb8c672a6
  0x00007fafb8c672a1: jmpq    0x7fafb8c5c780
  0x00007fafb8c672a6: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c672aa: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c672ae: retq
  0x00007fafb8c672af: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c672b4: sub     $0x80,%rsp
  0x00007fafb8c672bb: mov     %rax,0x78(%rsp)
  0x00007fafb8c672c0: mov     %rcx,0x70(%rsp)
  0x00007fafb8c672c5: mov     %rdx,0x68(%rsp)
  0x00007fafb8c672ca: mov     %rbx,0x60(%rsp)
  0x00007fafb8c672cf: mov     %rbp,0x50(%rsp)
  0x00007fafb8c672d4: mov     %rsi,0x48(%rsp)
  0x00007fafb8c672d9: mov     %rdi,0x40(%rsp)
  0x00007fafb8c672de: mov     %r8,0x38(%rsp)
  0x00007fafb8c672e3: mov     %r9,0x30(%rsp)
  0x00007fafb8c672e8: mov     %r10,0x28(%rsp)
  0x00007fafb8c672ed: mov     %r11,0x20(%rsp)
  0x00007fafb8c672f2: mov     %r12,0x18(%rsp)
  0x00007fafb8c672f7: mov     %r13,0x10(%rsp)
  0x00007fafb8c672fc: mov     %r14,0x8(%rsp)
  0x00007fafb8c67301: mov     %r15,(%rsp)
  0x00007fafb8c67305: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c6730f: movabs  $0x7fafb8c672af,%rsi
  0x00007fafb8c67319: mov     %rsp,%rdx
  0x00007fafb8c6731c: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c67320: callq   0x7fafd7fdd230
  0x00007fafb8c67325: hlt
  0x00007fafb8c67326: leave
  0x00007fafb8c67327: pop     %rsi
  0x00007fafb8c67328: mov     %rbx,%rsp
  0x00007fafb8c6732b: jmpq    %rsi
  0x00007fafb8c6732d: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c67331: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c67335: mov     0xffffffffffffffb8(%rbp),%rsp
  0x00007fafb8c67339: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c67341: mov     0x4b0(%r15),%rcx
  0x00007fafb8c67348: mov     0x88(%rcx),%rax
  0x00007fafb8c6734f: movq    $0x0,0x88(%rcx)
  0x00007fafb8c6735a: movl    $0xb,0x78(%rcx)
  0x00007fafb8c67361: movl    $0x0,0x80(%rcx)
  0x00007fafb8c6736b: movl    $0xb,0x78(%rcx)
  0x00007fafb8c67372: movabs  $0x0,%r10
  0x00007fafb8c6737c: mov     %r10,0x80(%rcx)
  0x00007fafb8c67383: mov     0x4b0(%r15),%rcx
  0x00007fafb8c6738a: movl    $0x0,0x74(%rcx)
  0x00007fafb8c67391: mov     0x3dd(%r15),%bl
  0x00007fafb8c67398: movb    $0x0,0x3dd(%r15)
  0x00007fafb8c673a0: mov     0xffffffffffffffe8(%rbp),%rcx
  0x00007fafb8c673a4: mov     0x20(%rcx),%ecx
  0x00007fafb8c673a7: test    $0x20,%ecx
  0x00007fafb8c673ad: je      0x7fafb8c674b4
  0x00007fafb8c673b3: testb   $0xff,%bl
  0x00007fafb8c673b6: jne     0x7fafb8c675c1
  0x00007fafb8c673bc: push    %rax
  0x00007fafb8c673bd: lea     0xffffffffffffffa8(%rbp),%rsi
  0x00007fafb8c673c1: mov     0x8(%rsi),%rax
  0x00007fafb8c673c5: test    %rax,%rax
  0x00007fafb8c673c8: jne     0x7fafb8c673d4
  0x00007fafb8c673ce: pop     %rax
  0x00007fafb8c673cf: jmpq    0x7fafb8c674b4
  0x00007fafb8c673d4: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c673d8: lea     (%rsi),%rax
  0x00007fafb8c673db: mov     0x8(%rsi),%rcx
  0x00007fafb8c673df: movq    $0x0,0x8(%rsi)
  0x00007fafb8c673e7: mov     (%rcx),%rdx
  0x00007fafb8c673ea: and     $0x7,%rdx
  0x00007fafb8c673ee: cmp     $0x5,%rdx
  0x00007fafb8c673f2: je      0x7fafb8c674af
  0x00007fafb8c673f8: mov     (%rax),%rdx
  0x00007fafb8c673fb: test    %rdx,%rdx
  0x00007fafb8c673fe: je      0x7fafb8c674af
  0x00007fafb8c67404: lock cmpxchg %rdx,(%rcx)
  0x00007fafb8c67409: je      0x7fafb8c674af
  0x00007fafb8c6740f: mov     %rcx,0x8(%rsi)
  0x00007fafb8c67413: callq   0x7fafb8c6741d
  0x00007fafb8c67418: jmpq    0x7fafb8c674af
  0x00007fafb8c6741d: lea     0x8(%rsp),%rax
  0x00007fafb8c67422: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c67426: mov     %r15,%rdi
  0x00007fafb8c67429: vzeroupper
  0x00007fafb8c6742c: mov     %rbp,0x330(%r15)
  0x00007fafb8c67433: mov     %rax,0x320(%r15)
  0x00007fafb8c6743a: test    $0xf,%esp
  0x00007fafb8c67440: je      0x7fafb8c67458
  0x00007fafb8c67446: sub     $0x8,%rsp
  0x00007fafb8c6744a: callq   0x7fafd7d82470
  0x00007fafb8c6744f: add     $0x8,%rsp
  0x00007fafb8c67453: jmpq    0x7fafb8c6745d
  0x00007fafb8c67458: callq   0x7fafd7d82470
  0x00007fafb8c6745d: movabs  $0x0,%r10
  0x00007fafb8c67467: mov     %r10,0x320(%r15)
  0x00007fafb8c6746e: movabs  $0x0,%r10
  0x00007fafb8c67478: mov     %r10,0x330(%r15)
  0x00007fafb8c6747f: movabs  $0x0,%r10
  0x00007fafb8c67489: mov     %r10,0x328(%r15)
  0x00007fafb8c67490: vzeroupper
  0x00007fafb8c67493: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c6749b: je      0x7fafb8c674a6
  0x00007fafb8c674a1: jmpq    0x7fafb8c5c780
  0x00007fafb8c674a6: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c674aa: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c674ae: retq
  0x00007fafb8c674af: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c674b3: pop     %rax
  0x00007fafb8c674b4: mov     0xffffffffffffffb8(%rbp),%rsi
  0x00007fafb8c674b8: lea     0xffffffffffffffb8(%rbp),%rbx
  0x00007fafb8c674bc: jmpq    0x7fafb8c675bc
  0x00007fafb8c674c1: push    %rax
  0x00007fafb8c674c2: mov     %rsi,%rsi
  0x00007fafb8c674c5: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c674c9: lea     (%rsi),%rax
  0x00007fafb8c674cc: mov     0x8(%rsi),%rcx
  0x00007fafb8c674d0: movq    $0x0,0x8(%rsi)
  0x00007fafb8c674d8: mov     (%rcx),%rdx
  0x00007fafb8c674db: and     $0x7,%rdx
  0x00007fafb8c674df: cmp     $0x5,%rdx
  0x00007fafb8c674e3: je      0x7fafb8c675a0
  0x00007fafb8c674e9: mov     (%rax),%rdx
  0x00007fafb8c674ec: test    %rdx,%rdx
  0x00007fafb8c674ef: je      0x7fafb8c675a0
  0x00007fafb8c674f5: lock cmpxchg %rdx,(%rcx)
  0x00007fafb8c674fa: je      0x7fafb8c675a0
  0x00007fafb8c67500: mov     %rcx,0x8(%rsi)
  0x00007fafb8c67504: callq   0x7fafb8c6750e
  0x00007fafb8c67509: jmpq    0x7fafb8c675a0
  0x00007fafb8c6750e: lea     0x8(%rsp),%rax
  0x00007fafb8c67513: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c67517: mov     %r15,%rdi
  0x00007fafb8c6751a: vzeroupper
  0x00007fafb8c6751d: mov     %rbp,0x330(%r15)
  0x00007fafb8c67524: mov     %rax,0x320(%r15)
  0x00007fafb8c6752b: test    $0xf,%esp
  0x00007fafb8c67531: je      0x7fafb8c67549
  0x00007fafb8c67537: sub     $0x8,%rsp
  0x00007fafb8c6753b: callq   0x7fafd7d82470
  0x00007fafb8c67540: add     $0x8,%rsp
  0x00007fafb8c67544: jmpq    0x7fafb8c6754e
  0x00007fafb8c67549: callq   0x7fafd7d82470
  0x00007fafb8c6754e: movabs  $0x0,%r10
  0x00007fafb8c67558: mov     %r10,0x320(%r15)
  0x00007fafb8c6755f: movabs  $0x0,%r10
  0x00007fafb8c67569: mov     %r10,0x330(%r15)
  0x00007fafb8c67570: movabs  $0x0,%r10
  0x00007fafb8c6757a: mov     %r10,0x328(%r15)
  0x00007fafb8c67581: vzeroupper
  0x00007fafb8c67584: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c6758c: je      0x7fafb8c67597
  0x00007fafb8c67592: jmpq    0x7fafb8c5c780
  0x00007fafb8c67597: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6759b: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c6759f: retq
  0x00007fafb8c675a0: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c675a4: pop     %rax
  0x00007fafb8c675a5: jmpq    0x7fafb8c674b4
  0x00007fafb8c675aa: cmpq    $0x0,0x8(%rsi)
  0x00007fafb8c675b2: jne     0x7fafb8c674c1
  0x00007fafb8c675b8: add     $0x10,%rsi
  0x00007fafb8c675bc: cmp     %rbx,%rsi
  0x00007fafb8c675bf: jne     0x7fafb8c675aa
  0x00007fafb8c675c1: cmpb    $0x0,0x1fd106cf(%rip)
  0x00007fafb8c675c8: je      0x7fafb8c675fa
  0x00007fafb8c675ce: push    %rax
  0x00007fafb8c675cf: mov     0xffffffffffffffe8(%rbp),%rsi
  0x00007fafb8c675d3: mov     %r15,%rdi
  0x00007fafb8c675d6: test    $0xf,%esp
  0x00007fafb8c675dc: je      0x7fafb8c675f4
  0x00007fafb8c675e2: sub     $0x8,%rsp
  0x00007fafb8c675e6: callq   0x7fafd81e7140
  0x00007fafb8c675eb: add     $0x8,%rsp
  0x00007fafb8c675ef: jmpq    0x7fafb8c675f9
  0x00007fafb8c675f4: callq   0x7fafd81e7140
  0x00007fafb8c675f9: pop     %rax
  0x00007fafb8c675fa: mov     0xfffffffffffffff8(%rbp),%rbx
  0x00007fafb8c675fe: cmpl    $0x3,0x408(%r15)
  0x00007fafb8c67609: je      0x7fafb8c67755
  0x00007fafb8c6760f: cmp     0x418(%r15),%rbx
  0x00007fafb8c67616: jle     0x7fafb8c67755
  0x00007fafb8c6761c: mov     %r15,%rdi
  0x00007fafb8c6761f: test    $0xf,%esp
  0x00007fafb8c67625: je      0x7fafb8c6763d
  0x00007fafb8c6762b: sub     $0x8,%rsp
  0x00007fafb8c6762f: callq   0x7fafd81ee2f0
  0x00007fafb8c67634: add     $0x8,%rsp
  0x00007fafb8c67638: jmpq    0x7fafb8c67642
  0x00007fafb8c6763d: callq   0x7fafd81ee2f0
  0x00007fafb8c67642: callq   0x7fafb8c6764c
  0x00007fafb8c67647: jmpq    0x7fafb8c676de
  0x00007fafb8c6764c: lea     0x8(%rsp),%rax
  0x00007fafb8c67651: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c67655: mov     %r15,%rdi
  0x00007fafb8c67658: vzeroupper
  0x00007fafb8c6765b: mov     %rbp,0x330(%r15)
  0x00007fafb8c67662: mov     %rax,0x320(%r15)
  0x00007fafb8c67669: test    $0xf,%esp
  0x00007fafb8c6766f: je      0x7fafb8c67687
  0x00007fafb8c67675: sub     $0x8,%rsp
  0x00007fafb8c67679: callq   0x7fafd7d7ef30
  0x00007fafb8c6767e: add     $0x8,%rsp
  0x00007fafb8c67682: jmpq    0x7fafb8c6768c
  0x00007fafb8c67687: callq   0x7fafd7d7ef30
  0x00007fafb8c6768c: movabs  $0x0,%r10
  0x00007fafb8c67696: mov     %r10,0x320(%r15)
  0x00007fafb8c6769d: movabs  $0x0,%r10
  0x00007fafb8c676a7: mov     %r10,0x330(%r15)
  0x00007fafb8c676ae: movabs  $0x0,%r10
  0x00007fafb8c676b8: mov     %r10,0x328(%r15)
  0x00007fafb8c676bf: vzeroupper
  0x00007fafb8c676c2: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c676ca: je      0x7fafb8c676d5
  0x00007fafb8c676d0: jmpq    0x7fafb8c5c780
  0x00007fafb8c676d5: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c676d9: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c676dd: retq
  0x00007fafb8c676de: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c676e3: sub     $0x80,%rsp
  0x00007fafb8c676ea: mov     %rax,0x78(%rsp)
  0x00007fafb8c676ef: mov     %rcx,0x70(%rsp)
  0x00007fafb8c676f4: mov     %rdx,0x68(%rsp)
  0x00007fafb8c676f9: mov     %rbx,0x60(%rsp)
  0x00007fafb8c676fe: mov     %rbp,0x50(%rsp)
  0x00007fafb8c67703: mov     %rsi,0x48(%rsp)
  0x00007fafb8c67708: mov     %rdi,0x40(%rsp)
  0x00007fafb8c6770d: mov     %r8,0x38(%rsp)
  0x00007fafb8c67712: mov     %r9,0x30(%rsp)
  0x00007fafb8c67717: mov     %r10,0x28(%rsp)
  0x00007fafb8c6771c: mov     %r11,0x20(%rsp)
  0x00007fafb8c67721: mov     %r12,0x18(%rsp)
  0x00007fafb8c67726: mov     %r13,0x10(%rsp)
  0x00007fafb8c6772b: mov     %r14,0x8(%rsp)
  0x00007fafb8c67730: mov     %r15,(%rsp)
  0x00007fafb8c67734: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c6773e: movabs  $0x7fafb8c676de,%rsi
  0x00007fafb8c67748: mov     %rsp,%rdx
  0x00007fafb8c6774b: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c6774f: callq   0x7fafd7fdd230
  0x00007fafb8c67754: hlt
  0x00007fafb8c67755: leave
  0x00007fafb8c67756: pop     %rsi
  0x00007fafb8c67757: mov     %rbx,%rsp
  0x00007fafb8c6775a: jmpq    %rsi
  0x00007fafb8c6775c: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c67760: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c67764: mov     0xffffffffffffffb8(%rbp),%rsp
  0x00007fafb8c67768: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c67770: mov     0x4b0(%r15),%rcx
  0x00007fafb8c67777: mov     0x80(%rcx),%eax
  0x00007fafb8c6777d: movl    $0xb,0x78(%rcx)
  0x00007fafb8c67784: movl    $0x0,0x80(%rcx)
  0x00007fafb8c6778e: movl    $0xb,0x78(%rcx)
  0x00007fafb8c67795: movabs  $0x0,%r10
  0x00007fafb8c6779f: mov     %r10,0x80(%rcx)
  0x00007fafb8c677a6: mov     0x4b0(%r15),%rcx
  0x00007fafb8c677ad: movl    $0x0,0x74(%rcx)
  0x00007fafb8c677b4: mov     0x3dd(%r15),%bl
  0x00007fafb8c677bb: movb    $0x0,0x3dd(%r15)
  0x00007fafb8c677c3: mov     0xffffffffffffffe8(%rbp),%rcx
  0x00007fafb8c677c7: mov     0x20(%rcx),%ecx
  0x00007fafb8c677ca: test    $0x20,%ecx
  0x00007fafb8c677d0: je      0x7fafb8c678e3
  0x00007fafb8c677d6: testb   $0xff,%bl
  0x00007fafb8c677d9: jne     0x7fafb8c679f6
  0x00007fafb8c677df: push    %rax
  0x00007fafb8c677e0: lea     0xffffffffffffffa8(%rbp),%rsi
  0x00007fafb8c677e4: mov     0x8(%rsi),%rax
  0x00007fafb8c677e8: test    %rax,%rax
  0x00007fafb8c677eb: jne     0x7fafb8c677fd
  0x00007fafb8c677f1: mov     (%rsp),%eax
  0x00007fafb8c677f4: add     $0x8,%rsp
  0x00007fafb8c677f8: jmpq    0x7fafb8c678e3
  0x00007fafb8c677fd: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c67801: lea     (%rsi),%rax
  0x00007fafb8c67804: mov     0x8(%rsi),%rcx
  0x00007fafb8c67808: movq    $0x0,0x8(%rsi)
  0x00007fafb8c67810: mov     (%rcx),%rdx
  0x00007fafb8c67813: and     $0x7,%rdx
  0x00007fafb8c67817: cmp     $0x5,%rdx
  0x00007fafb8c6781b: je      0x7fafb8c678d8
  0x00007fafb8c67821: mov     (%rax),%rdx
  0x00007fafb8c67824: test    %rdx,%rdx
  0x00007fafb8c67827: je      0x7fafb8c678d8
  0x00007fafb8c6782d: lock cmpxchg %rdx,(%rcx)
  0x00007fafb8c67832: je      0x7fafb8c678d8
  0x00007fafb8c67838: mov     %rcx,0x8(%rsi)
  0x00007fafb8c6783c: callq   0x7fafb8c67846
  0x00007fafb8c67841: jmpq    0x7fafb8c678d8
  0x00007fafb8c67846: lea     0x8(%rsp),%rax
  0x00007fafb8c6784b: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c6784f: mov     %r15,%rdi
  0x00007fafb8c67852: vzeroupper
  0x00007fafb8c67855: mov     %rbp,0x330(%r15)
  0x00007fafb8c6785c: mov     %rax,0x320(%r15)
  0x00007fafb8c67863: test    $0xf,%esp
  0x00007fafb8c67869: je      0x7fafb8c67881
  0x00007fafb8c6786f: sub     $0x8,%rsp
  0x00007fafb8c67873: callq   0x7fafd7d82470
  0x00007fafb8c67878: add     $0x8,%rsp
  0x00007fafb8c6787c: jmpq    0x7fafb8c67886
  0x00007fafb8c67881: callq   0x7fafd7d82470
  0x00007fafb8c67886: movabs  $0x0,%r10
  0x00007fafb8c67890: mov     %r10,0x320(%r15)
  0x00007fafb8c67897: movabs  $0x0,%r10
  0x00007fafb8c678a1: mov     %r10,0x330(%r15)
  0x00007fafb8c678a8: movabs  $0x0,%r10
  0x00007fafb8c678b2: mov     %r10,0x328(%r15)
  0x00007fafb8c678b9: vzeroupper
  0x00007fafb8c678bc: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c678c4: je      0x7fafb8c678cf
  0x00007fafb8c678ca: jmpq    0x7fafb8c5c780
  0x00007fafb8c678cf: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c678d3: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c678d7: retq
  0x00007fafb8c678d8: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c678dc: mov     (%rsp),%eax
  0x00007fafb8c678df: add     $0x8,%rsp
  0x00007fafb8c678e3: mov     0xffffffffffffffb8(%rbp),%rsi
  0x00007fafb8c678e7: lea     0xffffffffffffffb8(%rbp),%rbx
  0x00007fafb8c678eb: jmpq    0x7fafb8c679f1
  0x00007fafb8c678f0: push    %rax
  0x00007fafb8c678f1: mov     %rsi,%rsi
  0x00007fafb8c678f4: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c678f8: lea     (%rsi),%rax
  0x00007fafb8c678fb: mov     0x8(%rsi),%rcx
  0x00007fafb8c678ff: movq    $0x0,0x8(%rsi)
  0x00007fafb8c67907: mov     (%rcx),%rdx
  0x00007fafb8c6790a: and     $0x7,%rdx
  0x00007fafb8c6790e: cmp     $0x5,%rdx
  0x00007fafb8c67912: je      0x7fafb8c679cf
  0x00007fafb8c67918: mov     (%rax),%rdx
  0x00007fafb8c6791b: test    %rdx,%rdx
  0x00007fafb8c6791e: je      0x7fafb8c679cf
  0x00007fafb8c67924: lock cmpxchg %rdx,(%rcx)
  0x00007fafb8c67929: je      0x7fafb8c679cf
  0x00007fafb8c6792f: mov     %rcx,0x8(%rsi)
  0x00007fafb8c67933: callq   0x7fafb8c6793d
  0x00007fafb8c67938: jmpq    0x7fafb8c679cf
  0x00007fafb8c6793d: lea     0x8(%rsp),%rax
  0x00007fafb8c67942: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c67946: mov     %r15,%rdi
  0x00007fafb8c67949: vzeroupper
  0x00007fafb8c6794c: mov     %rbp,0x330(%r15)
  0x00007fafb8c67953: mov     %rax,0x320(%r15)
  0x00007fafb8c6795a: test    $0xf,%esp
  0x00007fafb8c67960: je      0x7fafb8c67978
  0x00007fafb8c67966: sub     $0x8,%rsp
  0x00007fafb8c6796a: callq   0x7fafd7d82470
  0x00007fafb8c6796f: add     $0x8,%rsp
  0x00007fafb8c67973: jmpq    0x7fafb8c6797d
  0x00007fafb8c67978: callq   0x7fafd7d82470
  0x00007fafb8c6797d: movabs  $0x0,%r10
  0x00007fafb8c67987: mov     %r10,0x320(%r15)
  0x00007fafb8c6798e: movabs  $0x0,%r10
  0x00007fafb8c67998: mov     %r10,0x330(%r15)
  0x00007fafb8c6799f: movabs  $0x0,%r10
  0x00007fafb8c679a9: mov     %r10,0x328(%r15)
  0x00007fafb8c679b0: vzeroupper
  0x00007fafb8c679b3: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c679bb: je      0x7fafb8c679c6
  0x00007fafb8c679c1: jmpq    0x7fafb8c5c780
  0x00007fafb8c679c6: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c679ca: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c679ce: retq
  0x00007fafb8c679cf: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c679d3: mov     (%rsp),%eax
  0x00007fafb8c679d6: add     $0x8,%rsp
  0x00007fafb8c679da: jmpq    0x7fafb8c678e3
  0x00007fafb8c679df: cmpq    $0x0,0x8(%rsi)
  0x00007fafb8c679e7: jne     0x7fafb8c678f0
  0x00007fafb8c679ed: add     $0x10,%rsi
  0x00007fafb8c679f1: cmp     %rbx,%rsi
  0x00007fafb8c679f4: jne     0x7fafb8c679df
  0x00007fafb8c679f6: cmpb    $0x0,0x1fd1029a(%rip)
  0x00007fafb8c679fd: je      0x7fafb8c67a35
  0x00007fafb8c67a03: push    %rax
  0x00007fafb8c67a04: mov     0xffffffffffffffe8(%rbp),%rsi
  0x00007fafb8c67a08: mov     %r15,%rdi
  0x00007fafb8c67a0b: test    $0xf,%esp
  0x00007fafb8c67a11: je      0x7fafb8c67a29
  0x00007fafb8c67a17: sub     $0x8,%rsp
  0x00007fafb8c67a1b: callq   0x7fafd81e7140
  0x00007fafb8c67a20: add     $0x8,%rsp
  0x00007fafb8c67a24: jmpq    0x7fafb8c67a2e
  0x00007fafb8c67a29: callq   0x7fafd81e7140
  0x00007fafb8c67a2e: mov     (%rsp),%eax
  0x00007fafb8c67a31: add     $0x8,%rsp
  0x00007fafb8c67a35: mov     0xfffffffffffffff8(%rbp),%rbx
  0x00007fafb8c67a39: cmpl    $0x3,0x408(%r15)
  0x00007fafb8c67a44: je      0x7fafb8c67b90
  0x00007fafb8c67a4a: cmp     0x418(%r15),%rbx
  0x00007fafb8c67a51: jle     0x7fafb8c67b90
  0x00007fafb8c67a57: mov     %r15,%rdi
  0x00007fafb8c67a5a: test    $0xf,%esp
  0x00007fafb8c67a60: je      0x7fafb8c67a78
  0x00007fafb8c67a66: sub     $0x8,%rsp
  0x00007fafb8c67a6a: callq   0x7fafd81ee2f0
  0x00007fafb8c67a6f: add     $0x8,%rsp
  0x00007fafb8c67a73: jmpq    0x7fafb8c67a7d
  0x00007fafb8c67a78: callq   0x7fafd81ee2f0
  0x00007fafb8c67a7d: callq   0x7fafb8c67a87
  0x00007fafb8c67a82: jmpq    0x7fafb8c67b19
  0x00007fafb8c67a87: lea     0x8(%rsp),%rax
  0x00007fafb8c67a8c: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c67a90: mov     %r15,%rdi
  0x00007fafb8c67a93: vzeroupper
  0x00007fafb8c67a96: mov     %rbp,0x330(%r15)
  0x00007fafb8c67a9d: mov     %rax,0x320(%r15)
  0x00007fafb8c67aa4: test    $0xf,%esp
  0x00007fafb8c67aaa: je      0x7fafb8c67ac2
  0x00007fafb8c67ab0: sub     $0x8,%rsp
  0x00007fafb8c67ab4: callq   0x7fafd7d7ef30
  0x00007fafb8c67ab9: add     $0x8,%rsp
  0x00007fafb8c67abd: jmpq    0x7fafb8c67ac7
  0x00007fafb8c67ac2: callq   0x7fafd7d7ef30
  0x00007fafb8c67ac7: movabs  $0x0,%r10
  0x00007fafb8c67ad1: mov     %r10,0x320(%r15)
  0x00007fafb8c67ad8: movabs  $0x0,%r10
  0x00007fafb8c67ae2: mov     %r10,0x330(%r15)
  0x00007fafb8c67ae9: movabs  $0x0,%r10
  0x00007fafb8c67af3: mov     %r10,0x328(%r15)
  0x00007fafb8c67afa: vzeroupper
  0x00007fafb8c67afd: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c67b05: je      0x7fafb8c67b10
  0x00007fafb8c67b0b: jmpq    0x7fafb8c5c780
  0x00007fafb8c67b10: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c67b14: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c67b18: retq
  0x00007fafb8c67b19: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c67b1e: sub     $0x80,%rsp
  0x00007fafb8c67b25: mov     %rax,0x78(%rsp)
  0x00007fafb8c67b2a: mov     %rcx,0x70(%rsp)
  0x00007fafb8c67b2f: mov     %rdx,0x68(%rsp)
  0x00007fafb8c67b34: mov     %rbx,0x60(%rsp)
  0x00007fafb8c67b39: mov     %rbp,0x50(%rsp)
  0x00007fafb8c67b3e: mov     %rsi,0x48(%rsp)
  0x00007fafb8c67b43: mov     %rdi,0x40(%rsp)
  0x00007fafb8c67b48: mov     %r8,0x38(%rsp)
  0x00007fafb8c67b4d: mov     %r9,0x30(%rsp)
  0x00007fafb8c67b52: mov     %r10,0x28(%rsp)
  0x00007fafb8c67b57: mov     %r11,0x20(%rsp)
  0x00007fafb8c67b5c: mov     %r12,0x18(%rsp)
  0x00007fafb8c67b61: mov     %r13,0x10(%rsp)
  0x00007fafb8c67b66: mov     %r14,0x8(%rsp)
  0x00007fafb8c67b6b: mov     %r15,(%rsp)
  0x00007fafb8c67b6f: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c67b79: movabs  $0x7fafb8c67b19,%rsi
  0x00007fafb8c67b83: mov     %rsp,%rdx
  0x00007fafb8c67b86: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c67b8a: callq   0x7fafd7fdd230
  0x00007fafb8c67b8f: hlt
  0x00007fafb8c67b90: leave
  0x00007fafb8c67b91: pop     %rsi
  0x00007fafb8c67b92: mov     %rbx,%rsp
  0x00007fafb8c67b95: jmpq    %rsi
  0x00007fafb8c67b97: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c67b9b: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c67b9f: mov     0xffffffffffffffb8(%rbp),%rsp
  0x00007fafb8c67ba3: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c67bab: mov     0x4b0(%r15),%rcx
  0x00007fafb8c67bb2: mov     0x80(%rcx),%eax
  0x00007fafb8c67bb8: movl    $0xb,0x78(%rcx)
  0x00007fafb8c67bbf: movl    $0x0,0x80(%rcx)
  0x00007fafb8c67bc9: movl    $0xb,0x78(%rcx)
  0x00007fafb8c67bd0: movabs  $0x0,%r10
  0x00007fafb8c67bda: mov     %r10,0x80(%rcx)
  0x00007fafb8c67be1: mov     0x4b0(%r15),%rcx
  0x00007fafb8c67be8: movl    $0x0,0x74(%rcx)
  0x00007fafb8c67bef: mov     0x3dd(%r15),%bl
  0x00007fafb8c67bf6: movb    $0x0,0x3dd(%r15)
  0x00007fafb8c67bfe: mov     0xffffffffffffffe8(%rbp),%rcx
  0x00007fafb8c67c02: mov     0x20(%rcx),%ecx
  0x00007fafb8c67c05: test    $0x20,%ecx
  0x00007fafb8c67c0b: je      0x7fafb8c67d1e
  0x00007fafb8c67c11: testb   $0xff,%bl
  0x00007fafb8c67c14: jne     0x7fafb8c67e31
  0x00007fafb8c67c1a: push    %rax
  0x00007fafb8c67c1b: lea     0xffffffffffffffa8(%rbp),%rsi
  0x00007fafb8c67c1f: mov     0x8(%rsi),%rax
  0x00007fafb8c67c23: test    %rax,%rax
  0x00007fafb8c67c26: jne     0x7fafb8c67c38
  0x00007fafb8c67c2c: mov     (%rsp),%eax
  0x00007fafb8c67c2f: add     $0x8,%rsp
  0x00007fafb8c67c33: jmpq    0x7fafb8c67d1e
  0x00007fafb8c67c38: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c67c3c: lea     (%rsi),%rax
  0x00007fafb8c67c3f: mov     0x8(%rsi),%rcx
  0x00007fafb8c67c43: movq    $0x0,0x8(%rsi)
  0x00007fafb8c67c4b: mov     (%rcx),%rdx
  0x00007fafb8c67c4e: and     $0x7,%rdx
  0x00007fafb8c67c52: cmp     $0x5,%rdx
  0x00007fafb8c67c56: je      0x7fafb8c67d13
  0x00007fafb8c67c5c: mov     (%rax),%rdx
  0x00007fafb8c67c5f: test    %rdx,%rdx
  0x00007fafb8c67c62: je      0x7fafb8c67d13
  0x00007fafb8c67c68: lock cmpxchg %rdx,(%rcx)
  0x00007fafb8c67c6d: je      0x7fafb8c67d13
  0x00007fafb8c67c73: mov     %rcx,0x8(%rsi)
  0x00007fafb8c67c77: callq   0x7fafb8c67c81
  0x00007fafb8c67c7c: jmpq    0x7fafb8c67d13
  0x00007fafb8c67c81: lea     0x8(%rsp),%rax
  0x00007fafb8c67c86: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c67c8a: mov     %r15,%rdi
  0x00007fafb8c67c8d: vzeroupper
  0x00007fafb8c67c90: mov     %rbp,0x330(%r15)
  0x00007fafb8c67c97: mov     %rax,0x320(%r15)
  0x00007fafb8c67c9e: test    $0xf,%esp
  0x00007fafb8c67ca4: je      0x7fafb8c67cbc
  0x00007fafb8c67caa: sub     $0x8,%rsp
  0x00007fafb8c67cae: callq   0x7fafd7d82470
  0x00007fafb8c67cb3: add     $0x8,%rsp
  0x00007fafb8c67cb7: jmpq    0x7fafb8c67cc1
  0x00007fafb8c67cbc: callq   0x7fafd7d82470
  0x00007fafb8c67cc1: movabs  $0x0,%r10
  0x00007fafb8c67ccb: mov     %r10,0x320(%r15)
  0x00007fafb8c67cd2: movabs  $0x0,%r10
  0x00007fafb8c67cdc: mov     %r10,0x330(%r15)
  0x00007fafb8c67ce3: movabs  $0x0,%r10
  0x00007fafb8c67ced: mov     %r10,0x328(%r15)
  0x00007fafb8c67cf4: vzeroupper
  0x00007fafb8c67cf7: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c67cff: je      0x7fafb8c67d0a
  0x00007fafb8c67d05: jmpq    0x7fafb8c5c780
  0x00007fafb8c67d0a: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c67d0e: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c67d12: retq
  0x00007fafb8c67d13: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c67d17: mov     (%rsp),%eax
  0x00007fafb8c67d1a: add     $0x8,%rsp
  0x00007fafb8c67d1e: mov     0xffffffffffffffb8(%rbp),%rsi
  0x00007fafb8c67d22: lea     0xffffffffffffffb8(%rbp),%rbx
  0x00007fafb8c67d26: jmpq    0x7fafb8c67e2c
  0x00007fafb8c67d2b: push    %rax
  0x00007fafb8c67d2c: mov     %rsi,%rsi
  0x00007fafb8c67d2f: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c67d33: lea     (%rsi),%rax
  0x00007fafb8c67d36: mov     0x8(%rsi),%rcx
  0x00007fafb8c67d3a: movq    $0x0,0x8(%rsi)
  0x00007fafb8c67d42: mov     (%rcx),%rdx
  0x00007fafb8c67d45: and     $0x7,%rdx
  0x00007fafb8c67d49: cmp     $0x5,%rdx
  0x00007fafb8c67d4d: je      0x7fafb8c67e0a
  0x00007fafb8c67d53: mov     (%rax),%rdx
  0x00007fafb8c67d56: test    %rdx,%rdx
  0x00007fafb8c67d59: je      0x7fafb8c67e0a
  0x00007fafb8c67d5f: lock cmpxchg %rdx,(%rcx)
  0x00007fafb8c67d64: je      0x7fafb8c67e0a
  0x00007fafb8c67d6a: mov     %rcx,0x8(%rsi)
  0x00007fafb8c67d6e: callq   0x7fafb8c67d78
  0x00007fafb8c67d73: jmpq    0x7fafb8c67e0a
  0x00007fafb8c67d78: lea     0x8(%rsp),%rax
  0x00007fafb8c67d7d: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c67d81: mov     %r15,%rdi
  0x00007fafb8c67d84: vzeroupper
  0x00007fafb8c67d87: mov     %rbp,0x330(%r15)
  0x00007fafb8c67d8e: mov     %rax,0x320(%r15)
  0x00007fafb8c67d95: test    $0xf,%esp
  0x00007fafb8c67d9b: je      0x7fafb8c67db3
  0x00007fafb8c67da1: sub     $0x8,%rsp
  0x00007fafb8c67da5: callq   0x7fafd7d82470
  0x00007fafb8c67daa: add     $0x8,%rsp
  0x00007fafb8c67dae: jmpq    0x7fafb8c67db8
  0x00007fafb8c67db3: callq   0x7fafd7d82470
  0x00007fafb8c67db8: movabs  $0x0,%r10
  0x00007fafb8c67dc2: mov     %r10,0x320(%r15)
  0x00007fafb8c67dc9: movabs  $0x0,%r10
  0x00007fafb8c67dd3: mov     %r10,0x330(%r15)
  0x00007fafb8c67dda: movabs  $0x0,%r10
  0x00007fafb8c67de4: mov     %r10,0x328(%r15)
  0x00007fafb8c67deb: vzeroupper
  0x00007fafb8c67dee: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c67df6: je      0x7fafb8c67e01
  0x00007fafb8c67dfc: jmpq    0x7fafb8c5c780
  0x00007fafb8c67e01: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c67e05: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c67e09: retq
  0x00007fafb8c67e0a: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c67e0e: mov     (%rsp),%eax
  0x00007fafb8c67e11: add     $0x8,%rsp
  0x00007fafb8c67e15: jmpq    0x7fafb8c67d1e
  0x00007fafb8c67e1a: cmpq    $0x0,0x8(%rsi)
  0x00007fafb8c67e22: jne     0x7fafb8c67d2b
  0x00007fafb8c67e28: add     $0x10,%rsi
  0x00007fafb8c67e2c: cmp     %rbx,%rsi
  0x00007fafb8c67e2f: jne     0x7fafb8c67e1a
  0x00007fafb8c67e31: cmpb    $0x0,0x1fd0fe5f(%rip)
  0x00007fafb8c67e38: je      0x7fafb8c67e70
  0x00007fafb8c67e3e: push    %rax
  0x00007fafb8c67e3f: mov     0xffffffffffffffe8(%rbp),%rsi
  0x00007fafb8c67e43: mov     %r15,%rdi
  0x00007fafb8c67e46: test    $0xf,%esp
  0x00007fafb8c67e4c: je      0x7fafb8c67e64
  0x00007fafb8c67e52: sub     $0x8,%rsp
  0x00007fafb8c67e56: callq   0x7fafd81e7140
  0x00007fafb8c67e5b: add     $0x8,%rsp
  0x00007fafb8c67e5f: jmpq    0x7fafb8c67e69
  0x00007fafb8c67e64: callq   0x7fafd81e7140
  0x00007fafb8c67e69: mov     (%rsp),%eax
  0x00007fafb8c67e6c: add     $0x8,%rsp
  0x00007fafb8c67e70: mov     0xfffffffffffffff8(%rbp),%rbx
  0x00007fafb8c67e74: cmpl    $0x3,0x408(%r15)
  0x00007fafb8c67e7f: je      0x7fafb8c67fcb
  0x00007fafb8c67e85: cmp     0x418(%r15),%rbx
  0x00007fafb8c67e8c: jle     0x7fafb8c67fcb
  0x00007fafb8c67e92: mov     %r15,%rdi
  0x00007fafb8c67e95: test    $0xf,%esp
  0x00007fafb8c67e9b: je      0x7fafb8c67eb3
  0x00007fafb8c67ea1: sub     $0x8,%rsp
  0x00007fafb8c67ea5: callq   0x7fafd81ee2f0
  0x00007fafb8c67eaa: add     $0x8,%rsp
  0x00007fafb8c67eae: jmpq    0x7fafb8c67eb8
  0x00007fafb8c67eb3: callq   0x7fafd81ee2f0
  0x00007fafb8c67eb8: callq   0x7fafb8c67ec2
  0x00007fafb8c67ebd: jmpq    0x7fafb8c67f54
  0x00007fafb8c67ec2: lea     0x8(%rsp),%rax
  0x00007fafb8c67ec7: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c67ecb: mov     %r15,%rdi
  0x00007fafb8c67ece: vzeroupper
  0x00007fafb8c67ed1: mov     %rbp,0x330(%r15)
  0x00007fafb8c67ed8: mov     %rax,0x320(%r15)
  0x00007fafb8c67edf: test    $0xf,%esp
  0x00007fafb8c67ee5: je      0x7fafb8c67efd
  0x00007fafb8c67eeb: sub     $0x8,%rsp
  0x00007fafb8c67eef: callq   0x7fafd7d7ef30
  0x00007fafb8c67ef4: add     $0x8,%rsp
  0x00007fafb8c67ef8: jmpq    0x7fafb8c67f02
  0x00007fafb8c67efd: callq   0x7fafd7d7ef30
  0x00007fafb8c67f02: movabs  $0x0,%r10
  0x00007fafb8c67f0c: mov     %r10,0x320(%r15)
  0x00007fafb8c67f13: movabs  $0x0,%r10
  0x00007fafb8c67f1d: mov     %r10,0x330(%r15)
  0x00007fafb8c67f24: movabs  $0x0,%r10
  0x00007fafb8c67f2e: mov     %r10,0x328(%r15)
  0x00007fafb8c67f35: vzeroupper
  0x00007fafb8c67f38: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c67f40: je      0x7fafb8c67f4b
  0x00007fafb8c67f46: jmpq    0x7fafb8c5c780
  0x00007fafb8c67f4b: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c67f4f: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c67f53: retq
  0x00007fafb8c67f54: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c67f59: sub     $0x80,%rsp
  0x00007fafb8c67f60: mov     %rax,0x78(%rsp)
  0x00007fafb8c67f65: mov     %rcx,0x70(%rsp)
  0x00007fafb8c67f6a: mov     %rdx,0x68(%rsp)
  0x00007fafb8c67f6f: mov     %rbx,0x60(%rsp)
  0x00007fafb8c67f74: mov     %rbp,0x50(%rsp)
  0x00007fafb8c67f79: mov     %rsi,0x48(%rsp)
  0x00007fafb8c67f7e: mov     %rdi,0x40(%rsp)
  0x00007fafb8c67f83: mov     %r8,0x38(%rsp)
  0x00007fafb8c67f88: mov     %r9,0x30(%rsp)
  0x00007fafb8c67f8d: mov     %r10,0x28(%rsp)
  0x00007fafb8c67f92: mov     %r11,0x20(%rsp)
  0x00007fafb8c67f97: mov     %r12,0x18(%rsp)
  0x00007fafb8c67f9c: mov     %r13,0x10(%rsp)
  0x00007fafb8c67fa1: mov     %r14,0x8(%rsp)
  0x00007fafb8c67fa6: mov     %r15,(%rsp)
  0x00007fafb8c67faa: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c67fb4: movabs  $0x7fafb8c67f54,%rsi
  0x00007fafb8c67fbe: mov     %rsp,%rdx
  0x00007fafb8c67fc1: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c67fc5: callq   0x7fafd7fdd230
  0x00007fafb8c67fca: hlt
  0x00007fafb8c67fcb: leave
  0x00007fafb8c67fcc: pop     %rsi
  0x00007fafb8c67fcd: mov     %rbx,%rsp
  0x00007fafb8c67fd0: jmpq    %rsi
  0x00007fafb8c67fd2: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c67fd6: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c67fda: mov     0xffffffffffffffb8(%rbp),%rsp
  0x00007fafb8c67fde: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c67fe6: mov     0x4b0(%r15),%rcx
  0x00007fafb8c67fed: mov     0x80(%rcx),%eax
  0x00007fafb8c67ff3: movl    $0xb,0x78(%rcx)
  0x00007fafb8c67ffa: movl    $0x0,0x80(%rcx)
  0x00007fafb8c68004: movl    $0xb,0x78(%rcx)
  0x00007fafb8c6800b: movabs  $0x0,%r10
  0x00007fafb8c68015: mov     %r10,0x80(%rcx)
  0x00007fafb8c6801c: mov     0x4b0(%r15),%rcx
  0x00007fafb8c68023: movl    $0x0,0x74(%rcx)
  0x00007fafb8c6802a: mov     0x3dd(%r15),%bl
  0x00007fafb8c68031: movb    $0x0,0x3dd(%r15)
  0x00007fafb8c68039: mov     0xffffffffffffffe8(%rbp),%rcx
  0x00007fafb8c6803d: mov     0x20(%rcx),%ecx
  0x00007fafb8c68040: test    $0x20,%ecx
  0x00007fafb8c68046: je      0x7fafb8c68159
  0x00007fafb8c6804c: testb   $0xff,%bl
  0x00007fafb8c6804f: jne     0x7fafb8c6826c
  0x00007fafb8c68055: push    %rax
  0x00007fafb8c68056: lea     0xffffffffffffffa8(%rbp),%rsi
  0x00007fafb8c6805a: mov     0x8(%rsi),%rax
  0x00007fafb8c6805e: test    %rax,%rax
  0x00007fafb8c68061: jne     0x7fafb8c68073
  0x00007fafb8c68067: mov     (%rsp),%eax
  0x00007fafb8c6806a: add     $0x8,%rsp
  0x00007fafb8c6806e: jmpq    0x7fafb8c68159
  0x00007fafb8c68073: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c68077: lea     (%rsi),%rax
  0x00007fafb8c6807a: mov     0x8(%rsi),%rcx
  0x00007fafb8c6807e: movq    $0x0,0x8(%rsi)
  0x00007fafb8c68086: mov     (%rcx),%rdx
  0x00007fafb8c68089: and     $0x7,%rdx
  0x00007fafb8c6808d: cmp     $0x5,%rdx
  0x00007fafb8c68091: je      0x7fafb8c6814e
  0x00007fafb8c68097: mov     (%rax),%rdx
  0x00007fafb8c6809a: test    %rdx,%rdx
  0x00007fafb8c6809d: je      0x7fafb8c6814e
  0x00007fafb8c680a3: lock cmpxchg %rdx,(%rcx)
  0x00007fafb8c680a8: je      0x7fafb8c6814e
  0x00007fafb8c680ae: mov     %rcx,0x8(%rsi)
  0x00007fafb8c680b2: callq   0x7fafb8c680bc
  0x00007fafb8c680b7: jmpq    0x7fafb8c6814e
  0x00007fafb8c680bc: lea     0x8(%rsp),%rax
  0x00007fafb8c680c1: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c680c5: mov     %r15,%rdi
  0x00007fafb8c680c8: vzeroupper
  0x00007fafb8c680cb: mov     %rbp,0x330(%r15)
  0x00007fafb8c680d2: mov     %rax,0x320(%r15)
  0x00007fafb8c680d9: test    $0xf,%esp
  0x00007fafb8c680df: je      0x7fafb8c680f7
  0x00007fafb8c680e5: sub     $0x8,%rsp
  0x00007fafb8c680e9: callq   0x7fafd7d82470
  0x00007fafb8c680ee: add     $0x8,%rsp
  0x00007fafb8c680f2: jmpq    0x7fafb8c680fc
  0x00007fafb8c680f7: callq   0x7fafd7d82470
  0x00007fafb8c680fc: movabs  $0x0,%r10
  0x00007fafb8c68106: mov     %r10,0x320(%r15)
  0x00007fafb8c6810d: movabs  $0x0,%r10
  0x00007fafb8c68117: mov     %r10,0x330(%r15)
  0x00007fafb8c6811e: movabs  $0x0,%r10
  0x00007fafb8c68128: mov     %r10,0x328(%r15)
  0x00007fafb8c6812f: vzeroupper
  0x00007fafb8c68132: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c6813a: je      0x7fafb8c68145
  0x00007fafb8c68140: jmpq    0x7fafb8c5c780
  0x00007fafb8c68145: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c68149: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c6814d: retq
  0x00007fafb8c6814e: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c68152: mov     (%rsp),%eax
  0x00007fafb8c68155: add     $0x8,%rsp
  0x00007fafb8c68159: mov     0xffffffffffffffb8(%rbp),%rsi
  0x00007fafb8c6815d: lea     0xffffffffffffffb8(%rbp),%rbx
  0x00007fafb8c68161: jmpq    0x7fafb8c68267
  0x00007fafb8c68166: push    %rax
  0x00007fafb8c68167: mov     %rsi,%rsi
  0x00007fafb8c6816a: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c6816e: lea     (%rsi),%rax
  0x00007fafb8c68171: mov     0x8(%rsi),%rcx
  0x00007fafb8c68175: movq    $0x0,0x8(%rsi)
  0x00007fafb8c6817d: mov     (%rcx),%rdx
  0x00007fafb8c68180: and     $0x7,%rdx
  0x00007fafb8c68184: cmp     $0x5,%rdx
  0x00007fafb8c68188: je      0x7fafb8c68245
  0x00007fafb8c6818e: mov     (%rax),%rdx
  0x00007fafb8c68191: test    %rdx,%rdx
  0x00007fafb8c68194: je      0x7fafb8c68245
  0x00007fafb8c6819a: lock cmpxchg %rdx,(%rcx)
  0x00007fafb8c6819f: je      0x7fafb8c68245
  0x00007fafb8c681a5: mov     %rcx,0x8(%rsi)
  0x00007fafb8c681a9: callq   0x7fafb8c681b3
  0x00007fafb8c681ae: jmpq    0x7fafb8c68245
  0x00007fafb8c681b3: lea     0x8(%rsp),%rax
  0x00007fafb8c681b8: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c681bc: mov     %r15,%rdi
  0x00007fafb8c681bf: vzeroupper
  0x00007fafb8c681c2: mov     %rbp,0x330(%r15)
  0x00007fafb8c681c9: mov     %rax,0x320(%r15)
  0x00007fafb8c681d0: test    $0xf,%esp
  0x00007fafb8c681d6: je      0x7fafb8c681ee
  0x00007fafb8c681dc: sub     $0x8,%rsp
  0x00007fafb8c681e0: callq   0x7fafd7d82470
  0x00007fafb8c681e5: add     $0x8,%rsp
  0x00007fafb8c681e9: jmpq    0x7fafb8c681f3
  0x00007fafb8c681ee: callq   0x7fafd7d82470
  0x00007fafb8c681f3: movabs  $0x0,%r10
  0x00007fafb8c681fd: mov     %r10,0x320(%r15)
  0x00007fafb8c68204: movabs  $0x0,%r10
  0x00007fafb8c6820e: mov     %r10,0x330(%r15)
  0x00007fafb8c68215: movabs  $0x0,%r10
  0x00007fafb8c6821f: mov     %r10,0x328(%r15)
  0x00007fafb8c68226: vzeroupper
  0x00007fafb8c68229: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c68231: je      0x7fafb8c6823c
  0x00007fafb8c68237: jmpq    0x7fafb8c5c780
  0x00007fafb8c6823c: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c68240: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c68244: retq
  0x00007fafb8c68245: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c68249: mov     (%rsp),%eax
  0x00007fafb8c6824c: add     $0x8,%rsp
  0x00007fafb8c68250: jmpq    0x7fafb8c68159
  0x00007fafb8c68255: cmpq    $0x0,0x8(%rsi)
  0x00007fafb8c6825d: jne     0x7fafb8c68166
  0x00007fafb8c68263: add     $0x10,%rsi
  0x00007fafb8c68267: cmp     %rbx,%rsi
  0x00007fafb8c6826a: jne     0x7fafb8c68255
  0x00007fafb8c6826c: cmpb    $0x0,0x1fd0fa24(%rip)
  0x00007fafb8c68273: je      0x7fafb8c682ab
  0x00007fafb8c68279: push    %rax
  0x00007fafb8c6827a: mov     0xffffffffffffffe8(%rbp),%rsi
  0x00007fafb8c6827e: mov     %r15,%rdi
  0x00007fafb8c68281: test    $0xf,%esp
  0x00007fafb8c68287: je      0x7fafb8c6829f
  0x00007fafb8c6828d: sub     $0x8,%rsp
  0x00007fafb8c68291: callq   0x7fafd81e7140
  0x00007fafb8c68296: add     $0x8,%rsp
  0x00007fafb8c6829a: jmpq    0x7fafb8c682a4
  0x00007fafb8c6829f: callq   0x7fafd81e7140
  0x00007fafb8c682a4: mov     (%rsp),%eax
  0x00007fafb8c682a7: add     $0x8,%rsp
  0x00007fafb8c682ab: mov     0xfffffffffffffff8(%rbp),%rbx
  0x00007fafb8c682af: cmpl    $0x3,0x408(%r15)
  0x00007fafb8c682ba: je      0x7fafb8c68406
  0x00007fafb8c682c0: cmp     0x418(%r15),%rbx
  0x00007fafb8c682c7: jle     0x7fafb8c68406
  0x00007fafb8c682cd: mov     %r15,%rdi
  0x00007fafb8c682d0: test    $0xf,%esp
  0x00007fafb8c682d6: je      0x7fafb8c682ee
  0x00007fafb8c682dc: sub     $0x8,%rsp
  0x00007fafb8c682e0: callq   0x7fafd81ee2f0
  0x00007fafb8c682e5: add     $0x8,%rsp
  0x00007fafb8c682e9: jmpq    0x7fafb8c682f3
  0x00007fafb8c682ee: callq   0x7fafd81ee2f0
  0x00007fafb8c682f3: callq   0x7fafb8c682fd
  0x00007fafb8c682f8: jmpq    0x7fafb8c6838f
  0x00007fafb8c682fd: lea     0x8(%rsp),%rax
  0x00007fafb8c68302: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c68306: mov     %r15,%rdi
  0x00007fafb8c68309: vzeroupper
  0x00007fafb8c6830c: mov     %rbp,0x330(%r15)
  0x00007fafb8c68313: mov     %rax,0x320(%r15)
  0x00007fafb8c6831a: test    $0xf,%esp
  0x00007fafb8c68320: je      0x7fafb8c68338
  0x00007fafb8c68326: sub     $0x8,%rsp
  0x00007fafb8c6832a: callq   0x7fafd7d7ef30
  0x00007fafb8c6832f: add     $0x8,%rsp
  0x00007fafb8c68333: jmpq    0x7fafb8c6833d
  0x00007fafb8c68338: callq   0x7fafd7d7ef30
  0x00007fafb8c6833d: movabs  $0x0,%r10
  0x00007fafb8c68347: mov     %r10,0x320(%r15)
  0x00007fafb8c6834e: movabs  $0x0,%r10
  0x00007fafb8c68358: mov     %r10,0x330(%r15)
  0x00007fafb8c6835f: movabs  $0x0,%r10
  0x00007fafb8c68369: mov     %r10,0x328(%r15)
  0x00007fafb8c68370: vzeroupper
  0x00007fafb8c68373: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c6837b: je      0x7fafb8c68386
  0x00007fafb8c68381: jmpq    0x7fafb8c5c780
  0x00007fafb8c68386: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6838a: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c6838e: retq
  0x00007fafb8c6838f: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c68394: sub     $0x80,%rsp
  0x00007fafb8c6839b: mov     %rax,0x78(%rsp)
  0x00007fafb8c683a0: mov     %rcx,0x70(%rsp)
  0x00007fafb8c683a5: mov     %rdx,0x68(%rsp)
  0x00007fafb8c683aa: mov     %rbx,0x60(%rsp)
  0x00007fafb8c683af: mov     %rbp,0x50(%rsp)
  0x00007fafb8c683b4: mov     %rsi,0x48(%rsp)
  0x00007fafb8c683b9: mov     %rdi,0x40(%rsp)
  0x00007fafb8c683be: mov     %r8,0x38(%rsp)
  0x00007fafb8c683c3: mov     %r9,0x30(%rsp)
  0x00007fafb8c683c8: mov     %r10,0x28(%rsp)
  0x00007fafb8c683cd: mov     %r11,0x20(%rsp)
  0x00007fafb8c683d2: mov     %r12,0x18(%rsp)
  0x00007fafb8c683d7: mov     %r13,0x10(%rsp)
  0x00007fafb8c683dc: mov     %r14,0x8(%rsp)
  0x00007fafb8c683e1: mov     %r15,(%rsp)
  0x00007fafb8c683e5: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c683ef: movabs  $0x7fafb8c6838f,%rsi
  0x00007fafb8c683f9: mov     %rsp,%rdx
  0x00007fafb8c683fc: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c68400: callq   0x7fafd7fdd230
  0x00007fafb8c68405: hlt
  0x00007fafb8c68406: leave
  0x00007fafb8c68407: pop     %rsi
  0x00007fafb8c68408: mov     %rbx,%rsp
  0x00007fafb8c6840b: jmpq    %rsi
  0x00007fafb8c6840d: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c68411: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c68415: mov     0xffffffffffffffb8(%rbp),%rsp
  0x00007fafb8c68419: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c68421: mov     0x4b0(%r15),%rcx
  0x00007fafb8c68428: mov     0x80(%rcx),%eax
  0x00007fafb8c6842e: movl    $0xb,0x78(%rcx)
  0x00007fafb8c68435: movl    $0x0,0x80(%rcx)
  0x00007fafb8c6843f: movl    $0xb,0x78(%rcx)
  0x00007fafb8c68446: movabs  $0x0,%r10
  0x00007fafb8c68450: mov     %r10,0x80(%rcx)
  0x00007fafb8c68457: mov     0x4b0(%r15),%rcx
  0x00007fafb8c6845e: movl    $0x0,0x74(%rcx)
  0x00007fafb8c68465: mov     0x3dd(%r15),%bl
  0x00007fafb8c6846c: movb    $0x0,0x3dd(%r15)
  0x00007fafb8c68474: mov     0xffffffffffffffe8(%rbp),%rcx
  0x00007fafb8c68478: mov     0x20(%rcx),%ecx
  0x00007fafb8c6847b: test    $0x20,%ecx
  0x00007fafb8c68481: je      0x7fafb8c68594
  0x00007fafb8c68487: testb   $0xff,%bl
  0x00007fafb8c6848a: jne     0x7fafb8c686a7
  0x00007fafb8c68490: push    %rax
  0x00007fafb8c68491: lea     0xffffffffffffffa8(%rbp),%rsi
  0x00007fafb8c68495: mov     0x8(%rsi),%rax
  0x00007fafb8c68499: test    %rax,%rax
  0x00007fafb8c6849c: jne     0x7fafb8c684ae
  0x00007fafb8c684a2: mov     (%rsp),%eax
  0x00007fafb8c684a5: add     $0x8,%rsp
  0x00007fafb8c684a9: jmpq    0x7fafb8c68594
  0x00007fafb8c684ae: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c684b2: lea     (%rsi),%rax
  0x00007fafb8c684b5: mov     0x8(%rsi),%rcx
  0x00007fafb8c684b9: movq    $0x0,0x8(%rsi)
  0x00007fafb8c684c1: mov     (%rcx),%rdx
  0x00007fafb8c684c4: and     $0x7,%rdx
  0x00007fafb8c684c8: cmp     $0x5,%rdx
  0x00007fafb8c684cc: je      0x7fafb8c68589
  0x00007fafb8c684d2: mov     (%rax),%rdx
  0x00007fafb8c684d5: test    %rdx,%rdx
  0x00007fafb8c684d8: je      0x7fafb8c68589
  0x00007fafb8c684de: lock cmpxchg %rdx,(%rcx)
  0x00007fafb8c684e3: je      0x7fafb8c68589
  0x00007fafb8c684e9: mov     %rcx,0x8(%rsi)
  0x00007fafb8c684ed: callq   0x7fafb8c684f7
  0x00007fafb8c684f2: jmpq    0x7fafb8c68589
  0x00007fafb8c684f7: lea     0x8(%rsp),%rax
  0x00007fafb8c684fc: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c68500: mov     %r15,%rdi
  0x00007fafb8c68503: vzeroupper
  0x00007fafb8c68506: mov     %rbp,0x330(%r15)
  0x00007fafb8c6850d: mov     %rax,0x320(%r15)
  0x00007fafb8c68514: test    $0xf,%esp
  0x00007fafb8c6851a: je      0x7fafb8c68532
  0x00007fafb8c68520: sub     $0x8,%rsp
  0x00007fafb8c68524: callq   0x7fafd7d82470
  0x00007fafb8c68529: add     $0x8,%rsp
  0x00007fafb8c6852d: jmpq    0x7fafb8c68537
  0x00007fafb8c68532: callq   0x7fafd7d82470
  0x00007fafb8c68537: movabs  $0x0,%r10
  0x00007fafb8c68541: mov     %r10,0x320(%r15)
  0x00007fafb8c68548: movabs  $0x0,%r10
  0x00007fafb8c68552: mov     %r10,0x330(%r15)
  0x00007fafb8c68559: movabs  $0x0,%r10
  0x00007fafb8c68563: mov     %r10,0x328(%r15)
  0x00007fafb8c6856a: vzeroupper
  0x00007fafb8c6856d: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c68575: je      0x7fafb8c68580
  0x00007fafb8c6857b: jmpq    0x7fafb8c5c780
  0x00007fafb8c68580: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c68584: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c68588: retq
  0x00007fafb8c68589: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6858d: mov     (%rsp),%eax
  0x00007fafb8c68590: add     $0x8,%rsp
  0x00007fafb8c68594: mov     0xffffffffffffffb8(%rbp),%rsi
  0x00007fafb8c68598: lea     0xffffffffffffffb8(%rbp),%rbx
  0x00007fafb8c6859c: jmpq    0x7fafb8c686a2
  0x00007fafb8c685a1: push    %rax
  0x00007fafb8c685a2: mov     %rsi,%rsi
  0x00007fafb8c685a5: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c685a9: lea     (%rsi),%rax
  0x00007fafb8c685ac: mov     0x8(%rsi),%rcx
  0x00007fafb8c685b0: movq    $0x0,0x8(%rsi)
  0x00007fafb8c685b8: mov     (%rcx),%rdx
  0x00007fafb8c685bb: and     $0x7,%rdx
  0x00007fafb8c685bf: cmp     $0x5,%rdx
  0x00007fafb8c685c3: je      0x7fafb8c68680
  0x00007fafb8c685c9: mov     (%rax),%rdx
  0x00007fafb8c685cc: test    %rdx,%rdx
  0x00007fafb8c685cf: je      0x7fafb8c68680
  0x00007fafb8c685d5: lock cmpxchg %rdx,(%rcx)
  0x00007fafb8c685da: je      0x7fafb8c68680
  0x00007fafb8c685e0: mov     %rcx,0x8(%rsi)
  0x00007fafb8c685e4: callq   0x7fafb8c685ee
  0x00007fafb8c685e9: jmpq    0x7fafb8c68680
  0x00007fafb8c685ee: lea     0x8(%rsp),%rax
  0x00007fafb8c685f3: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c685f7: mov     %r15,%rdi
  0x00007fafb8c685fa: vzeroupper
  0x00007fafb8c685fd: mov     %rbp,0x330(%r15)
  0x00007fafb8c68604: mov     %rax,0x320(%r15)
  0x00007fafb8c6860b: test    $0xf,%esp
  0x00007fafb8c68611: je      0x7fafb8c68629
  0x00007fafb8c68617: sub     $0x8,%rsp
  0x00007fafb8c6861b: callq   0x7fafd7d82470
  0x00007fafb8c68620: add     $0x8,%rsp
  0x00007fafb8c68624: jmpq    0x7fafb8c6862e
  0x00007fafb8c68629: callq   0x7fafd7d82470
  0x00007fafb8c6862e: movabs  $0x0,%r10
  0x00007fafb8c68638: mov     %r10,0x320(%r15)
  0x00007fafb8c6863f: movabs  $0x0,%r10
  0x00007fafb8c68649: mov     %r10,0x330(%r15)
  0x00007fafb8c68650: movabs  $0x0,%r10
  0x00007fafb8c6865a: mov     %r10,0x328(%r15)
  0x00007fafb8c68661: vzeroupper
  0x00007fafb8c68664: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c6866c: je      0x7fafb8c68677
  0x00007fafb8c68672: jmpq    0x7fafb8c5c780
  0x00007fafb8c68677: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6867b: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c6867f: retq
  0x00007fafb8c68680: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c68684: mov     (%rsp),%eax
  0x00007fafb8c68687: add     $0x8,%rsp
  0x00007fafb8c6868b: jmpq    0x7fafb8c68594
  0x00007fafb8c68690: cmpq    $0x0,0x8(%rsi)
  0x00007fafb8c68698: jne     0x7fafb8c685a1
  0x00007fafb8c6869e: add     $0x10,%rsi
  0x00007fafb8c686a2: cmp     %rbx,%rsi
  0x00007fafb8c686a5: jne     0x7fafb8c68690
  0x00007fafb8c686a7: cmpb    $0x0,0x1fd0f5e9(%rip)
  0x00007fafb8c686ae: je      0x7fafb8c686e6
  0x00007fafb8c686b4: push    %rax
  0x00007fafb8c686b5: mov     0xffffffffffffffe8(%rbp),%rsi
  0x00007fafb8c686b9: mov     %r15,%rdi
  0x00007fafb8c686bc: test    $0xf,%esp
  0x00007fafb8c686c2: je      0x7fafb8c686da
  0x00007fafb8c686c8: sub     $0x8,%rsp
  0x00007fafb8c686cc: callq   0x7fafd81e7140
  0x00007fafb8c686d1: add     $0x8,%rsp
  0x00007fafb8c686d5: jmpq    0x7fafb8c686df
  0x00007fafb8c686da: callq   0x7fafd81e7140
  0x00007fafb8c686df: mov     (%rsp),%eax
  0x00007fafb8c686e2: add     $0x8,%rsp
  0x00007fafb8c686e6: mov     0xfffffffffffffff8(%rbp),%rbx
  0x00007fafb8c686ea: cmpl    $0x3,0x408(%r15)
  0x00007fafb8c686f5: je      0x7fafb8c68841
  0x00007fafb8c686fb: cmp     0x418(%r15),%rbx
  0x00007fafb8c68702: jle     0x7fafb8c68841
  0x00007fafb8c68708: mov     %r15,%rdi
  0x00007fafb8c6870b: test    $0xf,%esp
  0x00007fafb8c68711: je      0x7fafb8c68729
  0x00007fafb8c68717: sub     $0x8,%rsp
  0x00007fafb8c6871b: callq   0x7fafd81ee2f0
  0x00007fafb8c68720: add     $0x8,%rsp
  0x00007fafb8c68724: jmpq    0x7fafb8c6872e
  0x00007fafb8c68729: callq   0x7fafd81ee2f0
  0x00007fafb8c6872e: callq   0x7fafb8c68738
  0x00007fafb8c68733: jmpq    0x7fafb8c687ca
  0x00007fafb8c68738: lea     0x8(%rsp),%rax
  0x00007fafb8c6873d: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c68741: mov     %r15,%rdi
  0x00007fafb8c68744: vzeroupper
  0x00007fafb8c68747: mov     %rbp,0x330(%r15)
  0x00007fafb8c6874e: mov     %rax,0x320(%r15)
  0x00007fafb8c68755: test    $0xf,%esp
  0x00007fafb8c6875b: je      0x7fafb8c68773
  0x00007fafb8c68761: sub     $0x8,%rsp
  0x00007fafb8c68765: callq   0x7fafd7d7ef30
  0x00007fafb8c6876a: add     $0x8,%rsp
  0x00007fafb8c6876e: jmpq    0x7fafb8c68778
  0x00007fafb8c68773: callq   0x7fafd7d7ef30
  0x00007fafb8c68778: movabs  $0x0,%r10
  0x00007fafb8c68782: mov     %r10,0x320(%r15)
  0x00007fafb8c68789: movabs  $0x0,%r10
  0x00007fafb8c68793: mov     %r10,0x330(%r15)
  0x00007fafb8c6879a: movabs  $0x0,%r10
  0x00007fafb8c687a4: mov     %r10,0x328(%r15)
  0x00007fafb8c687ab: vzeroupper
  0x00007fafb8c687ae: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c687b6: je      0x7fafb8c687c1
  0x00007fafb8c687bc: jmpq    0x7fafb8c5c780
  0x00007fafb8c687c1: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c687c5: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c687c9: retq
  0x00007fafb8c687ca: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c687cf: sub     $0x80,%rsp
  0x00007fafb8c687d6: mov     %rax,0x78(%rsp)
  0x00007fafb8c687db: mov     %rcx,0x70(%rsp)
  0x00007fafb8c687e0: mov     %rdx,0x68(%rsp)
  0x00007fafb8c687e5: mov     %rbx,0x60(%rsp)
  0x00007fafb8c687ea: mov     %rbp,0x50(%rsp)
  0x00007fafb8c687ef: mov     %rsi,0x48(%rsp)
  0x00007fafb8c687f4: mov     %rdi,0x40(%rsp)
  0x00007fafb8c687f9: mov     %r8,0x38(%rsp)
  0x00007fafb8c687fe: mov     %r9,0x30(%rsp)
  0x00007fafb8c68803: mov     %r10,0x28(%rsp)
  0x00007fafb8c68808: mov     %r11,0x20(%rsp)
  0x00007fafb8c6880d: mov     %r12,0x18(%rsp)
  0x00007fafb8c68812: mov     %r13,0x10(%rsp)
  0x00007fafb8c68817: mov     %r14,0x8(%rsp)
  0x00007fafb8c6881c: mov     %r15,(%rsp)
  0x00007fafb8c68820: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c6882a: movabs  $0x7fafb8c687ca,%rsi
  0x00007fafb8c68834: mov     %rsp,%rdx
  0x00007fafb8c68837: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c6883b: callq   0x7fafd7fdd230
  0x00007fafb8c68840: hlt
  0x00007fafb8c68841: leave
  0x00007fafb8c68842: pop     %rsi
  0x00007fafb8c68843: mov     %rbx,%rsp
  0x00007fafb8c68846: jmpq    %rsi
  0x00007fafb8c68848: add     %al,(%rax)
  0x00007fafb8c6884a: add     %al,(%rax)
  0x00007fafb8c6884c: add     %al,(%rax)
  0x00007fafb8c6884e: add     %al,(%rax)
  0x00007fafb8c68850: add     %al,(%rax)
  0x00007fafb8c68852: add     %al,(%rax)
  0x00007fafb8c68854: add     %al,(%rax)
  0x00007fafb8c68856: add     %al,(%rax)
  0x00007fafb8c68858: add     %al,(%rax)
  0x00007fafb8c6885a: add     %al,(%rax)
  0x00007fafb8c6885c: add     %al,(%rax)
  0x00007fafb8c6885e: add     %al,(%rax)

----------------------------------------------------------------------
result handlers for native calls  [0x00007fafb8c68880, 0x00007fafb8c688a0]  32 bytes

Argument 0 is unknown.RIP: 0x7fafb8c68880 Code size: 0x00000020
  0x00007fafb8c68880: and     $0xff,%eax
  0x00007fafb8c68886: setne   %al
  0x00007fafb8c68889: retq
  0x00007fafb8c6888a: movzwl  %ax,%eax
  0x00007fafb8c6888d: retq
  0x00007fafb8c6888e: movsbl  %al,%eax
  0x00007fafb8c68891: retq
  0x00007fafb8c68892: movswl  %ax,%eax
  0x00007fafb8c68895: retq
  0x00007fafb8c68896: retq
  0x00007fafb8c68897: retq
  0x00007fafb8c68898: retq
  0x00007fafb8c68899: retq
  0x00007fafb8c6889a: retq
  0x00007fafb8c6889b: mov     0x10(%rbp),%rax
  0x00007fafb8c6889f: retq

----------------------------------------------------------------------
safepoint entry points  [0x00007fafb8c688c0, 0x00007fafb8c68fe0]  1824 bytes

Argument 0 is unknown.RIP: 0x7fafb8c688c0 Code size: 0x00000720
  0x00007fafb8c688c0: callq   0x7fafb8c688ca
  0x00007fafb8c688c5: jmpq    0x7fafb8c6895c
  0x00007fafb8c688ca: lea     0x8(%rsp),%rax
  0x00007fafb8c688cf: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c688d3: mov     %r15,%rdi
  0x00007fafb8c688d6: vzeroupper
  0x00007fafb8c688d9: mov     %rbp,0x330(%r15)
  0x00007fafb8c688e0: mov     %rax,0x320(%r15)
  0x00007fafb8c688e7: test    $0xf,%esp
  0x00007fafb8c688ed: je      0x7fafb8c68905
  0x00007fafb8c688f3: sub     $0x8,%rsp
  0x00007fafb8c688f7: callq   0x7fafd7d855e0
  0x00007fafb8c688fc: add     $0x8,%rsp
  0x00007fafb8c68900: jmpq    0x7fafb8c6890a
  0x00007fafb8c68905: callq   0x7fafd7d855e0
  0x00007fafb8c6890a: movabs  $0x0,%r10
  0x00007fafb8c68914: mov     %r10,0x320(%r15)
  0x00007fafb8c6891b: movabs  $0x0,%r10
  0x00007fafb8c68925: mov     %r10,0x330(%r15)
  0x00007fafb8c6892c: movabs  $0x0,%r10
  0x00007fafb8c68936: mov     %r10,0x328(%r15)
  0x00007fafb8c6893d: vzeroupper
  0x00007fafb8c68940: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c68948: je      0x7fafb8c68953
  0x00007fafb8c6894e: jmpq    0x7fafb8c5c780
  0x00007fafb8c68953: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c68957: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c6895b: retq
  0x00007fafb8c6895c: movzbl  0x0(%r13),%ebx
  0x00007fafb8c68961: movabs  $0x7fafd89a3080,%r10
  0x00007fafb8c6896b: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6896f: sub     $0x10,%rsp
  0x00007fafb8c68973: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c68978: callq   0x7fafb8c68982
  0x00007fafb8c6897d: jmpq    0x7fafb8c68a14
  0x00007fafb8c68982: lea     0x8(%rsp),%rax
  0x00007fafb8c68987: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c6898b: mov     %r15,%rdi
  0x00007fafb8c6898e: vzeroupper
  0x00007fafb8c68991: mov     %rbp,0x330(%r15)
  0x00007fafb8c68998: mov     %rax,0x320(%r15)
  0x00007fafb8c6899f: test    $0xf,%esp
  0x00007fafb8c689a5: je      0x7fafb8c689bd
  0x00007fafb8c689ab: sub     $0x8,%rsp
  0x00007fafb8c689af: callq   0x7fafd7d855e0
  0x00007fafb8c689b4: add     $0x8,%rsp
  0x00007fafb8c689b8: jmpq    0x7fafb8c689c2
  0x00007fafb8c689bd: callq   0x7fafd7d855e0
  0x00007fafb8c689c2: movabs  $0x0,%r10
  0x00007fafb8c689cc: mov     %r10,0x320(%r15)
  0x00007fafb8c689d3: movabs  $0x0,%r10
  0x00007fafb8c689dd: mov     %r10,0x330(%r15)
  0x00007fafb8c689e4: movabs  $0x0,%r10
  0x00007fafb8c689ee: mov     %r10,0x328(%r15)
  0x00007fafb8c689f5: vzeroupper
  0x00007fafb8c689f8: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c68a00: je      0x7fafb8c68a0b
  0x00007fafb8c68a06: jmpq    0x7fafb8c5c780
  0x00007fafb8c68a0b: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c68a0f: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c68a13: retq
  0x00007fafb8c68a14: movzbl  0x0(%r13),%ebx
  0x00007fafb8c68a19: movabs  $0x7fafd89a3080,%r10
  0x00007fafb8c68a23: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c68a27: sub     $0x8,%rsp
  0x00007fafb8c68a2b: vmovss  %xmm0,(%rsp)
  0x00007fafb8c68a30: callq   0x7fafb8c68a3a
  0x00007fafb8c68a35: jmpq    0x7fafb8c68acc
  0x00007fafb8c68a3a: lea     0x8(%rsp),%rax
  0x00007fafb8c68a3f: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c68a43: mov     %r15,%rdi
  0x00007fafb8c68a46: vzeroupper
  0x00007fafb8c68a49: mov     %rbp,0x330(%r15)
  0x00007fafb8c68a50: mov     %rax,0x320(%r15)
  0x00007fafb8c68a57: test    $0xf,%esp
  0x00007fafb8c68a5d: je      0x7fafb8c68a75
  0x00007fafb8c68a63: sub     $0x8,%rsp
  0x00007fafb8c68a67: callq   0x7fafd7d855e0
  0x00007fafb8c68a6c: add     $0x8,%rsp
  0x00007fafb8c68a70: jmpq    0x7fafb8c68a7a
  0x00007fafb8c68a75: callq   0x7fafd7d855e0
  0x00007fafb8c68a7a: movabs  $0x0,%r10
  0x00007fafb8c68a84: mov     %r10,0x320(%r15)
  0x00007fafb8c68a8b: movabs  $0x0,%r10
  0x00007fafb8c68a95: mov     %r10,0x330(%r15)
  0x00007fafb8c68a9c: movabs  $0x0,%r10
  0x00007fafb8c68aa6: mov     %r10,0x328(%r15)
  0x00007fafb8c68aad: vzeroupper
  0x00007fafb8c68ab0: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c68ab8: je      0x7fafb8c68ac3
  0x00007fafb8c68abe: jmpq    0x7fafb8c5c780
  0x00007fafb8c68ac3: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c68ac7: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c68acb: retq
  0x00007fafb8c68acc: movzbl  0x0(%r13),%ebx
  0x00007fafb8c68ad1: movabs  $0x7fafd89a3080,%r10
  0x00007fafb8c68adb: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c68adf: sub     $0x10,%rsp
  0x00007fafb8c68ae3: mov     %rax,(%rsp)
  0x00007fafb8c68ae7: movabs  $0x0,%r10
  0x00007fafb8c68af1: mov     %r10,0x8(%rsp)
  0x00007fafb8c68af6: callq   0x7fafb8c68b00
  0x00007fafb8c68afb: jmpq    0x7fafb8c68b92
  0x00007fafb8c68b00: lea     0x8(%rsp),%rax
  0x00007fafb8c68b05: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c68b09: mov     %r15,%rdi
  0x00007fafb8c68b0c: vzeroupper
  0x00007fafb8c68b0f: mov     %rbp,0x330(%r15)
  0x00007fafb8c68b16: mov     %rax,0x320(%r15)
  0x00007fafb8c68b1d: test    $0xf,%esp
  0x00007fafb8c68b23: je      0x7fafb8c68b3b
  0x00007fafb8c68b29: sub     $0x8,%rsp
  0x00007fafb8c68b2d: callq   0x7fafd7d855e0
  0x00007fafb8c68b32: add     $0x8,%rsp
  0x00007fafb8c68b36: jmpq    0x7fafb8c68b40
  0x00007fafb8c68b3b: callq   0x7fafd7d855e0
  0x00007fafb8c68b40: movabs  $0x0,%r10
  0x00007fafb8c68b4a: mov     %r10,0x320(%r15)
  0x00007fafb8c68b51: movabs  $0x0,%r10
  0x00007fafb8c68b5b: mov     %r10,0x330(%r15)
  0x00007fafb8c68b62: movabs  $0x0,%r10
  0x00007fafb8c68b6c: mov     %r10,0x328(%r15)
  0x00007fafb8c68b73: vzeroupper
  0x00007fafb8c68b76: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c68b7e: je      0x7fafb8c68b89
  0x00007fafb8c68b84: jmpq    0x7fafb8c5c780
  0x00007fafb8c68b89: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c68b8d: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c68b91: retq
  0x00007fafb8c68b92: movzbl  0x0(%r13),%ebx
  0x00007fafb8c68b97: movabs  $0x7fafd89a3080,%r10
  0x00007fafb8c68ba1: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c68ba5: push    %rax
  0x00007fafb8c68ba6: callq   0x7fafb8c68bb0
  0x00007fafb8c68bab: jmpq    0x7fafb8c68c42
  0x00007fafb8c68bb0: lea     0x8(%rsp),%rax
  0x00007fafb8c68bb5: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c68bb9: mov     %r15,%rdi
  0x00007fafb8c68bbc: vzeroupper
  0x00007fafb8c68bbf: mov     %rbp,0x330(%r15)
  0x00007fafb8c68bc6: mov     %rax,0x320(%r15)
  0x00007fafb8c68bcd: test    $0xf,%esp
  0x00007fafb8c68bd3: je      0x7fafb8c68beb
  0x00007fafb8c68bd9: sub     $0x8,%rsp
  0x00007fafb8c68bdd: callq   0x7fafd7d855e0
  0x00007fafb8c68be2: add     $0x8,%rsp
  0x00007fafb8c68be6: jmpq    0x7fafb8c68bf0
  0x00007fafb8c68beb: callq   0x7fafd7d855e0
  0x00007fafb8c68bf0: movabs  $0x0,%r10
  0x00007fafb8c68bfa: mov     %r10,0x320(%r15)
  0x00007fafb8c68c01: movabs  $0x0,%r10
  0x00007fafb8c68c0b: mov     %r10,0x330(%r15)
  0x00007fafb8c68c12: movabs  $0x0,%r10
  0x00007fafb8c68c1c: mov     %r10,0x328(%r15)
  0x00007fafb8c68c23: vzeroupper
  0x00007fafb8c68c26: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c68c2e: je      0x7fafb8c68c39
  0x00007fafb8c68c34: jmpq    0x7fafb8c5c780
  0x00007fafb8c68c39: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c68c3d: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c68c41: retq
  0x00007fafb8c68c42: movzbl  0x0(%r13),%ebx
  0x00007fafb8c68c47: movabs  $0x7fafd89a3080,%r10
  0x00007fafb8c68c51: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c68c55: push    %rax
  0x00007fafb8c68c56: callq   0x7fafb8c68c60
  0x00007fafb8c68c5b: jmpq    0x7fafb8c68cf2
  0x00007fafb8c68c60: lea     0x8(%rsp),%rax
  0x00007fafb8c68c65: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c68c69: mov     %r15,%rdi
  0x00007fafb8c68c6c: vzeroupper
  0x00007fafb8c68c6f: mov     %rbp,0x330(%r15)
  0x00007fafb8c68c76: mov     %rax,0x320(%r15)
  0x00007fafb8c68c7d: test    $0xf,%esp
  0x00007fafb8c68c83: je      0x7fafb8c68c9b
  0x00007fafb8c68c89: sub     $0x8,%rsp
  0x00007fafb8c68c8d: callq   0x7fafd7d855e0
  0x00007fafb8c68c92: add     $0x8,%rsp
  0x00007fafb8c68c96: jmpq    0x7fafb8c68ca0
  0x00007fafb8c68c9b: callq   0x7fafd7d855e0
  0x00007fafb8c68ca0: movabs  $0x0,%r10
  0x00007fafb8c68caa: mov     %r10,0x320(%r15)
  0x00007fafb8c68cb1: movabs  $0x0,%r10
  0x00007fafb8c68cbb: mov     %r10,0x330(%r15)
  0x00007fafb8c68cc2: movabs  $0x0,%r10
  0x00007fafb8c68ccc: mov     %r10,0x328(%r15)
  0x00007fafb8c68cd3: vzeroupper
  0x00007fafb8c68cd6: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c68cde: je      0x7fafb8c68ce9
  0x00007fafb8c68ce4: jmpq    0x7fafb8c5c780
  0x00007fafb8c68ce9: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c68ced: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c68cf1: retq
  0x00007fafb8c68cf2: movzbl  0x0(%r13),%ebx
  0x00007fafb8c68cf7: movabs  $0x7fafd89a3080,%r10
  0x00007fafb8c68d01: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c68d05: push    %rax
  0x00007fafb8c68d06: callq   0x7fafb8c68d10
  0x00007fafb8c68d0b: jmpq    0x7fafb8c68da2
  0x00007fafb8c68d10: lea     0x8(%rsp),%rax
  0x00007fafb8c68d15: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c68d19: mov     %r15,%rdi
  0x00007fafb8c68d1c: vzeroupper
  0x00007fafb8c68d1f: mov     %rbp,0x330(%r15)
  0x00007fafb8c68d26: mov     %rax,0x320(%r15)
  0x00007fafb8c68d2d: test    $0xf,%esp
  0x00007fafb8c68d33: je      0x7fafb8c68d4b
  0x00007fafb8c68d39: sub     $0x8,%rsp
  0x00007fafb8c68d3d: callq   0x7fafd7d855e0
  0x00007fafb8c68d42: add     $0x8,%rsp
  0x00007fafb8c68d46: jmpq    0x7fafb8c68d50
  0x00007fafb8c68d4b: callq   0x7fafd7d855e0
  0x00007fafb8c68d50: movabs  $0x0,%r10
  0x00007fafb8c68d5a: mov     %r10,0x320(%r15)
  0x00007fafb8c68d61: movabs  $0x0,%r10
  0x00007fafb8c68d6b: mov     %r10,0x330(%r15)
  0x00007fafb8c68d72: movabs  $0x0,%r10
  0x00007fafb8c68d7c: mov     %r10,0x328(%r15)
  0x00007fafb8c68d83: vzeroupper
  0x00007fafb8c68d86: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c68d8e: je      0x7fafb8c68d99
  0x00007fafb8c68d94: jmpq    0x7fafb8c5c780
  0x00007fafb8c68d99: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c68d9d: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c68da1: retq
  0x00007fafb8c68da2: movzbl  0x0(%r13),%ebx
  0x00007fafb8c68da7: movabs  $0x7fafd89a3080,%r10
  0x00007fafb8c68db1: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c68db5: push    %rax
  0x00007fafb8c68db6: callq   0x7fafb8c68dc0
  0x00007fafb8c68dbb: jmpq    0x7fafb8c68e52
  0x00007fafb8c68dc0: lea     0x8(%rsp),%rax
  0x00007fafb8c68dc5: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c68dc9: mov     %r15,%rdi
  0x00007fafb8c68dcc: vzeroupper
  0x00007fafb8c68dcf: mov     %rbp,0x330(%r15)
  0x00007fafb8c68dd6: mov     %rax,0x320(%r15)
  0x00007fafb8c68ddd: test    $0xf,%esp
  0x00007fafb8c68de3: je      0x7fafb8c68dfb
  0x00007fafb8c68de9: sub     $0x8,%rsp
  0x00007fafb8c68ded: callq   0x7fafd7d855e0
  0x00007fafb8c68df2: add     $0x8,%rsp
  0x00007fafb8c68df6: jmpq    0x7fafb8c68e00
  0x00007fafb8c68dfb: callq   0x7fafd7d855e0
  0x00007fafb8c68e00: movabs  $0x0,%r10
  0x00007fafb8c68e0a: mov     %r10,0x320(%r15)
  0x00007fafb8c68e11: movabs  $0x0,%r10
  0x00007fafb8c68e1b: mov     %r10,0x330(%r15)
  0x00007fafb8c68e22: movabs  $0x0,%r10
  0x00007fafb8c68e2c: mov     %r10,0x328(%r15)
  0x00007fafb8c68e33: vzeroupper
  0x00007fafb8c68e36: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c68e3e: je      0x7fafb8c68e49
  0x00007fafb8c68e44: jmpq    0x7fafb8c5c780
  0x00007fafb8c68e49: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c68e4d: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c68e51: retq
  0x00007fafb8c68e52: movzbl  0x0(%r13),%ebx
  0x00007fafb8c68e57: movabs  $0x7fafd89a3080,%r10
  0x00007fafb8c68e61: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c68e65: push    %rax
  0x00007fafb8c68e66: callq   0x7fafb8c68e70
  0x00007fafb8c68e6b: jmpq    0x7fafb8c68f02
  0x00007fafb8c68e70: lea     0x8(%rsp),%rax
  0x00007fafb8c68e75: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c68e79: mov     %r15,%rdi
  0x00007fafb8c68e7c: vzeroupper
  0x00007fafb8c68e7f: mov     %rbp,0x330(%r15)
  0x00007fafb8c68e86: mov     %rax,0x320(%r15)
  0x00007fafb8c68e8d: test    $0xf,%esp
  0x00007fafb8c68e93: je      0x7fafb8c68eab
  0x00007fafb8c68e99: sub     $0x8,%rsp
  0x00007fafb8c68e9d: callq   0x7fafd7d855e0
  0x00007fafb8c68ea2: add     $0x8,%rsp
  0x00007fafb8c68ea6: jmpq    0x7fafb8c68eb0
  0x00007fafb8c68eab: callq   0x7fafd7d855e0
  0x00007fafb8c68eb0: movabs  $0x0,%r10
  0x00007fafb8c68eba: mov     %r10,0x320(%r15)
  0x00007fafb8c68ec1: movabs  $0x0,%r10
  0x00007fafb8c68ecb: mov     %r10,0x330(%r15)
  0x00007fafb8c68ed2: movabs  $0x0,%r10
  0x00007fafb8c68edc: mov     %r10,0x328(%r15)
  0x00007fafb8c68ee3: vzeroupper
  0x00007fafb8c68ee6: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c68eee: je      0x7fafb8c68ef9
  0x00007fafb8c68ef4: jmpq    0x7fafb8c5c780
  0x00007fafb8c68ef9: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c68efd: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c68f01: retq
  0x00007fafb8c68f02: movzbl  0x0(%r13),%ebx
  0x00007fafb8c68f07: movabs  $0x7fafd89a3080,%r10
  0x00007fafb8c68f11: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c68f15: push    %rax
  0x00007fafb8c68f16: callq   0x7fafb8c68f20
  0x00007fafb8c68f1b: jmpq    0x7fafb8c68fb2
  0x00007fafb8c68f20: lea     0x8(%rsp),%rax
  0x00007fafb8c68f25: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c68f29: mov     %r15,%rdi
  0x00007fafb8c68f2c: vzeroupper
  0x00007fafb8c68f2f: mov     %rbp,0x330(%r15)
  0x00007fafb8c68f36: mov     %rax,0x320(%r15)
  0x00007fafb8c68f3d: test    $0xf,%esp
  0x00007fafb8c68f43: je      0x7fafb8c68f5b
  0x00007fafb8c68f49: sub     $0x8,%rsp
  0x00007fafb8c68f4d: callq   0x7fafd7d855e0
  0x00007fafb8c68f52: add     $0x8,%rsp
  0x00007fafb8c68f56: jmpq    0x7fafb8c68f60
  0x00007fafb8c68f5b: callq   0x7fafd7d855e0
  0x00007fafb8c68f60: movabs  $0x0,%r10
  0x00007fafb8c68f6a: mov     %r10,0x320(%r15)
  0x00007fafb8c68f71: movabs  $0x0,%r10
  0x00007fafb8c68f7b: mov     %r10,0x330(%r15)
  0x00007fafb8c68f82: movabs  $0x0,%r10
  0x00007fafb8c68f8c: mov     %r10,0x328(%r15)
  0x00007fafb8c68f93: vzeroupper
  0x00007fafb8c68f96: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c68f9e: je      0x7fafb8c68fa9
  0x00007fafb8c68fa4: jmpq    0x7fafb8c5c780
  0x00007fafb8c68fa9: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c68fad: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c68fb1: retq
  0x00007fafb8c68fb2: movzbl  0x0(%r13),%ebx
  0x00007fafb8c68fb7: movabs  $0x7fafd89a3080,%r10
  0x00007fafb8c68fc1: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c68fc5: nop
  0x00007fafb8c68fc8: add     %al,(%rax)
  0x00007fafb8c68fca: add     %al,(%rax)
  0x00007fafb8c68fcc: add     %al,(%rax)
  0x00007fafb8c68fce: add     %al,(%rax)
  0x00007fafb8c68fd0: add     %al,(%rax)
  0x00007fafb8c68fd2: add     %al,(%rax)
  0x00007fafb8c68fd4: add     %al,(%rax)
  0x00007fafb8c68fd6: add     %al,(%rax)
  0x00007fafb8c68fd8: add     %al,(%rax)
  0x00007fafb8c68fda: add     %al,(%rax)
  0x00007fafb8c68fdc: add     %al,(%rax)
  0x00007fafb8c68fde: add     %al,(%rax)

----------------------------------------------------------------------
exception handling  [0x00007fafb8c69000, 0x00007fafb8c6a040]  4160 bytes

Argument 0 is unknown.RIP: 0x7fafb8c69000 Code size: 0x00001040
  0x00007fafb8c69000: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c69008: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6900c: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c69010: xor     %r12,%r12
  0x00007fafb8c69013: mov     %rax,%rsi
  0x00007fafb8c69016: mov     0xffffffffffffffb8(%rbp),%rsp
  0x00007fafb8c6901a: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c69022: callq   0x7fafb8c6902c
  0x00007fafb8c69027: jmpq    0x7fafb8c690d6
  0x00007fafb8c6902c: lea     0x8(%rsp),%rax
  0x00007fafb8c69031: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c69035: mov     %r15,%rdi
  0x00007fafb8c69038: vzeroupper
  0x00007fafb8c6903b: mov     %rbp,0x330(%r15)
  0x00007fafb8c69042: mov     %rax,0x320(%r15)
  0x00007fafb8c69049: test    $0xf,%esp
  0x00007fafb8c6904f: je      0x7fafb8c69067
  0x00007fafb8c69055: sub     $0x8,%rsp
  0x00007fafb8c69059: callq   0x7fafd7d7fce0
  0x00007fafb8c6905e: add     $0x8,%rsp
  0x00007fafb8c69062: jmpq    0x7fafb8c6906c
  0x00007fafb8c69067: callq   0x7fafd7d7fce0
  0x00007fafb8c6906c: movabs  $0x0,%r10
  0x00007fafb8c69076: mov     %r10,0x320(%r15)
  0x00007fafb8c6907d: movabs  $0x0,%r10
  0x00007fafb8c69087: mov     %r10,0x330(%r15)
  0x00007fafb8c6908e: movabs  $0x0,%r10
  0x00007fafb8c69098: mov     %r10,0x328(%r15)
  0x00007fafb8c6909f: vzeroupper
  0x00007fafb8c690a2: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c690aa: je      0x7fafb8c690b5
  0x00007fafb8c690b0: jmpq    0x7fafb8c5c780
  0x00007fafb8c690b5: mov     0x380(%r15),%rdx
  0x00007fafb8c690bc: movabs  $0x0,%r10
  0x00007fafb8c690c6: mov     %r10,0x380(%r15)
  0x00007fafb8c690cd: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c690d1: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c690d5: retq
  0x00007fafb8c690d6: push    %rdx
  0x00007fafb8c690d7: jmpq    %rax
  0x00007fafb8c690d9: mov     0xffffffffffffffb8(%rbp),%rsp
  0x00007fafb8c690dd: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c690e5: mov     0x44c(%r15),%edx
  0x00007fafb8c690ec: or      $0x2,%edx
  0x00007fafb8c690ef: mov     %edx,0x44c(%r15)
  0x00007fafb8c690f6: mov     0x8(%rbp),%rsi
  0x00007fafb8c690fa: mov     %rsi,%rdi
  0x00007fafb8c690fd: test    $0xf,%esp
  0x00007fafb8c69103: je      0x7fafb8c6911b
  0x00007fafb8c69109: sub     $0x8,%rsp
  0x00007fafb8c6910d: callq   0x7fafd7d86440
  0x00007fafb8c69112: add     $0x8,%rsp
  0x00007fafb8c69116: jmpq    0x7fafb8c69120
  0x00007fafb8c6911b: callq   0x7fafd7d86440
  0x00007fafb8c69120: test    %eax,%eax
  0x00007fafb8c69122: jne     0x7fafb8c6953d
  0x00007fafb8c69128: mov     0xffffffffffffffe8(%rbp),%rax
  0x00007fafb8c6912c: mov     0x8(%rax),%rax
  0x00007fafb8c69130: movzwl  0x34(%rax),%eax
  0x00007fafb8c69134: shl     $0x3,%eax
  0x00007fafb8c69137: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c6913b: sub     %rax,%r14
  0x00007fafb8c6913e: add     $0x8,%r14
  0x00007fafb8c69142: mov     %r14,%rdx
  0x00007fafb8c69145: mov     %rax,%rsi
  0x00007fafb8c69148: mov     %r15,%rdi
  0x00007fafb8c6914b: test    $0xf,%esp
  0x00007fafb8c69151: je      0x7fafb8c69169
  0x00007fafb8c69157: sub     $0x8,%rsp
  0x00007fafb8c6915b: callq   0x7fafd7bb8810
  0x00007fafb8c69160: add     $0x8,%rsp
  0x00007fafb8c69164: jmpq    0x7fafb8c6916e
  0x00007fafb8c69169: callq   0x7fafd7bb8810
  0x00007fafb8c6916e: mov     0x3dd(%r15),%bl
  0x00007fafb8c69175: movb    $0x0,0x3dd(%r15)
  0x00007fafb8c6917d: mov     0xffffffffffffffe8(%rbp),%rcx
  0x00007fafb8c69181: mov     0x20(%rcx),%ecx
  0x00007fafb8c69184: test    $0x20,%ecx
  0x00007fafb8c6918a: je      0x7fafb8c6928e
  0x00007fafb8c69190: testb   $0xff,%bl
  0x00007fafb8c69193: jne     0x7fafb8c69399
  0x00007fafb8c69199: lea     0xffffffffffffffa8(%rbp),%rsi
  0x00007fafb8c6919d: mov     0x8(%rsi),%rax
  0x00007fafb8c691a1: test    %rax,%rax
  0x00007fafb8c691a4: jne     0x7fafb8c691af
  0x00007fafb8c691aa: jmpq    0x7fafb8c6928e
  0x00007fafb8c691af: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c691b3: lea     (%rsi),%rax
  0x00007fafb8c691b6: mov     0x8(%rsi),%rcx
  0x00007fafb8c691ba: movq    $0x0,0x8(%rsi)
  0x00007fafb8c691c2: mov     (%rcx),%rdx
  0x00007fafb8c691c5: and     $0x7,%rdx
  0x00007fafb8c691c9: cmp     $0x5,%rdx
  0x00007fafb8c691cd: je      0x7fafb8c6928a
  0x00007fafb8c691d3: mov     (%rax),%rdx
  0x00007fafb8c691d6: test    %rdx,%rdx
  0x00007fafb8c691d9: je      0x7fafb8c6928a
  0x00007fafb8c691df: lock cmpxchg %rdx,(%rcx)
  0x00007fafb8c691e4: je      0x7fafb8c6928a
  0x00007fafb8c691ea: mov     %rcx,0x8(%rsi)
  0x00007fafb8c691ee: callq   0x7fafb8c691f8
  0x00007fafb8c691f3: jmpq    0x7fafb8c6928a
  0x00007fafb8c691f8: lea     0x8(%rsp),%rax
  0x00007fafb8c691fd: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c69201: mov     %r15,%rdi
  0x00007fafb8c69204: vzeroupper
  0x00007fafb8c69207: mov     %rbp,0x330(%r15)
  0x00007fafb8c6920e: mov     %rax,0x320(%r15)
  0x00007fafb8c69215: test    $0xf,%esp
  0x00007fafb8c6921b: je      0x7fafb8c69233
  0x00007fafb8c69221: sub     $0x8,%rsp
  0x00007fafb8c69225: callq   0x7fafd7d82470
  0x00007fafb8c6922a: add     $0x8,%rsp
  0x00007fafb8c6922e: jmpq    0x7fafb8c69238
  0x00007fafb8c69233: callq   0x7fafd7d82470
  0x00007fafb8c69238: movabs  $0x0,%r10
  0x00007fafb8c69242: mov     %r10,0x320(%r15)
  0x00007fafb8c69249: movabs  $0x0,%r10
  0x00007fafb8c69253: mov     %r10,0x330(%r15)
  0x00007fafb8c6925a: movabs  $0x0,%r10
  0x00007fafb8c69264: mov     %r10,0x328(%r15)
  0x00007fafb8c6926b: vzeroupper
  0x00007fafb8c6926e: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c69276: je      0x7fafb8c69281
  0x00007fafb8c6927c: jmpq    0x7fafb8c5c780
  0x00007fafb8c69281: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c69285: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c69289: retq
  0x00007fafb8c6928a: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6928e: mov     0xffffffffffffffb8(%rbp),%rsi
  0x00007fafb8c69292: lea     0xffffffffffffffb8(%rbp),%rbx
  0x00007fafb8c69296: jmpq    0x7fafb8c69394
  0x00007fafb8c6929b: mov     %rsi,%rsi
  0x00007fafb8c6929e: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c692a2: lea     (%rsi),%rax
  0x00007fafb8c692a5: mov     0x8(%rsi),%rcx
  0x00007fafb8c692a9: movq    $0x0,0x8(%rsi)
  0x00007fafb8c692b1: mov     (%rcx),%rdx
  0x00007fafb8c692b4: and     $0x7,%rdx
  0x00007fafb8c692b8: cmp     $0x5,%rdx
  0x00007fafb8c692bc: je      0x7fafb8c69379
  0x00007fafb8c692c2: mov     (%rax),%rdx
  0x00007fafb8c692c5: test    %rdx,%rdx
  0x00007fafb8c692c8: je      0x7fafb8c69379
  0x00007fafb8c692ce: lock cmpxchg %rdx,(%rcx)
  0x00007fafb8c692d3: je      0x7fafb8c69379
  0x00007fafb8c692d9: mov     %rcx,0x8(%rsi)
  0x00007fafb8c692dd: callq   0x7fafb8c692e7
  0x00007fafb8c692e2: jmpq    0x7fafb8c69379
  0x00007fafb8c692e7: lea     0x8(%rsp),%rax
  0x00007fafb8c692ec: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c692f0: mov     %r15,%rdi
  0x00007fafb8c692f3: vzeroupper
  0x00007fafb8c692f6: mov     %rbp,0x330(%r15)
  0x00007fafb8c692fd: mov     %rax,0x320(%r15)
  0x00007fafb8c69304: test    $0xf,%esp
  0x00007fafb8c6930a: je      0x7fafb8c69322
  0x00007fafb8c69310: sub     $0x8,%rsp
  0x00007fafb8c69314: callq   0x7fafd7d82470
  0x00007fafb8c69319: add     $0x8,%rsp
  0x00007fafb8c6931d: jmpq    0x7fafb8c69327
  0x00007fafb8c69322: callq   0x7fafd7d82470
  0x00007fafb8c69327: movabs  $0x0,%r10
  0x00007fafb8c69331: mov     %r10,0x320(%r15)
  0x00007fafb8c69338: movabs  $0x0,%r10
  0x00007fafb8c69342: mov     %r10,0x330(%r15)
  0x00007fafb8c69349: movabs  $0x0,%r10
  0x00007fafb8c69353: mov     %r10,0x328(%r15)
  0x00007fafb8c6935a: vzeroupper
  0x00007fafb8c6935d: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c69365: je      0x7fafb8c69370
  0x00007fafb8c6936b: jmpq    0x7fafb8c5c780
  0x00007fafb8c69370: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c69374: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c69378: retq
  0x00007fafb8c69379: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6937d: jmpq    0x7fafb8c6928e
  0x00007fafb8c69382: cmpq    $0x0,0x8(%rsi)
  0x00007fafb8c6938a: jne     0x7fafb8c6929b
  0x00007fafb8c69390: add     $0x10,%rsi
  0x00007fafb8c69394: cmp     %rbx,%rsi
  0x00007fafb8c69397: jne     0x7fafb8c69382
  0x00007fafb8c69399: cmpb    $0x0,0x1fd0e8f7(%rip)
  0x00007fafb8c693a0: je      0x7fafb8c693d0
  0x00007fafb8c693a6: mov     0xffffffffffffffe8(%rbp),%rsi
  0x00007fafb8c693aa: mov     %r15,%rdi
  0x00007fafb8c693ad: test    $0xf,%esp
  0x00007fafb8c693b3: je      0x7fafb8c693cb
  0x00007fafb8c693b9: sub     $0x8,%rsp
  0x00007fafb8c693bd: callq   0x7fafd81e7140
  0x00007fafb8c693c2: add     $0x8,%rsp
  0x00007fafb8c693c6: jmpq    0x7fafb8c693d0
  0x00007fafb8c693cb: callq   0x7fafd81e7140
  0x00007fafb8c693d0: mov     0xfffffffffffffff8(%rbp),%rbx
  0x00007fafb8c693d4: cmpl    $0x3,0x408(%r15)
  0x00007fafb8c693df: je      0x7fafb8c6952b
  0x00007fafb8c693e5: cmp     0x418(%r15),%rbx
  0x00007fafb8c693ec: jle     0x7fafb8c6952b
  0x00007fafb8c693f2: mov     %r15,%rdi
  0x00007fafb8c693f5: test    $0xf,%esp
  0x00007fafb8c693fb: je      0x7fafb8c69413
  0x00007fafb8c69401: sub     $0x8,%rsp
  0x00007fafb8c69405: callq   0x7fafd81ee2f0
  0x00007fafb8c6940a: add     $0x8,%rsp
  0x00007fafb8c6940e: jmpq    0x7fafb8c69418
  0x00007fafb8c69413: callq   0x7fafd81ee2f0
  0x00007fafb8c69418: callq   0x7fafb8c69422
  0x00007fafb8c6941d: jmpq    0x7fafb8c694b4
  0x00007fafb8c69422: lea     0x8(%rsp),%rax
  0x00007fafb8c69427: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c6942b: mov     %r15,%rdi
  0x00007fafb8c6942e: vzeroupper
  0x00007fafb8c69431: mov     %rbp,0x330(%r15)
  0x00007fafb8c69438: mov     %rax,0x320(%r15)
  0x00007fafb8c6943f: test    $0xf,%esp
  0x00007fafb8c69445: je      0x7fafb8c6945d
  0x00007fafb8c6944b: sub     $0x8,%rsp
  0x00007fafb8c6944f: callq   0x7fafd7d7ef30
  0x00007fafb8c69454: add     $0x8,%rsp
  0x00007fafb8c69458: jmpq    0x7fafb8c69462
  0x00007fafb8c6945d: callq   0x7fafd7d7ef30
  0x00007fafb8c69462: movabs  $0x0,%r10
  0x00007fafb8c6946c: mov     %r10,0x320(%r15)
  0x00007fafb8c69473: movabs  $0x0,%r10
  0x00007fafb8c6947d: mov     %r10,0x330(%r15)
  0x00007fafb8c69484: movabs  $0x0,%r10
  0x00007fafb8c6948e: mov     %r10,0x328(%r15)
  0x00007fafb8c69495: vzeroupper
  0x00007fafb8c69498: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c694a0: je      0x7fafb8c694ab
  0x00007fafb8c694a6: jmpq    0x7fafb8c5c780
  0x00007fafb8c694ab: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c694af: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c694b3: retq
  0x00007fafb8c694b4: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c694b9: sub     $0x80,%rsp
  0x00007fafb8c694c0: mov     %rax,0x78(%rsp)
  0x00007fafb8c694c5: mov     %rcx,0x70(%rsp)
  0x00007fafb8c694ca: mov     %rdx,0x68(%rsp)
  0x00007fafb8c694cf: mov     %rbx,0x60(%rsp)
  0x00007fafb8c694d4: mov     %rbp,0x50(%rsp)
  0x00007fafb8c694d9: mov     %rsi,0x48(%rsp)
  0x00007fafb8c694de: mov     %rdi,0x40(%rsp)
  0x00007fafb8c694e3: mov     %r8,0x38(%rsp)
  0x00007fafb8c694e8: mov     %r9,0x30(%rsp)
  0x00007fafb8c694ed: mov     %r10,0x28(%rsp)
  0x00007fafb8c694f2: mov     %r11,0x20(%rsp)
  0x00007fafb8c694f7: mov     %r12,0x18(%rsp)
  0x00007fafb8c694fc: mov     %r13,0x10(%rsp)
  0x00007fafb8c69501: mov     %r14,0x8(%rsp)
  0x00007fafb8c69506: mov     %r15,(%rsp)
  0x00007fafb8c6950a: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c69514: movabs  $0x7fafb8c694b4,%rsi
  0x00007fafb8c6951e: mov     %rsp,%rdx
  0x00007fafb8c69521: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c69525: callq   0x7fafd7fdd230
  0x00007fafb8c6952a: hlt
  0x00007fafb8c6952b: leave
  0x00007fafb8c6952c: pop     %rdx
  0x00007fafb8c6952d: mov     %rbx,%rsp
  0x00007fafb8c69530: movl    $0x4,0x44c(%r15)
  0x00007fafb8c6953b: jmpq    %rdx
  0x00007fafb8c6953d: mov     0x3dd(%r15),%bl
  0x00007fafb8c69544: movb    $0x0,0x3dd(%r15)
  0x00007fafb8c6954c: mov     0xffffffffffffffe8(%rbp),%rcx
  0x00007fafb8c69550: mov     0x20(%rcx),%ecx
  0x00007fafb8c69553: test    $0x20,%ecx
  0x00007fafb8c69559: je      0x7fafb8c6965d
  0x00007fafb8c6955f: testb   $0xff,%bl
  0x00007fafb8c69562: jne     0x7fafb8c69768
  0x00007fafb8c69568: lea     0xffffffffffffffa8(%rbp),%rsi
  0x00007fafb8c6956c: mov     0x8(%rsi),%rax
  0x00007fafb8c69570: test    %rax,%rax
  0x00007fafb8c69573: jne     0x7fafb8c6957e
  0x00007fafb8c69579: jmpq    0x7fafb8c6965d
  0x00007fafb8c6957e: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c69582: lea     (%rsi),%rax
  0x00007fafb8c69585: mov     0x8(%rsi),%rcx
  0x00007fafb8c69589: movq    $0x0,0x8(%rsi)
  0x00007fafb8c69591: mov     (%rcx),%rdx
  0x00007fafb8c69594: and     $0x7,%rdx
  0x00007fafb8c69598: cmp     $0x5,%rdx
  0x00007fafb8c6959c: je      0x7fafb8c69659
  0x00007fafb8c695a2: mov     (%rax),%rdx
  0x00007fafb8c695a5: test    %rdx,%rdx
  0x00007fafb8c695a8: je      0x7fafb8c69659
  0x00007fafb8c695ae: lock cmpxchg %rdx,(%rcx)
  0x00007fafb8c695b3: je      0x7fafb8c69659
  0x00007fafb8c695b9: mov     %rcx,0x8(%rsi)
  0x00007fafb8c695bd: callq   0x7fafb8c695c7
  0x00007fafb8c695c2: jmpq    0x7fafb8c69659
  0x00007fafb8c695c7: lea     0x8(%rsp),%rax
  0x00007fafb8c695cc: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c695d0: mov     %r15,%rdi
  0x00007fafb8c695d3: vzeroupper
  0x00007fafb8c695d6: mov     %rbp,0x330(%r15)
  0x00007fafb8c695dd: mov     %rax,0x320(%r15)
  0x00007fafb8c695e4: test    $0xf,%esp
  0x00007fafb8c695ea: je      0x7fafb8c69602
  0x00007fafb8c695f0: sub     $0x8,%rsp
  0x00007fafb8c695f4: callq   0x7fafd7d82470
  0x00007fafb8c695f9: add     $0x8,%rsp
  0x00007fafb8c695fd: jmpq    0x7fafb8c69607
  0x00007fafb8c69602: callq   0x7fafd7d82470
  0x00007fafb8c69607: movabs  $0x0,%r10
  0x00007fafb8c69611: mov     %r10,0x320(%r15)
  0x00007fafb8c69618: movabs  $0x0,%r10
  0x00007fafb8c69622: mov     %r10,0x330(%r15)
  0x00007fafb8c69629: movabs  $0x0,%r10
  0x00007fafb8c69633: mov     %r10,0x328(%r15)
  0x00007fafb8c6963a: vzeroupper
  0x00007fafb8c6963d: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c69645: je      0x7fafb8c69650
  0x00007fafb8c6964b: jmpq    0x7fafb8c5c780
  0x00007fafb8c69650: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c69654: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c69658: retq
  0x00007fafb8c69659: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6965d: mov     0xffffffffffffffb8(%rbp),%rsi
  0x00007fafb8c69661: lea     0xffffffffffffffb8(%rbp),%rbx
  0x00007fafb8c69665: jmpq    0x7fafb8c69763
  0x00007fafb8c6966a: mov     %rsi,%rsi
  0x00007fafb8c6966d: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c69671: lea     (%rsi),%rax
  0x00007fafb8c69674: mov     0x8(%rsi),%rcx
  0x00007fafb8c69678: movq    $0x0,0x8(%rsi)
  0x00007fafb8c69680: mov     (%rcx),%rdx
  0x00007fafb8c69683: and     $0x7,%rdx
  0x00007fafb8c69687: cmp     $0x5,%rdx
  0x00007fafb8c6968b: je      0x7fafb8c69748
  0x00007fafb8c69691: mov     (%rax),%rdx
  0x00007fafb8c69694: test    %rdx,%rdx
  0x00007fafb8c69697: je      0x7fafb8c69748
  0x00007fafb8c6969d: lock cmpxchg %rdx,(%rcx)
  0x00007fafb8c696a2: je      0x7fafb8c69748
  0x00007fafb8c696a8: mov     %rcx,0x8(%rsi)
  0x00007fafb8c696ac: callq   0x7fafb8c696b6
  0x00007fafb8c696b1: jmpq    0x7fafb8c69748
  0x00007fafb8c696b6: lea     0x8(%rsp),%rax
  0x00007fafb8c696bb: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c696bf: mov     %r15,%rdi
  0x00007fafb8c696c2: vzeroupper
  0x00007fafb8c696c5: mov     %rbp,0x330(%r15)
  0x00007fafb8c696cc: mov     %rax,0x320(%r15)
  0x00007fafb8c696d3: test    $0xf,%esp
  0x00007fafb8c696d9: je      0x7fafb8c696f1
  0x00007fafb8c696df: sub     $0x8,%rsp
  0x00007fafb8c696e3: callq   0x7fafd7d82470
  0x00007fafb8c696e8: add     $0x8,%rsp
  0x00007fafb8c696ec: jmpq    0x7fafb8c696f6
  0x00007fafb8c696f1: callq   0x7fafd7d82470
  0x00007fafb8c696f6: movabs  $0x0,%r10
  0x00007fafb8c69700: mov     %r10,0x320(%r15)
  0x00007fafb8c69707: movabs  $0x0,%r10
  0x00007fafb8c69711: mov     %r10,0x330(%r15)
  0x00007fafb8c69718: movabs  $0x0,%r10
  0x00007fafb8c69722: mov     %r10,0x328(%r15)
  0x00007fafb8c69729: vzeroupper
  0x00007fafb8c6972c: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c69734: je      0x7fafb8c6973f
  0x00007fafb8c6973a: jmpq    0x7fafb8c5c780
  0x00007fafb8c6973f: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c69743: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c69747: retq
  0x00007fafb8c69748: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6974c: jmpq    0x7fafb8c6965d
  0x00007fafb8c69751: cmpq    $0x0,0x8(%rsi)
  0x00007fafb8c69759: jne     0x7fafb8c6966a
  0x00007fafb8c6975f: add     $0x10,%rsi
  0x00007fafb8c69763: cmp     %rbx,%rsi
  0x00007fafb8c69766: jne     0x7fafb8c69751
  0x00007fafb8c69768: cmpb    $0x0,0x1fd0e528(%rip)
  0x00007fafb8c6976f: je      0x7fafb8c6979f
  0x00007fafb8c69775: mov     0xffffffffffffffe8(%rbp),%rsi
  0x00007fafb8c69779: mov     %r15,%rdi
  0x00007fafb8c6977c: test    $0xf,%esp
  0x00007fafb8c69782: je      0x7fafb8c6979a
  0x00007fafb8c69788: sub     $0x8,%rsp
  0x00007fafb8c6978c: callq   0x7fafd81e7140
  0x00007fafb8c69791: add     $0x8,%rsp
  0x00007fafb8c69795: jmpq    0x7fafb8c6979f
  0x00007fafb8c6979a: callq   0x7fafd81e7140
  0x00007fafb8c6979f: mov     0xfffffffffffffff8(%rbp),%rbx
  0x00007fafb8c697a3: cmpl    $0x3,0x408(%r15)
  0x00007fafb8c697ae: je      0x7fafb8c698fa
  0x00007fafb8c697b4: cmp     0x418(%r15),%rbx
  0x00007fafb8c697bb: jle     0x7fafb8c698fa
  0x00007fafb8c697c1: mov     %r15,%rdi
  0x00007fafb8c697c4: test    $0xf,%esp
  0x00007fafb8c697ca: je      0x7fafb8c697e2
  0x00007fafb8c697d0: sub     $0x8,%rsp
  0x00007fafb8c697d4: callq   0x7fafd81ee2f0
  0x00007fafb8c697d9: add     $0x8,%rsp
  0x00007fafb8c697dd: jmpq    0x7fafb8c697e7
  0x00007fafb8c697e2: callq   0x7fafd81ee2f0
  0x00007fafb8c697e7: callq   0x7fafb8c697f1
  0x00007fafb8c697ec: jmpq    0x7fafb8c69883
  0x00007fafb8c697f1: lea     0x8(%rsp),%rax
  0x00007fafb8c697f6: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c697fa: mov     %r15,%rdi
  0x00007fafb8c697fd: vzeroupper
  0x00007fafb8c69800: mov     %rbp,0x330(%r15)
  0x00007fafb8c69807: mov     %rax,0x320(%r15)
  0x00007fafb8c6980e: test    $0xf,%esp
  0x00007fafb8c69814: je      0x7fafb8c6982c
  0x00007fafb8c6981a: sub     $0x8,%rsp
  0x00007fafb8c6981e: callq   0x7fafd7d7ef30
  0x00007fafb8c69823: add     $0x8,%rsp
  0x00007fafb8c69827: jmpq    0x7fafb8c69831
  0x00007fafb8c6982c: callq   0x7fafd7d7ef30
  0x00007fafb8c69831: movabs  $0x0,%r10
  0x00007fafb8c6983b: mov     %r10,0x320(%r15)
  0x00007fafb8c69842: movabs  $0x0,%r10
  0x00007fafb8c6984c: mov     %r10,0x330(%r15)
  0x00007fafb8c69853: movabs  $0x0,%r10
  0x00007fafb8c6985d: mov     %r10,0x328(%r15)
  0x00007fafb8c69864: vzeroupper
  0x00007fafb8c69867: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c6986f: je      0x7fafb8c6987a
  0x00007fafb8c69875: jmpq    0x7fafb8c5c780
  0x00007fafb8c6987a: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6987e: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c69882: retq
  0x00007fafb8c69883: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c69888: sub     $0x80,%rsp
  0x00007fafb8c6988f: mov     %rax,0x78(%rsp)
  0x00007fafb8c69894: mov     %rcx,0x70(%rsp)
  0x00007fafb8c69899: mov     %rdx,0x68(%rsp)
  0x00007fafb8c6989e: mov     %rbx,0x60(%rsp)
  0x00007fafb8c698a3: mov     %rbp,0x50(%rsp)
  0x00007fafb8c698a8: mov     %rsi,0x48(%rsp)
  0x00007fafb8c698ad: mov     %rdi,0x40(%rsp)
  0x00007fafb8c698b2: mov     %r8,0x38(%rsp)
  0x00007fafb8c698b7: mov     %r9,0x30(%rsp)
  0x00007fafb8c698bc: mov     %r10,0x28(%rsp)
  0x00007fafb8c698c1: mov     %r11,0x20(%rsp)
  0x00007fafb8c698c6: mov     %r12,0x18(%rsp)
  0x00007fafb8c698cb: mov     %r13,0x10(%rsp)
  0x00007fafb8c698d0: mov     %r14,0x8(%rsp)
  0x00007fafb8c698d5: mov     %r15,(%rsp)
  0x00007fafb8c698d9: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c698e3: movabs  $0x7fafb8c69883,%rsi
  0x00007fafb8c698ed: mov     %rsp,%rdx
  0x00007fafb8c698f0: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c698f4: callq   0x7fafd7fdd230
  0x00007fafb8c698f9: hlt
  0x00007fafb8c698fa: leave
  0x00007fafb8c698fb: pop     %rdx
  0x00007fafb8c698fc: mov     %rbx,%rsp
  0x00007fafb8c698ff: mov     %rsp,%rsi
  0x00007fafb8c69902: mov     0xfffffffffffffff0(%rbp),%rdx
  0x00007fafb8c69906: vzeroupper
  0x00007fafb8c69909: mov     %rbp,0x330(%r15)
  0x00007fafb8c69910: movabs  $0x7fafb8c69906,%r10
  0x00007fafb8c6991a: mov     %r10,0x328(%r15)
  0x00007fafb8c69921: mov     %rsp,0x320(%r15)
  0x00007fafb8c69928: mov     %r15,%rdi
  0x00007fafb8c6992b: test    $0xf,%esp
  0x00007fafb8c69931: je      0x7fafb8c69949
  0x00007fafb8c69937: sub     $0x8,%rsp
  0x00007fafb8c6993b: callq   0x7fafd7d86ce0
  0x00007fafb8c69940: add     $0x8,%rsp
  0x00007fafb8c69944: jmpq    0x7fafb8c6994e
  0x00007fafb8c69949: callq   0x7fafd7d86ce0
  0x00007fafb8c6994e: movabs  $0x0,%r10
  0x00007fafb8c69958: mov     %r10,0x320(%r15)
  0x00007fafb8c6995f: movabs  $0x0,%r10
  0x00007fafb8c69969: mov     %r10,0x330(%r15)
  0x00007fafb8c69970: movabs  $0x0,%r10
  0x00007fafb8c6997a: mov     %r10,0x328(%r15)
  0x00007fafb8c69981: vzeroupper
  0x00007fafb8c69984: mov     0xfffffffffffffff0(%rbp),%rsp
  0x00007fafb8c69988: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c69990: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c69994: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c69998: push    %rax
  0x00007fafb8c69999: push    %rbx
  0x00007fafb8c6999a: mov     0xffffffffffffffe8(%rbp),%rbx
  0x00007fafb8c6999e: mov     0x10(%rbx),%rax
  0x00007fafb8c699a2: test    %rax,%rax
  0x00007fafb8c699a5: je      0x7fafb8c699e2
  0x00007fafb8c699ab: mov     %r13,%rsi
  0x00007fafb8c699ae: mov     %rbx,%rdi
  0x00007fafb8c699b1: test    $0xf,%esp
  0x00007fafb8c699b7: je      0x7fafb8c699cf
  0x00007fafb8c699bd: sub     $0x8,%rsp
  0x00007fafb8c699c1: callq   0x7fafd7d84c20
  0x00007fafb8c699c6: add     $0x8,%rsp
  0x00007fafb8c699ca: jmpq    0x7fafb8c699d4
  0x00007fafb8c699cf: callq   0x7fafd7d84c20
  0x00007fafb8c699d4: mov     0x10(%rbx),%rbx
  0x00007fafb8c699d8: add     $0x138,%rbx
  0x00007fafb8c699df: add     %rbx,%rax
  0x00007fafb8c699e2: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c699e6: pop     %rbx
  0x00007fafb8c699e7: pop     %rax
  0x00007fafb8c699e8: movl    $0x0,0x44c(%r15)
  0x00007fafb8c699f3: cmpb    $0xb8,0x0(%r13)
  0x00007fafb8c699f8: jne     0x7fafb8c69acb
  0x00007fafb8c699fe: mov     0xffffffffffffffe8(%rbp),%rdx
  0x00007fafb8c69a02: mov     (%r14),%rax
  0x00007fafb8c69a05: callq   0x7fafb8c69a0f
  0x00007fafb8c69a0a: jmpq    0x7fafb8c69abf
  0x00007fafb8c69a0f: mov     %r13,%rcx
  0x00007fafb8c69a12: mov     %rax,%rsi
  0x00007fafb8c69a15: lea     0x8(%rsp),%rax
  0x00007fafb8c69a1a: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c69a1e: mov     %r15,%rdi
  0x00007fafb8c69a21: vzeroupper
  0x00007fafb8c69a24: mov     %rbp,0x330(%r15)
  0x00007fafb8c69a2b: mov     %rax,0x320(%r15)
  0x00007fafb8c69a32: test    $0xf,%esp
  0x00007fafb8c69a38: je      0x7fafb8c69a50
  0x00007fafb8c69a3e: sub     $0x8,%rsp
  0x00007fafb8c69a42: callq   0x7fafd7d87100
  0x00007fafb8c69a47: add     $0x8,%rsp
  0x00007fafb8c69a4b: jmpq    0x7fafb8c69a55
  0x00007fafb8c69a50: callq   0x7fafd7d87100
  0x00007fafb8c69a55: movabs  $0x0,%r10
  0x00007fafb8c69a5f: mov     %r10,0x320(%r15)
  0x00007fafb8c69a66: movabs  $0x0,%r10
  0x00007fafb8c69a70: mov     %r10,0x330(%r15)
  0x00007fafb8c69a77: movabs  $0x0,%r10
  0x00007fafb8c69a81: mov     %r10,0x328(%r15)
  0x00007fafb8c69a88: vzeroupper
  0x00007fafb8c69a8b: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c69a93: je      0x7fafb8c69a9e
  0x00007fafb8c69a99: jmpq    0x7fafb8c5c780
  0x00007fafb8c69a9e: mov     0x380(%r15),%rax
  0x00007fafb8c69aa5: movabs  $0x0,%r10
  0x00007fafb8c69aaf: mov     %r10,0x380(%r15)
  0x00007fafb8c69ab6: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c69aba: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c69abe: retq
  0x00007fafb8c69abf: test    %rax,%rax
  0x00007fafb8c69ac2: je      0x7fafb8c69acb
  0x00007fafb8c69ac8: mov     %rax,(%rbx)
  0x00007fafb8c69acb: movzbl  0x0(%r13),%ebx
  0x00007fafb8c69ad0: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c69ada: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c69ade: pop     %rax
  0x00007fafb8c69adf: mov     %rax,0x380(%r15)
  0x00007fafb8c69ae6: mov     0x3dd(%r15),%bl
  0x00007fafb8c69aed: movb    $0x0,0x3dd(%r15)
  0x00007fafb8c69af5: mov     0xffffffffffffffe8(%rbp),%rcx
  0x00007fafb8c69af9: mov     0x20(%rcx),%ecx
  0x00007fafb8c69afc: test    $0x20,%ecx
  0x00007fafb8c69b02: je      0x7fafb8c69ca2
  0x00007fafb8c69b08: testb   $0xff,%bl
  0x00007fafb8c69b0b: jne     0x7fafb8c69e49
  0x00007fafb8c69b11: lea     0xffffffffffffffa8(%rbp),%rsi
  0x00007fafb8c69b15: mov     0x8(%rsi),%rax
  0x00007fafb8c69b19: test    %rax,%rax
  0x00007fafb8c69b1c: jne     0x7fafb8c69bc3
  0x00007fafb8c69b22: callq   0x7fafb8c69b2c
  0x00007fafb8c69b27: jmpq    0x7fafb8c69bbe
  0x00007fafb8c69b2c: lea     0x8(%rsp),%rax
  0x00007fafb8c69b31: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c69b35: mov     %r15,%rdi
  0x00007fafb8c69b38: vzeroupper
  0x00007fafb8c69b3b: mov     %rbp,0x330(%r15)
  0x00007fafb8c69b42: mov     %rax,0x320(%r15)
  0x00007fafb8c69b49: test    $0xf,%esp
  0x00007fafb8c69b4f: je      0x7fafb8c69b67
  0x00007fafb8c69b55: sub     $0x8,%rsp
  0x00007fafb8c69b59: callq   0x7fafd7d82890
  0x00007fafb8c69b5e: add     $0x8,%rsp
  0x00007fafb8c69b62: jmpq    0x7fafb8c69b6c
  0x00007fafb8c69b67: callq   0x7fafd7d82890
  0x00007fafb8c69b6c: movabs  $0x0,%r10
  0x00007fafb8c69b76: mov     %r10,0x320(%r15)
  0x00007fafb8c69b7d: movabs  $0x0,%r10
  0x00007fafb8c69b87: mov     %r10,0x330(%r15)
  0x00007fafb8c69b8e: movabs  $0x0,%r10
  0x00007fafb8c69b98: mov     %r10,0x328(%r15)
  0x00007fafb8c69b9f: vzeroupper
  0x00007fafb8c69ba2: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c69baa: je      0x7fafb8c69bb5
  0x00007fafb8c69bb0: jmpq    0x7fafb8c5c780
  0x00007fafb8c69bb5: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c69bb9: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c69bbd: retq
  0x00007fafb8c69bbe: jmpq    0x7fafb8c69ca2
  0x00007fafb8c69bc3: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c69bc7: lea     (%rsi),%rax
  0x00007fafb8c69bca: mov     0x8(%rsi),%rcx
  0x00007fafb8c69bce: movq    $0x0,0x8(%rsi)
  0x00007fafb8c69bd6: mov     (%rcx),%rdx
  0x00007fafb8c69bd9: and     $0x7,%rdx
  0x00007fafb8c69bdd: cmp     $0x5,%rdx
  0x00007fafb8c69be1: je      0x7fafb8c69c9e
  0x00007fafb8c69be7: mov     (%rax),%rdx
  0x00007fafb8c69bea: test    %rdx,%rdx
  0x00007fafb8c69bed: je      0x7fafb8c69c9e
  0x00007fafb8c69bf3: lock cmpxchg %rdx,(%rcx)
  0x00007fafb8c69bf8: je      0x7fafb8c69c9e
  0x00007fafb8c69bfe: mov     %rcx,0x8(%rsi)
  0x00007fafb8c69c02: callq   0x7fafb8c69c0c
  0x00007fafb8c69c07: jmpq    0x7fafb8c69c9e
  0x00007fafb8c69c0c: lea     0x8(%rsp),%rax
  0x00007fafb8c69c11: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c69c15: mov     %r15,%rdi
  0x00007fafb8c69c18: vzeroupper
  0x00007fafb8c69c1b: mov     %rbp,0x330(%r15)
  0x00007fafb8c69c22: mov     %rax,0x320(%r15)
  0x00007fafb8c69c29: test    $0xf,%esp
  0x00007fafb8c69c2f: je      0x7fafb8c69c47
  0x00007fafb8c69c35: sub     $0x8,%rsp
  0x00007fafb8c69c39: callq   0x7fafd7d82470
  0x00007fafb8c69c3e: add     $0x8,%rsp
  0x00007fafb8c69c42: jmpq    0x7fafb8c69c4c
  0x00007fafb8c69c47: callq   0x7fafd7d82470
  0x00007fafb8c69c4c: movabs  $0x0,%r10
  0x00007fafb8c69c56: mov     %r10,0x320(%r15)
  0x00007fafb8c69c5d: movabs  $0x0,%r10
  0x00007fafb8c69c67: mov     %r10,0x330(%r15)
  0x00007fafb8c69c6e: movabs  $0x0,%r10
  0x00007fafb8c69c78: mov     %r10,0x328(%r15)
  0x00007fafb8c69c7f: vzeroupper
  0x00007fafb8c69c82: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c69c8a: je      0x7fafb8c69c95
  0x00007fafb8c69c90: jmpq    0x7fafb8c5c780
  0x00007fafb8c69c95: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c69c99: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c69c9d: retq
  0x00007fafb8c69c9e: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c69ca2: mov     0xffffffffffffffb8(%rbp),%rsi
  0x00007fafb8c69ca6: lea     0xffffffffffffffb8(%rbp),%rbx
  0x00007fafb8c69caa: jmpq    0x7fafb8c69e44
  0x00007fafb8c69caf: mov     %rsi,%rsi
  0x00007fafb8c69cb2: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c69cb6: lea     (%rsi),%rax
  0x00007fafb8c69cb9: mov     0x8(%rsi),%rcx
  0x00007fafb8c69cbd: movq    $0x0,0x8(%rsi)
  0x00007fafb8c69cc5: mov     (%rcx),%rdx
  0x00007fafb8c69cc8: and     $0x7,%rdx
  0x00007fafb8c69ccc: cmp     $0x5,%rdx
  0x00007fafb8c69cd0: je      0x7fafb8c69d8d
  0x00007fafb8c69cd6: mov     (%rax),%rdx
  0x00007fafb8c69cd9: test    %rdx,%rdx
  0x00007fafb8c69cdc: je      0x7fafb8c69d8d
  0x00007fafb8c69ce2: lock cmpxchg %rdx,(%rcx)
  0x00007fafb8c69ce7: je      0x7fafb8c69d8d
  0x00007fafb8c69ced: mov     %rcx,0x8(%rsi)
  0x00007fafb8c69cf1: callq   0x7fafb8c69cfb
  0x00007fafb8c69cf6: jmpq    0x7fafb8c69d8d
  0x00007fafb8c69cfb: lea     0x8(%rsp),%rax
  0x00007fafb8c69d00: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c69d04: mov     %r15,%rdi
  0x00007fafb8c69d07: vzeroupper
  0x00007fafb8c69d0a: mov     %rbp,0x330(%r15)
  0x00007fafb8c69d11: mov     %rax,0x320(%r15)
  0x00007fafb8c69d18: test    $0xf,%esp
  0x00007fafb8c69d1e: je      0x7fafb8c69d36
  0x00007fafb8c69d24: sub     $0x8,%rsp
  0x00007fafb8c69d28: callq   0x7fafd7d82470
  0x00007fafb8c69d2d: add     $0x8,%rsp
  0x00007fafb8c69d31: jmpq    0x7fafb8c69d3b
  0x00007fafb8c69d36: callq   0x7fafd7d82470
  0x00007fafb8c69d3b: movabs  $0x0,%r10
  0x00007fafb8c69d45: mov     %r10,0x320(%r15)
  0x00007fafb8c69d4c: movabs  $0x0,%r10
  0x00007fafb8c69d56: mov     %r10,0x330(%r15)
  0x00007fafb8c69d5d: movabs  $0x0,%r10
  0x00007fafb8c69d67: mov     %r10,0x328(%r15)
  0x00007fafb8c69d6e: vzeroupper
  0x00007fafb8c69d71: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c69d79: je      0x7fafb8c69d84
  0x00007fafb8c69d7f: jmpq    0x7fafb8c5c780
  0x00007fafb8c69d84: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c69d88: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c69d8c: retq
  0x00007fafb8c69d8d: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c69d91: callq   0x7fafb8c69d9b
  0x00007fafb8c69d96: jmpq    0x7fafb8c69e2d
  0x00007fafb8c69d9b: lea     0x8(%rsp),%rax
  0x00007fafb8c69da0: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c69da4: mov     %r15,%rdi
  0x00007fafb8c69da7: vzeroupper
  0x00007fafb8c69daa: mov     %rbp,0x330(%r15)
  0x00007fafb8c69db1: mov     %rax,0x320(%r15)
  0x00007fafb8c69db8: test    $0xf,%esp
  0x00007fafb8c69dbe: je      0x7fafb8c69dd6
  0x00007fafb8c69dc4: sub     $0x8,%rsp
  0x00007fafb8c69dc8: callq   0x7fafd7d82890
  0x00007fafb8c69dcd: add     $0x8,%rsp
  0x00007fafb8c69dd1: jmpq    0x7fafb8c69ddb
  0x00007fafb8c69dd6: callq   0x7fafd7d82890
  0x00007fafb8c69ddb: movabs  $0x0,%r10
  0x00007fafb8c69de5: mov     %r10,0x320(%r15)
  0x00007fafb8c69dec: movabs  $0x0,%r10
  0x00007fafb8c69df6: mov     %r10,0x330(%r15)
  0x00007fafb8c69dfd: movabs  $0x0,%r10
  0x00007fafb8c69e07: mov     %r10,0x328(%r15)
  0x00007fafb8c69e0e: vzeroupper
  0x00007fafb8c69e11: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c69e19: je      0x7fafb8c69e24
  0x00007fafb8c69e1f: jmpq    0x7fafb8c5c780
  0x00007fafb8c69e24: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c69e28: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c69e2c: retq
  0x00007fafb8c69e2d: jmpq    0x7fafb8c69ca2
  0x00007fafb8c69e32: cmpq    $0x0,0x8(%rsi)
  0x00007fafb8c69e3a: jne     0x7fafb8c69caf
  0x00007fafb8c69e40: add     $0x10,%rsi
  0x00007fafb8c69e44: cmp     %rbx,%rsi
  0x00007fafb8c69e47: jne     0x7fafb8c69e32
  0x00007fafb8c69e49: cmpb    $0x0,0x1fd0de47(%rip)
  0x00007fafb8c69e50: je      0x7fafb8c69e80
  0x00007fafb8c69e56: mov     0xffffffffffffffe8(%rbp),%rsi
  0x00007fafb8c69e5a: mov     %r15,%rdi
  0x00007fafb8c69e5d: test    $0xf,%esp
  0x00007fafb8c69e63: je      0x7fafb8c69e7b
  0x00007fafb8c69e69: sub     $0x8,%rsp
  0x00007fafb8c69e6d: callq   0x7fafd81e7140
  0x00007fafb8c69e72: add     $0x8,%rsp
  0x00007fafb8c69e76: jmpq    0x7fafb8c69e80
  0x00007fafb8c69e7b: callq   0x7fafd81e7140
  0x00007fafb8c69e80: mov     0xfffffffffffffff8(%rbp),%rbx
  0x00007fafb8c69e84: cmpl    $0x3,0x408(%r15)
  0x00007fafb8c69e8f: je      0x7fafb8c69fdb
  0x00007fafb8c69e95: cmp     0x418(%r15),%rbx
  0x00007fafb8c69e9c: jle     0x7fafb8c69fdb
  0x00007fafb8c69ea2: mov     %r15,%rdi
  0x00007fafb8c69ea5: test    $0xf,%esp
  0x00007fafb8c69eab: je      0x7fafb8c69ec3
  0x00007fafb8c69eb1: sub     $0x8,%rsp
  0x00007fafb8c69eb5: callq   0x7fafd81ee2f0
  0x00007fafb8c69eba: add     $0x8,%rsp
  0x00007fafb8c69ebe: jmpq    0x7fafb8c69ec8
  0x00007fafb8c69ec3: callq   0x7fafd81ee2f0
  0x00007fafb8c69ec8: callq   0x7fafb8c69ed2
  0x00007fafb8c69ecd: jmpq    0x7fafb8c69f64
  0x00007fafb8c69ed2: lea     0x8(%rsp),%rax
  0x00007fafb8c69ed7: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c69edb: mov     %r15,%rdi
  0x00007fafb8c69ede: vzeroupper
  0x00007fafb8c69ee1: mov     %rbp,0x330(%r15)
  0x00007fafb8c69ee8: mov     %rax,0x320(%r15)
  0x00007fafb8c69eef: test    $0xf,%esp
  0x00007fafb8c69ef5: je      0x7fafb8c69f0d
  0x00007fafb8c69efb: sub     $0x8,%rsp
  0x00007fafb8c69eff: callq   0x7fafd7d7ef30
  0x00007fafb8c69f04: add     $0x8,%rsp
  0x00007fafb8c69f08: jmpq    0x7fafb8c69f12
  0x00007fafb8c69f0d: callq   0x7fafd7d7ef30
  0x00007fafb8c69f12: movabs  $0x0,%r10
  0x00007fafb8c69f1c: mov     %r10,0x320(%r15)
  0x00007fafb8c69f23: movabs  $0x0,%r10
  0x00007fafb8c69f2d: mov     %r10,0x330(%r15)
  0x00007fafb8c69f34: movabs  $0x0,%r10
  0x00007fafb8c69f3e: mov     %r10,0x328(%r15)
  0x00007fafb8c69f45: vzeroupper
  0x00007fafb8c69f48: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c69f50: je      0x7fafb8c69f5b
  0x00007fafb8c69f56: jmpq    0x7fafb8c5c780
  0x00007fafb8c69f5b: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c69f5f: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c69f63: retq
  0x00007fafb8c69f64: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c69f69: sub     $0x80,%rsp
  0x00007fafb8c69f70: mov     %rax,0x78(%rsp)
  0x00007fafb8c69f75: mov     %rcx,0x70(%rsp)
  0x00007fafb8c69f7a: mov     %rdx,0x68(%rsp)
  0x00007fafb8c69f7f: mov     %rbx,0x60(%rsp)
  0x00007fafb8c69f84: mov     %rbp,0x50(%rsp)
  0x00007fafb8c69f89: mov     %rsi,0x48(%rsp)
  0x00007fafb8c69f8e: mov     %rdi,0x40(%rsp)
  0x00007fafb8c69f93: mov     %r8,0x38(%rsp)
  0x00007fafb8c69f98: mov     %r9,0x30(%rsp)
  0x00007fafb8c69f9d: mov     %r10,0x28(%rsp)
  0x00007fafb8c69fa2: mov     %r11,0x20(%rsp)
  0x00007fafb8c69fa7: mov     %r12,0x18(%rsp)
  0x00007fafb8c69fac: mov     %r13,0x10(%rsp)
  0x00007fafb8c69fb1: mov     %r14,0x8(%rsp)
  0x00007fafb8c69fb6: mov     %r15,(%rsp)
  0x00007fafb8c69fba: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c69fc4: movabs  $0x7fafb8c69f64,%rsi
  0x00007fafb8c69fce: mov     %rsp,%rdx
  0x00007fafb8c69fd1: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c69fd5: callq   0x7fafd7fdd230
  0x00007fafb8c69fda: hlt
  0x00007fafb8c69fdb: leave
  0x00007fafb8c69fdc: pop     %rdx
  0x00007fafb8c69fdd: mov     %rbx,%rsp
  0x00007fafb8c69fe0: mov     0x380(%r15),%rax
  0x00007fafb8c69fe7: movabs  $0x0,%r10
  0x00007fafb8c69ff1: mov     %r10,0x380(%r15)
  0x00007fafb8c69ff8: push    %rax
  0x00007fafb8c69ff9: push    %rdx
  0x00007fafb8c69ffa: mov     %rdx,%rsi
  0x00007fafb8c69ffd: mov     %r15,%rdi
  0x00007fafb8c6a000: test    $0xf,%esp
  0x00007fafb8c6a006: je      0x7fafb8c6a01e
  0x00007fafb8c6a00c: sub     $0x8,%rsp
  0x00007fafb8c6a010: callq   0x7fafd81e4820
  0x00007fafb8c6a015: add     $0x8,%rsp
  0x00007fafb8c6a019: jmpq    0x7fafb8c6a023
  0x00007fafb8c6a01e: callq   0x7fafd81e4820
  0x00007fafb8c6a023: mov     %rax,%rbx
  0x00007fafb8c6a026: pop     %rdx
  0x00007fafb8c6a027: pop     %rax
  0x00007fafb8c6a028: jmpq    %rbx
  0x00007fafb8c6a02a: nopw    0x0(%rax,%rax)
  0x00007fafb8c6a030: add     %al,(%rax)
  0x00007fafb8c6a032: add     %al,(%rax)
  0x00007fafb8c6a034: add     %al,(%rax)
  0x00007fafb8c6a036: add     %al,(%rax)
  0x00007fafb8c6a038: add     %al,(%rax)
  0x00007fafb8c6a03a: add     %al,(%rax)
  0x00007fafb8c6a03c: add     %al,(%rax)
  0x00007fafb8c6a03e: add     %al,(%rax)

----------------------------------------------------------------------
throw exception entrypoints  [0x00007fafb8c6a060, 0x00007fafb8c6a500]  1184 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6a060 Code size: 0x000004a0
  0x00007fafb8c6a060: mov     0xffffffffffffffb8(%rbp),%rsp
  0x00007fafb8c6a064: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c6a06c: callq   0x7fafb8c6a076
  0x00007fafb8c6a071: jmpq    0x7fafb8c6a10b
  0x00007fafb8c6a076: mov     %rbx,%rdx
  0x00007fafb8c6a079: lea     0x8(%rsp),%rax
  0x00007fafb8c6a07e: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c6a082: mov     %r15,%rdi
  0x00007fafb8c6a085: vzeroupper
  0x00007fafb8c6a088: mov     %rbp,0x330(%r15)
  0x00007fafb8c6a08f: mov     %rax,0x320(%r15)
  0x00007fafb8c6a096: test    $0xf,%esp
  0x00007fafb8c6a09c: je      0x7fafb8c6a0b4
  0x00007fafb8c6a0a2: sub     $0x8,%rsp
  0x00007fafb8c6a0a6: callq   0x7fafd7d7f740
  0x00007fafb8c6a0ab: add     $0x8,%rsp
  0x00007fafb8c6a0af: jmpq    0x7fafb8c6a0b9
  0x00007fafb8c6a0b4: callq   0x7fafd7d7f740
  0x00007fafb8c6a0b9: movabs  $0x0,%r10
  0x00007fafb8c6a0c3: mov     %r10,0x320(%r15)
  0x00007fafb8c6a0ca: movabs  $0x0,%r10
  0x00007fafb8c6a0d4: mov     %r10,0x330(%r15)
  0x00007fafb8c6a0db: movabs  $0x0,%r10
  0x00007fafb8c6a0e5: mov     %r10,0x328(%r15)
  0x00007fafb8c6a0ec: vzeroupper
  0x00007fafb8c6a0ef: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c6a0f7: je      0x7fafb8c6a102
  0x00007fafb8c6a0fd: jmpq    0x7fafb8c5c780
  0x00007fafb8c6a102: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6a106: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c6a10a: retq
  0x00007fafb8c6a10b: pop     %rdx
  0x00007fafb8c6a10c: mov     0xffffffffffffffb8(%rbp),%rsp
  0x00007fafb8c6a110: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c6a118: movabs  $0x7fafd84614b9,%rsi
  0x00007fafb8c6a122: callq   0x7fafb8c6a12c
  0x00007fafb8c6a127: jmpq    0x7fafb8c6a1d6
  0x00007fafb8c6a12c: lea     0x8(%rsp),%rax
  0x00007fafb8c6a131: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c6a135: mov     %r15,%rdi
  0x00007fafb8c6a138: vzeroupper
  0x00007fafb8c6a13b: mov     %rbp,0x330(%r15)
  0x00007fafb8c6a142: mov     %rax,0x320(%r15)
  0x00007fafb8c6a149: test    $0xf,%esp
  0x00007fafb8c6a14f: je      0x7fafb8c6a167
  0x00007fafb8c6a155: sub     $0x8,%rsp
  0x00007fafb8c6a159: callq   0x7fafd7d7f440
  0x00007fafb8c6a15e: add     $0x8,%rsp
  0x00007fafb8c6a162: jmpq    0x7fafb8c6a16c
  0x00007fafb8c6a167: callq   0x7fafd7d7f440
  0x00007fafb8c6a16c: movabs  $0x0,%r10
  0x00007fafb8c6a176: mov     %r10,0x320(%r15)
  0x00007fafb8c6a17d: movabs  $0x0,%r10
  0x00007fafb8c6a187: mov     %r10,0x330(%r15)
  0x00007fafb8c6a18e: movabs  $0x0,%r10
  0x00007fafb8c6a198: mov     %r10,0x328(%r15)
  0x00007fafb8c6a19f: vzeroupper
  0x00007fafb8c6a1a2: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c6a1aa: je      0x7fafb8c6a1b5
  0x00007fafb8c6a1b0: jmpq    0x7fafb8c5c780
  0x00007fafb8c6a1b5: mov     0x380(%r15),%rax
  0x00007fafb8c6a1bc: movabs  $0x0,%r10
  0x00007fafb8c6a1c6: mov     %r10,0x380(%r15)
  0x00007fafb8c6a1cd: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6a1d1: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c6a1d5: retq
  0x00007fafb8c6a1d6: jmpq    0x7fafb8c69013
  0x00007fafb8c6a1db: mov     0xffffffffffffffb8(%rbp),%rsp
  0x00007fafb8c6a1df: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c6a1e7: movabs  $0x7fafd84614d7,%rsi
  0x00007fafb8c6a1f1: movabs  $0x7fafd83e4e58,%rdx
  0x00007fafb8c6a1fb: callq   0x7fafb8c6a205
  0x00007fafb8c6a200: jmpq    0x7fafb8c6a2af
  0x00007fafb8c6a205: lea     0x8(%rsp),%rax
  0x00007fafb8c6a20a: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c6a20e: mov     %r15,%rdi
  0x00007fafb8c6a211: vzeroupper
  0x00007fafb8c6a214: mov     %rbp,0x330(%r15)
  0x00007fafb8c6a21b: mov     %rax,0x320(%r15)
  0x00007fafb8c6a222: test    $0xf,%esp
  0x00007fafb8c6a228: je      0x7fafb8c6a240
  0x00007fafb8c6a22e: sub     $0x8,%rsp
  0x00007fafb8c6a232: callq   0x7fafd7d7f1b0
  0x00007fafb8c6a237: add     $0x8,%rsp
  0x00007fafb8c6a23b: jmpq    0x7fafb8c6a245
  0x00007fafb8c6a240: callq   0x7fafd7d7f1b0
  0x00007fafb8c6a245: movabs  $0x0,%r10
  0x00007fafb8c6a24f: mov     %r10,0x320(%r15)
  0x00007fafb8c6a256: movabs  $0x0,%r10
  0x00007fafb8c6a260: mov     %r10,0x330(%r15)
  0x00007fafb8c6a267: movabs  $0x0,%r10
  0x00007fafb8c6a271: mov     %r10,0x328(%r15)
  0x00007fafb8c6a278: vzeroupper
  0x00007fafb8c6a27b: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c6a283: je      0x7fafb8c6a28e
  0x00007fafb8c6a289: jmpq    0x7fafb8c5c780
  0x00007fafb8c6a28e: mov     0x380(%r15),%rax
  0x00007fafb8c6a295: movabs  $0x0,%r10
  0x00007fafb8c6a29f: mov     %r10,0x380(%r15)
  0x00007fafb8c6a2a6: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6a2aa: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c6a2ae: retq
  0x00007fafb8c6a2af: jmpq    0x7fafb8c69013
  0x00007fafb8c6a2b4: pop     %rsi
  0x00007fafb8c6a2b5: mov     0xffffffffffffffb8(%rbp),%rsp
  0x00007fafb8c6a2b9: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c6a2c1: callq   0x7fafb8c6a2cb
  0x00007fafb8c6a2c6: jmpq    0x7fafb8c6a35d
  0x00007fafb8c6a2cb: lea     0x8(%rsp),%rax
  0x00007fafb8c6a2d0: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c6a2d4: mov     %r15,%rdi
  0x00007fafb8c6a2d7: vzeroupper
  0x00007fafb8c6a2da: mov     %rbp,0x330(%r15)
  0x00007fafb8c6a2e1: mov     %rax,0x320(%r15)
  0x00007fafb8c6a2e8: test    $0xf,%esp
  0x00007fafb8c6a2ee: je      0x7fafb8c6a306
  0x00007fafb8c6a2f4: sub     $0x8,%rsp
  0x00007fafb8c6a2f8: callq   0x7fafd7d7fa30
  0x00007fafb8c6a2fd: add     $0x8,%rsp
  0x00007fafb8c6a301: jmpq    0x7fafb8c6a30b
  0x00007fafb8c6a306: callq   0x7fafd7d7fa30
  0x00007fafb8c6a30b: movabs  $0x0,%r10
  0x00007fafb8c6a315: mov     %r10,0x320(%r15)
  0x00007fafb8c6a31c: movabs  $0x0,%r10
  0x00007fafb8c6a326: mov     %r10,0x330(%r15)
  0x00007fafb8c6a32d: movabs  $0x0,%r10
  0x00007fafb8c6a337: mov     %r10,0x328(%r15)
  0x00007fafb8c6a33e: vzeroupper
  0x00007fafb8c6a341: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c6a349: je      0x7fafb8c6a354
  0x00007fafb8c6a34f: jmpq    0x7fafb8c5c780
  0x00007fafb8c6a354: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6a358: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c6a35c: retq
  0x00007fafb8c6a35d: mov     0xffffffffffffffb8(%rbp),%rsp
  0x00007fafb8c6a361: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c6a369: movabs  $0x7fafd8460d28,%rsi
  0x00007fafb8c6a373: movabs  $0x0,%rdx
  0x00007fafb8c6a37d: callq   0x7fafb8c6a387
  0x00007fafb8c6a382: jmpq    0x7fafb8c6a431
  0x00007fafb8c6a387: lea     0x8(%rsp),%rax
  0x00007fafb8c6a38c: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c6a390: mov     %r15,%rdi
  0x00007fafb8c6a393: vzeroupper
  0x00007fafb8c6a396: mov     %rbp,0x330(%r15)
  0x00007fafb8c6a39d: mov     %rax,0x320(%r15)
  0x00007fafb8c6a3a4: test    $0xf,%esp
  0x00007fafb8c6a3aa: je      0x7fafb8c6a3c2
  0x00007fafb8c6a3b0: sub     $0x8,%rsp
  0x00007fafb8c6a3b4: callq   0x7fafd7d7f1b0
  0x00007fafb8c6a3b9: add     $0x8,%rsp
  0x00007fafb8c6a3bd: jmpq    0x7fafb8c6a3c7
  0x00007fafb8c6a3c2: callq   0x7fafd7d7f1b0
  0x00007fafb8c6a3c7: movabs  $0x0,%r10
  0x00007fafb8c6a3d1: mov     %r10,0x320(%r15)
  0x00007fafb8c6a3d8: movabs  $0x0,%r10
  0x00007fafb8c6a3e2: mov     %r10,0x330(%r15)
  0x00007fafb8c6a3e9: movabs  $0x0,%r10
  0x00007fafb8c6a3f3: mov     %r10,0x328(%r15)
  0x00007fafb8c6a3fa: vzeroupper
  0x00007fafb8c6a3fd: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c6a405: je      0x7fafb8c6a410
  0x00007fafb8c6a40b: jmpq    0x7fafb8c5c780
  0x00007fafb8c6a410: mov     0x380(%r15),%rax
  0x00007fafb8c6a417: movabs  $0x0,%r10
  0x00007fafb8c6a421: mov     %r10,0x380(%r15)
  0x00007fafb8c6a428: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6a42c: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c6a430: retq
  0x00007fafb8c6a431: jmpq    0x7fafb8c69013
  0x00007fafb8c6a436: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6a43a: mov     0xffffffffffffffb8(%rbp),%rsp
  0x00007fafb8c6a43e: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c6a446: callq   0x7fafb8c6a450
  0x00007fafb8c6a44b: jmpq    0x7fafb8c6a4e2
  0x00007fafb8c6a450: lea     0x8(%rsp),%rax
  0x00007fafb8c6a455: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c6a459: mov     %r15,%rdi
  0x00007fafb8c6a45c: vzeroupper
  0x00007fafb8c6a45f: mov     %rbp,0x330(%r15)
  0x00007fafb8c6a466: mov     %rax,0x320(%r15)
  0x00007fafb8c6a46d: test    $0xf,%esp
  0x00007fafb8c6a473: je      0x7fafb8c6a48b
  0x00007fafb8c6a479: sub     $0x8,%rsp
  0x00007fafb8c6a47d: callq   0x7fafd7d7ecc0
  0x00007fafb8c6a482: add     $0x8,%rsp
  0x00007fafb8c6a486: jmpq    0x7fafb8c6a490
  0x00007fafb8c6a48b: callq   0x7fafd7d7ecc0
  0x00007fafb8c6a490: movabs  $0x0,%r10
  0x00007fafb8c6a49a: mov     %r10,0x320(%r15)
  0x00007fafb8c6a4a1: movabs  $0x0,%r10
  0x00007fafb8c6a4ab: mov     %r10,0x330(%r15)
  0x00007fafb8c6a4b2: movabs  $0x0,%r10
  0x00007fafb8c6a4bc: mov     %r10,0x328(%r15)
  0x00007fafb8c6a4c3: vzeroupper
  0x00007fafb8c6a4c6: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c6a4ce: je      0x7fafb8c6a4d9
  0x00007fafb8c6a4d4: jmpq    0x7fafb8c5c780
  0x00007fafb8c6a4d9: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6a4dd: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c6a4e1: retq
  0x00007fafb8c6a4e2: nopw    0x0(%rax,%rax)
  0x00007fafb8c6a4e8: add     %al,(%rax)
  0x00007fafb8c6a4ea: add     %al,(%rax)
  0x00007fafb8c6a4ec: add     %al,(%rax)
  0x00007fafb8c6a4ee: add     %al,(%rax)
  0x00007fafb8c6a4f0: add     %al,(%rax)
  0x00007fafb8c6a4f2: add     %al,(%rax)
  0x00007fafb8c6a4f4: add     %al,(%rax)
  0x00007fafb8c6a4f6: add     %al,(%rax)
  0x00007fafb8c6a4f8: add     %al,(%rax)
  0x00007fafb8c6a4fa: add     %al,(%rax)
  0x00007fafb8c6a4fc: add     %al,(%rax)
  0x00007fafb8c6a4fe: add     %al,(%rax)

----------------------------------------------------------------------
method entry point (kind = zerolocals)  [0x00007fafb8c6a520, 0x00007fafb8c6aa00]  1248 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6a520 Code size: 0x000004e0
  0x00007fafb8c6a520: mov     0x8(%rbx),%rdx
  0x00007fafb8c6a524: movzwl  0x34(%rdx),%ecx
  0x00007fafb8c6a528: movzwl  0x32(%rdx),%edx
  0x00007fafb8c6a52c: sub     %ecx,%edx
  0x00007fafb8c6a52e: cmp     $0x1f5,%edx
  0x00007fafb8c6a534: jbe     0x7fafb8c6a55f
  0x00007fafb8c6a53a: mov     %rdx,%rax
  0x00007fafb8c6a53d: shl     $0x3,%rax
  0x00007fafb8c6a541: add     $0x58,%rax
  0x00007fafb8c6a545: add     0x410(%r15),%rax
  0x00007fafb8c6a54c: cmp     %rax,%rsp
  0x00007fafb8c6a54f: jnbe    0x7fafb8c6a55f
  0x00007fafb8c6a555: pop     %rax
  0x00007fafb8c6a556: mov     %r13,%rsp
  0x00007fafb8c6a559: push    %rax
  0x00007fafb8c6a55a: jmpq    0x7fafb8c64100
  0x00007fafb8c6a55f: pop     %rax
  0x00007fafb8c6a560: lea     0xfffffffffffffff8(%rsp,%rcx,8),%r14
  0x00007fafb8c6a565: test    %edx,%edx
  0x00007fafb8c6a567: jle     0x7fafb8c6a576
  0x00007fafb8c6a56d: pushq   $0x0
  0x00007fafb8c6a572: decl    %edx
  0x00007fafb8c6a574: jnle    0x7fafb8c6a56d
  0x00007fafb8c6a576: push    %rax
  0x00007fafb8c6a577: push    %rbp
  0x00007fafb8c6a578: mov     %rsp,%rbp
  0x00007fafb8c6a57b: push    %r13
  0x00007fafb8c6a57d: pushq   $0x0
  0x00007fafb8c6a582: mov     0x8(%rbx),%r13
  0x00007fafb8c6a586: lea     0x38(%r13),%r13
  0x00007fafb8c6a58a: push    %rbx
  0x00007fafb8c6a58b: mov     0x8(%rbx),%rdx
  0x00007fafb8c6a58f: mov     0x8(%rdx),%rdx
  0x00007fafb8c6a593: mov     0x18(%rdx),%rdx
  0x00007fafb8c6a597: mov     0x70(%rdx),%rdx
  0x00007fafb8c6a59b: mov     (%rdx),%rdx
  0x00007fafb8c6a59e: push    %rdx
  0x00007fafb8c6a59f: mov     0x10(%rbx),%rdx
  0x00007fafb8c6a5a3: test    %rdx,%rdx
  0x00007fafb8c6a5a6: je      0x7fafb8c6a5b3
  0x00007fafb8c6a5ac: add     $0x138,%rdx
  0x00007fafb8c6a5b3: push    %rdx
  0x00007fafb8c6a5b4: mov     0x8(%rbx),%rdx
  0x00007fafb8c6a5b8: mov     0x8(%rdx),%rdx
  0x00007fafb8c6a5bc: mov     0x10(%rdx),%rdx
  0x00007fafb8c6a5c0: push    %rdx
  0x00007fafb8c6a5c1: push    %r14
  0x00007fafb8c6a5c3: push    %r13
  0x00007fafb8c6a5c5: pushq   $0x0
  0x00007fafb8c6a5ca: mov     %rsp,(%rsp)
  0x00007fafb8c6a5ce: movb    $0x1,0x3dd(%r15)
  0x00007fafb8c6a5d6: mov     0xffffffffffffffd8(%rbp),%rax
  0x00007fafb8c6a5da: test    %rax,%rax
  0x00007fafb8c6a5dd: je      0x7fafb8c6a679
  0x00007fafb8c6a5e3: mov     0xfffffffffffffffc(%rax),%ecx
  0x00007fafb8c6a5e6: test    %ecx,%ecx
  0x00007fafb8c6a5e8: js      0x7fafb8c6a679
  0x00007fafb8c6a5ee: add     %rcx,%rax
  0x00007fafb8c6a5f1: mov     0x8(%rax),%rcx
  0x00007fafb8c6a5f5: sub     $0x2,%rcx
  0x00007fafb8c6a5f9: mov     0x10(%rax,%rcx,8),%rdx
  0x00007fafb8c6a5fe: neg     %rdx
  0x00007fafb8c6a601: mov     (%r14,%rdx,8),%rdx
  0x00007fafb8c6a605: test    %rdx,%rdx
  0x00007fafb8c6a608: jne     0x7fafb8c6a615
  0x00007fafb8c6a60a: orq     $0x1,0x18(%rax,%rcx,8)
  0x00007fafb8c6a613: jmp     0x7fafb8c6a673
  0x00007fafb8c6a615: mov     0x8(%rdx),%edx
  0x00007fafb8c6a618: movabs  $0x800000000,%r12
  0x00007fafb8c6a622: add     %r12,%rdx
  0x00007fafb8c6a625: xor     %r12,%r12
  0x00007fafb8c6a628: xor     0x18(%rax,%rcx,8),%rdx
  0x00007fafb8c6a62d: test    $0xfffffffffffffffc,%rdx
  0x00007fafb8c6a634: je      0x7fafb8c6a673
  0x00007fafb8c6a636: test    $0x2,%rdx
  0x00007fafb8c6a63d: jne     0x7fafb8c6a673
  0x00007fafb8c6a63f: cmpq    $0x0,0x18(%rax,%rcx,8)
  0x00007fafb8c6a648: je      0x7fafb8c6a66e
  0x00007fafb8c6a64a: cmpq    $0x1,0x18(%rax,%rcx,8)
  0x00007fafb8c6a653: je      0x7fafb8c6a66e
  0x00007fafb8c6a655: xor     0x18(%rax,%rcx,8),%rdx
  0x00007fafb8c6a65a: test    $0xfffffffffffffffc,%rdx
  0x00007fafb8c6a661: je      0x7fafb8c6a673
  0x00007fafb8c6a663: orq     $0x2,0x18(%rax,%rcx,8)
  0x00007fafb8c6a66c: jmp     0x7fafb8c6a673
  0x00007fafb8c6a66e: mov     %rdx,0x18(%rax,%rcx,8)
  0x00007fafb8c6a673: sub     $0x2,%rcx
  0x00007fafb8c6a677: jns     0x7fafb8c6a5f9
  0x00007fafb8c6a679: mov     0x10(%rbx),%rax
  0x00007fafb8c6a67d: test    %rax,%rax
  0x00007fafb8c6a680: je      0x7fafb8c6a6a2
  0x00007fafb8c6a682: mov     0x104(%rax),%ecx
  0x00007fafb8c6a688: add     $0x8,%ecx
  0x00007fafb8c6a68b: mov     %ecx,0x104(%rax)
  0x00007fafb8c6a691: and     0x118(%rax),%ecx
  0x00007fafb8c6a697: je      0x7fafb8c6a940
  0x00007fafb8c6a69d: jmpq    0x7fafb8c6a76d
  0x00007fafb8c6a6a2: mov     0x18(%rbx),%rax
  0x00007fafb8c6a6a6: test    %rax,%rax
  0x00007fafb8c6a6a9: jne     0x7fafb8c6a75b
  0x00007fafb8c6a6af: callq   0x7fafb8c6a6b9
  0x00007fafb8c6a6b4: jmpq    0x7fafb8c6a74e
  0x00007fafb8c6a6b9: mov     %rbx,%rsi
  0x00007fafb8c6a6bc: lea     0x8(%rsp),%rax
  0x00007fafb8c6a6c1: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c6a6c5: mov     %r15,%rdi
  0x00007fafb8c6a6c8: vzeroupper
  0x00007fafb8c6a6cb: mov     %rbp,0x330(%r15)
  0x00007fafb8c6a6d2: mov     %rax,0x320(%r15)
  0x00007fafb8c6a6d9: test    $0xf,%esp
  0x00007fafb8c6a6df: je      0x7fafb8c6a6f7
  0x00007fafb8c6a6e5: sub     $0x8,%rsp
  0x00007fafb8c6a6e9: callq   0x7fafd7d85400
  0x00007fafb8c6a6ee: add     $0x8,%rsp
  0x00007fafb8c6a6f2: jmpq    0x7fafb8c6a6fc
  0x00007fafb8c6a6f7: callq   0x7fafd7d85400
  0x00007fafb8c6a6fc: movabs  $0x0,%r10
  0x00007fafb8c6a706: mov     %r10,0x320(%r15)
  0x00007fafb8c6a70d: movabs  $0x0,%r10
  0x00007fafb8c6a717: mov     %r10,0x330(%r15)
  0x00007fafb8c6a71e: movabs  $0x0,%r10
  0x00007fafb8c6a728: mov     %r10,0x328(%r15)
  0x00007fafb8c6a72f: vzeroupper
  0x00007fafb8c6a732: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c6a73a: je      0x7fafb8c6a745
  0x00007fafb8c6a740: jmpq    0x7fafb8c5c780
  0x00007fafb8c6a745: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6a749: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c6a74d: retq
  0x00007fafb8c6a74e: mov     0x18(%rbx),%rax
  0x00007fafb8c6a752: test    %rax,%rax
  0x00007fafb8c6a755: je      0x7fafb8c6a76d
  0x00007fafb8c6a75b: mov     0x18(%rax),%ecx
  0x00007fafb8c6a75e: add     $0x8,%ecx
  0x00007fafb8c6a761: mov     %ecx,0x18(%rax)
  0x00007fafb8c6a764: and     0x30(%rax),%ecx
  0x00007fafb8c6a767: je      0x7fafb8c6a940
  0x00007fafb8c6a76d: mov     %eax,0xfffffffffffff000(%rsp)
  0x00007fafb8c6a774: mov     %eax,0xffffffffffffe000(%rsp)
  0x00007fafb8c6a77b: mov     %eax,0xffffffffffffd000(%rsp)
  0x00007fafb8c6a782: mov     %eax,0xffffffffffffc000(%rsp)
  0x00007fafb8c6a789: mov     %eax,0xffffffffffffb000(%rsp)
  0x00007fafb8c6a790: mov     %eax,0xffffffffffffa000(%rsp)
  0x00007fafb8c6a797: mov     %eax,0xffffffffffff9000(%rsp)
  0x00007fafb8c6a79e: mov     %eax,0xffffffffffff8000(%rsp)
  0x00007fafb8c6a7a5: mov     %eax,0xffffffffffff7000(%rsp)
  0x00007fafb8c6a7ac: mov     %eax,0xffffffffffff6000(%rsp)
  0x00007fafb8c6a7b3: mov     %eax,0xffffffffffff5000(%rsp)
  0x00007fafb8c6a7ba: mov     %eax,0xffffffffffff4000(%rsp)
  0x00007fafb8c6a7c1: mov     %eax,0xffffffffffff3000(%rsp)
  0x00007fafb8c6a7c8: mov     %eax,0xffffffffffff2000(%rsp)
  0x00007fafb8c6a7cf: mov     %eax,0xffffffffffff1000(%rsp)
  0x00007fafb8c6a7d6: mov     %eax,0xffffffffffff0000(%rsp)
  0x00007fafb8c6a7dd: mov     %eax,0xfffffffffffef000(%rsp)
  0x00007fafb8c6a7e4: mov     %eax,0xfffffffffffee000(%rsp)
  0x00007fafb8c6a7eb: mov     %eax,0xfffffffffffed000(%rsp)
  0x00007fafb8c6a7f2: mov     %eax,0xfffffffffffec000(%rsp)
  0x00007fafb8c6a7f9: movb    $0x0,0x3dd(%r15)
  0x00007fafb8c6a801: cmpb    $0x0,0x1fd0d48f(%rip)
  0x00007fafb8c6a808: je      0x7fafb8c6a838
  0x00007fafb8c6a80e: mov     0xffffffffffffffe8(%rbp),%rsi
  0x00007fafb8c6a812: mov     %r15,%rdi
  0x00007fafb8c6a815: test    $0xf,%esp
  0x00007fafb8c6a81b: je      0x7fafb8c6a833
  0x00007fafb8c6a821: sub     $0x8,%rsp
  0x00007fafb8c6a825: callq   0x7fafd81e7090
  0x00007fafb8c6a82a: add     $0x8,%rsp
  0x00007fafb8c6a82e: jmpq    0x7fafb8c6a838
  0x00007fafb8c6a833: callq   0x7fafd81e7090
  0x00007fafb8c6a838: movzbl  0x0(%r13),%ebx
  0x00007fafb8c6a83d: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c6a847: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6a84b: callq   0x7fafb8c6a855
  0x00007fafb8c6a850: jmpq    0x7fafb8c6a8e7
  0x00007fafb8c6a855: lea     0x8(%rsp),%rax
  0x00007fafb8c6a85a: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c6a85e: mov     %r15,%rdi
  0x00007fafb8c6a861: vzeroupper
  0x00007fafb8c6a864: mov     %rbp,0x330(%r15)
  0x00007fafb8c6a86b: mov     %rax,0x320(%r15)
  0x00007fafb8c6a872: test    $0xf,%esp
  0x00007fafb8c6a878: je      0x7fafb8c6a890
  0x00007fafb8c6a87e: sub     $0x8,%rsp
  0x00007fafb8c6a882: callq   0x7fafd7d84c70
  0x00007fafb8c6a887: add     $0x8,%rsp
  0x00007fafb8c6a88b: jmpq    0x7fafb8c6a895
  0x00007fafb8c6a890: callq   0x7fafd7d84c70
  0x00007fafb8c6a895: movabs  $0x0,%r10
  0x00007fafb8c6a89f: mov     %r10,0x320(%r15)
  0x00007fafb8c6a8a6: movabs  $0x0,%r10
  0x00007fafb8c6a8b0: mov     %r10,0x330(%r15)
  0x00007fafb8c6a8b7: movabs  $0x0,%r10
  0x00007fafb8c6a8c1: mov     %r10,0x328(%r15)
  0x00007fafb8c6a8c8: vzeroupper
  0x00007fafb8c6a8cb: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c6a8d3: je      0x7fafb8c6a8de
  0x00007fafb8c6a8d9: jmpq    0x7fafb8c5c780
  0x00007fafb8c6a8de: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6a8e2: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c6a8e6: retq
  0x00007fafb8c6a8e7: push    %rax
  0x00007fafb8c6a8e8: push    %rbx
  0x00007fafb8c6a8e9: mov     0xffffffffffffffe8(%rbp),%rbx
  0x00007fafb8c6a8ed: mov     0x10(%rbx),%rax
  0x00007fafb8c6a8f1: test    %rax,%rax
  0x00007fafb8c6a8f4: je      0x7fafb8c6a931
  0x00007fafb8c6a8fa: mov     %r13,%rsi
  0x00007fafb8c6a8fd: mov     %rbx,%rdi
  0x00007fafb8c6a900: test    $0xf,%esp
  0x00007fafb8c6a906: je      0x7fafb8c6a91e
  0x00007fafb8c6a90c: sub     $0x8,%rsp
  0x00007fafb8c6a910: callq   0x7fafd7d84c20
  0x00007fafb8c6a915: add     $0x8,%rsp
  0x00007fafb8c6a919: jmpq    0x7fafb8c6a923
  0x00007fafb8c6a91e: callq   0x7fafd7d84c20
  0x00007fafb8c6a923: mov     0x10(%rbx),%rbx
  0x00007fafb8c6a927: add     $0x138,%rbx
  0x00007fafb8c6a92e: add     %rbx,%rax
  0x00007fafb8c6a931: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c6a935: pop     %rbx
  0x00007fafb8c6a936: pop     %rax
  0x00007fafb8c6a937: mov     0xffffffffffffffe8(%rbp),%rbx
  0x00007fafb8c6a93b: jmpq    0x7fafb8c6a76d
  0x00007fafb8c6a940: mov     $0x0,%esi
  0x00007fafb8c6a945: callq   0x7fafb8c6a94f
  0x00007fafb8c6a94a: jmpq    0x7fafb8c6a9e1
  0x00007fafb8c6a94f: lea     0x8(%rsp),%rax
  0x00007fafb8c6a954: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c6a958: mov     %r15,%rdi
  0x00007fafb8c6a95b: vzeroupper
  0x00007fafb8c6a95e: mov     %rbp,0x330(%r15)
  0x00007fafb8c6a965: mov     %rax,0x320(%r15)
  0x00007fafb8c6a96c: test    $0xf,%esp
  0x00007fafb8c6a972: je      0x7fafb8c6a98a
  0x00007fafb8c6a978: sub     $0x8,%rsp
  0x00007fafb8c6a97c: callq   0x7fafd7d84b40
  0x00007fafb8c6a981: add     $0x8,%rsp
  0x00007fafb8c6a985: jmpq    0x7fafb8c6a98f
  0x00007fafb8c6a98a: callq   0x7fafd7d84b40
  0x00007fafb8c6a98f: movabs  $0x0,%r10
  0x00007fafb8c6a999: mov     %r10,0x320(%r15)
  0x00007fafb8c6a9a0: movabs  $0x0,%r10
  0x00007fafb8c6a9aa: mov     %r10,0x330(%r15)
  0x00007fafb8c6a9b1: movabs  $0x0,%r10
  0x00007fafb8c6a9bb: mov     %r10,0x328(%r15)
  0x00007fafb8c6a9c2: vzeroupper
  0x00007fafb8c6a9c5: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c6a9cd: je      0x7fafb8c6a9d8
  0x00007fafb8c6a9d3: jmpq    0x7fafb8c5c780
  0x00007fafb8c6a9d8: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6a9dc: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c6a9e0: retq
  0x00007fafb8c6a9e1: mov     0xffffffffffffffe8(%rbp),%rbx
  0x00007fafb8c6a9e5: jmpq    0x7fafb8c6a76d
  0x00007fafb8c6a9ea: nopw    0x0(%rax,%rax)
  0x00007fafb8c6a9f0: add     %al,(%rax)
  0x00007fafb8c6a9f2: add     %al,(%rax)
  0x00007fafb8c6a9f4: add     %al,(%rax)
  0x00007fafb8c6a9f6: add     %al,(%rax)
  0x00007fafb8c6a9f8: add     %al,(%rax)
  0x00007fafb8c6a9fa: add     %al,(%rax)
  0x00007fafb8c6a9fc: add     %al,(%rax)
  0x00007fafb8c6a9fe: add     %al,(%rax)

----------------------------------------------------------------------
method entry point (kind = zerolocals_synchronized)  [0x00007fafb8c6aa20, 0x00007fafb8c6b0a0]  1664 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6aa20 Code size: 0x00000680
  0x00007fafb8c6aa20: mov     0x8(%rbx),%rdx
  0x00007fafb8c6aa24: movzwl  0x34(%rdx),%ecx
  0x00007fafb8c6aa28: movzwl  0x32(%rdx),%edx
  0x00007fafb8c6aa2c: sub     %ecx,%edx
  0x00007fafb8c6aa2e: cmp     $0x1f5,%edx
  0x00007fafb8c6aa34: jbe     0x7fafb8c6aa5f
  0x00007fafb8c6aa3a: mov     %rdx,%rax
  0x00007fafb8c6aa3d: shl     $0x3,%rax
  0x00007fafb8c6aa41: add     $0x58,%rax
  0x00007fafb8c6aa45: add     0x410(%r15),%rax
  0x00007fafb8c6aa4c: cmp     %rax,%rsp
  0x00007fafb8c6aa4f: jnbe    0x7fafb8c6aa5f
  0x00007fafb8c6aa55: pop     %rax
  0x00007fafb8c6aa56: mov     %r13,%rsp
  0x00007fafb8c6aa59: push    %rax
  0x00007fafb8c6aa5a: jmpq    0x7fafb8c64100
  0x00007fafb8c6aa5f: pop     %rax
  0x00007fafb8c6aa60: lea     0xfffffffffffffff8(%rsp,%rcx,8),%r14
  0x00007fafb8c6aa65: test    %edx,%edx
  0x00007fafb8c6aa67: jle     0x7fafb8c6aa76
  0x00007fafb8c6aa6d: pushq   $0x0
  0x00007fafb8c6aa72: decl    %edx
  0x00007fafb8c6aa74: jnle    0x7fafb8c6aa6d
  0x00007fafb8c6aa76: push    %rax
  0x00007fafb8c6aa77: push    %rbp
  0x00007fafb8c6aa78: mov     %rsp,%rbp
  0x00007fafb8c6aa7b: push    %r13
  0x00007fafb8c6aa7d: pushq   $0x0
  0x00007fafb8c6aa82: mov     0x8(%rbx),%r13
  0x00007fafb8c6aa86: lea     0x38(%r13),%r13
  0x00007fafb8c6aa8a: push    %rbx
  0x00007fafb8c6aa8b: mov     0x8(%rbx),%rdx
  0x00007fafb8c6aa8f: mov     0x8(%rdx),%rdx
  0x00007fafb8c6aa93: mov     0x18(%rdx),%rdx
  0x00007fafb8c6aa97: mov     0x70(%rdx),%rdx
  0x00007fafb8c6aa9b: mov     (%rdx),%rdx
  0x00007fafb8c6aa9e: push    %rdx
  0x00007fafb8c6aa9f: mov     0x10(%rbx),%rdx
  0x00007fafb8c6aaa3: test    %rdx,%rdx
  0x00007fafb8c6aaa6: je      0x7fafb8c6aab3
  0x00007fafb8c6aaac: add     $0x138,%rdx
  0x00007fafb8c6aab3: push    %rdx
  0x00007fafb8c6aab4: mov     0x8(%rbx),%rdx
  0x00007fafb8c6aab8: mov     0x8(%rdx),%rdx
  0x00007fafb8c6aabc: mov     0x10(%rdx),%rdx
  0x00007fafb8c6aac0: push    %rdx
  0x00007fafb8c6aac1: push    %r14
  0x00007fafb8c6aac3: push    %r13
  0x00007fafb8c6aac5: pushq   $0x0
  0x00007fafb8c6aaca: mov     %rsp,(%rsp)
  0x00007fafb8c6aace: movb    $0x1,0x3dd(%r15)
  0x00007fafb8c6aad6: mov     0xffffffffffffffd8(%rbp),%rax
  0x00007fafb8c6aada: test    %rax,%rax
  0x00007fafb8c6aadd: je      0x7fafb8c6ab79
  0x00007fafb8c6aae3: mov     0xfffffffffffffffc(%rax),%ecx
  0x00007fafb8c6aae6: test    %ecx,%ecx
  0x00007fafb8c6aae8: js      0x7fafb8c6ab79
  0x00007fafb8c6aaee: add     %rcx,%rax
  0x00007fafb8c6aaf1: mov     0x8(%rax),%rcx
  0x00007fafb8c6aaf5: sub     $0x2,%rcx
  0x00007fafb8c6aaf9: mov     0x10(%rax,%rcx,8),%rdx
  0x00007fafb8c6aafe: neg     %rdx
  0x00007fafb8c6ab01: mov     (%r14,%rdx,8),%rdx
  0x00007fafb8c6ab05: test    %rdx,%rdx
  0x00007fafb8c6ab08: jne     0x7fafb8c6ab15
  0x00007fafb8c6ab0a: orq     $0x1,0x18(%rax,%rcx,8)
  0x00007fafb8c6ab13: jmp     0x7fafb8c6ab73
  0x00007fafb8c6ab15: mov     0x8(%rdx),%edx
  0x00007fafb8c6ab18: movabs  $0x800000000,%r12
  0x00007fafb8c6ab22: add     %r12,%rdx
  0x00007fafb8c6ab25: xor     %r12,%r12
  0x00007fafb8c6ab28: xor     0x18(%rax,%rcx,8),%rdx
  0x00007fafb8c6ab2d: test    $0xfffffffffffffffc,%rdx
  0x00007fafb8c6ab34: je      0x7fafb8c6ab73
  0x00007fafb8c6ab36: test    $0x2,%rdx
  0x00007fafb8c6ab3d: jne     0x7fafb8c6ab73
  0x00007fafb8c6ab3f: cmpq    $0x0,0x18(%rax,%rcx,8)
  0x00007fafb8c6ab48: je      0x7fafb8c6ab6e
  0x00007fafb8c6ab4a: cmpq    $0x1,0x18(%rax,%rcx,8)
  0x00007fafb8c6ab53: je      0x7fafb8c6ab6e
  0x00007fafb8c6ab55: xor     0x18(%rax,%rcx,8),%rdx
  0x00007fafb8c6ab5a: test    $0xfffffffffffffffc,%rdx
  0x00007fafb8c6ab61: je      0x7fafb8c6ab73
  0x00007fafb8c6ab63: orq     $0x2,0x18(%rax,%rcx,8)
  0x00007fafb8c6ab6c: jmp     0x7fafb8c6ab73
  0x00007fafb8c6ab6e: mov     %rdx,0x18(%rax,%rcx,8)
  0x00007fafb8c6ab73: sub     $0x2,%rcx
  0x00007fafb8c6ab77: jns     0x7fafb8c6aaf9
  0x00007fafb8c6ab79: mov     0x10(%rbx),%rax
  0x00007fafb8c6ab7d: test    %rax,%rax
  0x00007fafb8c6ab80: je      0x7fafb8c6aba2
  0x00007fafb8c6ab82: mov     0x104(%rax),%ecx
  0x00007fafb8c6ab88: add     $0x8,%ecx
  0x00007fafb8c6ab8b: mov     %ecx,0x104(%rax)
  0x00007fafb8c6ab91: and     0x118(%rax),%ecx
  0x00007fafb8c6ab97: je      0x7fafb8c6aff6
  0x00007fafb8c6ab9d: jmpq    0x7fafb8c6ac6d
  0x00007fafb8c6aba2: mov     0x18(%rbx),%rax
  0x00007fafb8c6aba6: test    %rax,%rax
  0x00007fafb8c6aba9: jne     0x7fafb8c6ac5b
  0x00007fafb8c6abaf: callq   0x7fafb8c6abb9
  0x00007fafb8c6abb4: jmpq    0x7fafb8c6ac4e
  0x00007fafb8c6abb9: mov     %rbx,%rsi
  0x00007fafb8c6abbc: lea     0x8(%rsp),%rax
  0x00007fafb8c6abc1: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c6abc5: mov     %r15,%rdi
  0x00007fafb8c6abc8: vzeroupper
  0x00007fafb8c6abcb: mov     %rbp,0x330(%r15)
  0x00007fafb8c6abd2: mov     %rax,0x320(%r15)
  0x00007fafb8c6abd9: test    $0xf,%esp
  0x00007fafb8c6abdf: je      0x7fafb8c6abf7
  0x00007fafb8c6abe5: sub     $0x8,%rsp
  0x00007fafb8c6abe9: callq   0x7fafd7d85400
  0x00007fafb8c6abee: add     $0x8,%rsp
  0x00007fafb8c6abf2: jmpq    0x7fafb8c6abfc
  0x00007fafb8c6abf7: callq   0x7fafd7d85400
  0x00007fafb8c6abfc: movabs  $0x0,%r10
  0x00007fafb8c6ac06: mov     %r10,0x320(%r15)
  0x00007fafb8c6ac0d: movabs  $0x0,%r10
  0x00007fafb8c6ac17: mov     %r10,0x330(%r15)
  0x00007fafb8c6ac1e: movabs  $0x0,%r10
  0x00007fafb8c6ac28: mov     %r10,0x328(%r15)
  0x00007fafb8c6ac2f: vzeroupper
  0x00007fafb8c6ac32: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c6ac3a: je      0x7fafb8c6ac45
  0x00007fafb8c6ac40: jmpq    0x7fafb8c5c780
  0x00007fafb8c6ac45: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6ac49: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c6ac4d: retq
  0x00007fafb8c6ac4e: mov     0x18(%rbx),%rax
  0x00007fafb8c6ac52: test    %rax,%rax
  0x00007fafb8c6ac55: je      0x7fafb8c6ac6d
  0x00007fafb8c6ac5b: mov     0x18(%rax),%ecx
  0x00007fafb8c6ac5e: add     $0x8,%ecx
  0x00007fafb8c6ac61: mov     %ecx,0x18(%rax)
  0x00007fafb8c6ac64: and     0x30(%rax),%ecx
  0x00007fafb8c6ac67: je      0x7fafb8c6aff6
  0x00007fafb8c6ac6d: mov     %eax,0xfffffffffffff000(%rsp)
  0x00007fafb8c6ac74: mov     %eax,0xffffffffffffe000(%rsp)
  0x00007fafb8c6ac7b: mov     %eax,0xffffffffffffd000(%rsp)
  0x00007fafb8c6ac82: mov     %eax,0xffffffffffffc000(%rsp)
  0x00007fafb8c6ac89: mov     %eax,0xffffffffffffb000(%rsp)
  0x00007fafb8c6ac90: mov     %eax,0xffffffffffffa000(%rsp)
  0x00007fafb8c6ac97: mov     %eax,0xffffffffffff9000(%rsp)
  0x00007fafb8c6ac9e: mov     %eax,0xffffffffffff8000(%rsp)
  0x00007fafb8c6aca5: mov     %eax,0xffffffffffff7000(%rsp)
  0x00007fafb8c6acac: mov     %eax,0xffffffffffff6000(%rsp)
  0x00007fafb8c6acb3: mov     %eax,0xffffffffffff5000(%rsp)
  0x00007fafb8c6acba: mov     %eax,0xffffffffffff4000(%rsp)
  0x00007fafb8c6acc1: mov     %eax,0xffffffffffff3000(%rsp)
  0x00007fafb8c6acc8: mov     %eax,0xffffffffffff2000(%rsp)
  0x00007fafb8c6accf: mov     %eax,0xffffffffffff1000(%rsp)
  0x00007fafb8c6acd6: mov     %eax,0xffffffffffff0000(%rsp)
  0x00007fafb8c6acdd: mov     %eax,0xfffffffffffef000(%rsp)
  0x00007fafb8c6ace4: mov     %eax,0xfffffffffffee000(%rsp)
  0x00007fafb8c6aceb: mov     %eax,0xfffffffffffed000(%rsp)
  0x00007fafb8c6acf2: mov     %eax,0xfffffffffffec000(%rsp)
  0x00007fafb8c6acf9: movb    $0x0,0x3dd(%r15)
  0x00007fafb8c6ad01: mov     0x20(%rbx),%eax
  0x00007fafb8c6ad04: test    $0x8,%eax
  0x00007fafb8c6ad09: mov     (%r14),%rax
  0x00007fafb8c6ad0c: je      0x7fafb8c6ad25
  0x00007fafb8c6ad12: mov     0x8(%rbx),%rax
  0x00007fafb8c6ad16: mov     0x8(%rax),%rax
  0x00007fafb8c6ad1a: mov     0x18(%rax),%rax
  0x00007fafb8c6ad1e: mov     0x70(%rax),%rax
  0x00007fafb8c6ad22: mov     (%rax),%rax
  0x00007fafb8c6ad25: sub     $0x10,%rsp
  0x00007fafb8c6ad29: mov     %rsp,0xffffffffffffffb8(%rbp)
  0x00007fafb8c6ad2d: mov     %rax,0x8(%rsp)
  0x00007fafb8c6ad32: mov     %rsp,%rsi
  0x00007fafb8c6ad35: mov     0x8(%rsi),%rcx
  0x00007fafb8c6ad39: mov     (%rcx),%rax
  0x00007fafb8c6ad3c: mov     %rax,%rbx
  0x00007fafb8c6ad3f: and     $0x7,%rbx
  0x00007fafb8c6ad43: cmp     $0x5,%rbx
  0x00007fafb8c6ad47: jne     0x7fafb8c6adf2
  0x00007fafb8c6ad4d: mov     0x8(%rcx),%ebx
  0x00007fafb8c6ad50: movabs  $0x800000000,%r12
  0x00007fafb8c6ad5a: add     %r12,%rbx
  0x00007fafb8c6ad5d: xor     %r12,%r12
  0x00007fafb8c6ad60: mov     0xb8(%rbx),%rbx
  0x00007fafb8c6ad67: or      %r15,%rbx
  0x00007fafb8c6ad6a: xor     %rax,%rbx
  0x00007fafb8c6ad6d: and     $0xffffffffffffff87,%rbx
  0x00007fafb8c6ad71: je      0x7fafb8c6aeb7
  0x00007fafb8c6ad77: test    $0x7,%rbx
  0x00007fafb8c6ad7e: jne     0x7fafb8c6add3
  0x00007fafb8c6ad80: test    $0x300,%rbx
  0x00007fafb8c6ad87: jne     0x7fafb8c6ada6
  0x00007fafb8c6ad89: and     $0x37f,%rax
  0x00007fafb8c6ad90: mov     %rax,%rbx
  0x00007fafb8c6ad93: or      %r15,%rbx
  0x00007fafb8c6ad96: lock cmpxchg %rbx,(%rcx)
  0x00007fafb8c6ad9b: jne     0x7fafb8c6ae1b
  0x00007fafb8c6ada1: jmpq    0x7fafb8c6aeb7
  0x00007fafb8c6ada6: mov     0x8(%rcx),%ebx
  0x00007fafb8c6ada9: movabs  $0x800000000,%r12
  0x00007fafb8c6adb3: add     %r12,%rbx
  0x00007fafb8c6adb6: xor     %r12,%r12
  0x00007fafb8c6adb9: mov     0xb8(%rbx),%rbx
  0x00007fafb8c6adc0: or      %r15,%rbx
  0x00007fafb8c6adc3: lock cmpxchg %rbx,(%rcx)
  0x00007fafb8c6adc8: jne     0x7fafb8c6ae1b
  0x00007fafb8c6adce: jmpq    0x7fafb8c6aeb7
  0x00007fafb8c6add3: mov     0x8(%rcx),%ebx
  0x00007fafb8c6add6: movabs  $0x800000000,%r12
  0x00007fafb8c6ade0: add     %r12,%rbx
  0x00007fafb8c6ade3: xor     %r12,%r12
  0x00007fafb8c6ade6: mov     0xb8(%rbx),%rbx
  0x00007fafb8c6aded: lock cmpxchg %rbx,(%rcx)
  0x00007fafb8c6adf2: mov     $0x1,%eax
  0x00007fafb8c6adf7: or      (%rcx),%rax
  0x00007fafb8c6adfa: mov     %rax,(%rsi)
  0x00007fafb8c6adfd: lock cmpxchg %rsi,(%rcx)
  0x00007fafb8c6ae02: je      0x7fafb8c6aeb7
  0x00007fafb8c6ae08: sub     %rsp,%rax
  0x00007fafb8c6ae0b: and     $0xfffffffffffff007,%rax
  0x00007fafb8c6ae12: mov     %rax,(%rsi)
  0x00007fafb8c6ae15: je      0x7fafb8c6aeb7
  0x00007fafb8c6ae1b: callq   0x7fafb8c6ae25
  0x00007fafb8c6ae20: jmpq    0x7fafb8c6aeb7
  0x00007fafb8c6ae25: lea     0x8(%rsp),%rax
  0x00007fafb8c6ae2a: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c6ae2e: mov     %r15,%rdi
  0x00007fafb8c6ae31: vzeroupper
  0x00007fafb8c6ae34: mov     %rbp,0x330(%r15)
  0x00007fafb8c6ae3b: mov     %rax,0x320(%r15)
  0x00007fafb8c6ae42: test    $0xf,%esp
  0x00007fafb8c6ae48: je      0x7fafb8c6ae60
  0x00007fafb8c6ae4e: sub     $0x8,%rsp
  0x00007fafb8c6ae52: callq   0x7fafd7d82230
  0x00007fafb8c6ae57: add     $0x8,%rsp
  0x00007fafb8c6ae5b: jmpq    0x7fafb8c6ae65
  0x00007fafb8c6ae60: callq   0x7fafd7d82230
  0x00007fafb8c6ae65: movabs  $0x0,%r10
  0x00007fafb8c6ae6f: mov     %r10,0x320(%r15)
  0x00007fafb8c6ae76: movabs  $0x0,%r10
  0x00007fafb8c6ae80: mov     %r10,0x330(%r15)
  0x00007fafb8c6ae87: movabs  $0x0,%r10
  0x00007fafb8c6ae91: mov     %r10,0x328(%r15)
  0x00007fafb8c6ae98: vzeroupper
  0x00007fafb8c6ae9b: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c6aea3: je      0x7fafb8c6aeae
  0x00007fafb8c6aea9: jmpq    0x7fafb8c5c780
  0x00007fafb8c6aeae: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6aeb2: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c6aeb6: retq
  0x00007fafb8c6aeb7: cmpb    $0x0,0x1fd0cdd9(%rip)
  0x00007fafb8c6aebe: je      0x7fafb8c6aeee
  0x00007fafb8c6aec4: mov     0xffffffffffffffe8(%rbp),%rsi
  0x00007fafb8c6aec8: mov     %r15,%rdi
  0x00007fafb8c6aecb: test    $0xf,%esp
  0x00007fafb8c6aed1: je      0x7fafb8c6aee9
  0x00007fafb8c6aed7: sub     $0x8,%rsp
  0x00007fafb8c6aedb: callq   0x7fafd81e7090
  0x00007fafb8c6aee0: add     $0x8,%rsp
  0x00007fafb8c6aee4: jmpq    0x7fafb8c6aeee
  0x00007fafb8c6aee9: callq   0x7fafd81e7090
  0x00007fafb8c6aeee: movzbl  0x0(%r13),%ebx
  0x00007fafb8c6aef3: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c6aefd: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6af01: callq   0x7fafb8c6af0b
  0x00007fafb8c6af06: jmpq    0x7fafb8c6af9d
  0x00007fafb8c6af0b: lea     0x8(%rsp),%rax
  0x00007fafb8c6af10: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c6af14: mov     %r15,%rdi
  0x00007fafb8c6af17: vzeroupper
  0x00007fafb8c6af1a: mov     %rbp,0x330(%r15)
  0x00007fafb8c6af21: mov     %rax,0x320(%r15)
  0x00007fafb8c6af28: test    $0xf,%esp
  0x00007fafb8c6af2e: je      0x7fafb8c6af46
  0x00007fafb8c6af34: sub     $0x8,%rsp
  0x00007fafb8c6af38: callq   0x7fafd7d84c70
  0x00007fafb8c6af3d: add     $0x8,%rsp
  0x00007fafb8c6af41: jmpq    0x7fafb8c6af4b
  0x00007fafb8c6af46: callq   0x7fafd7d84c70
  0x00007fafb8c6af4b: movabs  $0x0,%r10
  0x00007fafb8c6af55: mov     %r10,0x320(%r15)
  0x00007fafb8c6af5c: movabs  $0x0,%r10
  0x00007fafb8c6af66: mov     %r10,0x330(%r15)
  0x00007fafb8c6af6d: movabs  $0x0,%r10
  0x00007fafb8c6af77: mov     %r10,0x328(%r15)
  0x00007fafb8c6af7e: vzeroupper
  0x00007fafb8c6af81: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c6af89: je      0x7fafb8c6af94
  0x00007fafb8c6af8f: jmpq    0x7fafb8c5c780
  0x00007fafb8c6af94: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6af98: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c6af9c: retq
  0x00007fafb8c6af9d: push    %rax
  0x00007fafb8c6af9e: push    %rbx
  0x00007fafb8c6af9f: mov     0xffffffffffffffe8(%rbp),%rbx
  0x00007fafb8c6afa3: mov     0x10(%rbx),%rax
  0x00007fafb8c6afa7: test    %rax,%rax
  0x00007fafb8c6afaa: je      0x7fafb8c6afe7
  0x00007fafb8c6afb0: mov     %r13,%rsi
  0x00007fafb8c6afb3: mov     %rbx,%rdi
  0x00007fafb8c6afb6: test    $0xf,%esp
  0x00007fafb8c6afbc: je      0x7fafb8c6afd4
  0x00007fafb8c6afc2: sub     $0x8,%rsp
  0x00007fafb8c6afc6: callq   0x7fafd7d84c20
  0x00007fafb8c6afcb: add     $0x8,%rsp
  0x00007fafb8c6afcf: jmpq    0x7fafb8c6afd9
  0x00007fafb8c6afd4: callq   0x7fafd7d84c20
  0x00007fafb8c6afd9: mov     0x10(%rbx),%rbx
  0x00007fafb8c6afdd: add     $0x138,%rbx
  0x00007fafb8c6afe4: add     %rbx,%rax
  0x00007fafb8c6afe7: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c6afeb: pop     %rbx
  0x00007fafb8c6afec: pop     %rax
  0x00007fafb8c6afed: mov     0xffffffffffffffe8(%rbp),%rbx
  0x00007fafb8c6aff1: jmpq    0x7fafb8c6ac6d
  0x00007fafb8c6aff6: mov     $0x0,%esi
  0x00007fafb8c6affb: callq   0x7fafb8c6b005
  0x00007fafb8c6b000: jmpq    0x7fafb8c6b097
  0x00007fafb8c6b005: lea     0x8(%rsp),%rax
  0x00007fafb8c6b00a: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c6b00e: mov     %r15,%rdi
  0x00007fafb8c6b011: vzeroupper
  0x00007fafb8c6b014: mov     %rbp,0x330(%r15)
  0x00007fafb8c6b01b: mov     %rax,0x320(%r15)
  0x00007fafb8c6b022: test    $0xf,%esp
  0x00007fafb8c6b028: je      0x7fafb8c6b040
  0x00007fafb8c6b02e: sub     $0x8,%rsp
  0x00007fafb8c6b032: callq   0x7fafd7d84b40
  0x00007fafb8c6b037: add     $0x8,%rsp
  0x00007fafb8c6b03b: jmpq    0x7fafb8c6b045
  0x00007fafb8c6b040: callq   0x7fafd7d84b40
  0x00007fafb8c6b045: movabs  $0x0,%r10
  0x00007fafb8c6b04f: mov     %r10,0x320(%r15)
  0x00007fafb8c6b056: movabs  $0x0,%r10
  0x00007fafb8c6b060: mov     %r10,0x330(%r15)
  0x00007fafb8c6b067: movabs  $0x0,%r10
  0x00007fafb8c6b071: mov     %r10,0x328(%r15)
  0x00007fafb8c6b078: vzeroupper
  0x00007fafb8c6b07b: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c6b083: je      0x7fafb8c6b08e
  0x00007fafb8c6b089: jmpq    0x7fafb8c5c780
  0x00007fafb8c6b08e: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6b092: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c6b096: retq
  0x00007fafb8c6b097: mov     0xffffffffffffffe8(%rbp),%rbx
  0x00007fafb8c6b09b: jmpq    0x7fafb8c6ac6d

----------------------------------------------------------------------
method entry point (kind = abstract)  [0x00007fafb8c6b0c0, 0x00007fafb8c6b200]  320 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6b0c0 Code size: 0x00000140
  0x00007fafb8c6b0c0: mov     0xffffffffffffffb8(%rbp),%rsp
  0x00007fafb8c6b0c4: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c6b0cc: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6b0d0: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c6b0d4: callq   0x7fafb8c6b0de
  0x00007fafb8c6b0d9: jmpq    0x7fafb8c6b173
  0x00007fafb8c6b0de: mov     %rbx,%rsi
  0x00007fafb8c6b0e1: lea     0x8(%rsp),%rax
  0x00007fafb8c6b0e6: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c6b0ea: mov     %r15,%rdi
  0x00007fafb8c6b0ed: vzeroupper
  0x00007fafb8c6b0f0: mov     %rbp,0x330(%r15)
  0x00007fafb8c6b0f7: mov     %rax,0x320(%r15)
  0x00007fafb8c6b0fe: test    $0xf,%esp
  0x00007fafb8c6b104: je      0x7fafb8c6b11c
  0x00007fafb8c6b10a: sub     $0x8,%rsp
  0x00007fafb8c6b10e: callq   0x7fafd7d80d30
  0x00007fafb8c6b113: add     $0x8,%rsp
  0x00007fafb8c6b117: jmpq    0x7fafb8c6b121
  0x00007fafb8c6b11c: callq   0x7fafd7d80d30
  0x00007fafb8c6b121: movabs  $0x0,%r10
  0x00007fafb8c6b12b: mov     %r10,0x320(%r15)
  0x00007fafb8c6b132: movabs  $0x0,%r10
  0x00007fafb8c6b13c: mov     %r10,0x330(%r15)
  0x00007fafb8c6b143: movabs  $0x0,%r10
  0x00007fafb8c6b14d: mov     %r10,0x328(%r15)
  0x00007fafb8c6b154: vzeroupper
  0x00007fafb8c6b157: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c6b15f: je      0x7fafb8c6b16a
  0x00007fafb8c6b165: jmpq    0x7fafb8c5c780
  0x00007fafb8c6b16a: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6b16e: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c6b172: retq
  0x00007fafb8c6b173: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c6b178: sub     $0x80,%rsp
  0x00007fafb8c6b17f: mov     %rax,0x78(%rsp)
  0x00007fafb8c6b184: mov     %rcx,0x70(%rsp)
  0x00007fafb8c6b189: mov     %rdx,0x68(%rsp)
  0x00007fafb8c6b18e: mov     %rbx,0x60(%rsp)
  0x00007fafb8c6b193: mov     %rbp,0x50(%rsp)
  0x00007fafb8c6b198: mov     %rsi,0x48(%rsp)
  0x00007fafb8c6b19d: mov     %rdi,0x40(%rsp)
  0x00007fafb8c6b1a2: mov     %r8,0x38(%rsp)
  0x00007fafb8c6b1a7: mov     %r9,0x30(%rsp)
  0x00007fafb8c6b1ac: mov     %r10,0x28(%rsp)
  0x00007fafb8c6b1b1: mov     %r11,0x20(%rsp)
  0x00007fafb8c6b1b6: mov     %r12,0x18(%rsp)
  0x00007fafb8c6b1bb: mov     %r13,0x10(%rsp)
  0x00007fafb8c6b1c0: mov     %r14,0x8(%rsp)
  0x00007fafb8c6b1c5: mov     %r15,(%rsp)
  0x00007fafb8c6b1c9: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c6b1d3: movabs  $0x7fafb8c6b173,%rsi
  0x00007fafb8c6b1dd: mov     %rsp,%rdx
  0x00007fafb8c6b1e0: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c6b1e4: callq   0x7fafd7fdd230
  0x00007fafb8c6b1e9: hlt
  0x00007fafb8c6b1ea: nopw    0x0(%rax,%rax)
  0x00007fafb8c6b1f0: add     %al,(%rax)
  0x00007fafb8c6b1f2: add     %al,(%rax)
  0x00007fafb8c6b1f4: add     %al,(%rax)
  0x00007fafb8c6b1f6: add     %al,(%rax)
  0x00007fafb8c6b1f8: add     %al,(%rax)
  0x00007fafb8c6b1fa: add     %al,(%rax)
  0x00007fafb8c6b1fc: add     %al,(%rax)
  0x00007fafb8c6b1fe: add     %al,(%rax)

----------------------------------------------------------------------
method entry point (kind = java_lang_math_sin)  [0x00007fafb8c6b220, 0x00007fafb8c6b240]  32 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6b220 Code size: 0x00000020
  0x00007fafb8c6b220: vmovsd  0x8(%rsp),%xmm0
  0x00007fafb8c6b226: callq   0x7fafb8c5e765
  0x00007fafb8c6b22b: pop     %rax
  0x00007fafb8c6b22c: mov     %r13,%rsp
  0x00007fafb8c6b22f: jmpq    %rax
  0x00007fafb8c6b231: nopl    0x0(%rax)
  0x00007fafb8c6b238: add     %al,(%rax)
  0x00007fafb8c6b23a: add     %al,(%rax)
  0x00007fafb8c6b23c: add     %al,(%rax)
  0x00007fafb8c6b23e: add     %al,(%rax)

----------------------------------------------------------------------
method entry point (kind = java_lang_math_cos)  [0x00007fafb8c6b260, 0x00007fafb8c6b280]  32 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6b260 Code size: 0x00000020
  0x00007fafb8c6b260: vmovsd  0x8(%rsp),%xmm0
  0x00007fafb8c6b266: callq   0x7fafb8c5edfc
  0x00007fafb8c6b26b: pop     %rax
  0x00007fafb8c6b26c: mov     %r13,%rsp
  0x00007fafb8c6b26f: jmpq    %rax
  0x00007fafb8c6b271: nopl    0x0(%rax)
  0x00007fafb8c6b278: add     %al,(%rax)
  0x00007fafb8c6b27a: add     %al,(%rax)
  0x00007fafb8c6b27c: add     %al,(%rax)
  0x00007fafb8c6b27e: add     %al,(%rax)

----------------------------------------------------------------------
method entry point (kind = java_lang_math_tan)  [0x00007fafb8c6b2a0, 0x00007fafb8c6b2c0]  32 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6b2a0 Code size: 0x00000020
  0x00007fafb8c6b2a0: vmovsd  0x8(%rsp),%xmm0
  0x00007fafb8c6b2a6: callq   0x7fafb8c5f475
  0x00007fafb8c6b2ab: pop     %rax
  0x00007fafb8c6b2ac: mov     %r13,%rsp
  0x00007fafb8c6b2af: jmpq    %rax
  0x00007fafb8c6b2b1: nopl    0x0(%rax)
  0x00007fafb8c6b2b8: add     %al,(%rax)
  0x00007fafb8c6b2ba: add     %al,(%rax)
  0x00007fafb8c6b2bc: add     %al,(%rax)
  0x00007fafb8c6b2be: add     %al,(%rax)

----------------------------------------------------------------------
method entry point (kind = java_lang_math_abs)  [0x00007fafb8c6b2e0, 0x00007fafb8c6b300]  32 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6b2e0 Code size: 0x00000020
  0x00007fafb8c6b2e0: fldl    0x8(%rsp)
  0x00007fafb8c6b2e4: fabs
  0x00007fafb8c6b2e6: sub     $0x10,%rsp
  0x00007fafb8c6b2ea: fstpl   (%rsp)
  0x00007fafb8c6b2ed: vmovsd  (%rsp),%xmm0
  0x00007fafb8c6b2f2: add     $0x10,%rsp
  0x00007fafb8c6b2f6: pop     %rax
  0x00007fafb8c6b2f7: mov     %r13,%rsp
  0x00007fafb8c6b2fa: jmpq    %rax
  0x00007fafb8c6b2fc: nopl    0x0(%rax)

----------------------------------------------------------------------
method entry point (kind = java_lang_math_sqrt)  [0x00007fafb8c6b320, 0x00007fafb8c6b340]  32 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6b320 Code size: 0x00000020
  0x00007fafb8c6b320: vsqrtsd 0x8(%rsp),%xmm0,%xmm0
  0x00007fafb8c6b326: pop     %rax
  0x00007fafb8c6b327: mov     %r13,%rsp
  0x00007fafb8c6b32a: jmpq    %rax
  0x00007fafb8c6b32c: nopl    0x0(%rax)
  0x00007fafb8c6b330: add     %al,(%rax)
  0x00007fafb8c6b332: add     %al,(%rax)
  0x00007fafb8c6b334: add     %al,(%rax)
  0x00007fafb8c6b336: add     %al,(%rax)
  0x00007fafb8c6b338: add     %al,(%rax)
  0x00007fafb8c6b33a: add     %al,(%rax)
  0x00007fafb8c6b33c: add     %al,(%rax)
  0x00007fafb8c6b33e: add     %al,(%rax)

----------------------------------------------------------------------
method entry point (kind = java_lang_math_log)  [0x00007fafb8c6b360, 0x00007fafb8c6b380]  32 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6b360 Code size: 0x00000020
  0x00007fafb8c6b360: vmovsd  0x8(%rsp),%xmm0
  0x00007fafb8c6b366: callq   0x7fafb8c5d126
  0x00007fafb8c6b36b: pop     %rax
  0x00007fafb8c6b36c: mov     %r13,%rsp
  0x00007fafb8c6b36f: jmpq    %rax
  0x00007fafb8c6b371: nopl    0x0(%rax)
  0x00007fafb8c6b378: add     %al,(%rax)
  0x00007fafb8c6b37a: add     %al,(%rax)
  0x00007fafb8c6b37c: add     %al,(%rax)
  0x00007fafb8c6b37e: add     %al,(%rax)

----------------------------------------------------------------------
method entry point (kind = java_lang_math_log10)  [0x00007fafb8c6b3a0, 0x00007fafb8c6b3c0]  32 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6b3a0 Code size: 0x00000020
  0x00007fafb8c6b3a0: vmovsd  0x8(%rsp),%xmm0
  0x00007fafb8c6b3a6: callq   0x7fafb8c5d3a2
  0x00007fafb8c6b3ab: pop     %rax
  0x00007fafb8c6b3ac: mov     %r13,%rsp
  0x00007fafb8c6b3af: jmpq    %rax
  0x00007fafb8c6b3b1: nopl    0x0(%rax)
  0x00007fafb8c6b3b8: add     %al,(%rax)
  0x00007fafb8c6b3ba: add     %al,(%rax)
  0x00007fafb8c6b3bc: add     %al,(%rax)
  0x00007fafb8c6b3be: add     %al,(%rax)

----------------------------------------------------------------------
method entry point (kind = java_lang_math_exp)  [0x00007fafb8c6b3e0, 0x00007fafb8c6b400]  32 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6b3e0 Code size: 0x00000020
  0x00007fafb8c6b3e0: vmovsd  0x8(%rsp),%xmm0
  0x00007fafb8c6b3e6: callq   0x7fafb8c5cdf9
  0x00007fafb8c6b3eb: pop     %rax
  0x00007fafb8c6b3ec: mov     %r13,%rsp
  0x00007fafb8c6b3ef: jmpq    %rax
  0x00007fafb8c6b3f1: nopl    0x0(%rax)
  0x00007fafb8c6b3f8: add     %al,(%rax)
  0x00007fafb8c6b3fa: add     %al,(%rax)
  0x00007fafb8c6b3fc: add     %al,(%rax)
  0x00007fafb8c6b3fe: add     %al,(%rax)

----------------------------------------------------------------------
method entry point (kind = java_lang_math_pow)  [0x00007fafb8c6b420, 0x00007fafb8c6b440]  32 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6b420 Code size: 0x00000020
  0x00007fafb8c6b420: vmovsd  0x8(%rsp),%xmm1
  0x00007fafb8c6b426: vmovsd  0x18(%rsp),%xmm0
  0x00007fafb8c6b42c: callq   0x7fafb8c5d651
  0x00007fafb8c6b431: pop     %rax
  0x00007fafb8c6b432: mov     %r13,%rsp
  0x00007fafb8c6b435: jmpq    %rax
  0x00007fafb8c6b437: nop
  0x00007fafb8c6b438: add     %al,(%rax)
  0x00007fafb8c6b43a: add     %al,(%rax)
  0x00007fafb8c6b43c: add     %al,(%rax)
  0x00007fafb8c6b43e: add     %al,(%rax)

----------------------------------------------------------------------
method entry point (kind = java_lang_math_fmaF)  [0x00007fafb8c6b460, 0x00007fafb8c6b480]  32 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6b460 Code size: 0x00000020
  0x00007fafb8c6b460: vmovss  0x8(%rsp),%xmm0
  0x00007fafb8c6b466: vmovss  0x10(%rsp),%xmm1
  0x00007fafb8c6b46c: vmovss  0x18(%rsp),%xmm2
  0x00007fafb8c6b472: vfmadd231ss %xmm2,%xmm1,%xmm0
  0x00007fafb8c6b477: pop     %rax
  0x00007fafb8c6b478: mov     %r13,%rsp
  0x00007fafb8c6b47b: jmpq    %rax
  0x00007fafb8c6b47d: nop

----------------------------------------------------------------------
method entry point (kind = java_lang_math_fmaD)  [0x00007fafb8c6b4a0, 0x00007fafb8c6b4c0]  32 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6b4a0 Code size: 0x00000020
  0x00007fafb8c6b4a0: vmovsd  0x8(%rsp),%xmm0
  0x00007fafb8c6b4a6: vmovsd  0x18(%rsp),%xmm1
  0x00007fafb8c6b4ac: vmovsd  0x28(%rsp),%xmm2
  0x00007fafb8c6b4b2: vfmadd231sd %xmm2,%xmm1,%xmm0
  0x00007fafb8c6b4b7: pop     %rax
  0x00007fafb8c6b4b8: mov     %r13,%rsp
  0x00007fafb8c6b4bb: jmpq    %rax
  0x00007fafb8c6b4bd: nop

----------------------------------------------------------------------
method entry point (kind = java_lang_ref_reference_get)  [0x00007fafb8c6b4e0, 0x00007fafb8c6b580]  160 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6b4e0 Code size: 0x000000a0
  0x00007fafb8c6b4e0: mov     0x8(%rsp),%rax
  0x00007fafb8c6b4e5: test    %rax,%rax
  0x00007fafb8c6b4e8: je      0x7fafb8c6b55e
  0x00007fafb8c6b4ee: mov     0xc(%rax),%eax
  0x00007fafb8c6b4f1: shl     $0x3,%rax
  0x00007fafb8c6b4f5: cmpb    $0x0,0x30(%r15)
  0x00007fafb8c6b4fa: je      0x7fafb8c6b557
  0x00007fafb8c6b500: cmp     $0x0,%rax
  0x00007fafb8c6b504: je      0x7fafb8c6b557
  0x00007fafb8c6b50a: mov     0x38(%r15),%rbx
  0x00007fafb8c6b50e: cmp     $0x0,%rbx
  0x00007fafb8c6b512: je      0x7fafb8c6b52c
  0x00007fafb8c6b518: sub     $0x8,%rbx
  0x00007fafb8c6b51c: mov     %rbx,0x38(%r15)
  0x00007fafb8c6b520: add     0x48(%r15),%rbx
  0x00007fafb8c6b524: mov     %rax,(%rbx)
  0x00007fafb8c6b527: jmpq    0x7fafb8c6b557
  0x00007fafb8c6b52c: push    %rax
  0x00007fafb8c6b52d: mov     %r15,%rsi
  0x00007fafb8c6b530: mov     %rax,%rdi
  0x00007fafb8c6b533: test    $0xf,%esp
  0x00007fafb8c6b539: je      0x7fafb8c6b551
  0x00007fafb8c6b53f: sub     $0x8,%rsp
  0x00007fafb8c6b543: callq   0x7fafd7c74620
  0x00007fafb8c6b548: add     $0x8,%rsp
  0x00007fafb8c6b54c: jmpq    0x7fafb8c6b556
  0x00007fafb8c6b551: callq   0x7fafd7c74620
  0x00007fafb8c6b556: pop     %rax
  0x00007fafb8c6b557: pop     %rdi
  0x00007fafb8c6b558: mov     %r13,%rsp
  0x00007fafb8c6b55b: jmpq    %rdi
  0x00007fafb8c6b55d: retq
  0x00007fafb8c6b55e: jmpq    0x7fafb8c6a520
  0x00007fafb8c6b563: nopl    0x0(%rax,%rax)
  0x00007fafb8c6b568: add     %al,(%rax)
  0x00007fafb8c6b56a: add     %al,(%rax)
  0x00007fafb8c6b56c: add     %al,(%rax)
  0x00007fafb8c6b56e: add     %al,(%rax)
  0x00007fafb8c6b570: add     %al,(%rax)
  0x00007fafb8c6b572: add     %al,(%rax)
  0x00007fafb8c6b574: add     %al,(%rax)
  0x00007fafb8c6b576: add     %al,(%rax)
  0x00007fafb8c6b578: add     %al,(%rax)
  0x00007fafb8c6b57a: add     %al,(%rax)
  0x00007fafb8c6b57c: add     %al,(%rax)
  0x00007fafb8c6b57e: add     %al,(%rax)

----------------------------------------------------------------------
method entry point (kind = native)  [0x00007fafb8c6b5a0, 0x00007fafb8c6bfe0]  2624 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6b5a0 Code size: 0x00000a40
  0x00007fafb8c6b5a0: mov     0x8(%rbx),%rcx
  0x00007fafb8c6b5a4: movzwl  0x34(%rcx),%ecx
  0x00007fafb8c6b5a8: pop     %rax
  0x00007fafb8c6b5a9: lea     0xfffffffffffffff8(%rsp,%rcx,8),%r14
  0x00007fafb8c6b5ae: pushq   $0x0
  0x00007fafb8c6b5b3: pushq   $0x0
  0x00007fafb8c6b5b8: push    %rax
  0x00007fafb8c6b5b9: push    %rbp
  0x00007fafb8c6b5ba: mov     %rsp,%rbp
  0x00007fafb8c6b5bd: push    %r13
  0x00007fafb8c6b5bf: pushq   $0x0
  0x00007fafb8c6b5c4: mov     0x8(%rbx),%r13
  0x00007fafb8c6b5c8: lea     0x38(%r13),%r13
  0x00007fafb8c6b5cc: push    %rbx
  0x00007fafb8c6b5cd: mov     0x8(%rbx),%rdx
  0x00007fafb8c6b5d1: mov     0x8(%rdx),%rdx
  0x00007fafb8c6b5d5: mov     0x18(%rdx),%rdx
  0x00007fafb8c6b5d9: mov     0x70(%rdx),%rdx
  0x00007fafb8c6b5dd: mov     (%rdx),%rdx
  0x00007fafb8c6b5e0: push    %rdx
  0x00007fafb8c6b5e1: mov     0x10(%rbx),%rdx
  0x00007fafb8c6b5e5: test    %rdx,%rdx
  0x00007fafb8c6b5e8: je      0x7fafb8c6b5f5
  0x00007fafb8c6b5ee: add     $0x138,%rdx
  0x00007fafb8c6b5f5: push    %rdx
  0x00007fafb8c6b5f6: mov     0x8(%rbx),%rdx
  0x00007fafb8c6b5fa: mov     0x8(%rdx),%rdx
  0x00007fafb8c6b5fe: mov     0x10(%rdx),%rdx
  0x00007fafb8c6b602: push    %rdx
  0x00007fafb8c6b603: push    %r14
  0x00007fafb8c6b605: pushq   $0x0
  0x00007fafb8c6b60a: pushq   $0x0
  0x00007fafb8c6b60f: mov     %rsp,(%rsp)
  0x00007fafb8c6b613: movb    $0x1,0x3dd(%r15)
  0x00007fafb8c6b61b: mov     0x10(%rbx),%rax
  0x00007fafb8c6b61f: test    %rax,%rax
  0x00007fafb8c6b622: je      0x7fafb8c6b644
  0x00007fafb8c6b624: mov     0x104(%rax),%ecx
  0x00007fafb8c6b62a: add     $0x8,%ecx
  0x00007fafb8c6b62d: mov     %ecx,0x104(%rax)
  0x00007fafb8c6b633: and     0x118(%rax),%ecx
  0x00007fafb8c6b639: je      0x7fafb8c6bf32
  0x00007fafb8c6b63f: jmpq    0x7fafb8c6b70f
  0x00007fafb8c6b644: mov     0x18(%rbx),%rax
  0x00007fafb8c6b648: test    %rax,%rax
  0x00007fafb8c6b64b: jne     0x7fafb8c6b6fd
  0x00007fafb8c6b651: callq   0x7fafb8c6b65b
  0x00007fafb8c6b656: jmpq    0x7fafb8c6b6f0
  0x00007fafb8c6b65b: mov     %rbx,%rsi
  0x00007fafb8c6b65e: lea     0x8(%rsp),%rax
  0x00007fafb8c6b663: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c6b667: mov     %r15,%rdi
  0x00007fafb8c6b66a: vzeroupper
  0x00007fafb8c6b66d: mov     %rbp,0x330(%r15)
  0x00007fafb8c6b674: mov     %rax,0x320(%r15)
  0x00007fafb8c6b67b: test    $0xf,%esp
  0x00007fafb8c6b681: je      0x7fafb8c6b699
  0x00007fafb8c6b687: sub     $0x8,%rsp
  0x00007fafb8c6b68b: callq   0x7fafd7d85400
  0x00007fafb8c6b690: add     $0x8,%rsp
  0x00007fafb8c6b694: jmpq    0x7fafb8c6b69e
  0x00007fafb8c6b699: callq   0x7fafd7d85400
  0x00007fafb8c6b69e: movabs  $0x0,%r10
  0x00007fafb8c6b6a8: mov     %r10,0x320(%r15)
  0x00007fafb8c6b6af: movabs  $0x0,%r10
  0x00007fafb8c6b6b9: mov     %r10,0x330(%r15)
  0x00007fafb8c6b6c0: movabs  $0x0,%r10
  0x00007fafb8c6b6ca: mov     %r10,0x328(%r15)
  0x00007fafb8c6b6d1: vzeroupper
  0x00007fafb8c6b6d4: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c6b6dc: je      0x7fafb8c6b6e7
  0x00007fafb8c6b6e2: jmpq    0x7fafb8c5c780
  0x00007fafb8c6b6e7: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6b6eb: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c6b6ef: retq
  0x00007fafb8c6b6f0: mov     0x18(%rbx),%rax
  0x00007fafb8c6b6f4: test    %rax,%rax
  0x00007fafb8c6b6f7: je      0x7fafb8c6b70f
  0x00007fafb8c6b6fd: mov     0x18(%rax),%ecx
  0x00007fafb8c6b700: add     $0x8,%ecx
  0x00007fafb8c6b703: mov     %ecx,0x18(%rax)
  0x00007fafb8c6b706: and     0x30(%rax),%ecx
  0x00007fafb8c6b709: je      0x7fafb8c6bf32
  0x00007fafb8c6b70f: mov     %eax,0xfffffffffffec000(%rsp)
  0x00007fafb8c6b716: movb    $0x0,0x3dd(%r15)
  0x00007fafb8c6b71e: cmpb    $0x0,0x1fd0c572(%rip)
  0x00007fafb8c6b725: je      0x7fafb8c6b755
  0x00007fafb8c6b72b: mov     0xffffffffffffffe8(%rbp),%rsi
  0x00007fafb8c6b72f: mov     %r15,%rdi
  0x00007fafb8c6b732: test    $0xf,%esp
  0x00007fafb8c6b738: je      0x7fafb8c6b750
  0x00007fafb8c6b73e: sub     $0x8,%rsp
  0x00007fafb8c6b742: callq   0x7fafd81e7090
  0x00007fafb8c6b747: add     $0x8,%rsp
  0x00007fafb8c6b74b: jmpq    0x7fafb8c6b755
  0x00007fafb8c6b750: callq   0x7fafd81e7090
  0x00007fafb8c6b755: mov     0xffffffffffffffe8(%rbp),%rbx
  0x00007fafb8c6b759: mov     0x8(%rbx),%r11
  0x00007fafb8c6b75d: movzwl  0x34(%r11),%r11d
  0x00007fafb8c6b762: shl     $0x3,%r11d
  0x00007fafb8c6b766: sub     %r11,%rsp
  0x00007fafb8c6b769: sub     $0x0,%rsp
  0x00007fafb8c6b76d: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c6b771: mov     0x60(%rbx),%r11
  0x00007fafb8c6b775: test    %r11,%r11
  0x00007fafb8c6b778: jne     0x7fafb8c6b825
  0x00007fafb8c6b77e: callq   0x7fafb8c6b788
  0x00007fafb8c6b783: jmpq    0x7fafb8c6b81d
  0x00007fafb8c6b788: mov     %rbx,%rsi
  0x00007fafb8c6b78b: lea     0x8(%rsp),%rax
  0x00007fafb8c6b790: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c6b794: mov     %r15,%rdi
  0x00007fafb8c6b797: vzeroupper
  0x00007fafb8c6b79a: mov     %rbp,0x330(%r15)
  0x00007fafb8c6b7a1: mov     %rax,0x320(%r15)
  0x00007fafb8c6b7a8: test    $0xf,%esp
  0x00007fafb8c6b7ae: je      0x7fafb8c6b7c6
  0x00007fafb8c6b7b4: sub     $0x8,%rsp
  0x00007fafb8c6b7b8: callq   0x7fafd7d86950
  0x00007fafb8c6b7bd: add     $0x8,%rsp
  0x00007fafb8c6b7c1: jmpq    0x7fafb8c6b7cb
  0x00007fafb8c6b7c6: callq   0x7fafd7d86950
  0x00007fafb8c6b7cb: movabs  $0x0,%r10
  0x00007fafb8c6b7d5: mov     %r10,0x320(%r15)
  0x00007fafb8c6b7dc: movabs  $0x0,%r10
  0x00007fafb8c6b7e6: mov     %r10,0x330(%r15)
  0x00007fafb8c6b7ed: movabs  $0x0,%r10
  0x00007fafb8c6b7f7: mov     %r10,0x328(%r15)
  0x00007fafb8c6b7fe: vzeroupper
  0x00007fafb8c6b801: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c6b809: je      0x7fafb8c6b814
  0x00007fafb8c6b80f: jmpq    0x7fafb8c5c780
  0x00007fafb8c6b814: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6b818: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c6b81c: retq
  0x00007fafb8c6b81d: mov     0xffffffffffffffe8(%rbp),%rbx
  0x00007fafb8c6b821: mov     0x60(%rbx),%r11
  0x00007fafb8c6b825: callq   %r11
  0x00007fafb8c6b828: mov     0xffffffffffffffe8(%rbp),%rbx
  0x00007fafb8c6b82c: mov     %rax,0x18(%rbp)
  0x00007fafb8c6b830: mov     0x20(%rbx),%r11d
  0x00007fafb8c6b834: test    $0x8,%r11d
  0x00007fafb8c6b83b: je      0x7fafb8c6b85c
  0x00007fafb8c6b841: mov     0x8(%rbx),%r11
  0x00007fafb8c6b845: mov     0x8(%r11),%r11
  0x00007fafb8c6b849: mov     0x18(%r11),%r11
  0x00007fafb8c6b84d: mov     0x70(%r11),%r11
  0x00007fafb8c6b851: mov     (%r11),%r11
  0x00007fafb8c6b854: mov     %r11,0x10(%rbp)
  0x00007fafb8c6b858: lea     0x10(%rbp),%rsi
  0x00007fafb8c6b85c: mov     0x58(%rbx),%rax
  0x00007fafb8c6b860: movabs  $0x7fafd81e35c0,%r10
  0x00007fafb8c6b86a: cmp     %r10,%rax
  0x00007fafb8c6b86d: jne     0x7fafb8c6b91a
  0x00007fafb8c6b873: callq   0x7fafb8c6b87d
  0x00007fafb8c6b878: jmpq    0x7fafb8c6b912
  0x00007fafb8c6b87d: mov     %rbx,%rsi
  0x00007fafb8c6b880: lea     0x8(%rsp),%rax
  0x00007fafb8c6b885: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c6b889: mov     %r15,%rdi
  0x00007fafb8c6b88c: vzeroupper
  0x00007fafb8c6b88f: mov     %rbp,0x330(%r15)
  0x00007fafb8c6b896: mov     %rax,0x320(%r15)
  0x00007fafb8c6b89d: test    $0xf,%esp
  0x00007fafb8c6b8a3: je      0x7fafb8c6b8bb
  0x00007fafb8c6b8a9: sub     $0x8,%rsp
  0x00007fafb8c6b8ad: callq   0x7fafd7d86950
  0x00007fafb8c6b8b2: add     $0x8,%rsp
  0x00007fafb8c6b8b6: jmpq    0x7fafb8c6b8c0
  0x00007fafb8c6b8bb: callq   0x7fafd7d86950
  0x00007fafb8c6b8c0: movabs  $0x0,%r10
  0x00007fafb8c6b8ca: mov     %r10,0x320(%r15)
  0x00007fafb8c6b8d1: movabs  $0x0,%r10
  0x00007fafb8c6b8db: mov     %r10,0x330(%r15)
  0x00007fafb8c6b8e2: movabs  $0x0,%r10
  0x00007fafb8c6b8ec: mov     %r10,0x328(%r15)
  0x00007fafb8c6b8f3: vzeroupper
  0x00007fafb8c6b8f6: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c6b8fe: je      0x7fafb8c6b909
  0x00007fafb8c6b904: jmpq    0x7fafb8c5c780
  0x00007fafb8c6b909: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6b90d: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c6b911: retq
  0x00007fafb8c6b912: mov     0xffffffffffffffe8(%rbp),%rbx
  0x00007fafb8c6b916: mov     0x58(%rbx),%rax
  0x00007fafb8c6b91a: lea     0x340(%r15),%rdi
  0x00007fafb8c6b921: vzeroupper
  0x00007fafb8c6b924: mov     %rbp,0x330(%r15)
  0x00007fafb8c6b92b: movabs  $0x7fafb8c6b921,%r10
  0x00007fafb8c6b935: mov     %r10,0x328(%r15)
  0x00007fafb8c6b93c: mov     %rsp,0x320(%r15)
  0x00007fafb8c6b943: movl    $0x4,0x3b8(%r15)
  0x00007fafb8c6b94e: callq   %rax
  0x00007fafb8c6b950: vzeroupper
  0x00007fafb8c6b953: sub     $0x10,%rsp
  0x00007fafb8c6b957: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6b95c: sub     $0x10,%rsp
  0x00007fafb8c6b960: mov     %rax,(%rsp)
  0x00007fafb8c6b964: movabs  $0x0,%r10
  0x00007fafb8c6b96e: mov     %r10,0x8(%rsp)
  0x00007fafb8c6b973: movl    $0x5,0x3b8(%r15)
  0x00007fafb8c6b97e: lock addl $0x0,0xffffffffffffffc0(%rsp)
  0x00007fafb8c6b984: testb   $0x8,0x108(%r15)
  0x00007fafb8c6b98c: jne     0x7fafb8c6b9a3
  0x00007fafb8c6b992: cmpl    $0x0,0xd8(%r15)
  0x00007fafb8c6b99d: je      0x7fafb8c6b9bc
  0x00007fafb8c6b9a3: mov     %r15,%rdi
  0x00007fafb8c6b9a6: mov     %rsp,%r12
  0x00007fafb8c6b9a9: sub     $0x0,%rsp
  0x00007fafb8c6b9ad: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c6b9b1: callq   0x7fafd82ccce0
  0x00007fafb8c6b9b6: mov     %r12,%rsp
  0x00007fafb8c6b9b9: xor     %r12,%r12
  0x00007fafb8c6b9bc: movl    $0x8,0x3b8(%r15)
  0x00007fafb8c6b9c7: movabs  $0x0,%r10
  0x00007fafb8c6b9d1: mov     %r10,0x320(%r15)
  0x00007fafb8c6b9d8: movabs  $0x0,%r10
  0x00007fafb8c6b9e2: mov     %r10,0x330(%r15)
  0x00007fafb8c6b9e9: movabs  $0x0,%r10
  0x00007fafb8c6b9f3: mov     %r10,0x328(%r15)
  0x00007fafb8c6b9fa: vzeroupper
  0x00007fafb8c6b9fd: mov     0xe0(%r15),%r11
  0x00007fafb8c6ba04: movl    $0x0,0x100(%r11)
  0x00007fafb8c6ba0f: movabs  $0x7fafb8c6889b,%r11
  0x00007fafb8c6ba19: cmp     0x18(%rbp),%r11
  0x00007fafb8c6ba1d: jne     0x7fafb8c6bac9
  0x00007fafb8c6ba23: mov     (%rsp),%rax
  0x00007fafb8c6ba27: add     $0x10,%rsp
  0x00007fafb8c6ba2b: test    %rax,%rax
  0x00007fafb8c6ba2e: je      0x7fafb8c6baae
  0x00007fafb8c6ba34: test    $0x1,%rax
  0x00007fafb8c6ba3a: je      0x7fafb8c6baab
  0x00007fafb8c6ba40: mov     0xffffffffffffffff(%rax),%rax
  0x00007fafb8c6ba44: cmpb    $0x0,0x30(%r15)
  0x00007fafb8c6ba49: je      0x7fafb8c6baa6
  0x00007fafb8c6ba4f: cmp     $0x0,%rax
  0x00007fafb8c6ba53: je      0x7fafb8c6baa6
  0x00007fafb8c6ba59: mov     0x38(%r15),%r11
  0x00007fafb8c6ba5d: cmp     $0x0,%r11
  0x00007fafb8c6ba61: je      0x7fafb8c6ba7b
  0x00007fafb8c6ba67: sub     $0x8,%r11
  0x00007fafb8c6ba6b: mov     %r11,0x38(%r15)
  0x00007fafb8c6ba6f: add     0x48(%r15),%r11
  0x00007fafb8c6ba73: mov     %rax,(%r11)
  0x00007fafb8c6ba76: jmpq    0x7fafb8c6baa6
  0x00007fafb8c6ba7b: push    %rax
  0x00007fafb8c6ba7c: mov     %r15,%rsi
  0x00007fafb8c6ba7f: mov     %rax,%rdi
  0x00007fafb8c6ba82: test    $0xf,%esp
  0x00007fafb8c6ba88: je      0x7fafb8c6baa0
  0x00007fafb8c6ba8e: sub     $0x8,%rsp
  0x00007fafb8c6ba92: callq   0x7fafd7c74620
  0x00007fafb8c6ba97: add     $0x8,%rsp
  0x00007fafb8c6ba9b: jmpq    0x7fafb8c6baa5
  0x00007fafb8c6baa0: callq   0x7fafd7c74620
  0x00007fafb8c6baa5: pop     %rax
  0x00007fafb8c6baa6: jmpq    0x7fafb8c6baae
  0x00007fafb8c6baab: mov     (%rax),%rax
  0x00007fafb8c6baae: mov     %rax,0x10(%rbp)
  0x00007fafb8c6bab2: sub     $0x10,%rsp
  0x00007fafb8c6bab6: mov     %rax,(%rsp)
  0x00007fafb8c6baba: movabs  $0x0,%r10
  0x00007fafb8c6bac4: mov     %r10,0x8(%rsp)
  0x00007fafb8c6bac9: cmpl    $0x2,0x408(%r15)
  0x00007fafb8c6bad4: jne     0x7fafb8c6bb97
  0x00007fafb8c6bada: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c6badf: sub     $0x80,%rsp
  0x00007fafb8c6bae6: mov     %rax,0x78(%rsp)
  0x00007fafb8c6baeb: mov     %rcx,0x70(%rsp)
  0x00007fafb8c6baf0: mov     %rdx,0x68(%rsp)
  0x00007fafb8c6baf5: mov     %rbx,0x60(%rsp)
  0x00007fafb8c6bafa: mov     %rbp,0x50(%rsp)
  0x00007fafb8c6baff: mov     %rsi,0x48(%rsp)
  0x00007fafb8c6bb04: mov     %rdi,0x40(%rsp)
  0x00007fafb8c6bb09: mov     %r8,0x38(%rsp)
  0x00007fafb8c6bb0e: mov     %r9,0x30(%rsp)
  0x00007fafb8c6bb13: mov     %r10,0x28(%rsp)
  0x00007fafb8c6bb18: mov     %r11,0x20(%rsp)
  0x00007fafb8c6bb1d: mov     %r12,0x18(%rsp)
  0x00007fafb8c6bb22: mov     %r13,0x10(%rsp)
  0x00007fafb8c6bb27: mov     %r14,0x8(%rsp)
  0x00007fafb8c6bb2c: mov     %r15,(%rsp)
  0x00007fafb8c6bb30: mov     %rsp,%r12
  0x00007fafb8c6bb33: sub     $0x0,%rsp
  0x00007fafb8c6bb37: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c6bb3b: callq   0x7fafd81ecc90
  0x00007fafb8c6bb40: mov     %r12,%rsp
  0x00007fafb8c6bb43: mov     (%rsp),%r15
  0x00007fafb8c6bb47: mov     0x8(%rsp),%r14
  0x00007fafb8c6bb4c: mov     0x10(%rsp),%r13
  0x00007fafb8c6bb51: mov     0x18(%rsp),%r12
  0x00007fafb8c6bb56: mov     0x20(%rsp),%r11
  0x00007fafb8c6bb5b: mov     0x28(%rsp),%r10
  0x00007fafb8c6bb60: mov     0x30(%rsp),%r9
  0x00007fafb8c6bb65: mov     0x38(%rsp),%r8
  0x00007fafb8c6bb6a: mov     0x40(%rsp),%rdi
  0x00007fafb8c6bb6f: mov     0x48(%rsp),%rsi
  0x00007fafb8c6bb74: mov     0x50(%rsp),%rbp
  0x00007fafb8c6bb79: mov     0x60(%rsp),%rbx
  0x00007fafb8c6bb7e: mov     0x68(%rsp),%rdx
  0x00007fafb8c6bb83: mov     0x70(%rsp),%rcx
  0x00007fafb8c6bb88: mov     0x78(%rsp),%rax
  0x00007fafb8c6bb8d: add     $0x80,%rsp
  0x00007fafb8c6bb94: xor     %r12,%r12
  0x00007fafb8c6bb97: mov     0xffffffffffffffe8(%rbp),%rbx
  0x00007fafb8c6bb9b: mov     0x8(%rbx),%r13
  0x00007fafb8c6bb9f: lea     0x38(%r13),%r13
  0x00007fafb8c6bba3: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c6bbab: je      0x7fafb8c6bcc4
  0x00007fafb8c6bbb1: callq   0x7fafb8c6bbbb
  0x00007fafb8c6bbb6: jmpq    0x7fafb8c6bc4d
  0x00007fafb8c6bbbb: lea     0x8(%rsp),%rax
  0x00007fafb8c6bbc0: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c6bbc4: mov     %r15,%rdi
  0x00007fafb8c6bbc7: vzeroupper
  0x00007fafb8c6bbca: mov     %rbp,0x330(%r15)
  0x00007fafb8c6bbd1: mov     %rax,0x320(%r15)
  0x00007fafb8c6bbd8: test    $0xf,%esp
  0x00007fafb8c6bbde: je      0x7fafb8c6bbf6
  0x00007fafb8c6bbe4: sub     $0x8,%rsp
  0x00007fafb8c6bbe8: callq   0x7fafd7d80970
  0x00007fafb8c6bbed: add     $0x8,%rsp
  0x00007fafb8c6bbf1: jmpq    0x7fafb8c6bbfb
  0x00007fafb8c6bbf6: callq   0x7fafd7d80970
  0x00007fafb8c6bbfb: movabs  $0x0,%r10
  0x00007fafb8c6bc05: mov     %r10,0x320(%r15)
  0x00007fafb8c6bc0c: movabs  $0x0,%r10
  0x00007fafb8c6bc16: mov     %r10,0x330(%r15)
  0x00007fafb8c6bc1d: movabs  $0x0,%r10
  0x00007fafb8c6bc27: mov     %r10,0x328(%r15)
  0x00007fafb8c6bc2e: vzeroupper
  0x00007fafb8c6bc31: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c6bc39: je      0x7fafb8c6bc44
  0x00007fafb8c6bc3f: jmpq    0x7fafb8c5c780
  0x00007fafb8c6bc44: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6bc48: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c6bc4c: retq
  0x00007fafb8c6bc4d: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c6bc52: sub     $0x80,%rsp
  0x00007fafb8c6bc59: mov     %rax,0x78(%rsp)
  0x00007fafb8c6bc5e: mov     %rcx,0x70(%rsp)
  0x00007fafb8c6bc63: mov     %rdx,0x68(%rsp)
  0x00007fafb8c6bc68: mov     %rbx,0x60(%rsp)
  0x00007fafb8c6bc6d: mov     %rbp,0x50(%rsp)
  0x00007fafb8c6bc72: mov     %rsi,0x48(%rsp)
  0x00007fafb8c6bc77: mov     %rdi,0x40(%rsp)
  0x00007fafb8c6bc7c: mov     %r8,0x38(%rsp)
  0x00007fafb8c6bc81: mov     %r9,0x30(%rsp)
  0x00007fafb8c6bc86: mov     %r10,0x28(%rsp)
  0x00007fafb8c6bc8b: mov     %r11,0x20(%rsp)
  0x00007fafb8c6bc90: mov     %r12,0x18(%rsp)
  0x00007fafb8c6bc95: mov     %r13,0x10(%rsp)
  0x00007fafb8c6bc9a: mov     %r14,0x8(%rsp)
  0x00007fafb8c6bc9f: mov     %r15,(%rsp)
  0x00007fafb8c6bca3: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c6bcad: movabs  $0x7fafb8c6bc4d,%rsi
  0x00007fafb8c6bcb7: mov     %rsp,%rdx
  0x00007fafb8c6bcba: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c6bcbe: callq   0x7fafd7fdd230
  0x00007fafb8c6bcc3: hlt
  0x00007fafb8c6bcc4: mov     0x20(%rbx),%r11d
  0x00007fafb8c6bcc8: test    $0x20,%r11d
  0x00007fafb8c6bccf: je      0x7fafb8c6bed8
  0x00007fafb8c6bcd5: lea     0xffffffffffffffa8(%rbp),%rsi
  0x00007fafb8c6bcd9: mov     0x8(%rsi),%r11
  0x00007fafb8c6bcdd: test    %r11,%r11
  0x00007fafb8c6bce0: jne     0x7fafb8c6bdf9
  0x00007fafb8c6bce6: callq   0x7fafb8c6bcf0
  0x00007fafb8c6bceb: jmpq    0x7fafb8c6bd82
  0x00007fafb8c6bcf0: lea     0x8(%rsp),%rax
  0x00007fafb8c6bcf5: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c6bcf9: mov     %r15,%rdi
  0x00007fafb8c6bcfc: vzeroupper
  0x00007fafb8c6bcff: mov     %rbp,0x330(%r15)
  0x00007fafb8c6bd06: mov     %rax,0x320(%r15)
  0x00007fafb8c6bd0d: test    $0xf,%esp
  0x00007fafb8c6bd13: je      0x7fafb8c6bd2b
  0x00007fafb8c6bd19: sub     $0x8,%rsp
  0x00007fafb8c6bd1d: callq   0x7fafd7d826a0
  0x00007fafb8c6bd22: add     $0x8,%rsp
  0x00007fafb8c6bd26: jmpq    0x7fafb8c6bd30
  0x00007fafb8c6bd2b: callq   0x7fafd7d826a0
  0x00007fafb8c6bd30: movabs  $0x0,%r10
  0x00007fafb8c6bd3a: mov     %r10,0x320(%r15)
  0x00007fafb8c6bd41: movabs  $0x0,%r10
  0x00007fafb8c6bd4b: mov     %r10,0x330(%r15)
  0x00007fafb8c6bd52: movabs  $0x0,%r10
  0x00007fafb8c6bd5c: mov     %r10,0x328(%r15)
  0x00007fafb8c6bd63: vzeroupper
  0x00007fafb8c6bd66: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c6bd6e: je      0x7fafb8c6bd79
  0x00007fafb8c6bd74: jmpq    0x7fafb8c5c780
  0x00007fafb8c6bd79: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6bd7d: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c6bd81: retq
  0x00007fafb8c6bd82: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c6bd87: sub     $0x80,%rsp
  0x00007fafb8c6bd8e: mov     %rax,0x78(%rsp)
  0x00007fafb8c6bd93: mov     %rcx,0x70(%rsp)
  0x00007fafb8c6bd98: mov     %rdx,0x68(%rsp)
  0x00007fafb8c6bd9d: mov     %rbx,0x60(%rsp)
  0x00007fafb8c6bda2: mov     %rbp,0x50(%rsp)
  0x00007fafb8c6bda7: mov     %rsi,0x48(%rsp)
  0x00007fafb8c6bdac: mov     %rdi,0x40(%rsp)
  0x00007fafb8c6bdb1: mov     %r8,0x38(%rsp)
  0x00007fafb8c6bdb6: mov     %r9,0x30(%rsp)
  0x00007fafb8c6bdbb: mov     %r10,0x28(%rsp)
  0x00007fafb8c6bdc0: mov     %r11,0x20(%rsp)
  0x00007fafb8c6bdc5: mov     %r12,0x18(%rsp)
  0x00007fafb8c6bdca: mov     %r13,0x10(%rsp)
  0x00007fafb8c6bdcf: mov     %r14,0x8(%rsp)
  0x00007fafb8c6bdd4: mov     %r15,(%rsp)
  0x00007fafb8c6bdd8: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c6bde2: movabs  $0x7fafb8c6bd82,%rsi
  0x00007fafb8c6bdec: mov     %rsp,%rdx
  0x00007fafb8c6bdef: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c6bdf3: callq   0x7fafd7fdd230
  0x00007fafb8c6bdf8: hlt
  0x00007fafb8c6bdf9: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c6bdfd: lea     (%rsi),%rax
  0x00007fafb8c6be00: mov     0x8(%rsi),%rcx
  0x00007fafb8c6be04: movq    $0x0,0x8(%rsi)
  0x00007fafb8c6be0c: mov     (%rcx),%rdx
  0x00007fafb8c6be0f: and     $0x7,%rdx
  0x00007fafb8c6be13: cmp     $0x5,%rdx
  0x00007fafb8c6be17: je      0x7fafb8c6bed4
  0x00007fafb8c6be1d: mov     (%rax),%rdx
  0x00007fafb8c6be20: test    %rdx,%rdx
  0x00007fafb8c6be23: je      0x7fafb8c6bed4
  0x00007fafb8c6be29: lock cmpxchg %rdx,(%rcx)
  0x00007fafb8c6be2e: je      0x7fafb8c6bed4
  0x00007fafb8c6be34: mov     %rcx,0x8(%rsi)
  0x00007fafb8c6be38: callq   0x7fafb8c6be42
  0x00007fafb8c6be3d: jmpq    0x7fafb8c6bed4
  0x00007fafb8c6be42: lea     0x8(%rsp),%rax
  0x00007fafb8c6be47: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c6be4b: mov     %r15,%rdi
  0x00007fafb8c6be4e: vzeroupper
  0x00007fafb8c6be51: mov     %rbp,0x330(%r15)
  0x00007fafb8c6be58: mov     %rax,0x320(%r15)
  0x00007fafb8c6be5f: test    $0xf,%esp
  0x00007fafb8c6be65: je      0x7fafb8c6be7d
  0x00007fafb8c6be6b: sub     $0x8,%rsp
  0x00007fafb8c6be6f: callq   0x7fafd7d82470
  0x00007fafb8c6be74: add     $0x8,%rsp
  0x00007fafb8c6be78: jmpq    0x7fafb8c6be82
  0x00007fafb8c6be7d: callq   0x7fafd7d82470
  0x00007fafb8c6be82: movabs  $0x0,%r10
  0x00007fafb8c6be8c: mov     %r10,0x320(%r15)
  0x00007fafb8c6be93: movabs  $0x0,%r10
  0x00007fafb8c6be9d: mov     %r10,0x330(%r15)
  0x00007fafb8c6bea4: movabs  $0x0,%r10
  0x00007fafb8c6beae: mov     %r10,0x328(%r15)
  0x00007fafb8c6beb5: vzeroupper
  0x00007fafb8c6beb8: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c6bec0: je      0x7fafb8c6becb
  0x00007fafb8c6bec6: jmpq    0x7fafb8c5c780
  0x00007fafb8c6becb: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6becf: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c6bed3: retq
  0x00007fafb8c6bed4: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6bed8: cmpb    $0x0,0x1fd0bdb8(%rip)
  0x00007fafb8c6bedf: je      0x7fafb8c6bf0f
  0x00007fafb8c6bee5: mov     0xffffffffffffffe8(%rbp),%rsi
  0x00007fafb8c6bee9: mov     %r15,%rdi
  0x00007fafb8c6beec: test    $0xf,%esp
  0x00007fafb8c6bef2: je      0x7fafb8c6bf0a
  0x00007fafb8c6bef8: sub     $0x8,%rsp
  0x00007fafb8c6befc: callq   0x7fafd81e7140
  0x00007fafb8c6bf01: add     $0x8,%rsp
  0x00007fafb8c6bf05: jmpq    0x7fafb8c6bf0f
  0x00007fafb8c6bf0a: callq   0x7fafd81e7140
  0x00007fafb8c6bf0f: mov     (%rsp),%rax
  0x00007fafb8c6bf13: add     $0x10,%rsp
  0x00007fafb8c6bf17: vmovsd  (%rsp),%xmm0
  0x00007fafb8c6bf1c: add     $0x10,%rsp
  0x00007fafb8c6bf20: mov     0x18(%rbp),%r11
  0x00007fafb8c6bf24: callq   %r11
  0x00007fafb8c6bf27: mov     0xfffffffffffffff8(%rbp),%r11
  0x00007fafb8c6bf2b: leave
  0x00007fafb8c6bf2c: pop     %rdi
  0x00007fafb8c6bf2d: mov     %r11,%rsp
  0x00007fafb8c6bf30: jmpq    %rdi
  0x00007fafb8c6bf32: mov     $0x0,%esi
  0x00007fafb8c6bf37: callq   0x7fafb8c6bf41
  0x00007fafb8c6bf3c: jmpq    0x7fafb8c6bfd3
  0x00007fafb8c6bf41: lea     0x8(%rsp),%rax
  0x00007fafb8c6bf46: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c6bf4a: mov     %r15,%rdi
  0x00007fafb8c6bf4d: vzeroupper
  0x00007fafb8c6bf50: mov     %rbp,0x330(%r15)
  0x00007fafb8c6bf57: mov     %rax,0x320(%r15)
  0x00007fafb8c6bf5e: test    $0xf,%esp
  0x00007fafb8c6bf64: je      0x7fafb8c6bf7c
  0x00007fafb8c6bf6a: sub     $0x8,%rsp
  0x00007fafb8c6bf6e: callq   0x7fafd7d84b40
  0x00007fafb8c6bf73: add     $0x8,%rsp
  0x00007fafb8c6bf77: jmpq    0x7fafb8c6bf81
  0x00007fafb8c6bf7c: callq   0x7fafd7d84b40
  0x00007fafb8c6bf81: movabs  $0x0,%r10
  0x00007fafb8c6bf8b: mov     %r10,0x320(%r15)
  0x00007fafb8c6bf92: movabs  $0x0,%r10
  0x00007fafb8c6bf9c: mov     %r10,0x330(%r15)
  0x00007fafb8c6bfa3: movabs  $0x0,%r10
  0x00007fafb8c6bfad: mov     %r10,0x328(%r15)
  0x00007fafb8c6bfb4: vzeroupper
  0x00007fafb8c6bfb7: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c6bfbf: je      0x7fafb8c6bfca
  0x00007fafb8c6bfc5: jmpq    0x7fafb8c5c780
  0x00007fafb8c6bfca: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6bfce: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c6bfd2: retq
  0x00007fafb8c6bfd3: mov     0xffffffffffffffe8(%rbp),%rbx
  0x00007fafb8c6bfd7: jmpq    0x7fafb8c6b70f
  0x00007fafb8c6bfdc: nopl    0x0(%rax)

----------------------------------------------------------------------
method entry point (kind = native_synchronized)  [0x00007fafb8c6c000, 0x00007fafb8c6cc00]  3072 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6c000 Code size: 0x00000c00
  0x00007fafb8c6c000: mov     0x8(%rbx),%rcx
  0x00007fafb8c6c004: movzwl  0x34(%rcx),%ecx
  0x00007fafb8c6c008: pop     %rax
  0x00007fafb8c6c009: lea     0xfffffffffffffff8(%rsp,%rcx,8),%r14
  0x00007fafb8c6c00e: pushq   $0x0
  0x00007fafb8c6c013: pushq   $0x0
  0x00007fafb8c6c018: push    %rax
  0x00007fafb8c6c019: push    %rbp
  0x00007fafb8c6c01a: mov     %rsp,%rbp
  0x00007fafb8c6c01d: push    %r13
  0x00007fafb8c6c01f: pushq   $0x0
  0x00007fafb8c6c024: mov     0x8(%rbx),%r13
  0x00007fafb8c6c028: lea     0x38(%r13),%r13
  0x00007fafb8c6c02c: push    %rbx
  0x00007fafb8c6c02d: mov     0x8(%rbx),%rdx
  0x00007fafb8c6c031: mov     0x8(%rdx),%rdx
  0x00007fafb8c6c035: mov     0x18(%rdx),%rdx
  0x00007fafb8c6c039: mov     0x70(%rdx),%rdx
  0x00007fafb8c6c03d: mov     (%rdx),%rdx
  0x00007fafb8c6c040: push    %rdx
  0x00007fafb8c6c041: mov     0x10(%rbx),%rdx
  0x00007fafb8c6c045: test    %rdx,%rdx
  0x00007fafb8c6c048: je      0x7fafb8c6c055
  0x00007fafb8c6c04e: add     $0x138,%rdx
  0x00007fafb8c6c055: push    %rdx
  0x00007fafb8c6c056: mov     0x8(%rbx),%rdx
  0x00007fafb8c6c05a: mov     0x8(%rdx),%rdx
  0x00007fafb8c6c05e: mov     0x10(%rdx),%rdx
  0x00007fafb8c6c062: push    %rdx
  0x00007fafb8c6c063: push    %r14
  0x00007fafb8c6c065: pushq   $0x0
  0x00007fafb8c6c06a: pushq   $0x0
  0x00007fafb8c6c06f: mov     %rsp,(%rsp)
  0x00007fafb8c6c073: movb    $0x1,0x3dd(%r15)
  0x00007fafb8c6c07b: mov     0x10(%rbx),%rax
  0x00007fafb8c6c07f: test    %rax,%rax
  0x00007fafb8c6c082: je      0x7fafb8c6c0a4
  0x00007fafb8c6c084: mov     0x104(%rax),%ecx
  0x00007fafb8c6c08a: add     $0x8,%ecx
  0x00007fafb8c6c08d: mov     %ecx,0x104(%rax)
  0x00007fafb8c6c093: and     0x118(%rax),%ecx
  0x00007fafb8c6c099: je      0x7fafb8c6cb48
  0x00007fafb8c6c09f: jmpq    0x7fafb8c6c16f
  0x00007fafb8c6c0a4: mov     0x18(%rbx),%rax
  0x00007fafb8c6c0a8: test    %rax,%rax
  0x00007fafb8c6c0ab: jne     0x7fafb8c6c15d
  0x00007fafb8c6c0b1: callq   0x7fafb8c6c0bb
  0x00007fafb8c6c0b6: jmpq    0x7fafb8c6c150
  0x00007fafb8c6c0bb: mov     %rbx,%rsi
  0x00007fafb8c6c0be: lea     0x8(%rsp),%rax
  0x00007fafb8c6c0c3: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c6c0c7: mov     %r15,%rdi
  0x00007fafb8c6c0ca: vzeroupper
  0x00007fafb8c6c0cd: mov     %rbp,0x330(%r15)
  0x00007fafb8c6c0d4: mov     %rax,0x320(%r15)
  0x00007fafb8c6c0db: test    $0xf,%esp
  0x00007fafb8c6c0e1: je      0x7fafb8c6c0f9
  0x00007fafb8c6c0e7: sub     $0x8,%rsp
  0x00007fafb8c6c0eb: callq   0x7fafd7d85400
  0x00007fafb8c6c0f0: add     $0x8,%rsp
  0x00007fafb8c6c0f4: jmpq    0x7fafb8c6c0fe
  0x00007fafb8c6c0f9: callq   0x7fafd7d85400
  0x00007fafb8c6c0fe: movabs  $0x0,%r10
  0x00007fafb8c6c108: mov     %r10,0x320(%r15)
  0x00007fafb8c6c10f: movabs  $0x0,%r10
  0x00007fafb8c6c119: mov     %r10,0x330(%r15)
  0x00007fafb8c6c120: movabs  $0x0,%r10
  0x00007fafb8c6c12a: mov     %r10,0x328(%r15)
  0x00007fafb8c6c131: vzeroupper
  0x00007fafb8c6c134: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c6c13c: je      0x7fafb8c6c147
  0x00007fafb8c6c142: jmpq    0x7fafb8c5c780
  0x00007fafb8c6c147: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6c14b: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c6c14f: retq
  0x00007fafb8c6c150: mov     0x18(%rbx),%rax
  0x00007fafb8c6c154: test    %rax,%rax
  0x00007fafb8c6c157: je      0x7fafb8c6c16f
  0x00007fafb8c6c15d: mov     0x18(%rax),%ecx
  0x00007fafb8c6c160: add     $0x8,%ecx
  0x00007fafb8c6c163: mov     %ecx,0x18(%rax)
  0x00007fafb8c6c166: and     0x30(%rax),%ecx
  0x00007fafb8c6c169: je      0x7fafb8c6cb48
  0x00007fafb8c6c16f: mov     %eax,0xfffffffffffec000(%rsp)
  0x00007fafb8c6c176: movb    $0x0,0x3dd(%r15)
  0x00007fafb8c6c17e: mov     0x20(%rbx),%eax
  0x00007fafb8c6c181: test    $0x8,%eax
  0x00007fafb8c6c186: mov     (%r14),%rax
  0x00007fafb8c6c189: je      0x7fafb8c6c1a2
  0x00007fafb8c6c18f: mov     0x8(%rbx),%rax
  0x00007fafb8c6c193: mov     0x8(%rax),%rax
  0x00007fafb8c6c197: mov     0x18(%rax),%rax
  0x00007fafb8c6c19b: mov     0x70(%rax),%rax
  0x00007fafb8c6c19f: mov     (%rax),%rax
  0x00007fafb8c6c1a2: sub     $0x10,%rsp
  0x00007fafb8c6c1a6: mov     %rsp,0xffffffffffffffb8(%rbp)
  0x00007fafb8c6c1aa: mov     %rax,0x8(%rsp)
  0x00007fafb8c6c1af: mov     %rsp,%rsi
  0x00007fafb8c6c1b2: mov     0x8(%rsi),%rcx
  0x00007fafb8c6c1b6: mov     (%rcx),%rax
  0x00007fafb8c6c1b9: mov     %rax,%rbx
  0x00007fafb8c6c1bc: and     $0x7,%rbx
  0x00007fafb8c6c1c0: cmp     $0x5,%rbx
  0x00007fafb8c6c1c4: jne     0x7fafb8c6c26f
  0x00007fafb8c6c1ca: mov     0x8(%rcx),%ebx
  0x00007fafb8c6c1cd: movabs  $0x800000000,%r12
  0x00007fafb8c6c1d7: add     %r12,%rbx
  0x00007fafb8c6c1da: xor     %r12,%r12
  0x00007fafb8c6c1dd: mov     0xb8(%rbx),%rbx
  0x00007fafb8c6c1e4: or      %r15,%rbx
  0x00007fafb8c6c1e7: xor     %rax,%rbx
  0x00007fafb8c6c1ea: and     $0xffffffffffffff87,%rbx
  0x00007fafb8c6c1ee: je      0x7fafb8c6c334
  0x00007fafb8c6c1f4: test    $0x7,%rbx
  0x00007fafb8c6c1fb: jne     0x7fafb8c6c250
  0x00007fafb8c6c1fd: test    $0x300,%rbx
  0x00007fafb8c6c204: jne     0x7fafb8c6c223
  0x00007fafb8c6c206: and     $0x37f,%rax
  0x00007fafb8c6c20d: mov     %rax,%rbx
  0x00007fafb8c6c210: or      %r15,%rbx
  0x00007fafb8c6c213: lock cmpxchg %rbx,(%rcx)
  0x00007fafb8c6c218: jne     0x7fafb8c6c298
  0x00007fafb8c6c21e: jmpq    0x7fafb8c6c334
  0x00007fafb8c6c223: mov     0x8(%rcx),%ebx
  0x00007fafb8c6c226: movabs  $0x800000000,%r12
  0x00007fafb8c6c230: add     %r12,%rbx
  0x00007fafb8c6c233: xor     %r12,%r12
  0x00007fafb8c6c236: mov     0xb8(%rbx),%rbx
  0x00007fafb8c6c23d: or      %r15,%rbx
  0x00007fafb8c6c240: lock cmpxchg %rbx,(%rcx)
  0x00007fafb8c6c245: jne     0x7fafb8c6c298
  0x00007fafb8c6c24b: jmpq    0x7fafb8c6c334
  0x00007fafb8c6c250: mov     0x8(%rcx),%ebx
  0x00007fafb8c6c253: movabs  $0x800000000,%r12
  0x00007fafb8c6c25d: add     %r12,%rbx
  0x00007fafb8c6c260: xor     %r12,%r12
  0x00007fafb8c6c263: mov     0xb8(%rbx),%rbx
  0x00007fafb8c6c26a: lock cmpxchg %rbx,(%rcx)
  0x00007fafb8c6c26f: mov     $0x1,%eax
  0x00007fafb8c6c274: or      (%rcx),%rax
  0x00007fafb8c6c277: mov     %rax,(%rsi)
  0x00007fafb8c6c27a: lock cmpxchg %rsi,(%rcx)
  0x00007fafb8c6c27f: je      0x7fafb8c6c334
  0x00007fafb8c6c285: sub     %rsp,%rax
  0x00007fafb8c6c288: and     $0xfffffffffffff007,%rax
  0x00007fafb8c6c28f: mov     %rax,(%rsi)
  0x00007fafb8c6c292: je      0x7fafb8c6c334
  0x00007fafb8c6c298: callq   0x7fafb8c6c2a2
  0x00007fafb8c6c29d: jmpq    0x7fafb8c6c334
  0x00007fafb8c6c2a2: lea     0x8(%rsp),%rax
  0x00007fafb8c6c2a7: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c6c2ab: mov     %r15,%rdi
  0x00007fafb8c6c2ae: vzeroupper
  0x00007fafb8c6c2b1: mov     %rbp,0x330(%r15)
  0x00007fafb8c6c2b8: mov     %rax,0x320(%r15)
  0x00007fafb8c6c2bf: test    $0xf,%esp
  0x00007fafb8c6c2c5: je      0x7fafb8c6c2dd
  0x00007fafb8c6c2cb: sub     $0x8,%rsp
  0x00007fafb8c6c2cf: callq   0x7fafd7d82230
  0x00007fafb8c6c2d4: add     $0x8,%rsp
  0x00007fafb8c6c2d8: jmpq    0x7fafb8c6c2e2
  0x00007fafb8c6c2dd: callq   0x7fafd7d82230
  0x00007fafb8c6c2e2: movabs  $0x0,%r10
  0x00007fafb8c6c2ec: mov     %r10,0x320(%r15)
  0x00007fafb8c6c2f3: movabs  $0x0,%r10
  0x00007fafb8c6c2fd: mov     %r10,0x330(%r15)
  0x00007fafb8c6c304: movabs  $0x0,%r10
  0x00007fafb8c6c30e: mov     %r10,0x328(%r15)
  0x00007fafb8c6c315: vzeroupper
  0x00007fafb8c6c318: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c6c320: je      0x7fafb8c6c32b
  0x00007fafb8c6c326: jmpq    0x7fafb8c5c780
  0x00007fafb8c6c32b: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6c32f: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c6c333: retq
  0x00007fafb8c6c334: cmpb    $0x0,0x1fd0b95c(%rip)
  0x00007fafb8c6c33b: je      0x7fafb8c6c36b
  0x00007fafb8c6c341: mov     0xffffffffffffffe8(%rbp),%rsi
  0x00007fafb8c6c345: mov     %r15,%rdi
  0x00007fafb8c6c348: test    $0xf,%esp
  0x00007fafb8c6c34e: je      0x7fafb8c6c366
  0x00007fafb8c6c354: sub     $0x8,%rsp
  0x00007fafb8c6c358: callq   0x7fafd81e7090
  0x00007fafb8c6c35d: add     $0x8,%rsp
  0x00007fafb8c6c361: jmpq    0x7fafb8c6c36b
  0x00007fafb8c6c366: callq   0x7fafd81e7090
  0x00007fafb8c6c36b: mov     0xffffffffffffffe8(%rbp),%rbx
  0x00007fafb8c6c36f: mov     0x8(%rbx),%r11
  0x00007fafb8c6c373: movzwl  0x34(%r11),%r11d
  0x00007fafb8c6c378: shl     $0x3,%r11d
  0x00007fafb8c6c37c: sub     %r11,%rsp
  0x00007fafb8c6c37f: sub     $0x0,%rsp
  0x00007fafb8c6c383: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c6c387: mov     0x60(%rbx),%r11
  0x00007fafb8c6c38b: test    %r11,%r11
  0x00007fafb8c6c38e: jne     0x7fafb8c6c43b
  0x00007fafb8c6c394: callq   0x7fafb8c6c39e
  0x00007fafb8c6c399: jmpq    0x7fafb8c6c433
  0x00007fafb8c6c39e: mov     %rbx,%rsi
  0x00007fafb8c6c3a1: lea     0x8(%rsp),%rax
  0x00007fafb8c6c3a6: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c6c3aa: mov     %r15,%rdi
  0x00007fafb8c6c3ad: vzeroupper
  0x00007fafb8c6c3b0: mov     %rbp,0x330(%r15)
  0x00007fafb8c6c3b7: mov     %rax,0x320(%r15)
  0x00007fafb8c6c3be: test    $0xf,%esp
  0x00007fafb8c6c3c4: je      0x7fafb8c6c3dc
  0x00007fafb8c6c3ca: sub     $0x8,%rsp
  0x00007fafb8c6c3ce: callq   0x7fafd7d86950
  0x00007fafb8c6c3d3: add     $0x8,%rsp
  0x00007fafb8c6c3d7: jmpq    0x7fafb8c6c3e1
  0x00007fafb8c6c3dc: callq   0x7fafd7d86950
  0x00007fafb8c6c3e1: movabs  $0x0,%r10
  0x00007fafb8c6c3eb: mov     %r10,0x320(%r15)
  0x00007fafb8c6c3f2: movabs  $0x0,%r10
  0x00007fafb8c6c3fc: mov     %r10,0x330(%r15)
  0x00007fafb8c6c403: movabs  $0x0,%r10
  0x00007fafb8c6c40d: mov     %r10,0x328(%r15)
  0x00007fafb8c6c414: vzeroupper
  0x00007fafb8c6c417: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c6c41f: je      0x7fafb8c6c42a
  0x00007fafb8c6c425: jmpq    0x7fafb8c5c780
  0x00007fafb8c6c42a: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6c42e: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c6c432: retq
  0x00007fafb8c6c433: mov     0xffffffffffffffe8(%rbp),%rbx
  0x00007fafb8c6c437: mov     0x60(%rbx),%r11
  0x00007fafb8c6c43b: callq   %r11
  0x00007fafb8c6c43e: mov     0xffffffffffffffe8(%rbp),%rbx
  0x00007fafb8c6c442: mov     %rax,0x18(%rbp)
  0x00007fafb8c6c446: mov     0x20(%rbx),%r11d
  0x00007fafb8c6c44a: test    $0x8,%r11d
  0x00007fafb8c6c451: je      0x7fafb8c6c472
  0x00007fafb8c6c457: mov     0x8(%rbx),%r11
  0x00007fafb8c6c45b: mov     0x8(%r11),%r11
  0x00007fafb8c6c45f: mov     0x18(%r11),%r11
  0x00007fafb8c6c463: mov     0x70(%r11),%r11
  0x00007fafb8c6c467: mov     (%r11),%r11
  0x00007fafb8c6c46a: mov     %r11,0x10(%rbp)
  0x00007fafb8c6c46e: lea     0x10(%rbp),%rsi
  0x00007fafb8c6c472: mov     0x58(%rbx),%rax
  0x00007fafb8c6c476: movabs  $0x7fafd81e35c0,%r10
  0x00007fafb8c6c480: cmp     %r10,%rax
  0x00007fafb8c6c483: jne     0x7fafb8c6c530
  0x00007fafb8c6c489: callq   0x7fafb8c6c493
  0x00007fafb8c6c48e: jmpq    0x7fafb8c6c528
  0x00007fafb8c6c493: mov     %rbx,%rsi
  0x00007fafb8c6c496: lea     0x8(%rsp),%rax
  0x00007fafb8c6c49b: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c6c49f: mov     %r15,%rdi
  0x00007fafb8c6c4a2: vzeroupper
  0x00007fafb8c6c4a5: mov     %rbp,0x330(%r15)
  0x00007fafb8c6c4ac: mov     %rax,0x320(%r15)
  0x00007fafb8c6c4b3: test    $0xf,%esp
  0x00007fafb8c6c4b9: je      0x7fafb8c6c4d1
  0x00007fafb8c6c4bf: sub     $0x8,%rsp
  0x00007fafb8c6c4c3: callq   0x7fafd7d86950
  0x00007fafb8c6c4c8: add     $0x8,%rsp
  0x00007fafb8c6c4cc: jmpq    0x7fafb8c6c4d6
  0x00007fafb8c6c4d1: callq   0x7fafd7d86950
  0x00007fafb8c6c4d6: movabs  $0x0,%r10
  0x00007fafb8c6c4e0: mov     %r10,0x320(%r15)
  0x00007fafb8c6c4e7: movabs  $0x0,%r10
  0x00007fafb8c6c4f1: mov     %r10,0x330(%r15)
  0x00007fafb8c6c4f8: movabs  $0x0,%r10
  0x00007fafb8c6c502: mov     %r10,0x328(%r15)
  0x00007fafb8c6c509: vzeroupper
  0x00007fafb8c6c50c: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c6c514: je      0x7fafb8c6c51f
  0x00007fafb8c6c51a: jmpq    0x7fafb8c5c780
  0x00007fafb8c6c51f: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6c523: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c6c527: retq
  0x00007fafb8c6c528: mov     0xffffffffffffffe8(%rbp),%rbx
  0x00007fafb8c6c52c: mov     0x58(%rbx),%rax
  0x00007fafb8c6c530: lea     0x340(%r15),%rdi
  0x00007fafb8c6c537: vzeroupper
  0x00007fafb8c6c53a: mov     %rbp,0x330(%r15)
  0x00007fafb8c6c541: movabs  $0x7fafb8c6c537,%r10
  0x00007fafb8c6c54b: mov     %r10,0x328(%r15)
  0x00007fafb8c6c552: mov     %rsp,0x320(%r15)
  0x00007fafb8c6c559: movl    $0x4,0x3b8(%r15)
  0x00007fafb8c6c564: callq   %rax
  0x00007fafb8c6c566: vzeroupper
  0x00007fafb8c6c569: sub     $0x10,%rsp
  0x00007fafb8c6c56d: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6c572: sub     $0x10,%rsp
  0x00007fafb8c6c576: mov     %rax,(%rsp)
  0x00007fafb8c6c57a: movabs  $0x0,%r10
  0x00007fafb8c6c584: mov     %r10,0x8(%rsp)
  0x00007fafb8c6c589: movl    $0x5,0x3b8(%r15)
  0x00007fafb8c6c594: lock addl $0x0,0xffffffffffffffc0(%rsp)
  0x00007fafb8c6c59a: testb   $0x8,0x108(%r15)
  0x00007fafb8c6c5a2: jne     0x7fafb8c6c5b9
  0x00007fafb8c6c5a8: cmpl    $0x0,0xd8(%r15)
  0x00007fafb8c6c5b3: je      0x7fafb8c6c5d2
  0x00007fafb8c6c5b9: mov     %r15,%rdi
  0x00007fafb8c6c5bc: mov     %rsp,%r12
  0x00007fafb8c6c5bf: sub     $0x0,%rsp
  0x00007fafb8c6c5c3: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c6c5c7: callq   0x7fafd82ccce0
  0x00007fafb8c6c5cc: mov     %r12,%rsp
  0x00007fafb8c6c5cf: xor     %r12,%r12
  0x00007fafb8c6c5d2: movl    $0x8,0x3b8(%r15)
  0x00007fafb8c6c5dd: movabs  $0x0,%r10
  0x00007fafb8c6c5e7: mov     %r10,0x320(%r15)
  0x00007fafb8c6c5ee: movabs  $0x0,%r10
  0x00007fafb8c6c5f8: mov     %r10,0x330(%r15)
  0x00007fafb8c6c5ff: movabs  $0x0,%r10
  0x00007fafb8c6c609: mov     %r10,0x328(%r15)
  0x00007fafb8c6c610: vzeroupper
  0x00007fafb8c6c613: mov     0xe0(%r15),%r11
  0x00007fafb8c6c61a: movl    $0x0,0x100(%r11)
  0x00007fafb8c6c625: movabs  $0x7fafb8c6889b,%r11
  0x00007fafb8c6c62f: cmp     0x18(%rbp),%r11
  0x00007fafb8c6c633: jne     0x7fafb8c6c6df
  0x00007fafb8c6c639: mov     (%rsp),%rax
  0x00007fafb8c6c63d: add     $0x10,%rsp
  0x00007fafb8c6c641: test    %rax,%rax
  0x00007fafb8c6c644: je      0x7fafb8c6c6c4
  0x00007fafb8c6c64a: test    $0x1,%rax
  0x00007fafb8c6c650: je      0x7fafb8c6c6c1
  0x00007fafb8c6c656: mov     0xffffffffffffffff(%rax),%rax
  0x00007fafb8c6c65a: cmpb    $0x0,0x30(%r15)
  0x00007fafb8c6c65f: je      0x7fafb8c6c6bc
  0x00007fafb8c6c665: cmp     $0x0,%rax
  0x00007fafb8c6c669: je      0x7fafb8c6c6bc
  0x00007fafb8c6c66f: mov     0x38(%r15),%r11
  0x00007fafb8c6c673: cmp     $0x0,%r11
  0x00007fafb8c6c677: je      0x7fafb8c6c691
  0x00007fafb8c6c67d: sub     $0x8,%r11
  0x00007fafb8c6c681: mov     %r11,0x38(%r15)
  0x00007fafb8c6c685: add     0x48(%r15),%r11
  0x00007fafb8c6c689: mov     %rax,(%r11)
  0x00007fafb8c6c68c: jmpq    0x7fafb8c6c6bc
  0x00007fafb8c6c691: push    %rax
  0x00007fafb8c6c692: mov     %r15,%rsi
  0x00007fafb8c6c695: mov     %rax,%rdi
  0x00007fafb8c6c698: test    $0xf,%esp
  0x00007fafb8c6c69e: je      0x7fafb8c6c6b6
  0x00007fafb8c6c6a4: sub     $0x8,%rsp
  0x00007fafb8c6c6a8: callq   0x7fafd7c74620
  0x00007fafb8c6c6ad: add     $0x8,%rsp
  0x00007fafb8c6c6b1: jmpq    0x7fafb8c6c6bb
  0x00007fafb8c6c6b6: callq   0x7fafd7c74620
  0x00007fafb8c6c6bb: pop     %rax
  0x00007fafb8c6c6bc: jmpq    0x7fafb8c6c6c4
  0x00007fafb8c6c6c1: mov     (%rax),%rax
  0x00007fafb8c6c6c4: mov     %rax,0x10(%rbp)
  0x00007fafb8c6c6c8: sub     $0x10,%rsp
  0x00007fafb8c6c6cc: mov     %rax,(%rsp)
  0x00007fafb8c6c6d0: movabs  $0x0,%r10
  0x00007fafb8c6c6da: mov     %r10,0x8(%rsp)
  0x00007fafb8c6c6df: cmpl    $0x2,0x408(%r15)
  0x00007fafb8c6c6ea: jne     0x7fafb8c6c7ad
  0x00007fafb8c6c6f0: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c6c6f5: sub     $0x80,%rsp
  0x00007fafb8c6c6fc: mov     %rax,0x78(%rsp)
  0x00007fafb8c6c701: mov     %rcx,0x70(%rsp)
  0x00007fafb8c6c706: mov     %rdx,0x68(%rsp)
  0x00007fafb8c6c70b: mov     %rbx,0x60(%rsp)
  0x00007fafb8c6c710: mov     %rbp,0x50(%rsp)
  0x00007fafb8c6c715: mov     %rsi,0x48(%rsp)
  0x00007fafb8c6c71a: mov     %rdi,0x40(%rsp)
  0x00007fafb8c6c71f: mov     %r8,0x38(%rsp)
  0x00007fafb8c6c724: mov     %r9,0x30(%rsp)
  0x00007fafb8c6c729: mov     %r10,0x28(%rsp)
  0x00007fafb8c6c72e: mov     %r11,0x20(%rsp)
  0x00007fafb8c6c733: mov     %r12,0x18(%rsp)
  0x00007fafb8c6c738: mov     %r13,0x10(%rsp)
  0x00007fafb8c6c73d: mov     %r14,0x8(%rsp)
  0x00007fafb8c6c742: mov     %r15,(%rsp)
  0x00007fafb8c6c746: mov     %rsp,%r12
  0x00007fafb8c6c749: sub     $0x0,%rsp
  0x00007fafb8c6c74d: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c6c751: callq   0x7fafd81ecc90
  0x00007fafb8c6c756: mov     %r12,%rsp
  0x00007fafb8c6c759: mov     (%rsp),%r15
  0x00007fafb8c6c75d: mov     0x8(%rsp),%r14
  0x00007fafb8c6c762: mov     0x10(%rsp),%r13
  0x00007fafb8c6c767: mov     0x18(%rsp),%r12
  0x00007fafb8c6c76c: mov     0x20(%rsp),%r11
  0x00007fafb8c6c771: mov     0x28(%rsp),%r10
  0x00007fafb8c6c776: mov     0x30(%rsp),%r9
  0x00007fafb8c6c77b: mov     0x38(%rsp),%r8
  0x00007fafb8c6c780: mov     0x40(%rsp),%rdi
  0x00007fafb8c6c785: mov     0x48(%rsp),%rsi
  0x00007fafb8c6c78a: mov     0x50(%rsp),%rbp
  0x00007fafb8c6c78f: mov     0x60(%rsp),%rbx
  0x00007fafb8c6c794: mov     0x68(%rsp),%rdx
  0x00007fafb8c6c799: mov     0x70(%rsp),%rcx
  0x00007fafb8c6c79e: mov     0x78(%rsp),%rax
  0x00007fafb8c6c7a3: add     $0x80,%rsp
  0x00007fafb8c6c7aa: xor     %r12,%r12
  0x00007fafb8c6c7ad: mov     0xffffffffffffffe8(%rbp),%rbx
  0x00007fafb8c6c7b1: mov     0x8(%rbx),%r13
  0x00007fafb8c6c7b5: lea     0x38(%r13),%r13
  0x00007fafb8c6c7b9: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c6c7c1: je      0x7fafb8c6c8da
  0x00007fafb8c6c7c7: callq   0x7fafb8c6c7d1
  0x00007fafb8c6c7cc: jmpq    0x7fafb8c6c863
  0x00007fafb8c6c7d1: lea     0x8(%rsp),%rax
  0x00007fafb8c6c7d6: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c6c7da: mov     %r15,%rdi
  0x00007fafb8c6c7dd: vzeroupper
  0x00007fafb8c6c7e0: mov     %rbp,0x330(%r15)
  0x00007fafb8c6c7e7: mov     %rax,0x320(%r15)
  0x00007fafb8c6c7ee: test    $0xf,%esp
  0x00007fafb8c6c7f4: je      0x7fafb8c6c80c
  0x00007fafb8c6c7fa: sub     $0x8,%rsp
  0x00007fafb8c6c7fe: callq   0x7fafd7d80970
  0x00007fafb8c6c803: add     $0x8,%rsp
  0x00007fafb8c6c807: jmpq    0x7fafb8c6c811
  0x00007fafb8c6c80c: callq   0x7fafd7d80970
  0x00007fafb8c6c811: movabs  $0x0,%r10
  0x00007fafb8c6c81b: mov     %r10,0x320(%r15)
  0x00007fafb8c6c822: movabs  $0x0,%r10
  0x00007fafb8c6c82c: mov     %r10,0x330(%r15)
  0x00007fafb8c6c833: movabs  $0x0,%r10
  0x00007fafb8c6c83d: mov     %r10,0x328(%r15)
  0x00007fafb8c6c844: vzeroupper
  0x00007fafb8c6c847: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c6c84f: je      0x7fafb8c6c85a
  0x00007fafb8c6c855: jmpq    0x7fafb8c5c780
  0x00007fafb8c6c85a: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6c85e: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c6c862: retq
  0x00007fafb8c6c863: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c6c868: sub     $0x80,%rsp
  0x00007fafb8c6c86f: mov     %rax,0x78(%rsp)
  0x00007fafb8c6c874: mov     %rcx,0x70(%rsp)
  0x00007fafb8c6c879: mov     %rdx,0x68(%rsp)
  0x00007fafb8c6c87e: mov     %rbx,0x60(%rsp)
  0x00007fafb8c6c883: mov     %rbp,0x50(%rsp)
  0x00007fafb8c6c888: mov     %rsi,0x48(%rsp)
  0x00007fafb8c6c88d: mov     %rdi,0x40(%rsp)
  0x00007fafb8c6c892: mov     %r8,0x38(%rsp)
  0x00007fafb8c6c897: mov     %r9,0x30(%rsp)
  0x00007fafb8c6c89c: mov     %r10,0x28(%rsp)
  0x00007fafb8c6c8a1: mov     %r11,0x20(%rsp)
  0x00007fafb8c6c8a6: mov     %r12,0x18(%rsp)
  0x00007fafb8c6c8ab: mov     %r13,0x10(%rsp)
  0x00007fafb8c6c8b0: mov     %r14,0x8(%rsp)
  0x00007fafb8c6c8b5: mov     %r15,(%rsp)
  0x00007fafb8c6c8b9: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c6c8c3: movabs  $0x7fafb8c6c863,%rsi
  0x00007fafb8c6c8cd: mov     %rsp,%rdx
  0x00007fafb8c6c8d0: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c6c8d4: callq   0x7fafd7fdd230
  0x00007fafb8c6c8d9: hlt
  0x00007fafb8c6c8da: mov     0x20(%rbx),%r11d
  0x00007fafb8c6c8de: test    $0x20,%r11d
  0x00007fafb8c6c8e5: je      0x7fafb8c6caee
  0x00007fafb8c6c8eb: lea     0xffffffffffffffa8(%rbp),%rsi
  0x00007fafb8c6c8ef: mov     0x8(%rsi),%r11
  0x00007fafb8c6c8f3: test    %r11,%r11
  0x00007fafb8c6c8f6: jne     0x7fafb8c6ca0f
  0x00007fafb8c6c8fc: callq   0x7fafb8c6c906
  0x00007fafb8c6c901: jmpq    0x7fafb8c6c998
  0x00007fafb8c6c906: lea     0x8(%rsp),%rax
  0x00007fafb8c6c90b: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c6c90f: mov     %r15,%rdi
  0x00007fafb8c6c912: vzeroupper
  0x00007fafb8c6c915: mov     %rbp,0x330(%r15)
  0x00007fafb8c6c91c: mov     %rax,0x320(%r15)
  0x00007fafb8c6c923: test    $0xf,%esp
  0x00007fafb8c6c929: je      0x7fafb8c6c941
  0x00007fafb8c6c92f: sub     $0x8,%rsp
  0x00007fafb8c6c933: callq   0x7fafd7d826a0
  0x00007fafb8c6c938: add     $0x8,%rsp
  0x00007fafb8c6c93c: jmpq    0x7fafb8c6c946
  0x00007fafb8c6c941: callq   0x7fafd7d826a0
  0x00007fafb8c6c946: movabs  $0x0,%r10
  0x00007fafb8c6c950: mov     %r10,0x320(%r15)
  0x00007fafb8c6c957: movabs  $0x0,%r10
  0x00007fafb8c6c961: mov     %r10,0x330(%r15)
  0x00007fafb8c6c968: movabs  $0x0,%r10
  0x00007fafb8c6c972: mov     %r10,0x328(%r15)
  0x00007fafb8c6c979: vzeroupper
  0x00007fafb8c6c97c: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c6c984: je      0x7fafb8c6c98f
  0x00007fafb8c6c98a: jmpq    0x7fafb8c5c780
  0x00007fafb8c6c98f: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6c993: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c6c997: retq
  0x00007fafb8c6c998: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c6c99d: sub     $0x80,%rsp
  0x00007fafb8c6c9a4: mov     %rax,0x78(%rsp)
  0x00007fafb8c6c9a9: mov     %rcx,0x70(%rsp)
  0x00007fafb8c6c9ae: mov     %rdx,0x68(%rsp)
  0x00007fafb8c6c9b3: mov     %rbx,0x60(%rsp)
  0x00007fafb8c6c9b8: mov     %rbp,0x50(%rsp)
  0x00007fafb8c6c9bd: mov     %rsi,0x48(%rsp)
  0x00007fafb8c6c9c2: mov     %rdi,0x40(%rsp)
  0x00007fafb8c6c9c7: mov     %r8,0x38(%rsp)
  0x00007fafb8c6c9cc: mov     %r9,0x30(%rsp)
  0x00007fafb8c6c9d1: mov     %r10,0x28(%rsp)
  0x00007fafb8c6c9d6: mov     %r11,0x20(%rsp)
  0x00007fafb8c6c9db: mov     %r12,0x18(%rsp)
  0x00007fafb8c6c9e0: mov     %r13,0x10(%rsp)
  0x00007fafb8c6c9e5: mov     %r14,0x8(%rsp)
  0x00007fafb8c6c9ea: mov     %r15,(%rsp)
  0x00007fafb8c6c9ee: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c6c9f8: movabs  $0x7fafb8c6c998,%rsi
  0x00007fafb8c6ca02: mov     %rsp,%rdx
  0x00007fafb8c6ca05: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c6ca09: callq   0x7fafd7fdd230
  0x00007fafb8c6ca0e: hlt
  0x00007fafb8c6ca0f: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c6ca13: lea     (%rsi),%rax
  0x00007fafb8c6ca16: mov     0x8(%rsi),%rcx
  0x00007fafb8c6ca1a: movq    $0x0,0x8(%rsi)
  0x00007fafb8c6ca22: mov     (%rcx),%rdx
  0x00007fafb8c6ca25: and     $0x7,%rdx
  0x00007fafb8c6ca29: cmp     $0x5,%rdx
  0x00007fafb8c6ca2d: je      0x7fafb8c6caea
  0x00007fafb8c6ca33: mov     (%rax),%rdx
  0x00007fafb8c6ca36: test    %rdx,%rdx
  0x00007fafb8c6ca39: je      0x7fafb8c6caea
  0x00007fafb8c6ca3f: lock cmpxchg %rdx,(%rcx)
  0x00007fafb8c6ca44: je      0x7fafb8c6caea
  0x00007fafb8c6ca4a: mov     %rcx,0x8(%rsi)
  0x00007fafb8c6ca4e: callq   0x7fafb8c6ca58
  0x00007fafb8c6ca53: jmpq    0x7fafb8c6caea
  0x00007fafb8c6ca58: lea     0x8(%rsp),%rax
  0x00007fafb8c6ca5d: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c6ca61: mov     %r15,%rdi
  0x00007fafb8c6ca64: vzeroupper
  0x00007fafb8c6ca67: mov     %rbp,0x330(%r15)
  0x00007fafb8c6ca6e: mov     %rax,0x320(%r15)
  0x00007fafb8c6ca75: test    $0xf,%esp
  0x00007fafb8c6ca7b: je      0x7fafb8c6ca93
  0x00007fafb8c6ca81: sub     $0x8,%rsp
  0x00007fafb8c6ca85: callq   0x7fafd7d82470
  0x00007fafb8c6ca8a: add     $0x8,%rsp
  0x00007fafb8c6ca8e: jmpq    0x7fafb8c6ca98
  0x00007fafb8c6ca93: callq   0x7fafd7d82470
  0x00007fafb8c6ca98: movabs  $0x0,%r10
  0x00007fafb8c6caa2: mov     %r10,0x320(%r15)
  0x00007fafb8c6caa9: movabs  $0x0,%r10
  0x00007fafb8c6cab3: mov     %r10,0x330(%r15)
  0x00007fafb8c6caba: movabs  $0x0,%r10
  0x00007fafb8c6cac4: mov     %r10,0x328(%r15)
  0x00007fafb8c6cacb: vzeroupper
  0x00007fafb8c6cace: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c6cad6: je      0x7fafb8c6cae1
  0x00007fafb8c6cadc: jmpq    0x7fafb8c5c780
  0x00007fafb8c6cae1: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6cae5: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c6cae9: retq
  0x00007fafb8c6caea: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6caee: cmpb    $0x0,0x1fd0b1a2(%rip)
  0x00007fafb8c6caf5: je      0x7fafb8c6cb25
  0x00007fafb8c6cafb: mov     0xffffffffffffffe8(%rbp),%rsi
  0x00007fafb8c6caff: mov     %r15,%rdi
  0x00007fafb8c6cb02: test    $0xf,%esp
  0x00007fafb8c6cb08: je      0x7fafb8c6cb20
  0x00007fafb8c6cb0e: sub     $0x8,%rsp
  0x00007fafb8c6cb12: callq   0x7fafd81e7140
  0x00007fafb8c6cb17: add     $0x8,%rsp
  0x00007fafb8c6cb1b: jmpq    0x7fafb8c6cb25
  0x00007fafb8c6cb20: callq   0x7fafd81e7140
  0x00007fafb8c6cb25: mov     (%rsp),%rax
  0x00007fafb8c6cb29: add     $0x10,%rsp
  0x00007fafb8c6cb2d: vmovsd  (%rsp),%xmm0
  0x00007fafb8c6cb32: add     $0x10,%rsp
  0x00007fafb8c6cb36: mov     0x18(%rbp),%r11
  0x00007fafb8c6cb3a: callq   %r11
  0x00007fafb8c6cb3d: mov     0xfffffffffffffff8(%rbp),%r11
  0x00007fafb8c6cb41: leave
  0x00007fafb8c6cb42: pop     %rdi
  0x00007fafb8c6cb43: mov     %r11,%rsp
  0x00007fafb8c6cb46: jmpq    %rdi
  0x00007fafb8c6cb48: mov     $0x0,%esi
  0x00007fafb8c6cb4d: callq   0x7fafb8c6cb57
  0x00007fafb8c6cb52: jmpq    0x7fafb8c6cbe9
  0x00007fafb8c6cb57: lea     0x8(%rsp),%rax
  0x00007fafb8c6cb5c: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c6cb60: mov     %r15,%rdi
  0x00007fafb8c6cb63: vzeroupper
  0x00007fafb8c6cb66: mov     %rbp,0x330(%r15)
  0x00007fafb8c6cb6d: mov     %rax,0x320(%r15)
  0x00007fafb8c6cb74: test    $0xf,%esp
  0x00007fafb8c6cb7a: je      0x7fafb8c6cb92
  0x00007fafb8c6cb80: sub     $0x8,%rsp
  0x00007fafb8c6cb84: callq   0x7fafd7d84b40
  0x00007fafb8c6cb89: add     $0x8,%rsp
  0x00007fafb8c6cb8d: jmpq    0x7fafb8c6cb97
  0x00007fafb8c6cb92: callq   0x7fafd7d84b40
  0x00007fafb8c6cb97: movabs  $0x0,%r10
  0x00007fafb8c6cba1: mov     %r10,0x320(%r15)
  0x00007fafb8c6cba8: movabs  $0x0,%r10
  0x00007fafb8c6cbb2: mov     %r10,0x330(%r15)
  0x00007fafb8c6cbb9: movabs  $0x0,%r10
  0x00007fafb8c6cbc3: mov     %r10,0x328(%r15)
  0x00007fafb8c6cbca: vzeroupper
  0x00007fafb8c6cbcd: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c6cbd5: je      0x7fafb8c6cbe0
  0x00007fafb8c6cbdb: jmpq    0x7fafb8c5c780
  0x00007fafb8c6cbe0: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6cbe4: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c6cbe8: retq
  0x00007fafb8c6cbe9: mov     0xffffffffffffffe8(%rbp),%rbx
  0x00007fafb8c6cbed: jmpq    0x7fafb8c6c16f
  0x00007fafb8c6cbf2: nopw    0x0(%rax,%rax)
  0x00007fafb8c6cbf8: add     %al,(%rax)
  0x00007fafb8c6cbfa: add     %al,(%rax)
  0x00007fafb8c6cbfc: add     %al,(%rax)
  0x00007fafb8c6cbfe: add     %al,(%rax)

----------------------------------------------------------------------
method entry point (kind = java_util_zip_CRC32_update)  [0x00007fafb8c6cc20, 0x00007fafb8c6cc60]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6cc20 Code size: 0x00000040
  0x00007fafb8c6cc20: testb   $0x8,0x108(%r15)
  0x00007fafb8c6cc28: jne     0x7fafb8c6cc58
  0x00007fafb8c6cc2e: mov     0x8(%rsp),%edi
  0x00007fafb8c6cc32: mov     0x10(%rsp),%eax
  0x00007fafb8c6cc36: movabs  $0x7fafd894af00,%rsi
  0x00007fafb8c6cc40: not     %eax
  0x00007fafb8c6cc42: xor     %eax,%edi
  0x00007fafb8c6cc44: and     $0xff,%edi
  0x00007fafb8c6cc4a: shr     $0x8,%eax
  0x00007fafb8c6cc4d: xor     (%rsi,%rdi,4),%eax
  0x00007fafb8c6cc50: not     %eax
  0x00007fafb8c6cc52: pop     %rdi
  0x00007fafb8c6cc53: mov     %r13,%rsp
  0x00007fafb8c6cc56: jmpq    %rdi
  0x00007fafb8c6cc58: jmpq    0x7fafb8c6b5a0
  0x00007fafb8c6cc5d: nop

----------------------------------------------------------------------
method entry point (kind = java_util_zip_CRC32_updateBytes)  [0x00007fafb8c6cc80, 0x00007fafb8c6cce0]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6cc80 Code size: 0x00000060
  0x00007fafb8c6cc80: testb   $0x8,0x108(%r15)
  0x00007fafb8c6cc88: jne     0x7fafb8c6ccd0
  0x00007fafb8c6cc8e: mov     0x18(%rsp),%rsi
  0x00007fafb8c6cc93: add     $0x10,%rsi
  0x00007fafb8c6cc97: movsxd  0x10(%rsp),%rdx
  0x00007fafb8c6cc9c: add     %rdx,%rsi
  0x00007fafb8c6cc9f: mov     0x20(%rsp),%edi
  0x00007fafb8c6cca3: mov     0x8(%rsp),%edx
  0x00007fafb8c6cca7: test    $0xf,%esp
  0x00007fafb8c6ccad: je      0x7fafb8c6ccc5
  0x00007fafb8c6ccb3: sub     $0x8,%rsp
  0x00007fafb8c6ccb7: callq   0x7fafb8c5c940
  0x00007fafb8c6ccbc: add     $0x8,%rsp
  0x00007fafb8c6ccc0: jmpq    0x7fafb8c6ccca
  0x00007fafb8c6ccc5: callq   0x7fafb8c5c940
  0x00007fafb8c6ccca: pop     %rdi
  0x00007fafb8c6cccb: mov     %r13,%rsp
  0x00007fafb8c6ccce: jmpq    %rdi
  0x00007fafb8c6ccd0: jmpq    0x7fafb8c6b5a0
  0x00007fafb8c6ccd5: nop
  0x00007fafb8c6ccd8: add     %al,(%rax)
  0x00007fafb8c6ccda: add     %al,(%rax)
  0x00007fafb8c6ccdc: add     %al,(%rax)
  0x00007fafb8c6ccde: add     %al,(%rax)

----------------------------------------------------------------------
method entry point (kind = java_util_zip_CRC32_updateByteBuffer)  [0x00007fafb8c6cd00, 0x00007fafb8c6cd60]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6cd00 Code size: 0x00000060
  0x00007fafb8c6cd00: testb   $0x8,0x108(%r15)
  0x00007fafb8c6cd08: jne     0x7fafb8c6cd4c
  0x00007fafb8c6cd0e: mov     0x18(%rsp),%rsi
  0x00007fafb8c6cd13: movsxd  0x10(%rsp),%rdx
  0x00007fafb8c6cd18: add     %rdx,%rsi
  0x00007fafb8c6cd1b: mov     0x28(%rsp),%edi
  0x00007fafb8c6cd1f: mov     0x8(%rsp),%edx
  0x00007fafb8c6cd23: test    $0xf,%esp
  0x00007fafb8c6cd29: je      0x7fafb8c6cd41
  0x00007fafb8c6cd2f: sub     $0x8,%rsp
  0x00007fafb8c6cd33: callq   0x7fafb8c5c940
  0x00007fafb8c6cd38: add     $0x8,%rsp
  0x00007fafb8c6cd3c: jmpq    0x7fafb8c6cd46
  0x00007fafb8c6cd41: callq   0x7fafb8c5c940
  0x00007fafb8c6cd46: pop     %rdi
  0x00007fafb8c6cd47: mov     %r13,%rsp
  0x00007fafb8c6cd4a: jmpq    %rdi
  0x00007fafb8c6cd4c: jmpq    0x7fafb8c6b5a0
  0x00007fafb8c6cd51: nopl    0x0(%rax)
  0x00007fafb8c6cd58: add     %al,(%rax)
  0x00007fafb8c6cd5a: add     %al,(%rax)
  0x00007fafb8c6cd5c: add     %al,(%rax)
  0x00007fafb8c6cd5e: add     %al,(%rax)

----------------------------------------------------------------------
method entry point (kind = java_util_zip_CRC32C_updateBytes)  [0x00007fafb8c6cd80, 0x00007fafb8c6cde0]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6cd80 Code size: 0x00000060
  0x00007fafb8c6cd80: mov     0x18(%rsp),%rsi
  0x00007fafb8c6cd85: add     $0x10,%rsi
  0x00007fafb8c6cd89: movsxd  0x10(%rsp),%rcx
  0x00007fafb8c6cd8e: add     %rcx,%rsi
  0x00007fafb8c6cd91: mov     0x20(%rsp),%edi
  0x00007fafb8c6cd95: mov     0x8(%rsp),%edx
  0x00007fafb8c6cd99: sub     %ecx,%edx
  0x00007fafb8c6cd9b: test    $0xf,%esp
  0x00007fafb8c6cda1: je      0x7fafb8c6cdb9
  0x00007fafb8c6cda7: sub     $0x8,%rsp
  0x00007fafb8c6cdab: callq   0x7fafb8c5cba0
  0x00007fafb8c6cdb0: add     $0x8,%rsp
  0x00007fafb8c6cdb4: jmpq    0x7fafb8c6cdbe
  0x00007fafb8c6cdb9: callq   0x7fafb8c5cba0
  0x00007fafb8c6cdbe: pop     %rdi
  0x00007fafb8c6cdbf: mov     %r13,%rsp
  0x00007fafb8c6cdc2: jmpq    %rdi
  0x00007fafb8c6cdc4: nopl    0x0(%rax)
  0x00007fafb8c6cdc8: add     %al,(%rax)
  0x00007fafb8c6cdca: add     %al,(%rax)
  0x00007fafb8c6cdcc: add     %al,(%rax)
  0x00007fafb8c6cdce: add     %al,(%rax)
  0x00007fafb8c6cdd0: add     %al,(%rax)
  0x00007fafb8c6cdd2: add     %al,(%rax)
  0x00007fafb8c6cdd4: add     %al,(%rax)
  0x00007fafb8c6cdd6: add     %al,(%rax)
  0x00007fafb8c6cdd8: add     %al,(%rax)
  0x00007fafb8c6cdda: add     %al,(%rax)
  0x00007fafb8c6cddc: add     %al,(%rax)
  0x00007fafb8c6cdde: add     %al,(%rax)

----------------------------------------------------------------------
method entry point (kind = java_util_zip_CRC32C_updateDirectByteBuffer)  [0x00007fafb8c6ce00, 0x00007fafb8c6ce40]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6ce00 Code size: 0x00000040
  0x00007fafb8c6ce00: mov     0x18(%rsp),%rsi
  0x00007fafb8c6ce05: movsxd  0x10(%rsp),%rcx
  0x00007fafb8c6ce0a: add     %rcx,%rsi
  0x00007fafb8c6ce0d: mov     0x28(%rsp),%edi
  0x00007fafb8c6ce11: mov     0x8(%rsp),%edx
  0x00007fafb8c6ce15: sub     %ecx,%edx
  0x00007fafb8c6ce17: test    $0xf,%esp
  0x00007fafb8c6ce1d: je      0x7fafb8c6ce35
  0x00007fafb8c6ce23: sub     $0x8,%rsp
  0x00007fafb8c6ce27: callq   0x7fafb8c5cba0
  0x00007fafb8c6ce2c: add     $0x8,%rsp
  0x00007fafb8c6ce30: jmpq    0x7fafb8c6ce3a
  0x00007fafb8c6ce35: callq   0x7fafb8c5cba0
  0x00007fafb8c6ce3a: pop     %rdi
  0x00007fafb8c6ce3b: mov     %r13,%rsp
  0x00007fafb8c6ce3e: jmpq    %rdi

----------------------------------------------------------------------
nop  0 nop  [0x00007fafb8c6ce60, 0x00007fafb8c6cec0]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6ce60 Code size: 0x00000060
  0x00007fafb8c6ce60: push    %rax
  0x00007fafb8c6ce61: jmpq    0x7fafb8c6ce9f
  0x00007fafb8c6ce66: sub     $0x8,%rsp
  0x00007fafb8c6ce6a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c6ce6f: jmpq    0x7fafb8c6ce9f
  0x00007fafb8c6ce74: sub     $0x10,%rsp
  0x00007fafb8c6ce78: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6ce7d: jmpq    0x7fafb8c6ce9f
  0x00007fafb8c6ce82: sub     $0x10,%rsp
  0x00007fafb8c6ce86: mov     %rax,(%rsp)
  0x00007fafb8c6ce8a: movabs  $0x0,%r10
  0x00007fafb8c6ce94: mov     %r10,0x8(%rsp)
  0x00007fafb8c6ce99: jmpq    0x7fafb8c6ce9f
  0x00007fafb8c6ce9e: push    %rax
  0x00007fafb8c6ce9f: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6cea4: incq    %r13
  0x00007fafb8c6cea7: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c6ceb1: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6ceb5: nop
  0x00007fafb8c6ceb8: add     %al,(%rax)
  0x00007fafb8c6ceba: add     %al,(%rax)
  0x00007fafb8c6cebc: add     %al,(%rax)
  0x00007fafb8c6cebe: add     %al,(%rax)

----------------------------------------------------------------------
aconst_null  1 aconst_null  [0x00007fafb8c6cee0, 0x00007fafb8c6cf40]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6cee0 Code size: 0x00000060
  0x00007fafb8c6cee0: push    %rax
  0x00007fafb8c6cee1: jmpq    0x7fafb8c6cf1f
  0x00007fafb8c6cee6: sub     $0x8,%rsp
  0x00007fafb8c6ceea: vmovss  %xmm0,(%rsp)
  0x00007fafb8c6ceef: jmpq    0x7fafb8c6cf1f
  0x00007fafb8c6cef4: sub     $0x10,%rsp
  0x00007fafb8c6cef8: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6cefd: jmpq    0x7fafb8c6cf1f
  0x00007fafb8c6cf02: sub     $0x10,%rsp
  0x00007fafb8c6cf06: mov     %rax,(%rsp)
  0x00007fafb8c6cf0a: movabs  $0x0,%r10
  0x00007fafb8c6cf14: mov     %r10,0x8(%rsp)
  0x00007fafb8c6cf19: jmpq    0x7fafb8c6cf1f
  0x00007fafb8c6cf1e: push    %rax
  0x00007fafb8c6cf1f: xor     %eax,%eax
  0x00007fafb8c6cf21: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6cf26: incq    %r13
  0x00007fafb8c6cf29: movabs  $0x7fafd89a7880,%r10
  0x00007fafb8c6cf33: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6cf37: nop
  0x00007fafb8c6cf38: add     %al,(%rax)
  0x00007fafb8c6cf3a: add     %al,(%rax)
  0x00007fafb8c6cf3c: add     %al,(%rax)
  0x00007fafb8c6cf3e: add     %al,(%rax)

----------------------------------------------------------------------
iconst_m1  2 iconst_m1  [0x00007fafb8c6cf60, 0x00007fafb8c6cfc0]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6cf60 Code size: 0x00000060
  0x00007fafb8c6cf60: push    %rax
  0x00007fafb8c6cf61: jmpq    0x7fafb8c6cf9f
  0x00007fafb8c6cf66: sub     $0x8,%rsp
  0x00007fafb8c6cf6a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c6cf6f: jmpq    0x7fafb8c6cf9f
  0x00007fafb8c6cf74: sub     $0x10,%rsp
  0x00007fafb8c6cf78: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6cf7d: jmpq    0x7fafb8c6cf9f
  0x00007fafb8c6cf82: sub     $0x10,%rsp
  0x00007fafb8c6cf86: mov     %rax,(%rsp)
  0x00007fafb8c6cf8a: movabs  $0x0,%r10
  0x00007fafb8c6cf94: mov     %r10,0x8(%rsp)
  0x00007fafb8c6cf99: jmpq    0x7fafb8c6cf9f
  0x00007fafb8c6cf9e: push    %rax
  0x00007fafb8c6cf9f: mov     $0xffffffff,%eax
  0x00007fafb8c6cfa4: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6cfa9: incq    %r13
  0x00007fafb8c6cfac: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c6cfb6: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6cfba: nopw    0x0(%rax,%rax)

----------------------------------------------------------------------
iconst_0  3 iconst_0  [0x00007fafb8c6cfe0, 0x00007fafb8c6d040]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6cfe0 Code size: 0x00000060
  0x00007fafb8c6cfe0: push    %rax
  0x00007fafb8c6cfe1: jmpq    0x7fafb8c6d01f
  0x00007fafb8c6cfe6: sub     $0x8,%rsp
  0x00007fafb8c6cfea: vmovss  %xmm0,(%rsp)
  0x00007fafb8c6cfef: jmpq    0x7fafb8c6d01f
  0x00007fafb8c6cff4: sub     $0x10,%rsp
  0x00007fafb8c6cff8: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6cffd: jmpq    0x7fafb8c6d01f
  0x00007fafb8c6d002: sub     $0x10,%rsp
  0x00007fafb8c6d006: mov     %rax,(%rsp)
  0x00007fafb8c6d00a: movabs  $0x0,%r10
  0x00007fafb8c6d014: mov     %r10,0x8(%rsp)
  0x00007fafb8c6d019: jmpq    0x7fafb8c6d01f
  0x00007fafb8c6d01e: push    %rax
  0x00007fafb8c6d01f: xor     %eax,%eax
  0x00007fafb8c6d021: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6d026: incq    %r13
  0x00007fafb8c6d029: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c6d033: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6d037: nop
  0x00007fafb8c6d038: add     %al,(%rax)
  0x00007fafb8c6d03a: add     %al,(%rax)
  0x00007fafb8c6d03c: add     %al,(%rax)
  0x00007fafb8c6d03e: add     %al,(%rax)

----------------------------------------------------------------------
iconst_1  4 iconst_1  [0x00007fafb8c6d060, 0x00007fafb8c6d0c0]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6d060 Code size: 0x00000060
  0x00007fafb8c6d060: push    %rax
  0x00007fafb8c6d061: jmpq    0x7fafb8c6d09f
  0x00007fafb8c6d066: sub     $0x8,%rsp
  0x00007fafb8c6d06a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c6d06f: jmpq    0x7fafb8c6d09f
  0x00007fafb8c6d074: sub     $0x10,%rsp
  0x00007fafb8c6d078: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6d07d: jmpq    0x7fafb8c6d09f
  0x00007fafb8c6d082: sub     $0x10,%rsp
  0x00007fafb8c6d086: mov     %rax,(%rsp)
  0x00007fafb8c6d08a: movabs  $0x0,%r10
  0x00007fafb8c6d094: mov     %r10,0x8(%rsp)
  0x00007fafb8c6d099: jmpq    0x7fafb8c6d09f
  0x00007fafb8c6d09e: push    %rax
  0x00007fafb8c6d09f: mov     $0x1,%eax
  0x00007fafb8c6d0a4: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6d0a9: incq    %r13
  0x00007fafb8c6d0ac: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c6d0b6: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6d0ba: nopw    0x0(%rax,%rax)

----------------------------------------------------------------------
iconst_2  5 iconst_2  [0x00007fafb8c6d0e0, 0x00007fafb8c6d140]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6d0e0 Code size: 0x00000060
  0x00007fafb8c6d0e0: push    %rax
  0x00007fafb8c6d0e1: jmpq    0x7fafb8c6d11f
  0x00007fafb8c6d0e6: sub     $0x8,%rsp
  0x00007fafb8c6d0ea: vmovss  %xmm0,(%rsp)
  0x00007fafb8c6d0ef: jmpq    0x7fafb8c6d11f
  0x00007fafb8c6d0f4: sub     $0x10,%rsp
  0x00007fafb8c6d0f8: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6d0fd: jmpq    0x7fafb8c6d11f
  0x00007fafb8c6d102: sub     $0x10,%rsp
  0x00007fafb8c6d106: mov     %rax,(%rsp)
  0x00007fafb8c6d10a: movabs  $0x0,%r10
  0x00007fafb8c6d114: mov     %r10,0x8(%rsp)
  0x00007fafb8c6d119: jmpq    0x7fafb8c6d11f
  0x00007fafb8c6d11e: push    %rax
  0x00007fafb8c6d11f: mov     $0x2,%eax
  0x00007fafb8c6d124: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6d129: incq    %r13
  0x00007fafb8c6d12c: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c6d136: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6d13a: nopw    0x0(%rax,%rax)

----------------------------------------------------------------------
iconst_3  6 iconst_3  [0x00007fafb8c6d160, 0x00007fafb8c6d1c0]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6d160 Code size: 0x00000060
  0x00007fafb8c6d160: push    %rax
  0x00007fafb8c6d161: jmpq    0x7fafb8c6d19f
  0x00007fafb8c6d166: sub     $0x8,%rsp
  0x00007fafb8c6d16a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c6d16f: jmpq    0x7fafb8c6d19f
  0x00007fafb8c6d174: sub     $0x10,%rsp
  0x00007fafb8c6d178: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6d17d: jmpq    0x7fafb8c6d19f
  0x00007fafb8c6d182: sub     $0x10,%rsp
  0x00007fafb8c6d186: mov     %rax,(%rsp)
  0x00007fafb8c6d18a: movabs  $0x0,%r10
  0x00007fafb8c6d194: mov     %r10,0x8(%rsp)
  0x00007fafb8c6d199: jmpq    0x7fafb8c6d19f
  0x00007fafb8c6d19e: push    %rax
  0x00007fafb8c6d19f: mov     $0x3,%eax
  0x00007fafb8c6d1a4: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6d1a9: incq    %r13
  0x00007fafb8c6d1ac: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c6d1b6: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6d1ba: nopw    0x0(%rax,%rax)

----------------------------------------------------------------------
iconst_4  7 iconst_4  [0x00007fafb8c6d1e0, 0x00007fafb8c6d240]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6d1e0 Code size: 0x00000060
  0x00007fafb8c6d1e0: push    %rax
  0x00007fafb8c6d1e1: jmpq    0x7fafb8c6d21f
  0x00007fafb8c6d1e6: sub     $0x8,%rsp
  0x00007fafb8c6d1ea: vmovss  %xmm0,(%rsp)
  0x00007fafb8c6d1ef: jmpq    0x7fafb8c6d21f
  0x00007fafb8c6d1f4: sub     $0x10,%rsp
  0x00007fafb8c6d1f8: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6d1fd: jmpq    0x7fafb8c6d21f
  0x00007fafb8c6d202: sub     $0x10,%rsp
  0x00007fafb8c6d206: mov     %rax,(%rsp)
  0x00007fafb8c6d20a: movabs  $0x0,%r10
  0x00007fafb8c6d214: mov     %r10,0x8(%rsp)
  0x00007fafb8c6d219: jmpq    0x7fafb8c6d21f
  0x00007fafb8c6d21e: push    %rax
  0x00007fafb8c6d21f: mov     $0x4,%eax
  0x00007fafb8c6d224: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6d229: incq    %r13
  0x00007fafb8c6d22c: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c6d236: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6d23a: nopw    0x0(%rax,%rax)

----------------------------------------------------------------------
iconst_5  8 iconst_5  [0x00007fafb8c6d260, 0x00007fafb8c6d2c0]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6d260 Code size: 0x00000060
  0x00007fafb8c6d260: push    %rax
  0x00007fafb8c6d261: jmpq    0x7fafb8c6d29f
  0x00007fafb8c6d266: sub     $0x8,%rsp
  0x00007fafb8c6d26a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c6d26f: jmpq    0x7fafb8c6d29f
  0x00007fafb8c6d274: sub     $0x10,%rsp
  0x00007fafb8c6d278: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6d27d: jmpq    0x7fafb8c6d29f
  0x00007fafb8c6d282: sub     $0x10,%rsp
  0x00007fafb8c6d286: mov     %rax,(%rsp)
  0x00007fafb8c6d28a: movabs  $0x0,%r10
  0x00007fafb8c6d294: mov     %r10,0x8(%rsp)
  0x00007fafb8c6d299: jmpq    0x7fafb8c6d29f
  0x00007fafb8c6d29e: push    %rax
  0x00007fafb8c6d29f: mov     $0x5,%eax
  0x00007fafb8c6d2a4: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6d2a9: incq    %r13
  0x00007fafb8c6d2ac: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c6d2b6: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6d2ba: nopw    0x0(%rax,%rax)

----------------------------------------------------------------------
lconst_0  9 lconst_0  [0x00007fafb8c6d2e0, 0x00007fafb8c6d340]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6d2e0 Code size: 0x00000060
  0x00007fafb8c6d2e0: push    %rax
  0x00007fafb8c6d2e1: jmpq    0x7fafb8c6d31f
  0x00007fafb8c6d2e6: sub     $0x8,%rsp
  0x00007fafb8c6d2ea: vmovss  %xmm0,(%rsp)
  0x00007fafb8c6d2ef: jmpq    0x7fafb8c6d31f
  0x00007fafb8c6d2f4: sub     $0x10,%rsp
  0x00007fafb8c6d2f8: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6d2fd: jmpq    0x7fafb8c6d31f
  0x00007fafb8c6d302: sub     $0x10,%rsp
  0x00007fafb8c6d306: mov     %rax,(%rsp)
  0x00007fafb8c6d30a: movabs  $0x0,%r10
  0x00007fafb8c6d314: mov     %r10,0x8(%rsp)
  0x00007fafb8c6d319: jmpq    0x7fafb8c6d31f
  0x00007fafb8c6d31e: push    %rax
  0x00007fafb8c6d31f: xor     %eax,%eax
  0x00007fafb8c6d321: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6d326: incq    %r13
  0x00007fafb8c6d329: movabs  $0x7fafd89a6080,%r10
  0x00007fafb8c6d333: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6d337: nop
  0x00007fafb8c6d338: add     %al,(%rax)
  0x00007fafb8c6d33a: add     %al,(%rax)
  0x00007fafb8c6d33c: add     %al,(%rax)
  0x00007fafb8c6d33e: add     %al,(%rax)

----------------------------------------------------------------------
lconst_1  10 lconst_1  [0x00007fafb8c6d360, 0x00007fafb8c6d3c0]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6d360 Code size: 0x00000060
  0x00007fafb8c6d360: push    %rax
  0x00007fafb8c6d361: jmpq    0x7fafb8c6d39f
  0x00007fafb8c6d366: sub     $0x8,%rsp
  0x00007fafb8c6d36a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c6d36f: jmpq    0x7fafb8c6d39f
  0x00007fafb8c6d374: sub     $0x10,%rsp
  0x00007fafb8c6d378: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6d37d: jmpq    0x7fafb8c6d39f
  0x00007fafb8c6d382: sub     $0x10,%rsp
  0x00007fafb8c6d386: mov     %rax,(%rsp)
  0x00007fafb8c6d38a: movabs  $0x0,%r10
  0x00007fafb8c6d394: mov     %r10,0x8(%rsp)
  0x00007fafb8c6d399: jmpq    0x7fafb8c6d39f
  0x00007fafb8c6d39e: push    %rax
  0x00007fafb8c6d39f: mov     $0x1,%eax
  0x00007fafb8c6d3a4: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6d3a9: incq    %r13
  0x00007fafb8c6d3ac: movabs  $0x7fafd89a6080,%r10
  0x00007fafb8c6d3b6: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6d3ba: nopw    0x0(%rax,%rax)

----------------------------------------------------------------------
fconst_0  11 fconst_0  [0x00007fafb8c6d3e0, 0x00007fafb8c6d440]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6d3e0 Code size: 0x00000060
  0x00007fafb8c6d3e0: push    %rax
  0x00007fafb8c6d3e1: jmpq    0x7fafb8c6d41f
  0x00007fafb8c6d3e6: sub     $0x8,%rsp
  0x00007fafb8c6d3ea: vmovss  %xmm0,(%rsp)
  0x00007fafb8c6d3ef: jmpq    0x7fafb8c6d41f
  0x00007fafb8c6d3f4: sub     $0x10,%rsp
  0x00007fafb8c6d3f8: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6d3fd: jmpq    0x7fafb8c6d41f
  0x00007fafb8c6d402: sub     $0x10,%rsp
  0x00007fafb8c6d406: mov     %rax,(%rsp)
  0x00007fafb8c6d40a: movabs  $0x0,%r10
  0x00007fafb8c6d414: mov     %r10,0x8(%rsp)
  0x00007fafb8c6d419: jmpq    0x7fafb8c6d41f
  0x00007fafb8c6d41e: push    %rax
  0x00007fafb8c6d41f: vxorps  %xmm0,%xmm0,%xmm0
  0x00007fafb8c6d423: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6d428: incq    %r13
  0x00007fafb8c6d42b: movabs  $0x7fafd89a6880,%r10
  0x00007fafb8c6d435: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6d439: nopl    0x0(%rax)

----------------------------------------------------------------------
fconst_1  12 fconst_1  [0x00007fafb8c6d460, 0x00007fafb8c6d4c0]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6d460 Code size: 0x00000060
  0x00007fafb8c6d460: push    %rax
  0x00007fafb8c6d461: jmpq    0x7fafb8c6d49f
  0x00007fafb8c6d466: sub     $0x8,%rsp
  0x00007fafb8c6d46a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c6d46f: jmpq    0x7fafb8c6d49f
  0x00007fafb8c6d474: sub     $0x10,%rsp
  0x00007fafb8c6d478: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6d47d: jmpq    0x7fafb8c6d49f
  0x00007fafb8c6d482: sub     $0x10,%rsp
  0x00007fafb8c6d486: mov     %rax,(%rsp)
  0x00007fafb8c6d48a: movabs  $0x0,%r10
  0x00007fafb8c6d494: mov     %r10,0x8(%rsp)
  0x00007fafb8c6d499: jmpq    0x7fafb8c6d49f
  0x00007fafb8c6d49e: push    %rax
  0x00007fafb8c6d49f: vmovss  0x1fcdde9d(%rip),%xmm0
  0x00007fafb8c6d4a7: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6d4ac: incq    %r13
  0x00007fafb8c6d4af: movabs  $0x7fafd89a6880,%r10
  0x00007fafb8c6d4b9: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6d4bd: nop

----------------------------------------------------------------------
fconst_2  13 fconst_2  [0x00007fafb8c6d4e0, 0x00007fafb8c6d540]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6d4e0 Code size: 0x00000060
  0x00007fafb8c6d4e0: push    %rax
  0x00007fafb8c6d4e1: jmpq    0x7fafb8c6d51f
  0x00007fafb8c6d4e6: sub     $0x8,%rsp
  0x00007fafb8c6d4ea: vmovss  %xmm0,(%rsp)
  0x00007fafb8c6d4ef: jmpq    0x7fafb8c6d51f
  0x00007fafb8c6d4f4: sub     $0x10,%rsp
  0x00007fafb8c6d4f8: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6d4fd: jmpq    0x7fafb8c6d51f
  0x00007fafb8c6d502: sub     $0x10,%rsp
  0x00007fafb8c6d506: mov     %rax,(%rsp)
  0x00007fafb8c6d50a: movabs  $0x0,%r10
  0x00007fafb8c6d514: mov     %r10,0x8(%rsp)
  0x00007fafb8c6d519: jmpq    0x7fafb8c6d51f
  0x00007fafb8c6d51e: push    %rax
  0x00007fafb8c6d51f: vmovss  0x1fcdde19(%rip),%xmm0
  0x00007fafb8c6d527: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6d52c: incq    %r13
  0x00007fafb8c6d52f: movabs  $0x7fafd89a6880,%r10
  0x00007fafb8c6d539: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6d53d: nop

----------------------------------------------------------------------
dconst_0  14 dconst_0  [0x00007fafb8c6d560, 0x00007fafb8c6d5c0]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6d560 Code size: 0x00000060
  0x00007fafb8c6d560: push    %rax
  0x00007fafb8c6d561: jmpq    0x7fafb8c6d59f
  0x00007fafb8c6d566: sub     $0x8,%rsp
  0x00007fafb8c6d56a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c6d56f: jmpq    0x7fafb8c6d59f
  0x00007fafb8c6d574: sub     $0x10,%rsp
  0x00007fafb8c6d578: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6d57d: jmpq    0x7fafb8c6d59f
  0x00007fafb8c6d582: sub     $0x10,%rsp
  0x00007fafb8c6d586: mov     %rax,(%rsp)
  0x00007fafb8c6d58a: movabs  $0x0,%r10
  0x00007fafb8c6d594: mov     %r10,0x8(%rsp)
  0x00007fafb8c6d599: jmpq    0x7fafb8c6d59f
  0x00007fafb8c6d59e: push    %rax
  0x00007fafb8c6d59f: vxorpd  %xmm0,%xmm0,%xmm0
  0x00007fafb8c6d5a3: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6d5a8: incq    %r13
  0x00007fafb8c6d5ab: movabs  $0x7fafd89a7080,%r10
  0x00007fafb8c6d5b5: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6d5b9: nopl    0x0(%rax)

----------------------------------------------------------------------
dconst_1  15 dconst_1  [0x00007fafb8c6d5e0, 0x00007fafb8c6d640]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6d5e0 Code size: 0x00000060
  0x00007fafb8c6d5e0: push    %rax
  0x00007fafb8c6d5e1: jmpq    0x7fafb8c6d61f
  0x00007fafb8c6d5e6: sub     $0x8,%rsp
  0x00007fafb8c6d5ea: vmovss  %xmm0,(%rsp)
  0x00007fafb8c6d5ef: jmpq    0x7fafb8c6d61f
  0x00007fafb8c6d5f4: sub     $0x10,%rsp
  0x00007fafb8c6d5f8: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6d5fd: jmpq    0x7fafb8c6d61f
  0x00007fafb8c6d602: sub     $0x10,%rsp
  0x00007fafb8c6d606: mov     %rax,(%rsp)
  0x00007fafb8c6d60a: movabs  $0x0,%r10
  0x00007fafb8c6d614: mov     %r10,0x8(%rsp)
  0x00007fafb8c6d619: jmpq    0x7fafb8c6d61f
  0x00007fafb8c6d61e: push    %rax
  0x00007fafb8c6d61f: vmovsd  0x1fcddd11(%rip),%xmm0
  0x00007fafb8c6d627: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6d62c: incq    %r13
  0x00007fafb8c6d62f: movabs  $0x7fafd89a7080,%r10
  0x00007fafb8c6d639: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6d63d: nop

----------------------------------------------------------------------
bipush  16 bipush  [0x00007fafb8c6d660, 0x00007fafb8c6d6c0]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6d660 Code size: 0x00000060
  0x00007fafb8c6d660: push    %rax
  0x00007fafb8c6d661: jmpq    0x7fafb8c6d69f
  0x00007fafb8c6d666: sub     $0x8,%rsp
  0x00007fafb8c6d66a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c6d66f: jmpq    0x7fafb8c6d69f
  0x00007fafb8c6d674: sub     $0x10,%rsp
  0x00007fafb8c6d678: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6d67d: jmpq    0x7fafb8c6d69f
  0x00007fafb8c6d682: sub     $0x10,%rsp
  0x00007fafb8c6d686: mov     %rax,(%rsp)
  0x00007fafb8c6d68a: movabs  $0x0,%r10
  0x00007fafb8c6d694: mov     %r10,0x8(%rsp)
  0x00007fafb8c6d699: jmpq    0x7fafb8c6d69f
  0x00007fafb8c6d69e: push    %rax
  0x00007fafb8c6d69f: movsbl  0x1(%r13),%eax
  0x00007fafb8c6d6a4: movzbl  0x2(%r13),%ebx
  0x00007fafb8c6d6a9: add     $0x2,%r13
  0x00007fafb8c6d6ad: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c6d6b7: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6d6bb: nopl    0x0(%rax,%rax)

----------------------------------------------------------------------
sipush  17 sipush  [0x00007fafb8c6d6e0, 0x00007fafb8c6d740]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6d6e0 Code size: 0x00000060
  0x00007fafb8c6d6e0: push    %rax
  0x00007fafb8c6d6e1: jmpq    0x7fafb8c6d71f
  0x00007fafb8c6d6e6: sub     $0x8,%rsp
  0x00007fafb8c6d6ea: vmovss  %xmm0,(%rsp)
  0x00007fafb8c6d6ef: jmpq    0x7fafb8c6d71f
  0x00007fafb8c6d6f4: sub     $0x10,%rsp
  0x00007fafb8c6d6f8: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6d6fd: jmpq    0x7fafb8c6d71f
  0x00007fafb8c6d702: sub     $0x10,%rsp
  0x00007fafb8c6d706: mov     %rax,(%rsp)
  0x00007fafb8c6d70a: movabs  $0x0,%r10
  0x00007fafb8c6d714: mov     %r10,0x8(%rsp)
  0x00007fafb8c6d719: jmpq    0x7fafb8c6d71f
  0x00007fafb8c6d71e: push    %rax
  0x00007fafb8c6d71f: movzwl  0x1(%r13),%eax
  0x00007fafb8c6d724: bswap   %eax
  0x00007fafb8c6d726: sar     $0x10,%eax
  0x00007fafb8c6d729: movzbl  0x3(%r13),%ebx
  0x00007fafb8c6d72e: add     $0x3,%r13
  0x00007fafb8c6d732: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c6d73c: jmpq    *(%r10,%rbx,8)

----------------------------------------------------------------------
ldc  18 ldc  [0x00007fafb8c6d760, 0x00007fafb8c6daa0]  832 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6d760 Code size: 0x00000340
  0x00007fafb8c6d760: push    %rax
  0x00007fafb8c6d761: jmpq    0x7fafb8c6d79f
  0x00007fafb8c6d766: sub     $0x8,%rsp
  0x00007fafb8c6d76a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c6d76f: jmpq    0x7fafb8c6d79f
  0x00007fafb8c6d774: sub     $0x10,%rsp
  0x00007fafb8c6d778: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6d77d: jmpq    0x7fafb8c6d79f
  0x00007fafb8c6d782: sub     $0x10,%rsp
  0x00007fafb8c6d786: mov     %rax,(%rsp)
  0x00007fafb8c6d78a: movabs  $0x0,%r10
  0x00007fafb8c6d794: mov     %r10,0x8(%rsp)
  0x00007fafb8c6d799: jmpq    0x7fafb8c6d79f
  0x00007fafb8c6d79e: push    %rax
  0x00007fafb8c6d79f: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6d7a4: mov     0xffffffffffffffe8(%rbp),%rcx
  0x00007fafb8c6d7a8: mov     0x8(%rcx),%rcx
  0x00007fafb8c6d7ac: mov     0x8(%rcx),%rcx
  0x00007fafb8c6d7b0: mov     0x8(%rcx),%rax
  0x00007fafb8c6d7b4: movzbl  0x4(%rax,%rbx),%edx
  0x00007fafb8c6d7b9: cmp     $0x64,%edx
  0x00007fafb8c6d7bc: je      0x7fafb8c6d7cc
  0x00007fafb8c6d7be: cmp     $0x67,%edx
  0x00007fafb8c6d7c1: je      0x7fafb8c6d7cc
  0x00007fafb8c6d7c3: cmp     $0x7,%edx
  0x00007fafb8c6d7c6: jne     0x7fafb8c6d88b
  0x00007fafb8c6d7cc: mov     $0x0,%esi
  0x00007fafb8c6d7d1: callq   0x7fafb8c6d7db
  0x00007fafb8c6d7d6: jmpq    0x7fafb8c6d885
  0x00007fafb8c6d7db: lea     0x8(%rsp),%rax
  0x00007fafb8c6d7e0: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c6d7e4: mov     %r15,%rdi
  0x00007fafb8c6d7e7: vzeroupper
  0x00007fafb8c6d7ea: mov     %rbp,0x330(%r15)
  0x00007fafb8c6d7f1: mov     %rax,0x320(%r15)
  0x00007fafb8c6d7f8: test    $0xf,%esp
  0x00007fafb8c6d7fe: je      0x7fafb8c6d816
  0x00007fafb8c6d804: sub     $0x8,%rsp
  0x00007fafb8c6d808: callq   0x7fafd7d7c9f0
  0x00007fafb8c6d80d: add     $0x8,%rsp
  0x00007fafb8c6d811: jmpq    0x7fafb8c6d81b
  0x00007fafb8c6d816: callq   0x7fafd7d7c9f0
  0x00007fafb8c6d81b: movabs  $0x0,%r10
  0x00007fafb8c6d825: mov     %r10,0x320(%r15)
  0x00007fafb8c6d82c: movabs  $0x0,%r10
  0x00007fafb8c6d836: mov     %r10,0x330(%r15)
  0x00007fafb8c6d83d: movabs  $0x0,%r10
  0x00007fafb8c6d847: mov     %r10,0x328(%r15)
  0x00007fafb8c6d84e: vzeroupper
  0x00007fafb8c6d851: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c6d859: je      0x7fafb8c6d864
  0x00007fafb8c6d85f: jmpq    0x7fafb8c5c780
  0x00007fafb8c6d864: mov     0x380(%r15),%rax
  0x00007fafb8c6d86b: movabs  $0x0,%r10
  0x00007fafb8c6d875: mov     %r10,0x380(%r15)
  0x00007fafb8c6d87c: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6d880: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c6d884: retq
  0x00007fafb8c6d885: push    %rax
  0x00007fafb8c6d886: jmpq    0x7fafb8c6da83
  0x00007fafb8c6d88b: cmp     $0x4,%edx
  0x00007fafb8c6d88e: jne     0x7fafb8c6d8a4
  0x00007fafb8c6d890: vmovss  0x40(%rcx,%rbx,8),%xmm0
  0x00007fafb8c6d896: sub     $0x8,%rsp
  0x00007fafb8c6d89a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c6d89f: jmpq    0x7fafb8c6da83
  0x00007fafb8c6d8a4: cmp     $0x3,%edx
  0x00007fafb8c6d8a7: jne     0x7fafb8c6d8b3
  0x00007fafb8c6d8a9: mov     0x40(%rcx,%rbx,8),%eax
  0x00007fafb8c6d8ad: push    %rax
  0x00007fafb8c6d8ae: jmpq    0x7fafb8c6da83
  0x00007fafb8c6d8b3: mov     $0x12,%esi
  0x00007fafb8c6d8b8: callq   0x7fafb8c6d8c2
  0x00007fafb8c6d8bd: jmpq    0x7fafb8c6d96c
  0x00007fafb8c6d8c2: lea     0x8(%rsp),%rax
  0x00007fafb8c6d8c7: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c6d8cb: mov     %r15,%rdi
  0x00007fafb8c6d8ce: vzeroupper
  0x00007fafb8c6d8d1: mov     %rbp,0x330(%r15)
  0x00007fafb8c6d8d8: mov     %rax,0x320(%r15)
  0x00007fafb8c6d8df: test    $0xf,%esp
  0x00007fafb8c6d8e5: je      0x7fafb8c6d8fd
  0x00007fafb8c6d8eb: sub     $0x8,%rsp
  0x00007fafb8c6d8ef: callq   0x7fafd7d7ceb0
  0x00007fafb8c6d8f4: add     $0x8,%rsp
  0x00007fafb8c6d8f8: jmpq    0x7fafb8c6d902
  0x00007fafb8c6d8fd: callq   0x7fafd7d7ceb0
  0x00007fafb8c6d902: movabs  $0x0,%r10
  0x00007fafb8c6d90c: mov     %r10,0x320(%r15)
  0x00007fafb8c6d913: movabs  $0x0,%r10
  0x00007fafb8c6d91d: mov     %r10,0x330(%r15)
  0x00007fafb8c6d924: movabs  $0x0,%r10
  0x00007fafb8c6d92e: mov     %r10,0x328(%r15)
  0x00007fafb8c6d935: vzeroupper
  0x00007fafb8c6d938: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c6d940: je      0x7fafb8c6d94b
  0x00007fafb8c6d946: jmpq    0x7fafb8c5c780
  0x00007fafb8c6d94b: mov     0x380(%r15),%rax
  0x00007fafb8c6d952: movabs  $0x0,%r10
  0x00007fafb8c6d95c: mov     %r10,0x380(%r15)
  0x00007fafb8c6d963: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6d967: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c6d96b: retq
  0x00007fafb8c6d96c: mov     0x388(%r15),%rcx
  0x00007fafb8c6d973: movabs  $0x0,%r10
  0x00007fafb8c6d97d: mov     %r10,0x388(%r15)
  0x00007fafb8c6d984: mov     %ecx,%ebx
  0x00007fafb8c6d986: and     $0xffff,%ebx
  0x00007fafb8c6d98c: shr     $0x1c,%ecx
  0x00007fafb8c6d98f: and     $0xf,%ecx
  0x00007fafb8c6d992: cmp     $0x4,%ecx
  0x00007fafb8c6d995: jne     0x7fafb8c6d9a4
  0x00007fafb8c6d99b: mov     (%rax,%rbx),%eax
  0x00007fafb8c6d99e: push    %rax
  0x00007fafb8c6d99f: jmpq    0x7fafb8c6da83
  0x00007fafb8c6d9a4: cmp     $0x6,%ecx
  0x00007fafb8c6d9a7: jne     0x7fafb8c6d9c0
  0x00007fafb8c6d9ad: vmovss  (%rax,%rbx),%xmm0
  0x00007fafb8c6d9b2: sub     $0x8,%rsp
  0x00007fafb8c6d9b6: vmovss  %xmm0,(%rsp)
  0x00007fafb8c6d9bb: jmpq    0x7fafb8c6da83
  0x00007fafb8c6d9c0: cmp     $0x3,%ecx
  0x00007fafb8c6d9c3: jne     0x7fafb8c6d9d3
  0x00007fafb8c6d9c9: movswl  (%rax,%rbx),%eax
  0x00007fafb8c6d9cd: push    %rax
  0x00007fafb8c6d9ce: jmpq    0x7fafb8c6da83
  0x00007fafb8c6d9d3: cmp     $0x0,%ecx
  0x00007fafb8c6d9d6: jne     0x7fafb8c6d9e6
  0x00007fafb8c6d9dc: movsbl  (%rax,%rbx),%eax
  0x00007fafb8c6d9e0: push    %rax
  0x00007fafb8c6d9e1: jmpq    0x7fafb8c6da83
  0x00007fafb8c6d9e6: cmp     $0x2,%ecx
  0x00007fafb8c6d9e9: jne     0x7fafb8c6d9f9
  0x00007fafb8c6d9ef: movzwl  (%rax,%rbx),%eax
  0x00007fafb8c6d9f3: push    %rax
  0x00007fafb8c6d9f4: jmpq    0x7fafb8c6da83
  0x00007fafb8c6d9f9: cmp     $0x1,%ecx
  0x00007fafb8c6d9fc: jne     0x7fafb8c6da0c
  0x00007fafb8c6da02: movsbl  (%rax,%rbx),%eax
  0x00007fafb8c6da06: push    %rax
  0x00007fafb8c6da07: jmpq    0x7fafb8c6da83
  0x00007fafb8c6da0c: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c6da11: sub     $0x80,%rsp
  0x00007fafb8c6da18: mov     %rax,0x78(%rsp)
  0x00007fafb8c6da1d: mov     %rcx,0x70(%rsp)
  0x00007fafb8c6da22: mov     %rdx,0x68(%rsp)
  0x00007fafb8c6da27: mov     %rbx,0x60(%rsp)
  0x00007fafb8c6da2c: mov     %rbp,0x50(%rsp)
  0x00007fafb8c6da31: mov     %rsi,0x48(%rsp)
  0x00007fafb8c6da36: mov     %rdi,0x40(%rsp)
  0x00007fafb8c6da3b: mov     %r8,0x38(%rsp)
  0x00007fafb8c6da40: mov     %r9,0x30(%rsp)
  0x00007fafb8c6da45: mov     %r10,0x28(%rsp)
  0x00007fafb8c6da4a: mov     %r11,0x20(%rsp)
  0x00007fafb8c6da4f: mov     %r12,0x18(%rsp)
  0x00007fafb8c6da54: mov     %r13,0x10(%rsp)
  0x00007fafb8c6da59: mov     %r14,0x8(%rsp)
  0x00007fafb8c6da5e: mov     %r15,(%rsp)
  0x00007fafb8c6da62: movabs  $0x7fafd84617ff,%rdi
  0x00007fafb8c6da6c: movabs  $0x7fafb8c6da0c,%rsi
  0x00007fafb8c6da76: mov     %rsp,%rdx
  0x00007fafb8c6da79: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c6da7d: callq   0x7fafd7fdd230
  0x00007fafb8c6da82: hlt
  0x00007fafb8c6da83: movzbl  0x2(%r13),%ebx
  0x00007fafb8c6da88: add     $0x2,%r13
  0x00007fafb8c6da8c: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c6da96: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6da9a: nopw    0x0(%rax,%rax)

----------------------------------------------------------------------
ldc_w  19 ldc_w  [0x00007fafb8c6dac0, 0x00007fafb8c6de00]  832 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6dac0 Code size: 0x00000340
  0x00007fafb8c6dac0: push    %rax
  0x00007fafb8c6dac1: jmpq    0x7fafb8c6daff
  0x00007fafb8c6dac6: sub     $0x8,%rsp
  0x00007fafb8c6daca: vmovss  %xmm0,(%rsp)
  0x00007fafb8c6dacf: jmpq    0x7fafb8c6daff
  0x00007fafb8c6dad4: sub     $0x10,%rsp
  0x00007fafb8c6dad8: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6dadd: jmpq    0x7fafb8c6daff
  0x00007fafb8c6dae2: sub     $0x10,%rsp
  0x00007fafb8c6dae6: mov     %rax,(%rsp)
  0x00007fafb8c6daea: movabs  $0x0,%r10
  0x00007fafb8c6daf4: mov     %r10,0x8(%rsp)
  0x00007fafb8c6daf9: jmpq    0x7fafb8c6daff
  0x00007fafb8c6dafe: push    %rax
  0x00007fafb8c6daff: movzwl  0x1(%r13),%ebx
  0x00007fafb8c6db04: bswap   %ebx
  0x00007fafb8c6db06: shr     $0x10,%ebx
  0x00007fafb8c6db09: mov     0xffffffffffffffe8(%rbp),%rcx
  0x00007fafb8c6db0d: mov     0x8(%rcx),%rcx
  0x00007fafb8c6db11: mov     0x8(%rcx),%rcx
  0x00007fafb8c6db15: mov     0x8(%rcx),%rax
  0x00007fafb8c6db19: movzbl  0x4(%rax,%rbx),%edx
  0x00007fafb8c6db1e: cmp     $0x64,%edx
  0x00007fafb8c6db21: je      0x7fafb8c6db31
  0x00007fafb8c6db23: cmp     $0x67,%edx
  0x00007fafb8c6db26: je      0x7fafb8c6db31
  0x00007fafb8c6db28: cmp     $0x7,%edx
  0x00007fafb8c6db2b: jne     0x7fafb8c6dbf0
  0x00007fafb8c6db31: mov     $0x1,%esi
  0x00007fafb8c6db36: callq   0x7fafb8c6db40
  0x00007fafb8c6db3b: jmpq    0x7fafb8c6dbea
  0x00007fafb8c6db40: lea     0x8(%rsp),%rax
  0x00007fafb8c6db45: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c6db49: mov     %r15,%rdi
  0x00007fafb8c6db4c: vzeroupper
  0x00007fafb8c6db4f: mov     %rbp,0x330(%r15)
  0x00007fafb8c6db56: mov     %rax,0x320(%r15)
  0x00007fafb8c6db5d: test    $0xf,%esp
  0x00007fafb8c6db63: je      0x7fafb8c6db7b
  0x00007fafb8c6db69: sub     $0x8,%rsp
  0x00007fafb8c6db6d: callq   0x7fafd7d7c9f0
  0x00007fafb8c6db72: add     $0x8,%rsp
  0x00007fafb8c6db76: jmpq    0x7fafb8c6db80
  0x00007fafb8c6db7b: callq   0x7fafd7d7c9f0
  0x00007fafb8c6db80: movabs  $0x0,%r10
  0x00007fafb8c6db8a: mov     %r10,0x320(%r15)
  0x00007fafb8c6db91: movabs  $0x0,%r10
  0x00007fafb8c6db9b: mov     %r10,0x330(%r15)
  0x00007fafb8c6dba2: movabs  $0x0,%r10
  0x00007fafb8c6dbac: mov     %r10,0x328(%r15)
  0x00007fafb8c6dbb3: vzeroupper
  0x00007fafb8c6dbb6: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c6dbbe: je      0x7fafb8c6dbc9
  0x00007fafb8c6dbc4: jmpq    0x7fafb8c5c780
  0x00007fafb8c6dbc9: mov     0x380(%r15),%rax
  0x00007fafb8c6dbd0: movabs  $0x0,%r10
  0x00007fafb8c6dbda: mov     %r10,0x380(%r15)
  0x00007fafb8c6dbe1: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6dbe5: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c6dbe9: retq
  0x00007fafb8c6dbea: push    %rax
  0x00007fafb8c6dbeb: jmpq    0x7fafb8c6dde8
  0x00007fafb8c6dbf0: cmp     $0x4,%edx
  0x00007fafb8c6dbf3: jne     0x7fafb8c6dc09
  0x00007fafb8c6dbf5: vmovss  0x40(%rcx,%rbx,8),%xmm0
  0x00007fafb8c6dbfb: sub     $0x8,%rsp
  0x00007fafb8c6dbff: vmovss  %xmm0,(%rsp)
  0x00007fafb8c6dc04: jmpq    0x7fafb8c6dde8
  0x00007fafb8c6dc09: cmp     $0x3,%edx
  0x00007fafb8c6dc0c: jne     0x7fafb8c6dc18
  0x00007fafb8c6dc0e: mov     0x40(%rcx,%rbx,8),%eax
  0x00007fafb8c6dc12: push    %rax
  0x00007fafb8c6dc13: jmpq    0x7fafb8c6dde8
  0x00007fafb8c6dc18: mov     $0x13,%esi
  0x00007fafb8c6dc1d: callq   0x7fafb8c6dc27
  0x00007fafb8c6dc22: jmpq    0x7fafb8c6dcd1
  0x00007fafb8c6dc27: lea     0x8(%rsp),%rax
  0x00007fafb8c6dc2c: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c6dc30: mov     %r15,%rdi
  0x00007fafb8c6dc33: vzeroupper
  0x00007fafb8c6dc36: mov     %rbp,0x330(%r15)
  0x00007fafb8c6dc3d: mov     %rax,0x320(%r15)
  0x00007fafb8c6dc44: test    $0xf,%esp
  0x00007fafb8c6dc4a: je      0x7fafb8c6dc62
  0x00007fafb8c6dc50: sub     $0x8,%rsp
  0x00007fafb8c6dc54: callq   0x7fafd7d7ceb0
  0x00007fafb8c6dc59: add     $0x8,%rsp
  0x00007fafb8c6dc5d: jmpq    0x7fafb8c6dc67
  0x00007fafb8c6dc62: callq   0x7fafd7d7ceb0
  0x00007fafb8c6dc67: movabs  $0x0,%r10
  0x00007fafb8c6dc71: mov     %r10,0x320(%r15)
  0x00007fafb8c6dc78: movabs  $0x0,%r10
  0x00007fafb8c6dc82: mov     %r10,0x330(%r15)
  0x00007fafb8c6dc89: movabs  $0x0,%r10
  0x00007fafb8c6dc93: mov     %r10,0x328(%r15)
  0x00007fafb8c6dc9a: vzeroupper
  0x00007fafb8c6dc9d: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c6dca5: je      0x7fafb8c6dcb0
  0x00007fafb8c6dcab: jmpq    0x7fafb8c5c780
  0x00007fafb8c6dcb0: mov     0x380(%r15),%rax
  0x00007fafb8c6dcb7: movabs  $0x0,%r10
  0x00007fafb8c6dcc1: mov     %r10,0x380(%r15)
  0x00007fafb8c6dcc8: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6dccc: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c6dcd0: retq
  0x00007fafb8c6dcd1: mov     0x388(%r15),%rcx
  0x00007fafb8c6dcd8: movabs  $0x0,%r10
  0x00007fafb8c6dce2: mov     %r10,0x388(%r15)
  0x00007fafb8c6dce9: mov     %ecx,%ebx
  0x00007fafb8c6dceb: and     $0xffff,%ebx
  0x00007fafb8c6dcf1: shr     $0x1c,%ecx
  0x00007fafb8c6dcf4: and     $0xf,%ecx
  0x00007fafb8c6dcf7: cmp     $0x4,%ecx
  0x00007fafb8c6dcfa: jne     0x7fafb8c6dd09
  0x00007fafb8c6dd00: mov     (%rax,%rbx),%eax
  0x00007fafb8c6dd03: push    %rax
  0x00007fafb8c6dd04: jmpq    0x7fafb8c6dde8
  0x00007fafb8c6dd09: cmp     $0x6,%ecx
  0x00007fafb8c6dd0c: jne     0x7fafb8c6dd25
  0x00007fafb8c6dd12: vmovss  (%rax,%rbx),%xmm0
  0x00007fafb8c6dd17: sub     $0x8,%rsp
  0x00007fafb8c6dd1b: vmovss  %xmm0,(%rsp)
  0x00007fafb8c6dd20: jmpq    0x7fafb8c6dde8
  0x00007fafb8c6dd25: cmp     $0x3,%ecx
  0x00007fafb8c6dd28: jne     0x7fafb8c6dd38
  0x00007fafb8c6dd2e: movswl  (%rax,%rbx),%eax
  0x00007fafb8c6dd32: push    %rax
  0x00007fafb8c6dd33: jmpq    0x7fafb8c6dde8
  0x00007fafb8c6dd38: cmp     $0x0,%ecx
  0x00007fafb8c6dd3b: jne     0x7fafb8c6dd4b
  0x00007fafb8c6dd41: movsbl  (%rax,%rbx),%eax
  0x00007fafb8c6dd45: push    %rax
  0x00007fafb8c6dd46: jmpq    0x7fafb8c6dde8
  0x00007fafb8c6dd4b: cmp     $0x2,%ecx
  0x00007fafb8c6dd4e: jne     0x7fafb8c6dd5e
  0x00007fafb8c6dd54: movzwl  (%rax,%rbx),%eax
  0x00007fafb8c6dd58: push    %rax
  0x00007fafb8c6dd59: jmpq    0x7fafb8c6dde8
  0x00007fafb8c6dd5e: cmp     $0x1,%ecx
  0x00007fafb8c6dd61: jne     0x7fafb8c6dd71
  0x00007fafb8c6dd67: movsbl  (%rax,%rbx),%eax
  0x00007fafb8c6dd6b: push    %rax
  0x00007fafb8c6dd6c: jmpq    0x7fafb8c6dde8
  0x00007fafb8c6dd71: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c6dd76: sub     $0x80,%rsp
  0x00007fafb8c6dd7d: mov     %rax,0x78(%rsp)
  0x00007fafb8c6dd82: mov     %rcx,0x70(%rsp)
  0x00007fafb8c6dd87: mov     %rdx,0x68(%rsp)
  0x00007fafb8c6dd8c: mov     %rbx,0x60(%rsp)
  0x00007fafb8c6dd91: mov     %rbp,0x50(%rsp)
  0x00007fafb8c6dd96: mov     %rsi,0x48(%rsp)
  0x00007fafb8c6dd9b: mov     %rdi,0x40(%rsp)
  0x00007fafb8c6dda0: mov     %r8,0x38(%rsp)
  0x00007fafb8c6dda5: mov     %r9,0x30(%rsp)
  0x00007fafb8c6ddaa: mov     %r10,0x28(%rsp)
  0x00007fafb8c6ddaf: mov     %r11,0x20(%rsp)
  0x00007fafb8c6ddb4: mov     %r12,0x18(%rsp)
  0x00007fafb8c6ddb9: mov     %r13,0x10(%rsp)
  0x00007fafb8c6ddbe: mov     %r14,0x8(%rsp)
  0x00007fafb8c6ddc3: mov     %r15,(%rsp)
  0x00007fafb8c6ddc7: movabs  $0x7fafd84617ff,%rdi
  0x00007fafb8c6ddd1: movabs  $0x7fafb8c6dd71,%rsi
  0x00007fafb8c6dddb: mov     %rsp,%rdx
  0x00007fafb8c6ddde: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c6dde2: callq   0x7fafd7fdd230
  0x00007fafb8c6dde7: hlt
  0x00007fafb8c6dde8: movzbl  0x3(%r13),%ebx
  0x00007fafb8c6dded: add     $0x3,%r13
  0x00007fafb8c6ddf1: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c6ddfb: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6ddff: nop

----------------------------------------------------------------------
ldc2_w  20 ldc2_w  [0x00007fafb8c6de20, 0x00007fafb8c6e080]  608 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6de20 Code size: 0x00000260
  0x00007fafb8c6de20: push    %rax
  0x00007fafb8c6de21: jmpq    0x7fafb8c6de5f
  0x00007fafb8c6de26: sub     $0x8,%rsp
  0x00007fafb8c6de2a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c6de2f: jmpq    0x7fafb8c6de5f
  0x00007fafb8c6de34: sub     $0x10,%rsp
  0x00007fafb8c6de38: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6de3d: jmpq    0x7fafb8c6de5f
  0x00007fafb8c6de42: sub     $0x10,%rsp
  0x00007fafb8c6de46: mov     %rax,(%rsp)
  0x00007fafb8c6de4a: movabs  $0x0,%r10
  0x00007fafb8c6de54: mov     %r10,0x8(%rsp)
  0x00007fafb8c6de59: jmpq    0x7fafb8c6de5f
  0x00007fafb8c6de5e: push    %rax
  0x00007fafb8c6de5f: movzwl  0x1(%r13),%ebx
  0x00007fafb8c6de64: bswap   %ebx
  0x00007fafb8c6de66: shr     $0x10,%ebx
  0x00007fafb8c6de69: mov     0xffffffffffffffe8(%rbp),%rcx
  0x00007fafb8c6de6d: mov     0x8(%rcx),%rcx
  0x00007fafb8c6de71: mov     0x8(%rcx),%rcx
  0x00007fafb8c6de75: mov     0x8(%rcx),%rax
  0x00007fafb8c6de79: movzbl  0x4(%rax,%rbx),%edx
  0x00007fafb8c6de7e: cmp     $0x6,%edx
  0x00007fafb8c6de81: jne     0x7fafb8c6de97
  0x00007fafb8c6de83: vmovsd  0x40(%rcx,%rbx,8),%xmm0
  0x00007fafb8c6de89: sub     $0x10,%rsp
  0x00007fafb8c6de8d: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6de92: jmpq    0x7fafb8c6e058
  0x00007fafb8c6de97: cmp     $0x5,%edx
  0x00007fafb8c6de9a: jne     0x7fafb8c6debd
  0x00007fafb8c6de9c: mov     0x40(%rcx,%rbx,8),%rax
  0x00007fafb8c6dea1: sub     $0x10,%rsp
  0x00007fafb8c6dea5: mov     %rax,(%rsp)
  0x00007fafb8c6dea9: movabs  $0x0,%r10
  0x00007fafb8c6deb3: mov     %r10,0x8(%rsp)
  0x00007fafb8c6deb8: jmpq    0x7fafb8c6e058
  0x00007fafb8c6debd: mov     $0x14,%esi
  0x00007fafb8c6dec2: callq   0x7fafb8c6decc
  0x00007fafb8c6dec7: jmpq    0x7fafb8c6df76
  0x00007fafb8c6decc: lea     0x8(%rsp),%rax
  0x00007fafb8c6ded1: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c6ded5: mov     %r15,%rdi
  0x00007fafb8c6ded8: vzeroupper
  0x00007fafb8c6dedb: mov     %rbp,0x330(%r15)
  0x00007fafb8c6dee2: mov     %rax,0x320(%r15)
  0x00007fafb8c6dee9: test    $0xf,%esp
  0x00007fafb8c6deef: je      0x7fafb8c6df07
  0x00007fafb8c6def5: sub     $0x8,%rsp
  0x00007fafb8c6def9: callq   0x7fafd7d7ceb0
  0x00007fafb8c6defe: add     $0x8,%rsp
  0x00007fafb8c6df02: jmpq    0x7fafb8c6df0c
  0x00007fafb8c6df07: callq   0x7fafd7d7ceb0
  0x00007fafb8c6df0c: movabs  $0x0,%r10
  0x00007fafb8c6df16: mov     %r10,0x320(%r15)
  0x00007fafb8c6df1d: movabs  $0x0,%r10
  0x00007fafb8c6df27: mov     %r10,0x330(%r15)
  0x00007fafb8c6df2e: movabs  $0x0,%r10
  0x00007fafb8c6df38: mov     %r10,0x328(%r15)
  0x00007fafb8c6df3f: vzeroupper
  0x00007fafb8c6df42: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c6df4a: je      0x7fafb8c6df55
  0x00007fafb8c6df50: jmpq    0x7fafb8c5c780
  0x00007fafb8c6df55: mov     0x380(%r15),%rax
  0x00007fafb8c6df5c: movabs  $0x0,%r10
  0x00007fafb8c6df66: mov     %r10,0x380(%r15)
  0x00007fafb8c6df6d: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c6df71: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c6df75: retq
  0x00007fafb8c6df76: mov     0x388(%r15),%rcx
  0x00007fafb8c6df7d: movabs  $0x0,%r10
  0x00007fafb8c6df87: mov     %r10,0x388(%r15)
  0x00007fafb8c6df8e: mov     %ecx,%ebx
  0x00007fafb8c6df90: and     $0xffff,%ebx
  0x00007fafb8c6df96: shr     $0x1c,%ecx
  0x00007fafb8c6df99: and     $0xf,%ecx
  0x00007fafb8c6df9c: cmp     $0x5,%ecx
  0x00007fafb8c6df9f: jne     0x7fafb8c6dfc5
  0x00007fafb8c6dfa5: mov     (%rax,%rbx),%rax
  0x00007fafb8c6dfa9: sub     $0x10,%rsp
  0x00007fafb8c6dfad: mov     %rax,(%rsp)
  0x00007fafb8c6dfb1: movabs  $0x0,%r10
  0x00007fafb8c6dfbb: mov     %r10,0x8(%rsp)
  0x00007fafb8c6dfc0: jmpq    0x7fafb8c6e058
  0x00007fafb8c6dfc5: cmp     $0x7,%ecx
  0x00007fafb8c6dfc8: jne     0x7fafb8c6dfe1
  0x00007fafb8c6dfce: vmovsd  (%rax,%rbx),%xmm0
  0x00007fafb8c6dfd3: sub     $0x10,%rsp
  0x00007fafb8c6dfd7: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6dfdc: jmpq    0x7fafb8c6e058
  0x00007fafb8c6dfe1: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c6dfe6: sub     $0x80,%rsp
  0x00007fafb8c6dfed: mov     %rax,0x78(%rsp)
  0x00007fafb8c6dff2: mov     %rcx,0x70(%rsp)
  0x00007fafb8c6dff7: mov     %rdx,0x68(%rsp)
  0x00007fafb8c6dffc: mov     %rbx,0x60(%rsp)
  0x00007fafb8c6e001: mov     %rbp,0x50(%rsp)
  0x00007fafb8c6e006: mov     %rsi,0x48(%rsp)
  0x00007fafb8c6e00b: mov     %rdi,0x40(%rsp)
  0x00007fafb8c6e010: mov     %r8,0x38(%rsp)
  0x00007fafb8c6e015: mov     %r9,0x30(%rsp)
  0x00007fafb8c6e01a: mov     %r10,0x28(%rsp)
  0x00007fafb8c6e01f: mov     %r11,0x20(%rsp)
  0x00007fafb8c6e024: mov     %r12,0x18(%rsp)
  0x00007fafb8c6e029: mov     %r13,0x10(%rsp)
  0x00007fafb8c6e02e: mov     %r14,0x8(%rsp)
  0x00007fafb8c6e033: mov     %r15,(%rsp)
  0x00007fafb8c6e037: movabs  $0x7fafd84617ff,%rdi
  0x00007fafb8c6e041: movabs  $0x7fafb8c6dfe1,%rsi
  0x00007fafb8c6e04b: mov     %rsp,%rdx
  0x00007fafb8c6e04e: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c6e052: callq   0x7fafd7fdd230
  0x00007fafb8c6e057: hlt
  0x00007fafb8c6e058: movzbl  0x3(%r13),%ebx
  0x00007fafb8c6e05d: add     $0x3,%r13
  0x00007fafb8c6e061: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c6e06b: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6e06f: nop
  0x00007fafb8c6e070: add     %al,(%rax)
  0x00007fafb8c6e072: add     %al,(%rax)
  0x00007fafb8c6e074: add     %al,(%rax)
  0x00007fafb8c6e076: add     %al,(%rax)
  0x00007fafb8c6e078: add     %al,(%rax)
  0x00007fafb8c6e07a: add     %al,(%rax)
  0x00007fafb8c6e07c: add     %al,(%rax)
  0x00007fafb8c6e07e: add     %al,(%rax)

----------------------------------------------------------------------
iload  21 iload  [0x00007fafb8c6e0a0, 0x00007fafb8c6e160]  192 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6e0a0 Code size: 0x000000c0
  0x00007fafb8c6e0a0: push    %rax
  0x00007fafb8c6e0a1: jmpq    0x7fafb8c6e0df
  0x00007fafb8c6e0a6: sub     $0x8,%rsp
  0x00007fafb8c6e0aa: vmovss  %xmm0,(%rsp)
  0x00007fafb8c6e0af: jmpq    0x7fafb8c6e0df
  0x00007fafb8c6e0b4: sub     $0x10,%rsp
  0x00007fafb8c6e0b8: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6e0bd: jmpq    0x7fafb8c6e0df
  0x00007fafb8c6e0c2: sub     $0x10,%rsp
  0x00007fafb8c6e0c6: mov     %rax,(%rsp)
  0x00007fafb8c6e0ca: movabs  $0x0,%r10
  0x00007fafb8c6e0d4: mov     %r10,0x8(%rsp)
  0x00007fafb8c6e0d9: jmpq    0x7fafb8c6e0df
  0x00007fafb8c6e0de: push    %rax
  0x00007fafb8c6e0df: movzbl  0x2(%r13),%ebx
  0x00007fafb8c6e0e4: cmp     $0x15,%ebx
  0x00007fafb8c6e0e7: je      0x7fafb8c6e10d
  0x00007fafb8c6e0ed: cmp     $0xe0,%ebx
  0x00007fafb8c6e0f3: mov     $0xe1,%ecx
  0x00007fafb8c6e0f8: je      0x7fafb8c6e109
  0x00007fafb8c6e0fa: cmp     $0x34,%ebx
  0x00007fafb8c6e0fd: mov     $0xe2,%ecx
  0x00007fafb8c6e102: je      0x7fafb8c6e109
  0x00007fafb8c6e104: mov     $0xe0,%ecx
  0x00007fafb8c6e109: mov     %cl,0x0(%r13)
  0x00007fafb8c6e10d: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6e112: neg     %rbx
  0x00007fafb8c6e115: mov     (%r14,%rbx,8),%eax
  0x00007fafb8c6e119: movzbl  0x2(%r13),%ebx
  0x00007fafb8c6e11e: add     $0x2,%r13
  0x00007fafb8c6e122: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c6e12c: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6e130: movzwl  0x2(%r13),%ebx
  0x00007fafb8c6e135: bswap   %ebx
  0x00007fafb8c6e137: shr     $0x10,%ebx
  0x00007fafb8c6e13a: neg     %rbx
  0x00007fafb8c6e13d: mov     (%r14,%rbx,8),%eax
  0x00007fafb8c6e141: movzbl  0x4(%r13),%ebx
  0x00007fafb8c6e146: add     $0x4,%r13
  0x00007fafb8c6e14a: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c6e154: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6e158: add     %al,(%rax)
  0x00007fafb8c6e15a: add     %al,(%rax)
  0x00007fafb8c6e15c: add     %al,(%rax)
  0x00007fafb8c6e15e: add     %al,(%rax)

----------------------------------------------------------------------
lload  22 lload  [0x00007fafb8c6e180, 0x00007fafb8c6e220]  160 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6e180 Code size: 0x000000a0
  0x00007fafb8c6e180: push    %rax
  0x00007fafb8c6e181: jmpq    0x7fafb8c6e1bf
  0x00007fafb8c6e186: sub     $0x8,%rsp
  0x00007fafb8c6e18a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c6e18f: jmpq    0x7fafb8c6e1bf
  0x00007fafb8c6e194: sub     $0x10,%rsp
  0x00007fafb8c6e198: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6e19d: jmpq    0x7fafb8c6e1bf
  0x00007fafb8c6e1a2: sub     $0x10,%rsp
  0x00007fafb8c6e1a6: mov     %rax,(%rsp)
  0x00007fafb8c6e1aa: movabs  $0x0,%r10
  0x00007fafb8c6e1b4: mov     %r10,0x8(%rsp)
  0x00007fafb8c6e1b9: jmpq    0x7fafb8c6e1bf
  0x00007fafb8c6e1be: push    %rax
  0x00007fafb8c6e1bf: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6e1c4: neg     %rbx
  0x00007fafb8c6e1c7: mov     0xfffffffffffffff8(%r14,%rbx,8),%rax
  0x00007fafb8c6e1cc: movzbl  0x2(%r13),%ebx
  0x00007fafb8c6e1d1: add     $0x2,%r13
  0x00007fafb8c6e1d5: movabs  $0x7fafd89a6080,%r10
  0x00007fafb8c6e1df: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6e1e3: movzwl  0x2(%r13),%ebx
  0x00007fafb8c6e1e8: bswap   %ebx
  0x00007fafb8c6e1ea: shr     $0x10,%ebx
  0x00007fafb8c6e1ed: neg     %rbx
  0x00007fafb8c6e1f0: mov     0xfffffffffffffff8(%r14,%rbx,8),%rax
  0x00007fafb8c6e1f5: movzbl  0x4(%r13),%ebx
  0x00007fafb8c6e1fa: add     $0x4,%r13
  0x00007fafb8c6e1fe: movabs  $0x7fafd89a6080,%r10
  0x00007fafb8c6e208: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6e20c: nopl    0x0(%rax)
  0x00007fafb8c6e210: add     %al,(%rax)
  0x00007fafb8c6e212: add     %al,(%rax)
  0x00007fafb8c6e214: add     %al,(%rax)
  0x00007fafb8c6e216: add     %al,(%rax)
  0x00007fafb8c6e218: add     %al,(%rax)
  0x00007fafb8c6e21a: add     %al,(%rax)
  0x00007fafb8c6e21c: add     %al,(%rax)
  0x00007fafb8c6e21e: add     %al,(%rax)

----------------------------------------------------------------------
fload  23 fload  [0x00007fafb8c6e240, 0x00007fafb8c6e2e0]  160 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6e240 Code size: 0x000000a0
  0x00007fafb8c6e240: push    %rax
  0x00007fafb8c6e241: jmpq    0x7fafb8c6e27f
  0x00007fafb8c6e246: sub     $0x8,%rsp
  0x00007fafb8c6e24a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c6e24f: jmpq    0x7fafb8c6e27f
  0x00007fafb8c6e254: sub     $0x10,%rsp
  0x00007fafb8c6e258: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6e25d: jmpq    0x7fafb8c6e27f
  0x00007fafb8c6e262: sub     $0x10,%rsp
  0x00007fafb8c6e266: mov     %rax,(%rsp)
  0x00007fafb8c6e26a: movabs  $0x0,%r10
  0x00007fafb8c6e274: mov     %r10,0x8(%rsp)
  0x00007fafb8c6e279: jmpq    0x7fafb8c6e27f
  0x00007fafb8c6e27e: push    %rax
  0x00007fafb8c6e27f: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6e284: neg     %rbx
  0x00007fafb8c6e287: vmovss  (%r14,%rbx,8),%xmm0
  0x00007fafb8c6e28d: movzbl  0x2(%r13),%ebx
  0x00007fafb8c6e292: add     $0x2,%r13
  0x00007fafb8c6e296: movabs  $0x7fafd89a6880,%r10
  0x00007fafb8c6e2a0: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6e2a4: movzwl  0x2(%r13),%ebx
  0x00007fafb8c6e2a9: bswap   %ebx
  0x00007fafb8c6e2ab: shr     $0x10,%ebx
  0x00007fafb8c6e2ae: neg     %rbx
  0x00007fafb8c6e2b1: vmovss  (%r14,%rbx,8),%xmm0
  0x00007fafb8c6e2b7: movzbl  0x4(%r13),%ebx
  0x00007fafb8c6e2bc: add     $0x4,%r13
  0x00007fafb8c6e2c0: movabs  $0x7fafd89a6880,%r10
  0x00007fafb8c6e2ca: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6e2ce: nop
  0x00007fafb8c6e2d0: add     %al,(%rax)
  0x00007fafb8c6e2d2: add     %al,(%rax)
  0x00007fafb8c6e2d4: add     %al,(%rax)
  0x00007fafb8c6e2d6: add     %al,(%rax)
  0x00007fafb8c6e2d8: add     %al,(%rax)
  0x00007fafb8c6e2da: add     %al,(%rax)
  0x00007fafb8c6e2dc: add     %al,(%rax)
  0x00007fafb8c6e2de: add     %al,(%rax)

----------------------------------------------------------------------
dload  24 dload  [0x00007fafb8c6e300, 0x00007fafb8c6e3a0]  160 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6e300 Code size: 0x000000a0
  0x00007fafb8c6e300: push    %rax
  0x00007fafb8c6e301: jmpq    0x7fafb8c6e33f
  0x00007fafb8c6e306: sub     $0x8,%rsp
  0x00007fafb8c6e30a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c6e30f: jmpq    0x7fafb8c6e33f
  0x00007fafb8c6e314: sub     $0x10,%rsp
  0x00007fafb8c6e318: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6e31d: jmpq    0x7fafb8c6e33f
  0x00007fafb8c6e322: sub     $0x10,%rsp
  0x00007fafb8c6e326: mov     %rax,(%rsp)
  0x00007fafb8c6e32a: movabs  $0x0,%r10
  0x00007fafb8c6e334: mov     %r10,0x8(%rsp)
  0x00007fafb8c6e339: jmpq    0x7fafb8c6e33f
  0x00007fafb8c6e33e: push    %rax
  0x00007fafb8c6e33f: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6e344: neg     %rbx
  0x00007fafb8c6e347: vmovsd  0xfffffffffffffff8(%r14,%rbx,8),%xmm0
  0x00007fafb8c6e34e: movzbl  0x2(%r13),%ebx
  0x00007fafb8c6e353: add     $0x2,%r13
  0x00007fafb8c6e357: movabs  $0x7fafd89a7080,%r10
  0x00007fafb8c6e361: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6e365: movzwl  0x2(%r13),%ebx
  0x00007fafb8c6e36a: bswap   %ebx
  0x00007fafb8c6e36c: shr     $0x10,%ebx
  0x00007fafb8c6e36f: neg     %rbx
  0x00007fafb8c6e372: vmovsd  0xfffffffffffffff8(%r14,%rbx,8),%xmm0
  0x00007fafb8c6e379: movzbl  0x4(%r13),%ebx
  0x00007fafb8c6e37e: add     $0x4,%r13
  0x00007fafb8c6e382: movabs  $0x7fafd89a7080,%r10
  0x00007fafb8c6e38c: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6e390: add     %al,(%rax)
  0x00007fafb8c6e392: add     %al,(%rax)
  0x00007fafb8c6e394: add     %al,(%rax)
  0x00007fafb8c6e396: add     %al,(%rax)
  0x00007fafb8c6e398: add     %al,(%rax)
  0x00007fafb8c6e39a: add     %al,(%rax)
  0x00007fafb8c6e39c: add     %al,(%rax)
  0x00007fafb8c6e39e: add     %al,(%rax)

----------------------------------------------------------------------
aload  25 aload  [0x00007fafb8c6e3c0, 0x00007fafb8c6e460]  160 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6e3c0 Code size: 0x000000a0
  0x00007fafb8c6e3c0: push    %rax
  0x00007fafb8c6e3c1: jmpq    0x7fafb8c6e3ff
  0x00007fafb8c6e3c6: sub     $0x8,%rsp
  0x00007fafb8c6e3ca: vmovss  %xmm0,(%rsp)
  0x00007fafb8c6e3cf: jmpq    0x7fafb8c6e3ff
  0x00007fafb8c6e3d4: sub     $0x10,%rsp
  0x00007fafb8c6e3d8: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6e3dd: jmpq    0x7fafb8c6e3ff
  0x00007fafb8c6e3e2: sub     $0x10,%rsp
  0x00007fafb8c6e3e6: mov     %rax,(%rsp)
  0x00007fafb8c6e3ea: movabs  $0x0,%r10
  0x00007fafb8c6e3f4: mov     %r10,0x8(%rsp)
  0x00007fafb8c6e3f9: jmpq    0x7fafb8c6e3ff
  0x00007fafb8c6e3fe: push    %rax
  0x00007fafb8c6e3ff: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6e404: neg     %rbx
  0x00007fafb8c6e407: mov     (%r14,%rbx,8),%rax
  0x00007fafb8c6e40b: movzbl  0x2(%r13),%ebx
  0x00007fafb8c6e410: add     $0x2,%r13
  0x00007fafb8c6e414: movabs  $0x7fafd89a7880,%r10
  0x00007fafb8c6e41e: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6e422: movzwl  0x2(%r13),%ebx
  0x00007fafb8c6e427: bswap   %ebx
  0x00007fafb8c6e429: shr     $0x10,%ebx
  0x00007fafb8c6e42c: neg     %rbx
  0x00007fafb8c6e42f: mov     (%r14,%rbx,8),%rax
  0x00007fafb8c6e433: movzbl  0x4(%r13),%ebx
  0x00007fafb8c6e438: add     $0x4,%r13
  0x00007fafb8c6e43c: movabs  $0x7fafd89a7880,%r10
  0x00007fafb8c6e446: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6e44a: nopw    0x0(%rax,%rax)
  0x00007fafb8c6e450: add     %al,(%rax)
  0x00007fafb8c6e452: add     %al,(%rax)
  0x00007fafb8c6e454: add     %al,(%rax)
  0x00007fafb8c6e456: add     %al,(%rax)
  0x00007fafb8c6e458: add     %al,(%rax)
  0x00007fafb8c6e45a: add     %al,(%rax)
  0x00007fafb8c6e45c: add     %al,(%rax)
  0x00007fafb8c6e45e: add     %al,(%rax)

----------------------------------------------------------------------
iload_0  26 iload_0  [0x00007fafb8c6e480, 0x00007fafb8c6e4e0]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6e480 Code size: 0x00000060
  0x00007fafb8c6e480: push    %rax
  0x00007fafb8c6e481: jmpq    0x7fafb8c6e4bf
  0x00007fafb8c6e486: sub     $0x8,%rsp
  0x00007fafb8c6e48a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c6e48f: jmpq    0x7fafb8c6e4bf
  0x00007fafb8c6e494: sub     $0x10,%rsp
  0x00007fafb8c6e498: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6e49d: jmpq    0x7fafb8c6e4bf
  0x00007fafb8c6e4a2: sub     $0x10,%rsp
  0x00007fafb8c6e4a6: mov     %rax,(%rsp)
  0x00007fafb8c6e4aa: movabs  $0x0,%r10
  0x00007fafb8c6e4b4: mov     %r10,0x8(%rsp)
  0x00007fafb8c6e4b9: jmpq    0x7fafb8c6e4bf
  0x00007fafb8c6e4be: push    %rax
  0x00007fafb8c6e4bf: mov     (%r14),%eax
  0x00007fafb8c6e4c2: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6e4c7: incq    %r13
  0x00007fafb8c6e4ca: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c6e4d4: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6e4d8: add     %al,(%rax)
  0x00007fafb8c6e4da: add     %al,(%rax)
  0x00007fafb8c6e4dc: add     %al,(%rax)
  0x00007fafb8c6e4de: add     %al,(%rax)

----------------------------------------------------------------------
iload_1  27 iload_1  [0x00007fafb8c6e500, 0x00007fafb8c6e560]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6e500 Code size: 0x00000060
  0x00007fafb8c6e500: push    %rax
  0x00007fafb8c6e501: jmpq    0x7fafb8c6e53f
  0x00007fafb8c6e506: sub     $0x8,%rsp
  0x00007fafb8c6e50a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c6e50f: jmpq    0x7fafb8c6e53f
  0x00007fafb8c6e514: sub     $0x10,%rsp
  0x00007fafb8c6e518: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6e51d: jmpq    0x7fafb8c6e53f
  0x00007fafb8c6e522: sub     $0x10,%rsp
  0x00007fafb8c6e526: mov     %rax,(%rsp)
  0x00007fafb8c6e52a: movabs  $0x0,%r10
  0x00007fafb8c6e534: mov     %r10,0x8(%rsp)
  0x00007fafb8c6e539: jmpq    0x7fafb8c6e53f
  0x00007fafb8c6e53e: push    %rax
  0x00007fafb8c6e53f: mov     0xfffffffffffffff8(%r14),%eax
  0x00007fafb8c6e543: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6e548: incq    %r13
  0x00007fafb8c6e54b: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c6e555: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6e559: nopl    0x0(%rax)

----------------------------------------------------------------------
iload_2  28 iload_2  [0x00007fafb8c6e580, 0x00007fafb8c6e5e0]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6e580 Code size: 0x00000060
  0x00007fafb8c6e580: push    %rax
  0x00007fafb8c6e581: jmpq    0x7fafb8c6e5bf
  0x00007fafb8c6e586: sub     $0x8,%rsp
  0x00007fafb8c6e58a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c6e58f: jmpq    0x7fafb8c6e5bf
  0x00007fafb8c6e594: sub     $0x10,%rsp
  0x00007fafb8c6e598: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6e59d: jmpq    0x7fafb8c6e5bf
  0x00007fafb8c6e5a2: sub     $0x10,%rsp
  0x00007fafb8c6e5a6: mov     %rax,(%rsp)
  0x00007fafb8c6e5aa: movabs  $0x0,%r10
  0x00007fafb8c6e5b4: mov     %r10,0x8(%rsp)
  0x00007fafb8c6e5b9: jmpq    0x7fafb8c6e5bf
  0x00007fafb8c6e5be: push    %rax
  0x00007fafb8c6e5bf: mov     0xfffffffffffffff0(%r14),%eax
  0x00007fafb8c6e5c3: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6e5c8: incq    %r13
  0x00007fafb8c6e5cb: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c6e5d5: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6e5d9: nopl    0x0(%rax)

----------------------------------------------------------------------
iload_3  29 iload_3  [0x00007fafb8c6e600, 0x00007fafb8c6e660]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6e600 Code size: 0x00000060
  0x00007fafb8c6e600: push    %rax
  0x00007fafb8c6e601: jmpq    0x7fafb8c6e63f
  0x00007fafb8c6e606: sub     $0x8,%rsp
  0x00007fafb8c6e60a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c6e60f: jmpq    0x7fafb8c6e63f
  0x00007fafb8c6e614: sub     $0x10,%rsp
  0x00007fafb8c6e618: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6e61d: jmpq    0x7fafb8c6e63f
  0x00007fafb8c6e622: sub     $0x10,%rsp
  0x00007fafb8c6e626: mov     %rax,(%rsp)
  0x00007fafb8c6e62a: movabs  $0x0,%r10
  0x00007fafb8c6e634: mov     %r10,0x8(%rsp)
  0x00007fafb8c6e639: jmpq    0x7fafb8c6e63f
  0x00007fafb8c6e63e: push    %rax
  0x00007fafb8c6e63f: mov     0xffffffffffffffe8(%r14),%eax
  0x00007fafb8c6e643: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6e648: incq    %r13
  0x00007fafb8c6e64b: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c6e655: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6e659: nopl    0x0(%rax)

----------------------------------------------------------------------
lload_0  30 lload_0  [0x00007fafb8c6e680, 0x00007fafb8c6e6e0]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6e680 Code size: 0x00000060
  0x00007fafb8c6e680: push    %rax
  0x00007fafb8c6e681: jmpq    0x7fafb8c6e6bf
  0x00007fafb8c6e686: sub     $0x8,%rsp
  0x00007fafb8c6e68a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c6e68f: jmpq    0x7fafb8c6e6bf
  0x00007fafb8c6e694: sub     $0x10,%rsp
  0x00007fafb8c6e698: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6e69d: jmpq    0x7fafb8c6e6bf
  0x00007fafb8c6e6a2: sub     $0x10,%rsp
  0x00007fafb8c6e6a6: mov     %rax,(%rsp)
  0x00007fafb8c6e6aa: movabs  $0x0,%r10
  0x00007fafb8c6e6b4: mov     %r10,0x8(%rsp)
  0x00007fafb8c6e6b9: jmpq    0x7fafb8c6e6bf
  0x00007fafb8c6e6be: push    %rax
  0x00007fafb8c6e6bf: mov     0xfffffffffffffff8(%r14),%rax
  0x00007fafb8c6e6c3: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6e6c8: incq    %r13
  0x00007fafb8c6e6cb: movabs  $0x7fafd89a6080,%r10
  0x00007fafb8c6e6d5: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6e6d9: nopl    0x0(%rax)

----------------------------------------------------------------------
lload_1  31 lload_1  [0x00007fafb8c6e700, 0x00007fafb8c6e760]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6e700 Code size: 0x00000060
  0x00007fafb8c6e700: push    %rax
  0x00007fafb8c6e701: jmpq    0x7fafb8c6e73f
  0x00007fafb8c6e706: sub     $0x8,%rsp
  0x00007fafb8c6e70a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c6e70f: jmpq    0x7fafb8c6e73f
  0x00007fafb8c6e714: sub     $0x10,%rsp
  0x00007fafb8c6e718: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6e71d: jmpq    0x7fafb8c6e73f
  0x00007fafb8c6e722: sub     $0x10,%rsp
  0x00007fafb8c6e726: mov     %rax,(%rsp)
  0x00007fafb8c6e72a: movabs  $0x0,%r10
  0x00007fafb8c6e734: mov     %r10,0x8(%rsp)
  0x00007fafb8c6e739: jmpq    0x7fafb8c6e73f
  0x00007fafb8c6e73e: push    %rax
  0x00007fafb8c6e73f: mov     0xfffffffffffffff0(%r14),%rax
  0x00007fafb8c6e743: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6e748: incq    %r13
  0x00007fafb8c6e74b: movabs  $0x7fafd89a6080,%r10
  0x00007fafb8c6e755: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6e759: nopl    0x0(%rax)

----------------------------------------------------------------------
lload_2  32 lload_2  [0x00007fafb8c6e780, 0x00007fafb8c6e7e0]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6e780 Code size: 0x00000060
  0x00007fafb8c6e780: push    %rax
  0x00007fafb8c6e781: jmpq    0x7fafb8c6e7bf
  0x00007fafb8c6e786: sub     $0x8,%rsp
  0x00007fafb8c6e78a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c6e78f: jmpq    0x7fafb8c6e7bf
  0x00007fafb8c6e794: sub     $0x10,%rsp
  0x00007fafb8c6e798: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6e79d: jmpq    0x7fafb8c6e7bf
  0x00007fafb8c6e7a2: sub     $0x10,%rsp
  0x00007fafb8c6e7a6: mov     %rax,(%rsp)
  0x00007fafb8c6e7aa: movabs  $0x0,%r10
  0x00007fafb8c6e7b4: mov     %r10,0x8(%rsp)
  0x00007fafb8c6e7b9: jmpq    0x7fafb8c6e7bf
  0x00007fafb8c6e7be: push    %rax
  0x00007fafb8c6e7bf: mov     0xffffffffffffffe8(%r14),%rax
  0x00007fafb8c6e7c3: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6e7c8: incq    %r13
  0x00007fafb8c6e7cb: movabs  $0x7fafd89a6080,%r10
  0x00007fafb8c6e7d5: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6e7d9: nopl    0x0(%rax)

----------------------------------------------------------------------
lload_3  33 lload_3  [0x00007fafb8c6e800, 0x00007fafb8c6e860]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6e800 Code size: 0x00000060
  0x00007fafb8c6e800: push    %rax
  0x00007fafb8c6e801: jmpq    0x7fafb8c6e83f
  0x00007fafb8c6e806: sub     $0x8,%rsp
  0x00007fafb8c6e80a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c6e80f: jmpq    0x7fafb8c6e83f
  0x00007fafb8c6e814: sub     $0x10,%rsp
  0x00007fafb8c6e818: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6e81d: jmpq    0x7fafb8c6e83f
  0x00007fafb8c6e822: sub     $0x10,%rsp
  0x00007fafb8c6e826: mov     %rax,(%rsp)
  0x00007fafb8c6e82a: movabs  $0x0,%r10
  0x00007fafb8c6e834: mov     %r10,0x8(%rsp)
  0x00007fafb8c6e839: jmpq    0x7fafb8c6e83f
  0x00007fafb8c6e83e: push    %rax
  0x00007fafb8c6e83f: mov     0xffffffffffffffe0(%r14),%rax
  0x00007fafb8c6e843: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6e848: incq    %r13
  0x00007fafb8c6e84b: movabs  $0x7fafd89a6080,%r10
  0x00007fafb8c6e855: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6e859: nopl    0x0(%rax)

----------------------------------------------------------------------
fload_0  34 fload_0  [0x00007fafb8c6e880, 0x00007fafb8c6e8e0]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6e880 Code size: 0x00000060
  0x00007fafb8c6e880: push    %rax
  0x00007fafb8c6e881: jmpq    0x7fafb8c6e8bf
  0x00007fafb8c6e886: sub     $0x8,%rsp
  0x00007fafb8c6e88a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c6e88f: jmpq    0x7fafb8c6e8bf
  0x00007fafb8c6e894: sub     $0x10,%rsp
  0x00007fafb8c6e898: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6e89d: jmpq    0x7fafb8c6e8bf
  0x00007fafb8c6e8a2: sub     $0x10,%rsp
  0x00007fafb8c6e8a6: mov     %rax,(%rsp)
  0x00007fafb8c6e8aa: movabs  $0x0,%r10
  0x00007fafb8c6e8b4: mov     %r10,0x8(%rsp)
  0x00007fafb8c6e8b9: jmpq    0x7fafb8c6e8bf
  0x00007fafb8c6e8be: push    %rax
  0x00007fafb8c6e8bf: vmovss  (%r14),%xmm0
  0x00007fafb8c6e8c4: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6e8c9: incq    %r13
  0x00007fafb8c6e8cc: movabs  $0x7fafd89a6880,%r10
  0x00007fafb8c6e8d6: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6e8da: nopw    0x0(%rax,%rax)

----------------------------------------------------------------------
fload_1  35 fload_1  [0x00007fafb8c6e900, 0x00007fafb8c6e960]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6e900 Code size: 0x00000060
  0x00007fafb8c6e900: push    %rax
  0x00007fafb8c6e901: jmpq    0x7fafb8c6e93f
  0x00007fafb8c6e906: sub     $0x8,%rsp
  0x00007fafb8c6e90a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c6e90f: jmpq    0x7fafb8c6e93f
  0x00007fafb8c6e914: sub     $0x10,%rsp
  0x00007fafb8c6e918: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6e91d: jmpq    0x7fafb8c6e93f
  0x00007fafb8c6e922: sub     $0x10,%rsp
  0x00007fafb8c6e926: mov     %rax,(%rsp)
  0x00007fafb8c6e92a: movabs  $0x0,%r10
  0x00007fafb8c6e934: mov     %r10,0x8(%rsp)
  0x00007fafb8c6e939: jmpq    0x7fafb8c6e93f
  0x00007fafb8c6e93e: push    %rax
  0x00007fafb8c6e93f: vmovss  0xfffffffffffffff8(%r14),%xmm0
  0x00007fafb8c6e945: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6e94a: incq    %r13
  0x00007fafb8c6e94d: movabs  $0x7fafd89a6880,%r10
  0x00007fafb8c6e957: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6e95b: nopl    0x0(%rax,%rax)

----------------------------------------------------------------------
fload_2  36 fload_2  [0x00007fafb8c6e980, 0x00007fafb8c6e9e0]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6e980 Code size: 0x00000060
  0x00007fafb8c6e980: push    %rax
  0x00007fafb8c6e981: jmpq    0x7fafb8c6e9bf
  0x00007fafb8c6e986: sub     $0x8,%rsp
  0x00007fafb8c6e98a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c6e98f: jmpq    0x7fafb8c6e9bf
  0x00007fafb8c6e994: sub     $0x10,%rsp
  0x00007fafb8c6e998: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6e99d: jmpq    0x7fafb8c6e9bf
  0x00007fafb8c6e9a2: sub     $0x10,%rsp
  0x00007fafb8c6e9a6: mov     %rax,(%rsp)
  0x00007fafb8c6e9aa: movabs  $0x0,%r10
  0x00007fafb8c6e9b4: mov     %r10,0x8(%rsp)
  0x00007fafb8c6e9b9: jmpq    0x7fafb8c6e9bf
  0x00007fafb8c6e9be: push    %rax
  0x00007fafb8c6e9bf: vmovss  0xfffffffffffffff0(%r14),%xmm0
  0x00007fafb8c6e9c5: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6e9ca: incq    %r13
  0x00007fafb8c6e9cd: movabs  $0x7fafd89a6880,%r10
  0x00007fafb8c6e9d7: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6e9db: nopl    0x0(%rax,%rax)

----------------------------------------------------------------------
fload_3  37 fload_3  [0x00007fafb8c6ea00, 0x00007fafb8c6ea60]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6ea00 Code size: 0x00000060
  0x00007fafb8c6ea00: push    %rax
  0x00007fafb8c6ea01: jmpq    0x7fafb8c6ea3f
  0x00007fafb8c6ea06: sub     $0x8,%rsp
  0x00007fafb8c6ea0a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c6ea0f: jmpq    0x7fafb8c6ea3f
  0x00007fafb8c6ea14: sub     $0x10,%rsp
  0x00007fafb8c6ea18: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6ea1d: jmpq    0x7fafb8c6ea3f
  0x00007fafb8c6ea22: sub     $0x10,%rsp
  0x00007fafb8c6ea26: mov     %rax,(%rsp)
  0x00007fafb8c6ea2a: movabs  $0x0,%r10
  0x00007fafb8c6ea34: mov     %r10,0x8(%rsp)
  0x00007fafb8c6ea39: jmpq    0x7fafb8c6ea3f
  0x00007fafb8c6ea3e: push    %rax
  0x00007fafb8c6ea3f: vmovss  0xffffffffffffffe8(%r14),%xmm0
  0x00007fafb8c6ea45: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6ea4a: incq    %r13
  0x00007fafb8c6ea4d: movabs  $0x7fafd89a6880,%r10
  0x00007fafb8c6ea57: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6ea5b: nopl    0x0(%rax,%rax)

----------------------------------------------------------------------
dload_0  38 dload_0  [0x00007fafb8c6ea80, 0x00007fafb8c6eae0]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6ea80 Code size: 0x00000060
  0x00007fafb8c6ea80: push    %rax
  0x00007fafb8c6ea81: jmpq    0x7fafb8c6eabf
  0x00007fafb8c6ea86: sub     $0x8,%rsp
  0x00007fafb8c6ea8a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c6ea8f: jmpq    0x7fafb8c6eabf
  0x00007fafb8c6ea94: sub     $0x10,%rsp
  0x00007fafb8c6ea98: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6ea9d: jmpq    0x7fafb8c6eabf
  0x00007fafb8c6eaa2: sub     $0x10,%rsp
  0x00007fafb8c6eaa6: mov     %rax,(%rsp)
  0x00007fafb8c6eaaa: movabs  $0x0,%r10
  0x00007fafb8c6eab4: mov     %r10,0x8(%rsp)
  0x00007fafb8c6eab9: jmpq    0x7fafb8c6eabf
  0x00007fafb8c6eabe: push    %rax
  0x00007fafb8c6eabf: vmovsd  0xfffffffffffffff8(%r14),%xmm0
  0x00007fafb8c6eac5: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6eaca: incq    %r13
  0x00007fafb8c6eacd: movabs  $0x7fafd89a7080,%r10
  0x00007fafb8c6ead7: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6eadb: nopl    0x0(%rax,%rax)

----------------------------------------------------------------------
dload_1  39 dload_1  [0x00007fafb8c6eb00, 0x00007fafb8c6eb60]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6eb00 Code size: 0x00000060
  0x00007fafb8c6eb00: push    %rax
  0x00007fafb8c6eb01: jmpq    0x7fafb8c6eb3f
  0x00007fafb8c6eb06: sub     $0x8,%rsp
  0x00007fafb8c6eb0a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c6eb0f: jmpq    0x7fafb8c6eb3f
  0x00007fafb8c6eb14: sub     $0x10,%rsp
  0x00007fafb8c6eb18: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6eb1d: jmpq    0x7fafb8c6eb3f
  0x00007fafb8c6eb22: sub     $0x10,%rsp
  0x00007fafb8c6eb26: mov     %rax,(%rsp)
  0x00007fafb8c6eb2a: movabs  $0x0,%r10
  0x00007fafb8c6eb34: mov     %r10,0x8(%rsp)
  0x00007fafb8c6eb39: jmpq    0x7fafb8c6eb3f
  0x00007fafb8c6eb3e: push    %rax
  0x00007fafb8c6eb3f: vmovsd  0xfffffffffffffff0(%r14),%xmm0
  0x00007fafb8c6eb45: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6eb4a: incq    %r13
  0x00007fafb8c6eb4d: movabs  $0x7fafd89a7080,%r10
  0x00007fafb8c6eb57: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6eb5b: nopl    0x0(%rax,%rax)

----------------------------------------------------------------------
dload_2  40 dload_2  [0x00007fafb8c6eb80, 0x00007fafb8c6ebe0]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6eb80 Code size: 0x00000060
  0x00007fafb8c6eb80: push    %rax
  0x00007fafb8c6eb81: jmpq    0x7fafb8c6ebbf
  0x00007fafb8c6eb86: sub     $0x8,%rsp
  0x00007fafb8c6eb8a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c6eb8f: jmpq    0x7fafb8c6ebbf
  0x00007fafb8c6eb94: sub     $0x10,%rsp
  0x00007fafb8c6eb98: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6eb9d: jmpq    0x7fafb8c6ebbf
  0x00007fafb8c6eba2: sub     $0x10,%rsp
  0x00007fafb8c6eba6: mov     %rax,(%rsp)
  0x00007fafb8c6ebaa: movabs  $0x0,%r10
  0x00007fafb8c6ebb4: mov     %r10,0x8(%rsp)
  0x00007fafb8c6ebb9: jmpq    0x7fafb8c6ebbf
  0x00007fafb8c6ebbe: push    %rax
  0x00007fafb8c6ebbf: vmovsd  0xffffffffffffffe8(%r14),%xmm0
  0x00007fafb8c6ebc5: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6ebca: incq    %r13
  0x00007fafb8c6ebcd: movabs  $0x7fafd89a7080,%r10
  0x00007fafb8c6ebd7: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6ebdb: nopl    0x0(%rax,%rax)

----------------------------------------------------------------------
dload_3  41 dload_3  [0x00007fafb8c6ec00, 0x00007fafb8c6ec60]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6ec00 Code size: 0x00000060
  0x00007fafb8c6ec00: push    %rax
  0x00007fafb8c6ec01: jmpq    0x7fafb8c6ec3f
  0x00007fafb8c6ec06: sub     $0x8,%rsp
  0x00007fafb8c6ec0a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c6ec0f: jmpq    0x7fafb8c6ec3f
  0x00007fafb8c6ec14: sub     $0x10,%rsp
  0x00007fafb8c6ec18: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6ec1d: jmpq    0x7fafb8c6ec3f
  0x00007fafb8c6ec22: sub     $0x10,%rsp
  0x00007fafb8c6ec26: mov     %rax,(%rsp)
  0x00007fafb8c6ec2a: movabs  $0x0,%r10
  0x00007fafb8c6ec34: mov     %r10,0x8(%rsp)
  0x00007fafb8c6ec39: jmpq    0x7fafb8c6ec3f
  0x00007fafb8c6ec3e: push    %rax
  0x00007fafb8c6ec3f: vmovsd  0xffffffffffffffe0(%r14),%xmm0
  0x00007fafb8c6ec45: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6ec4a: incq    %r13
  0x00007fafb8c6ec4d: movabs  $0x7fafd89a7080,%r10
  0x00007fafb8c6ec57: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6ec5b: nopl    0x0(%rax,%rax)

----------------------------------------------------------------------
aload_0  42 aload_0  [0x00007fafb8c6ec80, 0x00007fafb8c6ed20]  160 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6ec80 Code size: 0x000000a0
  0x00007fafb8c6ec80: push    %rax
  0x00007fafb8c6ec81: jmpq    0x7fafb8c6ecbf
  0x00007fafb8c6ec86: sub     $0x8,%rsp
  0x00007fafb8c6ec8a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c6ec8f: jmpq    0x7fafb8c6ecbf
  0x00007fafb8c6ec94: sub     $0x10,%rsp
  0x00007fafb8c6ec98: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6ec9d: jmpq    0x7fafb8c6ecbf
  0x00007fafb8c6eca2: sub     $0x10,%rsp
  0x00007fafb8c6eca6: mov     %rax,(%rsp)
  0x00007fafb8c6ecaa: movabs  $0x0,%r10
  0x00007fafb8c6ecb4: mov     %r10,0x8(%rsp)
  0x00007fafb8c6ecb9: jmpq    0x7fafb8c6ecbf
  0x00007fafb8c6ecbe: push    %rax
  0x00007fafb8c6ecbf: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6ecc4: cmp     $0xb4,%ebx
  0x00007fafb8c6ecca: je      0x7fafb8c6ed00
  0x00007fafb8c6ecd0: cmp     $0xd0,%ebx
  0x00007fafb8c6ecd6: mov     $0xdd,%ecx
  0x00007fafb8c6ecdb: je      0x7fafb8c6ecfc
  0x00007fafb8c6ecdd: cmp     $0xcb,%ebx
  0x00007fafb8c6ece3: mov     $0xde,%ecx
  0x00007fafb8c6ece8: je      0x7fafb8c6ecfc
  0x00007fafb8c6ecea: cmp     $0xcf,%ebx
  0x00007fafb8c6ecf0: mov     $0xdf,%ecx
  0x00007fafb8c6ecf5: je      0x7fafb8c6ecfc
  0x00007fafb8c6ecf7: mov     $0xdc,%ecx
  0x00007fafb8c6ecfc: mov     %cl,0x0(%r13)
  0x00007fafb8c6ed00: mov     (%r14),%rax
  0x00007fafb8c6ed03: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6ed08: incq    %r13
  0x00007fafb8c6ed0b: movabs  $0x7fafd89a7880,%r10
  0x00007fafb8c6ed15: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6ed19: nopl    0x0(%rax)

----------------------------------------------------------------------
aload_1  43 aload_1  [0x00007fafb8c6ed40, 0x00007fafb8c6eda0]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6ed40 Code size: 0x00000060
  0x00007fafb8c6ed40: push    %rax
  0x00007fafb8c6ed41: jmpq    0x7fafb8c6ed7f
  0x00007fafb8c6ed46: sub     $0x8,%rsp
  0x00007fafb8c6ed4a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c6ed4f: jmpq    0x7fafb8c6ed7f
  0x00007fafb8c6ed54: sub     $0x10,%rsp
  0x00007fafb8c6ed58: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6ed5d: jmpq    0x7fafb8c6ed7f
  0x00007fafb8c6ed62: sub     $0x10,%rsp
  0x00007fafb8c6ed66: mov     %rax,(%rsp)
  0x00007fafb8c6ed6a: movabs  $0x0,%r10
  0x00007fafb8c6ed74: mov     %r10,0x8(%rsp)
  0x00007fafb8c6ed79: jmpq    0x7fafb8c6ed7f
  0x00007fafb8c6ed7e: push    %rax
  0x00007fafb8c6ed7f: mov     0xfffffffffffffff8(%r14),%rax
  0x00007fafb8c6ed83: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6ed88: incq    %r13
  0x00007fafb8c6ed8b: movabs  $0x7fafd89a7880,%r10
  0x00007fafb8c6ed95: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6ed99: nopl    0x0(%rax)

----------------------------------------------------------------------
aload_2  44 aload_2  [0x00007fafb8c6edc0, 0x00007fafb8c6ee20]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6edc0 Code size: 0x00000060
  0x00007fafb8c6edc0: push    %rax
  0x00007fafb8c6edc1: jmpq    0x7fafb8c6edff
  0x00007fafb8c6edc6: sub     $0x8,%rsp
  0x00007fafb8c6edca: vmovss  %xmm0,(%rsp)
  0x00007fafb8c6edcf: jmpq    0x7fafb8c6edff
  0x00007fafb8c6edd4: sub     $0x10,%rsp
  0x00007fafb8c6edd8: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6eddd: jmpq    0x7fafb8c6edff
  0x00007fafb8c6ede2: sub     $0x10,%rsp
  0x00007fafb8c6ede6: mov     %rax,(%rsp)
  0x00007fafb8c6edea: movabs  $0x0,%r10
  0x00007fafb8c6edf4: mov     %r10,0x8(%rsp)
  0x00007fafb8c6edf9: jmpq    0x7fafb8c6edff
  0x00007fafb8c6edfe: push    %rax
  0x00007fafb8c6edff: mov     0xfffffffffffffff0(%r14),%rax
  0x00007fafb8c6ee03: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6ee08: incq    %r13
  0x00007fafb8c6ee0b: movabs  $0x7fafd89a7880,%r10
  0x00007fafb8c6ee15: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6ee19: nopl    0x0(%rax)

----------------------------------------------------------------------
aload_3  45 aload_3  [0x00007fafb8c6ee40, 0x00007fafb8c6eea0]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6ee40 Code size: 0x00000060
  0x00007fafb8c6ee40: push    %rax
  0x00007fafb8c6ee41: jmpq    0x7fafb8c6ee7f
  0x00007fafb8c6ee46: sub     $0x8,%rsp
  0x00007fafb8c6ee4a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c6ee4f: jmpq    0x7fafb8c6ee7f
  0x00007fafb8c6ee54: sub     $0x10,%rsp
  0x00007fafb8c6ee58: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6ee5d: jmpq    0x7fafb8c6ee7f
  0x00007fafb8c6ee62: sub     $0x10,%rsp
  0x00007fafb8c6ee66: mov     %rax,(%rsp)
  0x00007fafb8c6ee6a: movabs  $0x0,%r10
  0x00007fafb8c6ee74: mov     %r10,0x8(%rsp)
  0x00007fafb8c6ee79: jmpq    0x7fafb8c6ee7f
  0x00007fafb8c6ee7e: push    %rax
  0x00007fafb8c6ee7f: mov     0xffffffffffffffe8(%r14),%rax
  0x00007fafb8c6ee83: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6ee88: incq    %r13
  0x00007fafb8c6ee8b: movabs  $0x7fafd89a7880,%r10
  0x00007fafb8c6ee95: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6ee99: nopl    0x0(%rax)

----------------------------------------------------------------------
iaload  46 iaload  [0x00007fafb8c6eec0, 0x00007fafb8c6ef00]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6eec0 Code size: 0x00000040
  0x00007fafb8c6eec0: mov     (%rsp),%eax
  0x00007fafb8c6eec3: add     $0x8,%rsp
  0x00007fafb8c6eec7: pop     %rdx
  0x00007fafb8c6eec8: movsxd  %eax,%rax
  0x00007fafb8c6eecb: cmp     0xc(%rdx),%eax
  0x00007fafb8c6eece: mov     %eax,%ebx
  0x00007fafb8c6eed0: jb      0x7fafb8c6eeda
  0x00007fafb8c6eed2: mov     %rdx,%rsi
  0x00007fafb8c6eed5: jmpq    0x7fafb8c6a060
  0x00007fafb8c6eeda: mov     0x10(%rdx,%rax,4),%eax
  0x00007fafb8c6eede: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6eee3: incq    %r13
  0x00007fafb8c6eee6: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c6eef0: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6eef4: nopl    0x0(%rax)
  0x00007fafb8c6eef8: add     %al,(%rax)
  0x00007fafb8c6eefa: add     %al,(%rax)
  0x00007fafb8c6eefc: add     %al,(%rax)
  0x00007fafb8c6eefe: add     %al,(%rax)

----------------------------------------------------------------------
laload  47 laload  [0x00007fafb8c6ef20, 0x00007fafb8c6ef60]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6ef20 Code size: 0x00000040
  0x00007fafb8c6ef20: mov     (%rsp),%eax
  0x00007fafb8c6ef23: add     $0x8,%rsp
  0x00007fafb8c6ef27: pop     %rdx
  0x00007fafb8c6ef28: movsxd  %eax,%rax
  0x00007fafb8c6ef2b: cmp     0xc(%rdx),%eax
  0x00007fafb8c6ef2e: mov     %eax,%ebx
  0x00007fafb8c6ef30: jb      0x7fafb8c6ef3a
  0x00007fafb8c6ef32: mov     %rdx,%rsi
  0x00007fafb8c6ef35: jmpq    0x7fafb8c6a060
  0x00007fafb8c6ef3a: mov     0x10(%rdx,%rbx,8),%rax
  0x00007fafb8c6ef3f: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6ef44: incq    %r13
  0x00007fafb8c6ef47: movabs  $0x7fafd89a6080,%r10
  0x00007fafb8c6ef51: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6ef55: nop
  0x00007fafb8c6ef58: add     %al,(%rax)
  0x00007fafb8c6ef5a: add     %al,(%rax)
  0x00007fafb8c6ef5c: add     %al,(%rax)
  0x00007fafb8c6ef5e: add     %al,(%rax)

----------------------------------------------------------------------
faload  48 faload  [0x00007fafb8c6ef80, 0x00007fafb8c6efc0]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6ef80 Code size: 0x00000040
  0x00007fafb8c6ef80: mov     (%rsp),%eax
  0x00007fafb8c6ef83: add     $0x8,%rsp
  0x00007fafb8c6ef87: pop     %rdx
  0x00007fafb8c6ef88: movsxd  %eax,%rax
  0x00007fafb8c6ef8b: cmp     0xc(%rdx),%eax
  0x00007fafb8c6ef8e: mov     %eax,%ebx
  0x00007fafb8c6ef90: jb      0x7fafb8c6ef9a
  0x00007fafb8c6ef92: mov     %rdx,%rsi
  0x00007fafb8c6ef95: jmpq    0x7fafb8c6a060
  0x00007fafb8c6ef9a: vmovss  0x10(%rdx,%rax,4),%xmm0
  0x00007fafb8c6efa0: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6efa5: incq    %r13
  0x00007fafb8c6efa8: movabs  $0x7fafd89a6880,%r10
  0x00007fafb8c6efb2: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6efb6: nop
  0x00007fafb8c6efb8: add     %al,(%rax)
  0x00007fafb8c6efba: add     %al,(%rax)
  0x00007fafb8c6efbc: add     %al,(%rax)
  0x00007fafb8c6efbe: add     %al,(%rax)

----------------------------------------------------------------------
daload  49 daload  [0x00007fafb8c6efe0, 0x00007fafb8c6f020]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6efe0 Code size: 0x00000040
  0x00007fafb8c6efe0: mov     (%rsp),%eax
  0x00007fafb8c6efe3: add     $0x8,%rsp
  0x00007fafb8c6efe7: pop     %rdx
  0x00007fafb8c6efe8: movsxd  %eax,%rax
  0x00007fafb8c6efeb: cmp     0xc(%rdx),%eax
  0x00007fafb8c6efee: mov     %eax,%ebx
  0x00007fafb8c6eff0: jb      0x7fafb8c6effa
  0x00007fafb8c6eff2: mov     %rdx,%rsi
  0x00007fafb8c6eff5: jmpq    0x7fafb8c6a060
  0x00007fafb8c6effa: vmovsd  0x10(%rdx,%rax,8),%xmm0
  0x00007fafb8c6f000: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6f005: incq    %r13
  0x00007fafb8c6f008: movabs  $0x7fafd89a7080,%r10
  0x00007fafb8c6f012: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6f016: nop
  0x00007fafb8c6f018: add     %al,(%rax)
  0x00007fafb8c6f01a: add     %al,(%rax)
  0x00007fafb8c6f01c: add     %al,(%rax)
  0x00007fafb8c6f01e: add     %al,(%rax)

----------------------------------------------------------------------
aaload  50 aaload  [0x00007fafb8c6f040, 0x00007fafb8c6f080]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6f040 Code size: 0x00000040
  0x00007fafb8c6f040: mov     (%rsp),%eax
  0x00007fafb8c6f043: add     $0x8,%rsp
  0x00007fafb8c6f047: pop     %rdx
  0x00007fafb8c6f048: movsxd  %eax,%rax
  0x00007fafb8c6f04b: cmp     0xc(%rdx),%eax
  0x00007fafb8c6f04e: mov     %eax,%ebx
  0x00007fafb8c6f050: jb      0x7fafb8c6f05a
  0x00007fafb8c6f052: mov     %rdx,%rsi
  0x00007fafb8c6f055: jmpq    0x7fafb8c6a060
  0x00007fafb8c6f05a: mov     0x10(%rdx,%rax,4),%eax
  0x00007fafb8c6f05e: shl     $0x3,%rax
  0x00007fafb8c6f062: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6f067: incq    %r13
  0x00007fafb8c6f06a: movabs  $0x7fafd89a7880,%r10
  0x00007fafb8c6f074: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6f078: add     %al,(%rax)
  0x00007fafb8c6f07a: add     %al,(%rax)
  0x00007fafb8c6f07c: add     %al,(%rax)
  0x00007fafb8c6f07e: add     %al,(%rax)

----------------------------------------------------------------------
baload  51 baload  [0x00007fafb8c6f0a0, 0x00007fafb8c6f0e0]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6f0a0 Code size: 0x00000040
  0x00007fafb8c6f0a0: mov     (%rsp),%eax
  0x00007fafb8c6f0a3: add     $0x8,%rsp
  0x00007fafb8c6f0a7: pop     %rdx
  0x00007fafb8c6f0a8: movsxd  %eax,%rax
  0x00007fafb8c6f0ab: cmp     0xc(%rdx),%eax
  0x00007fafb8c6f0ae: mov     %eax,%ebx
  0x00007fafb8c6f0b0: jb      0x7fafb8c6f0ba
  0x00007fafb8c6f0b2: mov     %rdx,%rsi
  0x00007fafb8c6f0b5: jmpq    0x7fafb8c6a060
  0x00007fafb8c6f0ba: movsbl  0x10(%rdx,%rax),%eax
  0x00007fafb8c6f0bf: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6f0c4: incq    %r13
  0x00007fafb8c6f0c7: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c6f0d1: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6f0d5: nop
  0x00007fafb8c6f0d8: add     %al,(%rax)
  0x00007fafb8c6f0da: add     %al,(%rax)
  0x00007fafb8c6f0dc: add     %al,(%rax)
  0x00007fafb8c6f0de: add     %al,(%rax)

----------------------------------------------------------------------
caload  52 caload  [0x00007fafb8c6f100, 0x00007fafb8c6f140]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6f100 Code size: 0x00000040
  0x00007fafb8c6f100: mov     (%rsp),%eax
  0x00007fafb8c6f103: add     $0x8,%rsp
  0x00007fafb8c6f107: pop     %rdx
  0x00007fafb8c6f108: movsxd  %eax,%rax
  0x00007fafb8c6f10b: cmp     0xc(%rdx),%eax
  0x00007fafb8c6f10e: mov     %eax,%ebx
  0x00007fafb8c6f110: jb      0x7fafb8c6f11a
  0x00007fafb8c6f112: mov     %rdx,%rsi
  0x00007fafb8c6f115: jmpq    0x7fafb8c6a060
  0x00007fafb8c6f11a: movzwl  0x10(%rdx,%rax,2),%eax
  0x00007fafb8c6f11f: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6f124: incq    %r13
  0x00007fafb8c6f127: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c6f131: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6f135: nop
  0x00007fafb8c6f138: add     %al,(%rax)
  0x00007fafb8c6f13a: add     %al,(%rax)
  0x00007fafb8c6f13c: add     %al,(%rax)
  0x00007fafb8c6f13e: add     %al,(%rax)

----------------------------------------------------------------------
saload  53 saload  [0x00007fafb8c6f160, 0x00007fafb8c6f1a0]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6f160 Code size: 0x00000040
  0x00007fafb8c6f160: mov     (%rsp),%eax
  0x00007fafb8c6f163: add     $0x8,%rsp
  0x00007fafb8c6f167: pop     %rdx
  0x00007fafb8c6f168: movsxd  %eax,%rax
  0x00007fafb8c6f16b: cmp     0xc(%rdx),%eax
  0x00007fafb8c6f16e: mov     %eax,%ebx
  0x00007fafb8c6f170: jb      0x7fafb8c6f17a
  0x00007fafb8c6f172: mov     %rdx,%rsi
  0x00007fafb8c6f175: jmpq    0x7fafb8c6a060
  0x00007fafb8c6f17a: movswl  0x10(%rdx,%rax,2),%eax
  0x00007fafb8c6f17f: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6f184: incq    %r13
  0x00007fafb8c6f187: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c6f191: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6f195: nop
  0x00007fafb8c6f198: add     %al,(%rax)
  0x00007fafb8c6f19a: add     %al,(%rax)
  0x00007fafb8c6f19c: add     %al,(%rax)
  0x00007fafb8c6f19e: add     %al,(%rax)

----------------------------------------------------------------------
istore  54 istore  [0x00007fafb8c6f1c0, 0x00007fafb8c6f220]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6f1c0 Code size: 0x00000060
  0x00007fafb8c6f1c0: mov     (%rsp),%eax
  0x00007fafb8c6f1c3: add     $0x8,%rsp
  0x00007fafb8c6f1c7: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6f1cc: neg     %rbx
  0x00007fafb8c6f1cf: mov     %eax,(%r14,%rbx,8)
  0x00007fafb8c6f1d3: movzbl  0x2(%r13),%ebx
  0x00007fafb8c6f1d8: add     $0x2,%r13
  0x00007fafb8c6f1dc: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c6f1e6: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6f1ea: mov     (%rsp),%eax
  0x00007fafb8c6f1ed: add     $0x8,%rsp
  0x00007fafb8c6f1f1: movzwl  0x2(%r13),%ebx
  0x00007fafb8c6f1f6: bswap   %ebx
  0x00007fafb8c6f1f8: shr     $0x10,%ebx
  0x00007fafb8c6f1fb: neg     %rbx
  0x00007fafb8c6f1fe: mov     %eax,(%r14,%rbx,8)
  0x00007fafb8c6f202: movzbl  0x4(%r13),%ebx
  0x00007fafb8c6f207: add     $0x4,%r13
  0x00007fafb8c6f20b: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c6f215: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6f219: nopl    0x0(%rax)

----------------------------------------------------------------------
lstore  55 lstore  [0x00007fafb8c6f240, 0x00007fafb8c6f2a0]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6f240 Code size: 0x00000060
  0x00007fafb8c6f240: mov     (%rsp),%rax
  0x00007fafb8c6f244: add     $0x10,%rsp
  0x00007fafb8c6f248: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6f24d: neg     %rbx
  0x00007fafb8c6f250: mov     %rax,0xfffffffffffffff8(%r14,%rbx,8)
  0x00007fafb8c6f255: movzbl  0x2(%r13),%ebx
  0x00007fafb8c6f25a: add     $0x2,%r13
  0x00007fafb8c6f25e: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c6f268: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6f26c: mov     (%rsp),%rax
  0x00007fafb8c6f270: add     $0x10,%rsp
  0x00007fafb8c6f274: movzwl  0x2(%r13),%ebx
  0x00007fafb8c6f279: bswap   %ebx
  0x00007fafb8c6f27b: shr     $0x10,%ebx
  0x00007fafb8c6f27e: neg     %rbx
  0x00007fafb8c6f281: mov     %rax,0xfffffffffffffff8(%r14,%rbx,8)
  0x00007fafb8c6f286: movzbl  0x4(%r13),%ebx
  0x00007fafb8c6f28b: add     $0x4,%r13
  0x00007fafb8c6f28f: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c6f299: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6f29d: nop

----------------------------------------------------------------------
fstore  56 fstore  [0x00007fafb8c6f2c0, 0x00007fafb8c6f340]  128 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6f2c0 Code size: 0x00000080
  0x00007fafb8c6f2c0: vmovss  (%rsp),%xmm0
  0x00007fafb8c6f2c5: add     $0x8,%rsp
  0x00007fafb8c6f2c9: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6f2ce: neg     %rbx
  0x00007fafb8c6f2d1: vmovss  %xmm0,(%r14,%rbx,8)
  0x00007fafb8c6f2d7: movzbl  0x2(%r13),%ebx
  0x00007fafb8c6f2dc: add     $0x2,%r13
  0x00007fafb8c6f2e0: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c6f2ea: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6f2ee: vmovss  (%rsp),%xmm0
  0x00007fafb8c6f2f3: add     $0x8,%rsp
  0x00007fafb8c6f2f7: movzwl  0x2(%r13),%ebx
  0x00007fafb8c6f2fc: bswap   %ebx
  0x00007fafb8c6f2fe: shr     $0x10,%ebx
  0x00007fafb8c6f301: neg     %rbx
  0x00007fafb8c6f304: vmovss  %xmm0,(%r14,%rbx,8)
  0x00007fafb8c6f30a: movzbl  0x4(%r13),%ebx
  0x00007fafb8c6f30f: add     $0x4,%r13
  0x00007fafb8c6f313: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c6f31d: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6f321: nopl    0x0(%rax)
  0x00007fafb8c6f328: add     %al,(%rax)
  0x00007fafb8c6f32a: add     %al,(%rax)
  0x00007fafb8c6f32c: add     %al,(%rax)
  0x00007fafb8c6f32e: add     %al,(%rax)
  0x00007fafb8c6f330: add     %al,(%rax)
  0x00007fafb8c6f332: add     %al,(%rax)
  0x00007fafb8c6f334: add     %al,(%rax)
  0x00007fafb8c6f336: add     %al,(%rax)
  0x00007fafb8c6f338: add     %al,(%rax)
  0x00007fafb8c6f33a: add     %al,(%rax)
  0x00007fafb8c6f33c: add     %al,(%rax)
  0x00007fafb8c6f33e: add     %al,(%rax)

----------------------------------------------------------------------
dstore  57 dstore  [0x00007fafb8c6f360, 0x00007fafb8c6f3e0]  128 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6f360 Code size: 0x00000080
  0x00007fafb8c6f360: vmovsd  (%rsp),%xmm0
  0x00007fafb8c6f365: add     $0x10,%rsp
  0x00007fafb8c6f369: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6f36e: neg     %rbx
  0x00007fafb8c6f371: vmovsd  %xmm0,0xfffffffffffffff8(%r14,%rbx,8)
  0x00007fafb8c6f378: movzbl  0x2(%r13),%ebx
  0x00007fafb8c6f37d: add     $0x2,%r13
  0x00007fafb8c6f381: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c6f38b: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6f38f: vmovsd  (%rsp),%xmm0
  0x00007fafb8c6f394: add     $0x10,%rsp
  0x00007fafb8c6f398: movzwl  0x2(%r13),%ebx
  0x00007fafb8c6f39d: bswap   %ebx
  0x00007fafb8c6f39f: shr     $0x10,%ebx
  0x00007fafb8c6f3a2: neg     %rbx
  0x00007fafb8c6f3a5: vmovsd  %xmm0,0xfffffffffffffff8(%r14,%rbx,8)
  0x00007fafb8c6f3ac: movzbl  0x4(%r13),%ebx
  0x00007fafb8c6f3b1: add     $0x4,%r13
  0x00007fafb8c6f3b5: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c6f3bf: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6f3c3: nopl    0x0(%rax,%rax)
  0x00007fafb8c6f3c8: add     %al,(%rax)
  0x00007fafb8c6f3ca: add     %al,(%rax)
  0x00007fafb8c6f3cc: add     %al,(%rax)
  0x00007fafb8c6f3ce: add     %al,(%rax)
  0x00007fafb8c6f3d0: add     %al,(%rax)
  0x00007fafb8c6f3d2: add     %al,(%rax)
  0x00007fafb8c6f3d4: add     %al,(%rax)
  0x00007fafb8c6f3d6: add     %al,(%rax)
  0x00007fafb8c6f3d8: add     %al,(%rax)
  0x00007fafb8c6f3da: add     %al,(%rax)
  0x00007fafb8c6f3dc: add     %al,(%rax)
  0x00007fafb8c6f3de: add     %al,(%rax)

----------------------------------------------------------------------
astore  58 astore  [0x00007fafb8c6f400, 0x00007fafb8c6f4a0]  160 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6f400 Code size: 0x000000a0
  0x00007fafb8c6f400: push    %rax
  0x00007fafb8c6f401: jmpq    0x7fafb8c6f43f
  0x00007fafb8c6f406: sub     $0x8,%rsp
  0x00007fafb8c6f40a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c6f40f: jmpq    0x7fafb8c6f43f
  0x00007fafb8c6f414: sub     $0x10,%rsp
  0x00007fafb8c6f418: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6f41d: jmpq    0x7fafb8c6f43f
  0x00007fafb8c6f422: sub     $0x10,%rsp
  0x00007fafb8c6f426: mov     %rax,(%rsp)
  0x00007fafb8c6f42a: movabs  $0x0,%r10
  0x00007fafb8c6f434: mov     %r10,0x8(%rsp)
  0x00007fafb8c6f439: jmpq    0x7fafb8c6f43f
  0x00007fafb8c6f43e: push    %rax
  0x00007fafb8c6f43f: pop     %rax
  0x00007fafb8c6f440: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6f445: neg     %rbx
  0x00007fafb8c6f448: mov     %rax,(%r14,%rbx,8)
  0x00007fafb8c6f44c: movzbl  0x2(%r13),%ebx
  0x00007fafb8c6f451: add     $0x2,%r13
  0x00007fafb8c6f455: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c6f45f: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6f463: pop     %rax
  0x00007fafb8c6f464: movzwl  0x2(%r13),%ebx
  0x00007fafb8c6f469: bswap   %ebx
  0x00007fafb8c6f46b: shr     $0x10,%ebx
  0x00007fafb8c6f46e: neg     %rbx
  0x00007fafb8c6f471: mov     %rax,(%r14,%rbx,8)
  0x00007fafb8c6f475: movzbl  0x4(%r13),%ebx
  0x00007fafb8c6f47a: add     $0x4,%r13
  0x00007fafb8c6f47e: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c6f488: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6f48c: nopl    0x0(%rax)
  0x00007fafb8c6f490: add     %al,(%rax)
  0x00007fafb8c6f492: add     %al,(%rax)
  0x00007fafb8c6f494: add     %al,(%rax)
  0x00007fafb8c6f496: add     %al,(%rax)
  0x00007fafb8c6f498: add     %al,(%rax)
  0x00007fafb8c6f49a: add     %al,(%rax)
  0x00007fafb8c6f49c: add     %al,(%rax)
  0x00007fafb8c6f49e: add     %al,(%rax)

----------------------------------------------------------------------
istore_0  59 istore_0  [0x00007fafb8c6f4c0, 0x00007fafb8c6f4e0]  32 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6f4c0 Code size: 0x00000020
  0x00007fafb8c6f4c0: mov     (%rsp),%eax
  0x00007fafb8c6f4c3: add     $0x8,%rsp
  0x00007fafb8c6f4c7: mov     %eax,(%r14)
  0x00007fafb8c6f4ca: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6f4cf: incq    %r13
  0x00007fafb8c6f4d2: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c6f4dc: jmpq    *(%r10,%rbx,8)

----------------------------------------------------------------------
istore_1  60 istore_1  [0x00007fafb8c6f500, 0x00007fafb8c6f540]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6f500 Code size: 0x00000040
  0x00007fafb8c6f500: mov     (%rsp),%eax
  0x00007fafb8c6f503: add     $0x8,%rsp
  0x00007fafb8c6f507: mov     %eax,0xfffffffffffffff8(%r14)
  0x00007fafb8c6f50b: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6f510: incq    %r13
  0x00007fafb8c6f513: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c6f51d: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6f521: nopl    0x0(%rax)
  0x00007fafb8c6f528: add     %al,(%rax)
  0x00007fafb8c6f52a: add     %al,(%rax)
  0x00007fafb8c6f52c: add     %al,(%rax)
  0x00007fafb8c6f52e: add     %al,(%rax)
  0x00007fafb8c6f530: add     %al,(%rax)
  0x00007fafb8c6f532: add     %al,(%rax)
  0x00007fafb8c6f534: add     %al,(%rax)
  0x00007fafb8c6f536: add     %al,(%rax)
  0x00007fafb8c6f538: add     %al,(%rax)
  0x00007fafb8c6f53a: add     %al,(%rax)
  0x00007fafb8c6f53c: add     %al,(%rax)
  0x00007fafb8c6f53e: add     %al,(%rax)

----------------------------------------------------------------------
istore_2  61 istore_2  [0x00007fafb8c6f560, 0x00007fafb8c6f5a0]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6f560 Code size: 0x00000040
  0x00007fafb8c6f560: mov     (%rsp),%eax
  0x00007fafb8c6f563: add     $0x8,%rsp
  0x00007fafb8c6f567: mov     %eax,0xfffffffffffffff0(%r14)
  0x00007fafb8c6f56b: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6f570: incq    %r13
  0x00007fafb8c6f573: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c6f57d: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6f581: nopl    0x0(%rax)
  0x00007fafb8c6f588: add     %al,(%rax)
  0x00007fafb8c6f58a: add     %al,(%rax)
  0x00007fafb8c6f58c: add     %al,(%rax)
  0x00007fafb8c6f58e: add     %al,(%rax)
  0x00007fafb8c6f590: add     %al,(%rax)
  0x00007fafb8c6f592: add     %al,(%rax)
  0x00007fafb8c6f594: add     %al,(%rax)
  0x00007fafb8c6f596: add     %al,(%rax)
  0x00007fafb8c6f598: add     %al,(%rax)
  0x00007fafb8c6f59a: add     %al,(%rax)
  0x00007fafb8c6f59c: add     %al,(%rax)
  0x00007fafb8c6f59e: add     %al,(%rax)

----------------------------------------------------------------------
istore_3  62 istore_3  [0x00007fafb8c6f5c0, 0x00007fafb8c6f600]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6f5c0 Code size: 0x00000040
  0x00007fafb8c6f5c0: mov     (%rsp),%eax
  0x00007fafb8c6f5c3: add     $0x8,%rsp
  0x00007fafb8c6f5c7: mov     %eax,0xffffffffffffffe8(%r14)
  0x00007fafb8c6f5cb: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6f5d0: incq    %r13
  0x00007fafb8c6f5d3: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c6f5dd: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6f5e1: nopl    0x0(%rax)
  0x00007fafb8c6f5e8: add     %al,(%rax)
  0x00007fafb8c6f5ea: add     %al,(%rax)
  0x00007fafb8c6f5ec: add     %al,(%rax)
  0x00007fafb8c6f5ee: add     %al,(%rax)
  0x00007fafb8c6f5f0: add     %al,(%rax)
  0x00007fafb8c6f5f2: add     %al,(%rax)
  0x00007fafb8c6f5f4: add     %al,(%rax)
  0x00007fafb8c6f5f6: add     %al,(%rax)
  0x00007fafb8c6f5f8: add     %al,(%rax)
  0x00007fafb8c6f5fa: add     %al,(%rax)
  0x00007fafb8c6f5fc: add     %al,(%rax)
  0x00007fafb8c6f5fe: add     %al,(%rax)

----------------------------------------------------------------------
lstore_0  63 lstore_0  [0x00007fafb8c6f620, 0x00007fafb8c6f660]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6f620 Code size: 0x00000040
  0x00007fafb8c6f620: mov     (%rsp),%rax
  0x00007fafb8c6f624: add     $0x10,%rsp
  0x00007fafb8c6f628: mov     %rax,0xfffffffffffffff8(%r14)
  0x00007fafb8c6f62c: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6f631: incq    %r13
  0x00007fafb8c6f634: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c6f63e: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6f642: nopw    0x0(%rax,%rax)
  0x00007fafb8c6f648: add     %al,(%rax)
  0x00007fafb8c6f64a: add     %al,(%rax)
  0x00007fafb8c6f64c: add     %al,(%rax)
  0x00007fafb8c6f64e: add     %al,(%rax)
  0x00007fafb8c6f650: add     %al,(%rax)
  0x00007fafb8c6f652: add     %al,(%rax)
  0x00007fafb8c6f654: add     %al,(%rax)
  0x00007fafb8c6f656: add     %al,(%rax)
  0x00007fafb8c6f658: add     %al,(%rax)
  0x00007fafb8c6f65a: add     %al,(%rax)
  0x00007fafb8c6f65c: add     %al,(%rax)
  0x00007fafb8c6f65e: add     %al,(%rax)

----------------------------------------------------------------------
lstore_1  64 lstore_1  [0x00007fafb8c6f680, 0x00007fafb8c6f6c0]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6f680 Code size: 0x00000040
  0x00007fafb8c6f680: mov     (%rsp),%rax
  0x00007fafb8c6f684: add     $0x10,%rsp
  0x00007fafb8c6f688: mov     %rax,0xfffffffffffffff0(%r14)
  0x00007fafb8c6f68c: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6f691: incq    %r13
  0x00007fafb8c6f694: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c6f69e: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6f6a2: nopw    0x0(%rax,%rax)
  0x00007fafb8c6f6a8: add     %al,(%rax)
  0x00007fafb8c6f6aa: add     %al,(%rax)
  0x00007fafb8c6f6ac: add     %al,(%rax)
  0x00007fafb8c6f6ae: add     %al,(%rax)
  0x00007fafb8c6f6b0: add     %al,(%rax)
  0x00007fafb8c6f6b2: add     %al,(%rax)
  0x00007fafb8c6f6b4: add     %al,(%rax)
  0x00007fafb8c6f6b6: add     %al,(%rax)
  0x00007fafb8c6f6b8: add     %al,(%rax)
  0x00007fafb8c6f6ba: add     %al,(%rax)
  0x00007fafb8c6f6bc: add     %al,(%rax)
  0x00007fafb8c6f6be: add     %al,(%rax)

----------------------------------------------------------------------
lstore_2  65 lstore_2  [0x00007fafb8c6f6e0, 0x00007fafb8c6f720]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6f6e0 Code size: 0x00000040
  0x00007fafb8c6f6e0: mov     (%rsp),%rax
  0x00007fafb8c6f6e4: add     $0x10,%rsp
  0x00007fafb8c6f6e8: mov     %rax,0xffffffffffffffe8(%r14)
  0x00007fafb8c6f6ec: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6f6f1: incq    %r13
  0x00007fafb8c6f6f4: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c6f6fe: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6f702: nopw    0x0(%rax,%rax)
  0x00007fafb8c6f708: add     %al,(%rax)
  0x00007fafb8c6f70a: add     %al,(%rax)
  0x00007fafb8c6f70c: add     %al,(%rax)
  0x00007fafb8c6f70e: add     %al,(%rax)
  0x00007fafb8c6f710: add     %al,(%rax)
  0x00007fafb8c6f712: add     %al,(%rax)
  0x00007fafb8c6f714: add     %al,(%rax)
  0x00007fafb8c6f716: add     %al,(%rax)
  0x00007fafb8c6f718: add     %al,(%rax)
  0x00007fafb8c6f71a: add     %al,(%rax)
  0x00007fafb8c6f71c: add     %al,(%rax)
  0x00007fafb8c6f71e: add     %al,(%rax)

----------------------------------------------------------------------
lstore_3  66 lstore_3  [0x00007fafb8c6f740, 0x00007fafb8c6f780]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6f740 Code size: 0x00000040
  0x00007fafb8c6f740: mov     (%rsp),%rax
  0x00007fafb8c6f744: add     $0x10,%rsp
  0x00007fafb8c6f748: mov     %rax,0xffffffffffffffe0(%r14)
  0x00007fafb8c6f74c: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6f751: incq    %r13
  0x00007fafb8c6f754: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c6f75e: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6f762: nopw    0x0(%rax,%rax)
  0x00007fafb8c6f768: add     %al,(%rax)
  0x00007fafb8c6f76a: add     %al,(%rax)
  0x00007fafb8c6f76c: add     %al,(%rax)
  0x00007fafb8c6f76e: add     %al,(%rax)
  0x00007fafb8c6f770: add     %al,(%rax)
  0x00007fafb8c6f772: add     %al,(%rax)
  0x00007fafb8c6f774: add     %al,(%rax)
  0x00007fafb8c6f776: add     %al,(%rax)
  0x00007fafb8c6f778: add     %al,(%rax)
  0x00007fafb8c6f77a: add     %al,(%rax)
  0x00007fafb8c6f77c: add     %al,(%rax)
  0x00007fafb8c6f77e: add     %al,(%rax)

----------------------------------------------------------------------
fstore_0  67 fstore_0  [0x00007fafb8c6f7a0, 0x00007fafb8c6f7e0]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6f7a0 Code size: 0x00000040
  0x00007fafb8c6f7a0: vmovss  (%rsp),%xmm0
  0x00007fafb8c6f7a5: add     $0x8,%rsp
  0x00007fafb8c6f7a9: vmovss  %xmm0,(%r14)
  0x00007fafb8c6f7ae: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6f7b3: incq    %r13
  0x00007fafb8c6f7b6: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c6f7c0: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6f7c4: nopl    0x0(%rax)
  0x00007fafb8c6f7c8: add     %al,(%rax)
  0x00007fafb8c6f7ca: add     %al,(%rax)
  0x00007fafb8c6f7cc: add     %al,(%rax)
  0x00007fafb8c6f7ce: add     %al,(%rax)
  0x00007fafb8c6f7d0: add     %al,(%rax)
  0x00007fafb8c6f7d2: add     %al,(%rax)
  0x00007fafb8c6f7d4: add     %al,(%rax)
  0x00007fafb8c6f7d6: add     %al,(%rax)
  0x00007fafb8c6f7d8: add     %al,(%rax)
  0x00007fafb8c6f7da: add     %al,(%rax)
  0x00007fafb8c6f7dc: add     %al,(%rax)
  0x00007fafb8c6f7de: add     %al,(%rax)

----------------------------------------------------------------------
fstore_1  68 fstore_1  [0x00007fafb8c6f800, 0x00007fafb8c6f840]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6f800 Code size: 0x00000040
  0x00007fafb8c6f800: vmovss  (%rsp),%xmm0
  0x00007fafb8c6f805: add     $0x8,%rsp
  0x00007fafb8c6f809: vmovss  %xmm0,0xfffffffffffffff8(%r14)
  0x00007fafb8c6f80f: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6f814: incq    %r13
  0x00007fafb8c6f817: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c6f821: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6f825: nop
  0x00007fafb8c6f828: add     %al,(%rax)
  0x00007fafb8c6f82a: add     %al,(%rax)
  0x00007fafb8c6f82c: add     %al,(%rax)
  0x00007fafb8c6f82e: add     %al,(%rax)
  0x00007fafb8c6f830: add     %al,(%rax)
  0x00007fafb8c6f832: add     %al,(%rax)
  0x00007fafb8c6f834: add     %al,(%rax)
  0x00007fafb8c6f836: add     %al,(%rax)
  0x00007fafb8c6f838: add     %al,(%rax)
  0x00007fafb8c6f83a: add     %al,(%rax)
  0x00007fafb8c6f83c: add     %al,(%rax)
  0x00007fafb8c6f83e: add     %al,(%rax)

----------------------------------------------------------------------
fstore_2  69 fstore_2  [0x00007fafb8c6f860, 0x00007fafb8c6f8a0]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6f860 Code size: 0x00000040
  0x00007fafb8c6f860: vmovss  (%rsp),%xmm0
  0x00007fafb8c6f865: add     $0x8,%rsp
  0x00007fafb8c6f869: vmovss  %xmm0,0xfffffffffffffff0(%r14)
  0x00007fafb8c6f86f: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6f874: incq    %r13
  0x00007fafb8c6f877: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c6f881: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6f885: nop
  0x00007fafb8c6f888: add     %al,(%rax)
  0x00007fafb8c6f88a: add     %al,(%rax)
  0x00007fafb8c6f88c: add     %al,(%rax)
  0x00007fafb8c6f88e: add     %al,(%rax)
  0x00007fafb8c6f890: add     %al,(%rax)
  0x00007fafb8c6f892: add     %al,(%rax)
  0x00007fafb8c6f894: add     %al,(%rax)
  0x00007fafb8c6f896: add     %al,(%rax)
  0x00007fafb8c6f898: add     %al,(%rax)
  0x00007fafb8c6f89a: add     %al,(%rax)
  0x00007fafb8c6f89c: add     %al,(%rax)
  0x00007fafb8c6f89e: add     %al,(%rax)

----------------------------------------------------------------------
fstore_3  70 fstore_3  [0x00007fafb8c6f8c0, 0x00007fafb8c6f900]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6f8c0 Code size: 0x00000040
  0x00007fafb8c6f8c0: vmovss  (%rsp),%xmm0
  0x00007fafb8c6f8c5: add     $0x8,%rsp
  0x00007fafb8c6f8c9: vmovss  %xmm0,0xffffffffffffffe8(%r14)
  0x00007fafb8c6f8cf: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6f8d4: incq    %r13
  0x00007fafb8c6f8d7: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c6f8e1: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6f8e5: nop
  0x00007fafb8c6f8e8: add     %al,(%rax)
  0x00007fafb8c6f8ea: add     %al,(%rax)
  0x00007fafb8c6f8ec: add     %al,(%rax)
  0x00007fafb8c6f8ee: add     %al,(%rax)
  0x00007fafb8c6f8f0: add     %al,(%rax)
  0x00007fafb8c6f8f2: add     %al,(%rax)
  0x00007fafb8c6f8f4: add     %al,(%rax)
  0x00007fafb8c6f8f6: add     %al,(%rax)
  0x00007fafb8c6f8f8: add     %al,(%rax)
  0x00007fafb8c6f8fa: add     %al,(%rax)
  0x00007fafb8c6f8fc: add     %al,(%rax)
  0x00007fafb8c6f8fe: add     %al,(%rax)

----------------------------------------------------------------------
dstore_0  71 dstore_0  [0x00007fafb8c6f920, 0x00007fafb8c6f960]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6f920 Code size: 0x00000040
  0x00007fafb8c6f920: vmovsd  (%rsp),%xmm0
  0x00007fafb8c6f925: add     $0x10,%rsp
  0x00007fafb8c6f929: vmovsd  %xmm0,0xfffffffffffffff8(%r14)
  0x00007fafb8c6f92f: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6f934: incq    %r13
  0x00007fafb8c6f937: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c6f941: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6f945: nop
  0x00007fafb8c6f948: add     %al,(%rax)
  0x00007fafb8c6f94a: add     %al,(%rax)
  0x00007fafb8c6f94c: add     %al,(%rax)
  0x00007fafb8c6f94e: add     %al,(%rax)
  0x00007fafb8c6f950: add     %al,(%rax)
  0x00007fafb8c6f952: add     %al,(%rax)
  0x00007fafb8c6f954: add     %al,(%rax)
  0x00007fafb8c6f956: add     %al,(%rax)
  0x00007fafb8c6f958: add     %al,(%rax)
  0x00007fafb8c6f95a: add     %al,(%rax)
  0x00007fafb8c6f95c: add     %al,(%rax)
  0x00007fafb8c6f95e: add     %al,(%rax)

----------------------------------------------------------------------
dstore_1  72 dstore_1  [0x00007fafb8c6f980, 0x00007fafb8c6f9c0]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6f980 Code size: 0x00000040
  0x00007fafb8c6f980: vmovsd  (%rsp),%xmm0
  0x00007fafb8c6f985: add     $0x10,%rsp
  0x00007fafb8c6f989: vmovsd  %xmm0,0xfffffffffffffff0(%r14)
  0x00007fafb8c6f98f: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6f994: incq    %r13
  0x00007fafb8c6f997: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c6f9a1: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6f9a5: nop
  0x00007fafb8c6f9a8: add     %al,(%rax)
  0x00007fafb8c6f9aa: add     %al,(%rax)
  0x00007fafb8c6f9ac: add     %al,(%rax)
  0x00007fafb8c6f9ae: add     %al,(%rax)
  0x00007fafb8c6f9b0: add     %al,(%rax)
  0x00007fafb8c6f9b2: add     %al,(%rax)
  0x00007fafb8c6f9b4: add     %al,(%rax)
  0x00007fafb8c6f9b6: add     %al,(%rax)
  0x00007fafb8c6f9b8: add     %al,(%rax)
  0x00007fafb8c6f9ba: add     %al,(%rax)
  0x00007fafb8c6f9bc: add     %al,(%rax)
  0x00007fafb8c6f9be: add     %al,(%rax)

----------------------------------------------------------------------
dstore_2  73 dstore_2  [0x00007fafb8c6f9e0, 0x00007fafb8c6fa20]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6f9e0 Code size: 0x00000040
  0x00007fafb8c6f9e0: vmovsd  (%rsp),%xmm0
  0x00007fafb8c6f9e5: add     $0x10,%rsp
  0x00007fafb8c6f9e9: vmovsd  %xmm0,0xffffffffffffffe8(%r14)
  0x00007fafb8c6f9ef: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6f9f4: incq    %r13
  0x00007fafb8c6f9f7: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c6fa01: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6fa05: nop
  0x00007fafb8c6fa08: add     %al,(%rax)
  0x00007fafb8c6fa0a: add     %al,(%rax)
  0x00007fafb8c6fa0c: add     %al,(%rax)
  0x00007fafb8c6fa0e: add     %al,(%rax)
  0x00007fafb8c6fa10: add     %al,(%rax)
  0x00007fafb8c6fa12: add     %al,(%rax)
  0x00007fafb8c6fa14: add     %al,(%rax)
  0x00007fafb8c6fa16: add     %al,(%rax)
  0x00007fafb8c6fa18: add     %al,(%rax)
  0x00007fafb8c6fa1a: add     %al,(%rax)
  0x00007fafb8c6fa1c: add     %al,(%rax)
  0x00007fafb8c6fa1e: add     %al,(%rax)

----------------------------------------------------------------------
dstore_3  74 dstore_3  [0x00007fafb8c6fa40, 0x00007fafb8c6fa80]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6fa40 Code size: 0x00000040
  0x00007fafb8c6fa40: vmovsd  (%rsp),%xmm0
  0x00007fafb8c6fa45: add     $0x10,%rsp
  0x00007fafb8c6fa49: vmovsd  %xmm0,0xffffffffffffffe0(%r14)
  0x00007fafb8c6fa4f: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6fa54: incq    %r13
  0x00007fafb8c6fa57: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c6fa61: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6fa65: nop
  0x00007fafb8c6fa68: add     %al,(%rax)
  0x00007fafb8c6fa6a: add     %al,(%rax)
  0x00007fafb8c6fa6c: add     %al,(%rax)
  0x00007fafb8c6fa6e: add     %al,(%rax)
  0x00007fafb8c6fa70: add     %al,(%rax)
  0x00007fafb8c6fa72: add     %al,(%rax)
  0x00007fafb8c6fa74: add     %al,(%rax)
  0x00007fafb8c6fa76: add     %al,(%rax)
  0x00007fafb8c6fa78: add     %al,(%rax)
  0x00007fafb8c6fa7a: add     %al,(%rax)
  0x00007fafb8c6fa7c: add     %al,(%rax)
  0x00007fafb8c6fa7e: add     %al,(%rax)

----------------------------------------------------------------------
astore_0  75 astore_0  [0x00007fafb8c6faa0, 0x00007fafb8c6fb00]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6faa0 Code size: 0x00000060
  0x00007fafb8c6faa0: push    %rax
  0x00007fafb8c6faa1: jmpq    0x7fafb8c6fadf
  0x00007fafb8c6faa6: sub     $0x8,%rsp
  0x00007fafb8c6faaa: vmovss  %xmm0,(%rsp)
  0x00007fafb8c6faaf: jmpq    0x7fafb8c6fadf
  0x00007fafb8c6fab4: sub     $0x10,%rsp
  0x00007fafb8c6fab8: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6fabd: jmpq    0x7fafb8c6fadf
  0x00007fafb8c6fac2: sub     $0x10,%rsp
  0x00007fafb8c6fac6: mov     %rax,(%rsp)
  0x00007fafb8c6faca: movabs  $0x0,%r10
  0x00007fafb8c6fad4: mov     %r10,0x8(%rsp)
  0x00007fafb8c6fad9: jmpq    0x7fafb8c6fadf
  0x00007fafb8c6fade: push    %rax
  0x00007fafb8c6fadf: pop     %rax
  0x00007fafb8c6fae0: mov     %rax,(%r14)
  0x00007fafb8c6fae3: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6fae8: incq    %r13
  0x00007fafb8c6faeb: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c6faf5: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6faf9: nopl    0x0(%rax)

----------------------------------------------------------------------
astore_1  76 astore_1  [0x00007fafb8c6fb20, 0x00007fafb8c6fb80]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6fb20 Code size: 0x00000060
  0x00007fafb8c6fb20: push    %rax
  0x00007fafb8c6fb21: jmpq    0x7fafb8c6fb5f
  0x00007fafb8c6fb26: sub     $0x8,%rsp
  0x00007fafb8c6fb2a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c6fb2f: jmpq    0x7fafb8c6fb5f
  0x00007fafb8c6fb34: sub     $0x10,%rsp
  0x00007fafb8c6fb38: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6fb3d: jmpq    0x7fafb8c6fb5f
  0x00007fafb8c6fb42: sub     $0x10,%rsp
  0x00007fafb8c6fb46: mov     %rax,(%rsp)
  0x00007fafb8c6fb4a: movabs  $0x0,%r10
  0x00007fafb8c6fb54: mov     %r10,0x8(%rsp)
  0x00007fafb8c6fb59: jmpq    0x7fafb8c6fb5f
  0x00007fafb8c6fb5e: push    %rax
  0x00007fafb8c6fb5f: pop     %rax
  0x00007fafb8c6fb60: mov     %rax,0xfffffffffffffff8(%r14)
  0x00007fafb8c6fb64: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6fb69: incq    %r13
  0x00007fafb8c6fb6c: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c6fb76: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6fb7a: nopw    0x0(%rax,%rax)

----------------------------------------------------------------------
astore_2  77 astore_2  [0x00007fafb8c6fba0, 0x00007fafb8c6fc00]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6fba0 Code size: 0x00000060
  0x00007fafb8c6fba0: push    %rax
  0x00007fafb8c6fba1: jmpq    0x7fafb8c6fbdf
  0x00007fafb8c6fba6: sub     $0x8,%rsp
  0x00007fafb8c6fbaa: vmovss  %xmm0,(%rsp)
  0x00007fafb8c6fbaf: jmpq    0x7fafb8c6fbdf
  0x00007fafb8c6fbb4: sub     $0x10,%rsp
  0x00007fafb8c6fbb8: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6fbbd: jmpq    0x7fafb8c6fbdf
  0x00007fafb8c6fbc2: sub     $0x10,%rsp
  0x00007fafb8c6fbc6: mov     %rax,(%rsp)
  0x00007fafb8c6fbca: movabs  $0x0,%r10
  0x00007fafb8c6fbd4: mov     %r10,0x8(%rsp)
  0x00007fafb8c6fbd9: jmpq    0x7fafb8c6fbdf
  0x00007fafb8c6fbde: push    %rax
  0x00007fafb8c6fbdf: pop     %rax
  0x00007fafb8c6fbe0: mov     %rax,0xfffffffffffffff0(%r14)
  0x00007fafb8c6fbe4: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6fbe9: incq    %r13
  0x00007fafb8c6fbec: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c6fbf6: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6fbfa: nopw    0x0(%rax,%rax)

----------------------------------------------------------------------
astore_3  78 astore_3  [0x00007fafb8c6fc20, 0x00007fafb8c6fc80]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6fc20 Code size: 0x00000060
  0x00007fafb8c6fc20: push    %rax
  0x00007fafb8c6fc21: jmpq    0x7fafb8c6fc5f
  0x00007fafb8c6fc26: sub     $0x8,%rsp
  0x00007fafb8c6fc2a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c6fc2f: jmpq    0x7fafb8c6fc5f
  0x00007fafb8c6fc34: sub     $0x10,%rsp
  0x00007fafb8c6fc38: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6fc3d: jmpq    0x7fafb8c6fc5f
  0x00007fafb8c6fc42: sub     $0x10,%rsp
  0x00007fafb8c6fc46: mov     %rax,(%rsp)
  0x00007fafb8c6fc4a: movabs  $0x0,%r10
  0x00007fafb8c6fc54: mov     %r10,0x8(%rsp)
  0x00007fafb8c6fc59: jmpq    0x7fafb8c6fc5f
  0x00007fafb8c6fc5e: push    %rax
  0x00007fafb8c6fc5f: pop     %rax
  0x00007fafb8c6fc60: mov     %rax,0xffffffffffffffe8(%r14)
  0x00007fafb8c6fc64: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6fc69: incq    %r13
  0x00007fafb8c6fc6c: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c6fc76: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6fc7a: nopw    0x0(%rax,%rax)

----------------------------------------------------------------------
iastore  79 iastore  [0x00007fafb8c6fca0, 0x00007fafb8c6fce0]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6fca0 Code size: 0x00000040
  0x00007fafb8c6fca0: mov     (%rsp),%eax
  0x00007fafb8c6fca3: add     $0x8,%rsp
  0x00007fafb8c6fca7: mov     (%rsp),%ebx
  0x00007fafb8c6fcaa: add     $0x8,%rsp
  0x00007fafb8c6fcae: pop     %rdx
  0x00007fafb8c6fcaf: movsxd  %ebx,%rbx
  0x00007fafb8c6fcb2: cmp     0xc(%rdx),%ebx
  0x00007fafb8c6fcb5: jb      0x7fafb8c6fcbf
  0x00007fafb8c6fcb7: mov     %rdx,%rsi
  0x00007fafb8c6fcba: jmpq    0x7fafb8c6a060
  0x00007fafb8c6fcbf: mov     %eax,0x10(%rdx,%rbx,4)
  0x00007fafb8c6fcc3: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6fcc8: incq    %r13
  0x00007fafb8c6fccb: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c6fcd5: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6fcd9: nopl    0x0(%rax)

----------------------------------------------------------------------
lastore  80 lastore  [0x00007fafb8c6fd00, 0x00007fafb8c6fd40]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6fd00 Code size: 0x00000040
  0x00007fafb8c6fd00: mov     (%rsp),%rax
  0x00007fafb8c6fd04: add     $0x10,%rsp
  0x00007fafb8c6fd08: mov     (%rsp),%ebx
  0x00007fafb8c6fd0b: add     $0x8,%rsp
  0x00007fafb8c6fd0f: pop     %rcx
  0x00007fafb8c6fd10: movsxd  %ebx,%rbx
  0x00007fafb8c6fd13: cmp     0xc(%rcx),%ebx
  0x00007fafb8c6fd16: jb      0x7fafb8c6fd20
  0x00007fafb8c6fd18: mov     %rcx,%rsi
  0x00007fafb8c6fd1b: jmpq    0x7fafb8c6a060
  0x00007fafb8c6fd20: mov     %rax,0x10(%rcx,%rbx,8)
  0x00007fafb8c6fd25: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6fd2a: incq    %r13
  0x00007fafb8c6fd2d: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c6fd37: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6fd3b: nopl    0x0(%rax,%rax)

----------------------------------------------------------------------
fastore  81 fastore  [0x00007fafb8c6fd60, 0x00007fafb8c6fda0]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6fd60 Code size: 0x00000040
  0x00007fafb8c6fd60: vmovss  (%rsp),%xmm0
  0x00007fafb8c6fd65: add     $0x8,%rsp
  0x00007fafb8c6fd69: mov     (%rsp),%ebx
  0x00007fafb8c6fd6c: add     $0x8,%rsp
  0x00007fafb8c6fd70: pop     %rdx
  0x00007fafb8c6fd71: movsxd  %ebx,%rbx
  0x00007fafb8c6fd74: cmp     0xc(%rdx),%ebx
  0x00007fafb8c6fd77: jb      0x7fafb8c6fd81
  0x00007fafb8c6fd79: mov     %rdx,%rsi
  0x00007fafb8c6fd7c: jmpq    0x7fafb8c6a060
  0x00007fafb8c6fd81: vmovss  %xmm0,0x10(%rdx,%rbx,4)
  0x00007fafb8c6fd87: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6fd8c: incq    %r13
  0x00007fafb8c6fd8f: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c6fd99: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6fd9d: nop

----------------------------------------------------------------------
dastore  82 dastore  [0x00007fafb8c6fdc0, 0x00007fafb8c6fe00]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6fdc0 Code size: 0x00000040
  0x00007fafb8c6fdc0: vmovsd  (%rsp),%xmm0
  0x00007fafb8c6fdc5: add     $0x10,%rsp
  0x00007fafb8c6fdc9: mov     (%rsp),%ebx
  0x00007fafb8c6fdcc: add     $0x8,%rsp
  0x00007fafb8c6fdd0: pop     %rdx
  0x00007fafb8c6fdd1: movsxd  %ebx,%rbx
  0x00007fafb8c6fdd4: cmp     0xc(%rdx),%ebx
  0x00007fafb8c6fdd7: jb      0x7fafb8c6fde1
  0x00007fafb8c6fdd9: mov     %rdx,%rsi
  0x00007fafb8c6fddc: jmpq    0x7fafb8c6a060
  0x00007fafb8c6fde1: vmovsd  %xmm0,0x10(%rdx,%rbx,8)
  0x00007fafb8c6fde7: movzbl  0x1(%r13),%ebx
  0x00007fafb8c6fdec: incq    %r13
  0x00007fafb8c6fdef: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c6fdf9: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c6fdfd: nop

----------------------------------------------------------------------
aastore  83 aastore  [0x00007fafb8c6fe20, 0x00007fafb8c70180]  864 bytes

Argument 0 is unknown.RIP: 0x7fafb8c6fe20 Code size: 0x00000360
  0x00007fafb8c6fe20: push    %rax
  0x00007fafb8c6fe21: jmpq    0x7fafb8c6fe5f
  0x00007fafb8c6fe26: sub     $0x8,%rsp
  0x00007fafb8c6fe2a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c6fe2f: jmpq    0x7fafb8c6fe5f
  0x00007fafb8c6fe34: sub     $0x10,%rsp
  0x00007fafb8c6fe38: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c6fe3d: jmpq    0x7fafb8c6fe5f
  0x00007fafb8c6fe42: sub     $0x10,%rsp
  0x00007fafb8c6fe46: mov     %rax,(%rsp)
  0x00007fafb8c6fe4a: movabs  $0x0,%r10
  0x00007fafb8c6fe54: mov     %r10,0x8(%rsp)
  0x00007fafb8c6fe59: jmpq    0x7fafb8c6fe5f
  0x00007fafb8c6fe5e: push    %rax
  0x00007fafb8c6fe5f: mov     (%rsp),%rax
  0x00007fafb8c6fe63: mov     0x8(%rsp),%ecx
  0x00007fafb8c6fe67: mov     0x10(%rsp),%rdx
  0x00007fafb8c6fe6c: movsxd  %ecx,%rcx
  0x00007fafb8c6fe6f: cmp     0xc(%rdx),%ecx
  0x00007fafb8c6fe72: mov     %ecx,%ebx
  0x00007fafb8c6fe74: jb      0x7fafb8c6fe7e
  0x00007fafb8c6fe76: mov     %rdx,%rsi
  0x00007fafb8c6fe79: jmpq    0x7fafb8c6a060
  0x00007fafb8c6fe7e: test    %rax,%rax
  0x00007fafb8c6fe81: je      0x7fafb8c700d7
  0x00007fafb8c6fe87: mov     0x8(%rax),%ebx
  0x00007fafb8c6fe8a: movabs  $0x800000000,%r12
  0x00007fafb8c6fe94: add     %r12,%rbx
  0x00007fafb8c6fe97: xor     %r12,%r12
  0x00007fafb8c6fe9a: mov     0x8(%rdx),%eax
  0x00007fafb8c6fe9d: movabs  $0x800000000,%r12
  0x00007fafb8c6fea7: add     %r12,%rax
  0x00007fafb8c6feaa: xor     %r12,%r12
  0x00007fafb8c6fead: mov     0xe8(%rax),%rax
  0x00007fafb8c6feb4: mov     0xffffffffffffffd8(%rbp),%rcx
  0x00007fafb8c6feb8: test    %rcx,%rcx
  0x00007fafb8c6febb: je      0x7fafb8c6ff4b
  0x00007fafb8c6fec1: mov     0x18(%rcx),%rdi
  0x00007fafb8c6fec5: cmp     %rbx,%rdi
  0x00007fafb8c6fec8: jne     0x7fafb8c6fedd
  0x00007fafb8c6fece: addq    $0x1,0x20(%rcx)
  0x00007fafb8c6fed3: sbbq    $0x0,0x20(%rcx)
  0x00007fafb8c6fed8: jmpq    0x7fafb8c6ff43
  0x00007fafb8c6fedd: test    %rdi,%rdi
  0x00007fafb8c6fee0: je      0x7fafb8c6ff1d
  0x00007fafb8c6fee6: mov     0x28(%rcx),%rdi
  0x00007fafb8c6feea: cmp     %rbx,%rdi
  0x00007fafb8c6feed: jne     0x7fafb8c6ff02
  0x00007fafb8c6fef3: addq    $0x1,0x30(%rcx)
  0x00007fafb8c6fef8: sbbq    $0x0,0x30(%rcx)
  0x00007fafb8c6fefd: jmpq    0x7fafb8c6ff43
  0x00007fafb8c6ff02: test    %rdi,%rdi
  0x00007fafb8c6ff05: jne     0x7fafb8c6ff43
  0x00007fafb8c6ff0b: mov     %rbx,0x28(%rcx)
  0x00007fafb8c6ff0f: mov     $0x1,%edi
  0x00007fafb8c6ff14: mov     %rdi,0x30(%rcx)
  0x00007fafb8c6ff18: jmpq    0x7fafb8c6ff43
  0x00007fafb8c6ff1d: cmp     0x28(%rcx),%rbx
  0x00007fafb8c6ff21: jne     0x7fafb8c6ff36
  0x00007fafb8c6ff27: addq    $0x1,0x30(%rcx)
  0x00007fafb8c6ff2c: sbbq    $0x0,0x30(%rcx)
  0x00007fafb8c6ff31: jmpq    0x7fafb8c6ff43
  0x00007fafb8c6ff36: mov     %rbx,0x18(%rcx)
  0x00007fafb8c6ff3a: mov     $0x1,%edi
  0x00007fafb8c6ff3f: mov     %rdi,0x20(%rcx)
  0x00007fafb8c6ff43: add     $0x38,%rcx
  0x00007fafb8c6ff47: mov     %rcx,0xffffffffffffffd8(%rbp)
  0x00007fafb8c6ff4b: cmp     %rax,%rbx
  0x00007fafb8c6ff4e: je      0x7fafb8c6ffae
  0x00007fafb8c6ff54: mov     0x10(%rax),%ecx
  0x00007fafb8c6ff57: cmp     (%rbx,%rcx),%rax
  0x00007fafb8c6ff5b: je      0x7fafb8c6ffae
  0x00007fafb8c6ff61: cmp     $0x20,%ecx
  0x00007fafb8c6ff64: jne     0x7fafb8c6ff8c
  0x00007fafb8c6ff6a: push    %rax
  0x00007fafb8c6ff6b: mov     %rax,%rax
  0x00007fafb8c6ff6e: push    %rdi
  0x00007fafb8c6ff6f: mov     0x28(%rbx),%rdi
  0x00007fafb8c6ff73: mov     (%rdi),%ecx
  0x00007fafb8c6ff75: add     $0x8,%rdi
  0x00007fafb8c6ff79: test    %rax,%rax
  0x00007fafb8c6ff7c: repne scasq (%rdi)
  0x00007fafb8c6ff7f: pop     %rdi
  0x00007fafb8c6ff80: pop     %rax
  0x00007fafb8c6ff81: jne     0x7fafb8c6ff8c
  0x00007fafb8c6ff83: mov     %rax,0x20(%rbx)
  0x00007fafb8c6ff87: jmpq    0x7fafb8c6ffae
  0x00007fafb8c6ff8c: mov     0xffffffffffffffd8(%rbp),%rcx
  0x00007fafb8c6ff90: test    %rcx,%rcx
  0x00007fafb8c6ff93: je      0x7fafb8c6ffa9
  0x00007fafb8c6ff99: addq    $0xffffffffffffffff,0xffffffffffffffd0(%rcx)
  0x00007fafb8c6ff9e: js      0x7fafb8c6ffa9
  0x00007fafb8c6ffa4: addq    $0x1,0xffffffffffffffd0(%rcx)
  0x00007fafb8c6ffa9: jmpq    0x7fafb8c6a10b
  0x00007fafb8c6ffae: mov     (%rsp),%rax
  0x00007fafb8c6ffb2: mov     0x8(%rsp),%ecx
  0x00007fafb8c6ffb6: lea     0x10(%rdx,%rcx,4),%rdx
  0x00007fafb8c6ffbb: cmpb    $0x0,0x30(%r15)
  0x00007fafb8c6ffc0: je      0x7fafb8c70027
  0x00007fafb8c6ffc6: mov     (%rdx),%ebx
  0x00007fafb8c6ffc8: shl     $0x3,%rbx
  0x00007fafb8c6ffcc: cmp     $0x0,%rbx
  0x00007fafb8c6ffd0: je      0x7fafb8c70027
  0x00007fafb8c6ffd6: mov     0x38(%r15),%r8
  0x00007fafb8c6ffda: cmp     $0x0,%r8
  0x00007fafb8c6ffde: je      0x7fafb8c6fff8
  0x00007fafb8c6ffe4: sub     $0x8,%r8
  0x00007fafb8c6ffe8: mov     %r8,0x38(%r15)
  0x00007fafb8c6ffec: add     0x48(%r15),%r8
  0x00007fafb8c6fff0: mov     %rbx,(%r8)
  0x00007fafb8c6fff3: jmpq    0x7fafb8c70027
  0x00007fafb8c6fff8: push    %rax
  0x00007fafb8c6fff9: push    %rdx
  0x00007fafb8c6fffa: push    %rbx
  0x00007fafb8c6fffb: mov     %r15,%rsi
  0x00007fafb8c6fffe: mov     %rbx,%rdi
  0x00007fafb8c70001: test    $0xf,%esp
  0x00007fafb8c70007: je      0x7fafb8c7001f
  0x00007fafb8c7000d: sub     $0x8,%rsp
  0x00007fafb8c70011: callq   0x7fafd7c74620
  0x00007fafb8c70016: add     $0x8,%rsp
  0x00007fafb8c7001a: jmpq    0x7fafb8c70024
  0x00007fafb8c7001f: callq   0x7fafd7c74620
  0x00007fafb8c70024: pop     %rbx
  0x00007fafb8c70025: pop     %rdx
  0x00007fafb8c70026: pop     %rax
  0x00007fafb8c70027: mov     %rax,%rbx
  0x00007fafb8c7002a: shr     $0x3,%rax
  0x00007fafb8c7002e: mov     %eax,(%rdx)
  0x00007fafb8c70030: mov     %rdx,%r8
  0x00007fafb8c70033: xor     %rbx,%r8
  0x00007fafb8c70036: shr     $0x14,%r8
  0x00007fafb8c7003a: je      0x7fafb8c700d2
  0x00007fafb8c70040: cmp     $0x0,%rbx
  0x00007fafb8c70044: je      0x7fafb8c700d2
  0x00007fafb8c7004a: mov     %rdx,%r8
  0x00007fafb8c7004d: shr     $0x9,%r8
  0x00007fafb8c70051: movabs  $0x7fafb0000000,%rbx
  0x00007fafb8c7005b: add     %rbx,%r8
  0x00007fafb8c7005e: cmpb    $0x20,(%r8)
  0x00007fafb8c70062: je      0x7fafb8c700d2
  0x00007fafb8c70068: lock addl $0x0,0xffffffffffffffc0(%rsp)
  0x00007fafb8c7006e: cmpb    $0x0,(%r8)
  0x00007fafb8c70072: je      0x7fafb8c700d2
  0x00007fafb8c70078: movb    $0x0,(%r8)
  0x00007fafb8c7007c: cmpl    $0x0,0x70(%r15)
  0x00007fafb8c70084: je      0x7fafb8c700a5
  0x00007fafb8c7008a: subl    $0x8,0x70(%r15)
  0x00007fafb8c7008f: mov     0x80(%r15),%rbx
  0x00007fafb8c70096: movsxd  0x70(%r15),%r10
  0x00007fafb8c7009a: add     %r10,%rbx
  0x00007fafb8c7009d: mov     %r8,(%rbx)
  0x00007fafb8c700a0: jmpq    0x7fafb8c700d2
  0x00007fafb8c700a5: push    %rdx
  0x00007fafb8c700a6: push    %rbx
  0x00007fafb8c700a7: mov     %r15,%rsi
  0x00007fafb8c700aa: mov     %r8,%rdi
  0x00007fafb8c700ad: test    $0xf,%esp
  0x00007fafb8c700b3: je      0x7fafb8c700cb
  0x00007fafb8c700b9: sub     $0x8,%rsp
  0x00007fafb8c700bd: callq   0x7fafd7c74650
  0x00007fafb8c700c2: add     $0x8,%rsp
  0x00007fafb8c700c6: jmpq    0x7fafb8c700d0
  0x00007fafb8c700cb: callq   0x7fafd7c74650
  0x00007fafb8c700d0: pop     %rbx
  0x00007fafb8c700d1: pop     %rdx
  0x00007fafb8c700d2: jmpq    0x7fafb8c70165
  0x00007fafb8c700d7: mov     0xffffffffffffffd8(%rbp),%rbx
  0x00007fafb8c700db: test    %rbx,%rbx
  0x00007fafb8c700de: je      0x7fafb8c700f0
  0x00007fafb8c700e4: orb     $0x1,0x1(%rbx)
  0x00007fafb8c700e8: add     $0x38,%rbx
  0x00007fafb8c700ec: mov     %rbx,0xffffffffffffffd8(%rbp)
  0x00007fafb8c700f0: lea     0x10(%rdx,%rcx,4),%rdx
  0x00007fafb8c700f5: cmpb    $0x0,0x30(%r15)
  0x00007fafb8c700fa: je      0x7fafb8c7015f
  0x00007fafb8c70100: mov     (%rdx),%ebx
  0x00007fafb8c70102: shl     $0x3,%rbx
  0x00007fafb8c70106: cmp     $0x0,%rbx
  0x00007fafb8c7010a: je      0x7fafb8c7015f
  0x00007fafb8c70110: mov     0x38(%r15),%r8
  0x00007fafb8c70114: cmp     $0x0,%r8
  0x00007fafb8c70118: je      0x7fafb8c70132
  0x00007fafb8c7011e: sub     $0x8,%r8
  0x00007fafb8c70122: mov     %r8,0x38(%r15)
  0x00007fafb8c70126: add     0x48(%r15),%r8
  0x00007fafb8c7012a: mov     %rbx,(%r8)
  0x00007fafb8c7012d: jmpq    0x7fafb8c7015f
  0x00007fafb8c70132: push    %rdx
  0x00007fafb8c70133: push    %rbx
  0x00007fafb8c70134: mov     %r15,%rsi
  0x00007fafb8c70137: mov     %rbx,%rdi
  0x00007fafb8c7013a: test    $0xf,%esp
  0x00007fafb8c70140: je      0x7fafb8c70158
  0x00007fafb8c70146: sub     $0x8,%rsp
  0x00007fafb8c7014a: callq   0x7fafd7c74620
  0x00007fafb8c7014f: add     $0x8,%rsp
  0x00007fafb8c70153: jmpq    0x7fafb8c7015d
  0x00007fafb8c70158: callq   0x7fafd7c74620
  0x00007fafb8c7015d: pop     %rbx
  0x00007fafb8c7015e: pop     %rdx
  0x00007fafb8c7015f: movl    $0x0,(%rdx)
  0x00007fafb8c70165: add     $0x18,%rsp
  0x00007fafb8c70169: movzbl  0x1(%r13),%ebx
  0x00007fafb8c7016e: incq    %r13
  0x00007fafb8c70171: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c7017b: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7017f: nop

----------------------------------------------------------------------
bastore  84 bastore  [0x00007fafb8c701a0, 0x00007fafb8c70200]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c701a0 Code size: 0x00000060
  0x00007fafb8c701a0: mov     (%rsp),%eax
  0x00007fafb8c701a3: add     $0x8,%rsp
  0x00007fafb8c701a7: mov     (%rsp),%ebx
  0x00007fafb8c701aa: add     $0x8,%rsp
  0x00007fafb8c701ae: pop     %rdx
  0x00007fafb8c701af: movsxd  %ebx,%rbx
  0x00007fafb8c701b2: cmp     0xc(%rdx),%ebx
  0x00007fafb8c701b5: jb      0x7fafb8c701bf
  0x00007fafb8c701b7: mov     %rdx,%rsi
  0x00007fafb8c701ba: jmpq    0x7fafb8c6a060
  0x00007fafb8c701bf: mov     0x8(%rdx),%ecx
  0x00007fafb8c701c2: movabs  $0x800000000,%r12
  0x00007fafb8c701cc: add     %r12,%rcx
  0x00007fafb8c701cf: xor     %r12,%r12
  0x00007fafb8c701d2: mov     0x8(%rcx),%ecx
  0x00007fafb8c701d5: test    $0x400,%ecx
  0x00007fafb8c701db: je      0x7fafb8c701e0
  0x00007fafb8c701dd: and     $0x1,%eax
  0x00007fafb8c701e0: mov     %al,0x10(%rdx,%rbx)
  0x00007fafb8c701e4: movzbl  0x1(%r13),%ebx
  0x00007fafb8c701e9: incq    %r13
  0x00007fafb8c701ec: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c701f6: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c701fa: nopw    0x0(%rax,%rax)

----------------------------------------------------------------------
castore  85 castore  [0x00007fafb8c70220, 0x00007fafb8c70260]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c70220 Code size: 0x00000040
  0x00007fafb8c70220: mov     (%rsp),%eax
  0x00007fafb8c70223: add     $0x8,%rsp
  0x00007fafb8c70227: mov     (%rsp),%ebx
  0x00007fafb8c7022a: add     $0x8,%rsp
  0x00007fafb8c7022e: pop     %rdx
  0x00007fafb8c7022f: movsxd  %ebx,%rbx
  0x00007fafb8c70232: cmp     0xc(%rdx),%ebx
  0x00007fafb8c70235: jb      0x7fafb8c7023f
  0x00007fafb8c70237: mov     %rdx,%rsi
  0x00007fafb8c7023a: jmpq    0x7fafb8c6a060
  0x00007fafb8c7023f: mov     %ax,0x10(%rdx,%rbx,2)
  0x00007fafb8c70244: movzbl  0x1(%r13),%ebx
  0x00007fafb8c70249: incq    %r13
  0x00007fafb8c7024c: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c70256: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7025a: nopw    0x0(%rax,%rax)

----------------------------------------------------------------------
sastore  86 sastore  [0x00007fafb8c70280, 0x00007fafb8c702c0]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c70280 Code size: 0x00000040
  0x00007fafb8c70280: mov     (%rsp),%eax
  0x00007fafb8c70283: add     $0x8,%rsp
  0x00007fafb8c70287: mov     (%rsp),%ebx
  0x00007fafb8c7028a: add     $0x8,%rsp
  0x00007fafb8c7028e: pop     %rdx
  0x00007fafb8c7028f: movsxd  %ebx,%rbx
  0x00007fafb8c70292: cmp     0xc(%rdx),%ebx
  0x00007fafb8c70295: jb      0x7fafb8c7029f
  0x00007fafb8c70297: mov     %rdx,%rsi
  0x00007fafb8c7029a: jmpq    0x7fafb8c6a060
  0x00007fafb8c7029f: mov     %ax,0x10(%rdx,%rbx,2)
  0x00007fafb8c702a4: movzbl  0x1(%r13),%ebx
  0x00007fafb8c702a9: incq    %r13
  0x00007fafb8c702ac: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c702b6: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c702ba: nopw    0x0(%rax,%rax)

----------------------------------------------------------------------
pop  87 pop  [0x00007fafb8c702e0, 0x00007fafb8c70340]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c702e0 Code size: 0x00000060
  0x00007fafb8c702e0: push    %rax
  0x00007fafb8c702e1: jmpq    0x7fafb8c7031f
  0x00007fafb8c702e6: sub     $0x8,%rsp
  0x00007fafb8c702ea: vmovss  %xmm0,(%rsp)
  0x00007fafb8c702ef: jmpq    0x7fafb8c7031f
  0x00007fafb8c702f4: sub     $0x10,%rsp
  0x00007fafb8c702f8: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c702fd: jmpq    0x7fafb8c7031f
  0x00007fafb8c70302: sub     $0x10,%rsp
  0x00007fafb8c70306: mov     %rax,(%rsp)
  0x00007fafb8c7030a: movabs  $0x0,%r10
  0x00007fafb8c70314: mov     %r10,0x8(%rsp)
  0x00007fafb8c70319: jmpq    0x7fafb8c7031f
  0x00007fafb8c7031e: push    %rax
  0x00007fafb8c7031f: add     $0x8,%rsp
  0x00007fafb8c70323: movzbl  0x1(%r13),%ebx
  0x00007fafb8c70328: incq    %r13
  0x00007fafb8c7032b: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c70335: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c70339: nopl    0x0(%rax)

----------------------------------------------------------------------
pop2  88 pop2  [0x00007fafb8c70360, 0x00007fafb8c703c0]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c70360 Code size: 0x00000060
  0x00007fafb8c70360: push    %rax
  0x00007fafb8c70361: jmpq    0x7fafb8c7039f
  0x00007fafb8c70366: sub     $0x8,%rsp
  0x00007fafb8c7036a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c7036f: jmpq    0x7fafb8c7039f
  0x00007fafb8c70374: sub     $0x10,%rsp
  0x00007fafb8c70378: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c7037d: jmpq    0x7fafb8c7039f
  0x00007fafb8c70382: sub     $0x10,%rsp
  0x00007fafb8c70386: mov     %rax,(%rsp)
  0x00007fafb8c7038a: movabs  $0x0,%r10
  0x00007fafb8c70394: mov     %r10,0x8(%rsp)
  0x00007fafb8c70399: jmpq    0x7fafb8c7039f
  0x00007fafb8c7039e: push    %rax
  0x00007fafb8c7039f: add     $0x10,%rsp
  0x00007fafb8c703a3: movzbl  0x1(%r13),%ebx
  0x00007fafb8c703a8: incq    %r13
  0x00007fafb8c703ab: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c703b5: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c703b9: nopl    0x0(%rax)

----------------------------------------------------------------------
dup  89 dup  [0x00007fafb8c703e0, 0x00007fafb8c70440]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c703e0 Code size: 0x00000060
  0x00007fafb8c703e0: push    %rax
  0x00007fafb8c703e1: jmpq    0x7fafb8c7041f
  0x00007fafb8c703e6: sub     $0x8,%rsp
  0x00007fafb8c703ea: vmovss  %xmm0,(%rsp)
  0x00007fafb8c703ef: jmpq    0x7fafb8c7041f
  0x00007fafb8c703f4: sub     $0x10,%rsp
  0x00007fafb8c703f8: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c703fd: jmpq    0x7fafb8c7041f
  0x00007fafb8c70402: sub     $0x10,%rsp
  0x00007fafb8c70406: mov     %rax,(%rsp)
  0x00007fafb8c7040a: movabs  $0x0,%r10
  0x00007fafb8c70414: mov     %r10,0x8(%rsp)
  0x00007fafb8c70419: jmpq    0x7fafb8c7041f
  0x00007fafb8c7041e: push    %rax
  0x00007fafb8c7041f: mov     (%rsp),%rax
  0x00007fafb8c70423: push    %rax
  0x00007fafb8c70424: movzbl  0x1(%r13),%ebx
  0x00007fafb8c70429: incq    %r13
  0x00007fafb8c7042c: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c70436: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7043a: nopw    0x0(%rax,%rax)

----------------------------------------------------------------------
dup_x1  90 dup_x1  [0x00007fafb8c70460, 0x00007fafb8c704e0]  128 bytes

Argument 0 is unknown.RIP: 0x7fafb8c70460 Code size: 0x00000080
  0x00007fafb8c70460: push    %rax
  0x00007fafb8c70461: jmpq    0x7fafb8c7049f
  0x00007fafb8c70466: sub     $0x8,%rsp
  0x00007fafb8c7046a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c7046f: jmpq    0x7fafb8c7049f
  0x00007fafb8c70474: sub     $0x10,%rsp
  0x00007fafb8c70478: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c7047d: jmpq    0x7fafb8c7049f
  0x00007fafb8c70482: sub     $0x10,%rsp
  0x00007fafb8c70486: mov     %rax,(%rsp)
  0x00007fafb8c7048a: movabs  $0x0,%r10
  0x00007fafb8c70494: mov     %r10,0x8(%rsp)
  0x00007fafb8c70499: jmpq    0x7fafb8c7049f
  0x00007fafb8c7049e: push    %rax
  0x00007fafb8c7049f: mov     (%rsp),%rax
  0x00007fafb8c704a3: mov     0x8(%rsp),%rcx
  0x00007fafb8c704a8: mov     %rax,0x8(%rsp)
  0x00007fafb8c704ad: mov     %rcx,(%rsp)
  0x00007fafb8c704b1: push    %rax
  0x00007fafb8c704b2: movzbl  0x1(%r13),%ebx
  0x00007fafb8c704b7: incq    %r13
  0x00007fafb8c704ba: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c704c4: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c704c8: add     %al,(%rax)
  0x00007fafb8c704ca: add     %al,(%rax)
  0x00007fafb8c704cc: add     %al,(%rax)
  0x00007fafb8c704ce: add     %al,(%rax)
  0x00007fafb8c704d0: add     %al,(%rax)
  0x00007fafb8c704d2: add     %al,(%rax)
  0x00007fafb8c704d4: add     %al,(%rax)
  0x00007fafb8c704d6: add     %al,(%rax)
  0x00007fafb8c704d8: add     %al,(%rax)
  0x00007fafb8c704da: add     %al,(%rax)
  0x00007fafb8c704dc: add     %al,(%rax)
  0x00007fafb8c704de: add     %al,(%rax)

----------------------------------------------------------------------
dup_x2  91 dup_x2  [0x00007fafb8c70500, 0x00007fafb8c70580]  128 bytes

Argument 0 is unknown.RIP: 0x7fafb8c70500 Code size: 0x00000080
  0x00007fafb8c70500: push    %rax
  0x00007fafb8c70501: jmpq    0x7fafb8c7053f
  0x00007fafb8c70506: sub     $0x8,%rsp
  0x00007fafb8c7050a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c7050f: jmpq    0x7fafb8c7053f
  0x00007fafb8c70514: sub     $0x10,%rsp
  0x00007fafb8c70518: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c7051d: jmpq    0x7fafb8c7053f
  0x00007fafb8c70522: sub     $0x10,%rsp
  0x00007fafb8c70526: mov     %rax,(%rsp)
  0x00007fafb8c7052a: movabs  $0x0,%r10
  0x00007fafb8c70534: mov     %r10,0x8(%rsp)
  0x00007fafb8c70539: jmpq    0x7fafb8c7053f
  0x00007fafb8c7053e: push    %rax
  0x00007fafb8c7053f: mov     (%rsp),%rax
  0x00007fafb8c70543: mov     0x10(%rsp),%rcx
  0x00007fafb8c70548: mov     %rax,0x10(%rsp)
  0x00007fafb8c7054d: push    %rax
  0x00007fafb8c7054e: mov     0x10(%rsp),%rax
  0x00007fafb8c70553: mov     %rcx,0x10(%rsp)
  0x00007fafb8c70558: mov     %rax,0x8(%rsp)
  0x00007fafb8c7055d: movzbl  0x1(%r13),%ebx
  0x00007fafb8c70562: incq    %r13
  0x00007fafb8c70565: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c7056f: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c70573: nopl    0x0(%rax,%rax)
  0x00007fafb8c70578: add     %al,(%rax)
  0x00007fafb8c7057a: add     %al,(%rax)
  0x00007fafb8c7057c: add     %al,(%rax)
  0x00007fafb8c7057e: add     %al,(%rax)

----------------------------------------------------------------------
dup2  92 dup2  [0x00007fafb8c705a0, 0x00007fafb8c70620]  128 bytes

Argument 0 is unknown.RIP: 0x7fafb8c705a0 Code size: 0x00000080
  0x00007fafb8c705a0: push    %rax
  0x00007fafb8c705a1: jmpq    0x7fafb8c705df
  0x00007fafb8c705a6: sub     $0x8,%rsp
  0x00007fafb8c705aa: vmovss  %xmm0,(%rsp)
  0x00007fafb8c705af: jmpq    0x7fafb8c705df
  0x00007fafb8c705b4: sub     $0x10,%rsp
  0x00007fafb8c705b8: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c705bd: jmpq    0x7fafb8c705df
  0x00007fafb8c705c2: sub     $0x10,%rsp
  0x00007fafb8c705c6: mov     %rax,(%rsp)
  0x00007fafb8c705ca: movabs  $0x0,%r10
  0x00007fafb8c705d4: mov     %r10,0x8(%rsp)
  0x00007fafb8c705d9: jmpq    0x7fafb8c705df
  0x00007fafb8c705de: push    %rax
  0x00007fafb8c705df: mov     0x8(%rsp),%rax
  0x00007fafb8c705e4: push    %rax
  0x00007fafb8c705e5: mov     0x8(%rsp),%rax
  0x00007fafb8c705ea: push    %rax
  0x00007fafb8c705eb: movzbl  0x1(%r13),%ebx
  0x00007fafb8c705f0: incq    %r13
  0x00007fafb8c705f3: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c705fd: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c70601: nopl    0x0(%rax)
  0x00007fafb8c70608: add     %al,(%rax)
  0x00007fafb8c7060a: add     %al,(%rax)
  0x00007fafb8c7060c: add     %al,(%rax)
  0x00007fafb8c7060e: add     %al,(%rax)
  0x00007fafb8c70610: add     %al,(%rax)
  0x00007fafb8c70612: add     %al,(%rax)
  0x00007fafb8c70614: add     %al,(%rax)
  0x00007fafb8c70616: add     %al,(%rax)
  0x00007fafb8c70618: add     %al,(%rax)
  0x00007fafb8c7061a: add     %al,(%rax)
  0x00007fafb8c7061c: add     %al,(%rax)
  0x00007fafb8c7061e: add     %al,(%rax)

----------------------------------------------------------------------
dup2_x1  93 dup2_x1  [0x00007fafb8c70640, 0x00007fafb8c706c0]  128 bytes

Argument 0 is unknown.RIP: 0x7fafb8c70640 Code size: 0x00000080
  0x00007fafb8c70640: push    %rax
  0x00007fafb8c70641: jmpq    0x7fafb8c7067f
  0x00007fafb8c70646: sub     $0x8,%rsp
  0x00007fafb8c7064a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c7064f: jmpq    0x7fafb8c7067f
  0x00007fafb8c70654: sub     $0x10,%rsp
  0x00007fafb8c70658: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c7065d: jmpq    0x7fafb8c7067f
  0x00007fafb8c70662: sub     $0x10,%rsp
  0x00007fafb8c70666: mov     %rax,(%rsp)
  0x00007fafb8c7066a: movabs  $0x0,%r10
  0x00007fafb8c70674: mov     %r10,0x8(%rsp)
  0x00007fafb8c70679: jmpq    0x7fafb8c7067f
  0x00007fafb8c7067e: push    %rax
  0x00007fafb8c7067f: mov     (%rsp),%rcx
  0x00007fafb8c70683: mov     0x8(%rsp),%rax
  0x00007fafb8c70688: push    %rax
  0x00007fafb8c70689: push    %rcx
  0x00007fafb8c7068a: mov     %rcx,0x18(%rsp)
  0x00007fafb8c7068f: mov     0x20(%rsp),%rcx
  0x00007fafb8c70694: mov     %rcx,0x10(%rsp)
  0x00007fafb8c70699: mov     %rax,0x20(%rsp)
  0x00007fafb8c7069e: movzbl  0x1(%r13),%ebx
  0x00007fafb8c706a3: incq    %r13
  0x00007fafb8c706a6: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c706b0: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c706b4: nopl    0x0(%rax)
  0x00007fafb8c706b8: add     %al,(%rax)
  0x00007fafb8c706ba: add     %al,(%rax)
  0x00007fafb8c706bc: add     %al,(%rax)
  0x00007fafb8c706be: add     %al,(%rax)

----------------------------------------------------------------------
dup2_x2  94 dup2_x2  [0x00007fafb8c706e0, 0x00007fafb8c70780]  160 bytes

Argument 0 is unknown.RIP: 0x7fafb8c706e0 Code size: 0x000000a0
  0x00007fafb8c706e0: push    %rax
  0x00007fafb8c706e1: jmpq    0x7fafb8c7071f
  0x00007fafb8c706e6: sub     $0x8,%rsp
  0x00007fafb8c706ea: vmovss  %xmm0,(%rsp)
  0x00007fafb8c706ef: jmpq    0x7fafb8c7071f
  0x00007fafb8c706f4: sub     $0x10,%rsp
  0x00007fafb8c706f8: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c706fd: jmpq    0x7fafb8c7071f
  0x00007fafb8c70702: sub     $0x10,%rsp
  0x00007fafb8c70706: mov     %rax,(%rsp)
  0x00007fafb8c7070a: movabs  $0x0,%r10
  0x00007fafb8c70714: mov     %r10,0x8(%rsp)
  0x00007fafb8c70719: jmpq    0x7fafb8c7071f
  0x00007fafb8c7071e: push    %rax
  0x00007fafb8c7071f: mov     (%rsp),%rcx
  0x00007fafb8c70723: mov     0x8(%rsp),%rax
  0x00007fafb8c70728: push    %rax
  0x00007fafb8c70729: push    %rcx
  0x00007fafb8c7072a: mov     0x20(%rsp),%rax
  0x00007fafb8c7072f: mov     %rax,0x10(%rsp)
  0x00007fafb8c70734: mov     %rcx,0x20(%rsp)
  0x00007fafb8c70739: mov     0x28(%rsp),%rcx
  0x00007fafb8c7073e: mov     0x18(%rsp),%rax
  0x00007fafb8c70743: mov     %rcx,0x18(%rsp)
  0x00007fafb8c70748: mov     %rax,0x28(%rsp)
  0x00007fafb8c7074d: movzbl  0x1(%r13),%ebx
  0x00007fafb8c70752: incq    %r13
  0x00007fafb8c70755: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c7075f: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c70763: nopl    0x0(%rax,%rax)
  0x00007fafb8c70768: add     %al,(%rax)
  0x00007fafb8c7076a: add     %al,(%rax)
  0x00007fafb8c7076c: add     %al,(%rax)
  0x00007fafb8c7076e: add     %al,(%rax)
  0x00007fafb8c70770: add     %al,(%rax)
  0x00007fafb8c70772: add     %al,(%rax)
  0x00007fafb8c70774: add     %al,(%rax)
  0x00007fafb8c70776: add     %al,(%rax)
  0x00007fafb8c70778: add     %al,(%rax)
  0x00007fafb8c7077a: add     %al,(%rax)
  0x00007fafb8c7077c: add     %al,(%rax)
  0x00007fafb8c7077e: add     %al,(%rax)

----------------------------------------------------------------------
swap  95 swap  [0x00007fafb8c707a0, 0x00007fafb8c70820]  128 bytes

Argument 0 is unknown.RIP: 0x7fafb8c707a0 Code size: 0x00000080
  0x00007fafb8c707a0: push    %rax
  0x00007fafb8c707a1: jmpq    0x7fafb8c707df
  0x00007fafb8c707a6: sub     $0x8,%rsp
  0x00007fafb8c707aa: vmovss  %xmm0,(%rsp)
  0x00007fafb8c707af: jmpq    0x7fafb8c707df
  0x00007fafb8c707b4: sub     $0x10,%rsp
  0x00007fafb8c707b8: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c707bd: jmpq    0x7fafb8c707df
  0x00007fafb8c707c2: sub     $0x10,%rsp
  0x00007fafb8c707c6: mov     %rax,(%rsp)
  0x00007fafb8c707ca: movabs  $0x0,%r10
  0x00007fafb8c707d4: mov     %r10,0x8(%rsp)
  0x00007fafb8c707d9: jmpq    0x7fafb8c707df
  0x00007fafb8c707de: push    %rax
  0x00007fafb8c707df: mov     0x8(%rsp),%rcx
  0x00007fafb8c707e4: mov     (%rsp),%rax
  0x00007fafb8c707e8: mov     %rcx,(%rsp)
  0x00007fafb8c707ec: mov     %rax,0x8(%rsp)
  0x00007fafb8c707f1: movzbl  0x1(%r13),%ebx
  0x00007fafb8c707f6: incq    %r13
  0x00007fafb8c707f9: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c70803: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c70807: nop
  0x00007fafb8c70808: add     %al,(%rax)
  0x00007fafb8c7080a: add     %al,(%rax)
  0x00007fafb8c7080c: add     %al,(%rax)
  0x00007fafb8c7080e: add     %al,(%rax)
  0x00007fafb8c70810: add     %al,(%rax)
  0x00007fafb8c70812: add     %al,(%rax)
  0x00007fafb8c70814: add     %al,(%rax)
  0x00007fafb8c70816: add     %al,(%rax)
  0x00007fafb8c70818: add     %al,(%rax)
  0x00007fafb8c7081a: add     %al,(%rax)
  0x00007fafb8c7081c: add     %al,(%rax)
  0x00007fafb8c7081e: add     %al,(%rax)

----------------------------------------------------------------------
iadd  96 iadd  [0x00007fafb8c70840, 0x00007fafb8c70880]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c70840 Code size: 0x00000040
  0x00007fafb8c70840: mov     (%rsp),%eax
  0x00007fafb8c70843: add     $0x8,%rsp
  0x00007fafb8c70847: mov     (%rsp),%edx
  0x00007fafb8c7084a: add     $0x8,%rsp
  0x00007fafb8c7084e: add     %edx,%eax
  0x00007fafb8c70850: movzbl  0x1(%r13),%ebx
  0x00007fafb8c70855: incq    %r13
  0x00007fafb8c70858: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c70862: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c70866: nop
  0x00007fafb8c70868: add     %al,(%rax)
  0x00007fafb8c7086a: add     %al,(%rax)
  0x00007fafb8c7086c: add     %al,(%rax)
  0x00007fafb8c7086e: add     %al,(%rax)
  0x00007fafb8c70870: add     %al,(%rax)
  0x00007fafb8c70872: add     %al,(%rax)
  0x00007fafb8c70874: add     %al,(%rax)
  0x00007fafb8c70876: add     %al,(%rax)
  0x00007fafb8c70878: add     %al,(%rax)
  0x00007fafb8c7087a: add     %al,(%rax)
  0x00007fafb8c7087c: add     %al,(%rax)
  0x00007fafb8c7087e: add     %al,(%rax)

----------------------------------------------------------------------
ladd  97 ladd  [0x00007fafb8c708a0, 0x00007fafb8c708e0]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c708a0 Code size: 0x00000040
  0x00007fafb8c708a0: mov     (%rsp),%rax
  0x00007fafb8c708a4: add     $0x10,%rsp
  0x00007fafb8c708a8: mov     (%rsp),%rdx
  0x00007fafb8c708ac: add     $0x10,%rsp
  0x00007fafb8c708b0: add     %rdx,%rax
  0x00007fafb8c708b3: movzbl  0x1(%r13),%ebx
  0x00007fafb8c708b8: incq    %r13
  0x00007fafb8c708bb: movabs  $0x7fafd89a6080,%r10
  0x00007fafb8c708c5: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c708c9: nopl    0x0(%rax)
  0x00007fafb8c708d0: add     %al,(%rax)
  0x00007fafb8c708d2: add     %al,(%rax)
  0x00007fafb8c708d4: add     %al,(%rax)
  0x00007fafb8c708d6: add     %al,(%rax)
  0x00007fafb8c708d8: add     %al,(%rax)
  0x00007fafb8c708da: add     %al,(%rax)
  0x00007fafb8c708dc: add     %al,(%rax)
  0x00007fafb8c708de: add     %al,(%rax)

----------------------------------------------------------------------
fadd  98 fadd  [0x00007fafb8c70900, 0x00007fafb8c70940]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c70900 Code size: 0x00000040
  0x00007fafb8c70900: vmovss  (%rsp),%xmm0
  0x00007fafb8c70905: add     $0x8,%rsp
  0x00007fafb8c70909: vaddss  (%rsp),%xmm0,%xmm0
  0x00007fafb8c7090e: add     $0x8,%rsp
  0x00007fafb8c70912: movzbl  0x1(%r13),%ebx
  0x00007fafb8c70917: incq    %r13
  0x00007fafb8c7091a: movabs  $0x7fafd89a6880,%r10
  0x00007fafb8c70924: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c70928: add     %al,(%rax)
  0x00007fafb8c7092a: add     %al,(%rax)
  0x00007fafb8c7092c: add     %al,(%rax)
  0x00007fafb8c7092e: add     %al,(%rax)
  0x00007fafb8c70930: add     %al,(%rax)
  0x00007fafb8c70932: add     %al,(%rax)
  0x00007fafb8c70934: add     %al,(%rax)
  0x00007fafb8c70936: add     %al,(%rax)
  0x00007fafb8c70938: add     %al,(%rax)
  0x00007fafb8c7093a: add     %al,(%rax)
  0x00007fafb8c7093c: add     %al,(%rax)
  0x00007fafb8c7093e: add     %al,(%rax)

----------------------------------------------------------------------
dadd  99 dadd  [0x00007fafb8c70960, 0x00007fafb8c709a0]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c70960 Code size: 0x00000040
  0x00007fafb8c70960: vmovsd  (%rsp),%xmm0
  0x00007fafb8c70965: add     $0x10,%rsp
  0x00007fafb8c70969: vaddsd  (%rsp),%xmm0,%xmm0
  0x00007fafb8c7096e: add     $0x10,%rsp
  0x00007fafb8c70972: movzbl  0x1(%r13),%ebx
  0x00007fafb8c70977: incq    %r13
  0x00007fafb8c7097a: movabs  $0x7fafd89a7080,%r10
  0x00007fafb8c70984: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c70988: add     %al,(%rax)
  0x00007fafb8c7098a: add     %al,(%rax)
  0x00007fafb8c7098c: add     %al,(%rax)
  0x00007fafb8c7098e: add     %al,(%rax)
  0x00007fafb8c70990: add     %al,(%rax)
  0x00007fafb8c70992: add     %al,(%rax)
  0x00007fafb8c70994: add     %al,(%rax)
  0x00007fafb8c70996: add     %al,(%rax)
  0x00007fafb8c70998: add     %al,(%rax)
  0x00007fafb8c7099a: add     %al,(%rax)
  0x00007fafb8c7099c: add     %al,(%rax)
  0x00007fafb8c7099e: add     %al,(%rax)

----------------------------------------------------------------------
isub  100 isub  [0x00007fafb8c709c0, 0x00007fafb8c70a00]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c709c0 Code size: 0x00000040
  0x00007fafb8c709c0: mov     (%rsp),%eax
  0x00007fafb8c709c3: add     $0x8,%rsp
  0x00007fafb8c709c7: mov     %eax,%edx
  0x00007fafb8c709c9: mov     (%rsp),%eax
  0x00007fafb8c709cc: add     $0x8,%rsp
  0x00007fafb8c709d0: sub     %edx,%eax
  0x00007fafb8c709d2: movzbl  0x1(%r13),%ebx
  0x00007fafb8c709d7: incq    %r13
  0x00007fafb8c709da: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c709e4: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c709e8: add     %al,(%rax)
  0x00007fafb8c709ea: add     %al,(%rax)
  0x00007fafb8c709ec: add     %al,(%rax)
  0x00007fafb8c709ee: add     %al,(%rax)
  0x00007fafb8c709f0: add     %al,(%rax)
  0x00007fafb8c709f2: add     %al,(%rax)
  0x00007fafb8c709f4: add     %al,(%rax)
  0x00007fafb8c709f6: add     %al,(%rax)
  0x00007fafb8c709f8: add     %al,(%rax)
  0x00007fafb8c709fa: add     %al,(%rax)
  0x00007fafb8c709fc: add     %al,(%rax)
  0x00007fafb8c709fe: add     %al,(%rax)

----------------------------------------------------------------------
lsub  101 lsub  [0x00007fafb8c70a20, 0x00007fafb8c70a60]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c70a20 Code size: 0x00000040
  0x00007fafb8c70a20: mov     (%rsp),%rax
  0x00007fafb8c70a24: add     $0x10,%rsp
  0x00007fafb8c70a28: mov     %rax,%rdx
  0x00007fafb8c70a2b: mov     (%rsp),%rax
  0x00007fafb8c70a2f: add     $0x10,%rsp
  0x00007fafb8c70a33: sub     %rdx,%rax
  0x00007fafb8c70a36: movzbl  0x1(%r13),%ebx
  0x00007fafb8c70a3b: incq    %r13
  0x00007fafb8c70a3e: movabs  $0x7fafd89a6080,%r10
  0x00007fafb8c70a48: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c70a4c: nopl    0x0(%rax)
  0x00007fafb8c70a50: add     %al,(%rax)
  0x00007fafb8c70a52: add     %al,(%rax)
  0x00007fafb8c70a54: add     %al,(%rax)
  0x00007fafb8c70a56: add     %al,(%rax)
  0x00007fafb8c70a58: add     %al,(%rax)
  0x00007fafb8c70a5a: add     %al,(%rax)
  0x00007fafb8c70a5c: add     %al,(%rax)
  0x00007fafb8c70a5e: add     %al,(%rax)

----------------------------------------------------------------------
fsub  102 fsub  [0x00007fafb8c70a80, 0x00007fafb8c70ac0]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c70a80 Code size: 0x00000040
  0x00007fafb8c70a80: vmovss  (%rsp),%xmm0
  0x00007fafb8c70a85: add     $0x8,%rsp
  0x00007fafb8c70a89: vmovaps %xmm0,%xmm1
  0x00007fafb8c70a8d: vmovss  (%rsp),%xmm0
  0x00007fafb8c70a92: add     $0x8,%rsp
  0x00007fafb8c70a96: vsubss  %xmm1,%xmm0,%xmm0
  0x00007fafb8c70a9a: movzbl  0x1(%r13),%ebx
  0x00007fafb8c70a9f: incq    %r13
  0x00007fafb8c70aa2: movabs  $0x7fafd89a6880,%r10
  0x00007fafb8c70aac: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c70ab0: add     %al,(%rax)
  0x00007fafb8c70ab2: add     %al,(%rax)
  0x00007fafb8c70ab4: add     %al,(%rax)
  0x00007fafb8c70ab6: add     %al,(%rax)
  0x00007fafb8c70ab8: add     %al,(%rax)
  0x00007fafb8c70aba: add     %al,(%rax)
  0x00007fafb8c70abc: add     %al,(%rax)
  0x00007fafb8c70abe: add     %al,(%rax)

----------------------------------------------------------------------
dsub  103 dsub  [0x00007fafb8c70ae0, 0x00007fafb8c70b20]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c70ae0 Code size: 0x00000040
  0x00007fafb8c70ae0: vmovsd  (%rsp),%xmm0
  0x00007fafb8c70ae5: add     $0x10,%rsp
  0x00007fafb8c70ae9: vmovapd %xmm0,%xmm1
  0x00007fafb8c70aed: vmovsd  (%rsp),%xmm0
  0x00007fafb8c70af2: add     $0x10,%rsp
  0x00007fafb8c70af6: vsubsd  %xmm1,%xmm0,%xmm0
  0x00007fafb8c70afa: movzbl  0x1(%r13),%ebx
  0x00007fafb8c70aff: incq    %r13
  0x00007fafb8c70b02: movabs  $0x7fafd89a7080,%r10
  0x00007fafb8c70b0c: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c70b10: add     %al,(%rax)
  0x00007fafb8c70b12: add     %al,(%rax)
  0x00007fafb8c70b14: add     %al,(%rax)
  0x00007fafb8c70b16: add     %al,(%rax)
  0x00007fafb8c70b18: add     %al,(%rax)
  0x00007fafb8c70b1a: add     %al,(%rax)
  0x00007fafb8c70b1c: add     %al,(%rax)
  0x00007fafb8c70b1e: add     %al,(%rax)

----------------------------------------------------------------------
imul  104 imul  [0x00007fafb8c70b40, 0x00007fafb8c70b80]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c70b40 Code size: 0x00000040
  0x00007fafb8c70b40: mov     (%rsp),%eax
  0x00007fafb8c70b43: add     $0x8,%rsp
  0x00007fafb8c70b47: mov     (%rsp),%edx
  0x00007fafb8c70b4a: add     $0x8,%rsp
  0x00007fafb8c70b4e: imull   %edx,%eax
  0x00007fafb8c70b51: movzbl  0x1(%r13),%ebx
  0x00007fafb8c70b56: incq    %r13
  0x00007fafb8c70b59: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c70b63: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c70b67: nop
  0x00007fafb8c70b68: add     %al,(%rax)
  0x00007fafb8c70b6a: add     %al,(%rax)
  0x00007fafb8c70b6c: add     %al,(%rax)
  0x00007fafb8c70b6e: add     %al,(%rax)
  0x00007fafb8c70b70: add     %al,(%rax)
  0x00007fafb8c70b72: add     %al,(%rax)
  0x00007fafb8c70b74: add     %al,(%rax)
  0x00007fafb8c70b76: add     %al,(%rax)
  0x00007fafb8c70b78: add     %al,(%rax)
  0x00007fafb8c70b7a: add     %al,(%rax)
  0x00007fafb8c70b7c: add     %al,(%rax)
  0x00007fafb8c70b7e: add     %al,(%rax)

----------------------------------------------------------------------
lmul  105 lmul  [0x00007fafb8c70ba0, 0x00007fafb8c70be0]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c70ba0 Code size: 0x00000040
  0x00007fafb8c70ba0: mov     (%rsp),%rax
  0x00007fafb8c70ba4: add     $0x10,%rsp
  0x00007fafb8c70ba8: mov     (%rsp),%rdx
  0x00007fafb8c70bac: add     $0x10,%rsp
  0x00007fafb8c70bb0: imulq   %rdx,%rax
  0x00007fafb8c70bb4: movzbl  0x1(%r13),%ebx
  0x00007fafb8c70bb9: incq    %r13
  0x00007fafb8c70bbc: movabs  $0x7fafd89a6080,%r10
  0x00007fafb8c70bc6: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c70bca: nopw    0x0(%rax,%rax)
  0x00007fafb8c70bd0: add     %al,(%rax)
  0x00007fafb8c70bd2: add     %al,(%rax)
  0x00007fafb8c70bd4: add     %al,(%rax)
  0x00007fafb8c70bd6: add     %al,(%rax)
  0x00007fafb8c70bd8: add     %al,(%rax)
  0x00007fafb8c70bda: add     %al,(%rax)
  0x00007fafb8c70bdc: add     %al,(%rax)
  0x00007fafb8c70bde: add     %al,(%rax)

----------------------------------------------------------------------
fmul  106 fmul  [0x00007fafb8c70c00, 0x00007fafb8c70c40]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c70c00 Code size: 0x00000040
  0x00007fafb8c70c00: vmovss  (%rsp),%xmm0
  0x00007fafb8c70c05: add     $0x8,%rsp
  0x00007fafb8c70c09: vmulss  (%rsp),%xmm0,%xmm0
  0x00007fafb8c70c0e: add     $0x8,%rsp
  0x00007fafb8c70c12: movzbl  0x1(%r13),%ebx
  0x00007fafb8c70c17: incq    %r13
  0x00007fafb8c70c1a: movabs  $0x7fafd89a6880,%r10
  0x00007fafb8c70c24: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c70c28: add     %al,(%rax)
  0x00007fafb8c70c2a: add     %al,(%rax)
  0x00007fafb8c70c2c: add     %al,(%rax)
  0x00007fafb8c70c2e: add     %al,(%rax)
  0x00007fafb8c70c30: add     %al,(%rax)
  0x00007fafb8c70c32: add     %al,(%rax)
  0x00007fafb8c70c34: add     %al,(%rax)
  0x00007fafb8c70c36: add     %al,(%rax)
  0x00007fafb8c70c38: add     %al,(%rax)
  0x00007fafb8c70c3a: add     %al,(%rax)
  0x00007fafb8c70c3c: add     %al,(%rax)
  0x00007fafb8c70c3e: add     %al,(%rax)

----------------------------------------------------------------------
dmul  107 dmul  [0x00007fafb8c70c60, 0x00007fafb8c70ca0]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c70c60 Code size: 0x00000040
  0x00007fafb8c70c60: vmovsd  (%rsp),%xmm0
  0x00007fafb8c70c65: add     $0x10,%rsp
  0x00007fafb8c70c69: vmulsd  (%rsp),%xmm0,%xmm0
  0x00007fafb8c70c6e: add     $0x10,%rsp
  0x00007fafb8c70c72: movzbl  0x1(%r13),%ebx
  0x00007fafb8c70c77: incq    %r13
  0x00007fafb8c70c7a: movabs  $0x7fafd89a7080,%r10
  0x00007fafb8c70c84: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c70c88: add     %al,(%rax)
  0x00007fafb8c70c8a: add     %al,(%rax)
  0x00007fafb8c70c8c: add     %al,(%rax)
  0x00007fafb8c70c8e: add     %al,(%rax)
  0x00007fafb8c70c90: add     %al,(%rax)
  0x00007fafb8c70c92: add     %al,(%rax)
  0x00007fafb8c70c94: add     %al,(%rax)
  0x00007fafb8c70c96: add     %al,(%rax)
  0x00007fafb8c70c98: add     %al,(%rax)
  0x00007fafb8c70c9a: add     %al,(%rax)
  0x00007fafb8c70c9c: add     %al,(%rax)
  0x00007fafb8c70c9e: add     %al,(%rax)

----------------------------------------------------------------------
idiv  108 idiv  [0x00007fafb8c70cc0, 0x00007fafb8c70d00]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c70cc0 Code size: 0x00000040
  0x00007fafb8c70cc0: mov     (%rsp),%eax
  0x00007fafb8c70cc3: add     $0x8,%rsp
  0x00007fafb8c70cc7: mov     %eax,%ecx
  0x00007fafb8c70cc9: mov     (%rsp),%eax
  0x00007fafb8c70ccc: add     $0x8,%rsp
  0x00007fafb8c70cd0: cmp     $0x80000000,%eax
  0x00007fafb8c70cd6: jne     0x7fafb8c70ce7
  0x00007fafb8c70cdc: xor     %edx,%edx
  0x00007fafb8c70cde: cmp     $0xffffffff,%ecx
  0x00007fafb8c70ce1: je      0x7fafb8c70cea
  0x00007fafb8c70ce7: cltd
  0x00007fafb8c70ce8: idivl   %ecx,%eax
  0x00007fafb8c70cea: movzbl  0x1(%r13),%ebx
  0x00007fafb8c70cef: incq    %r13
  0x00007fafb8c70cf2: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c70cfc: jmpq    *(%r10,%rbx,8)

----------------------------------------------------------------------
ldiv  109 ldiv  [0x00007fafb8c70d20, 0x00007fafb8c70d80]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c70d20 Code size: 0x00000060
  0x00007fafb8c70d20: mov     (%rsp),%rax
  0x00007fafb8c70d24: add     $0x10,%rsp
  0x00007fafb8c70d28: mov     %rax,%rcx
  0x00007fafb8c70d2b: mov     (%rsp),%rax
  0x00007fafb8c70d2f: add     $0x10,%rsp
  0x00007fafb8c70d33: test    %rcx,%rcx
  0x00007fafb8c70d36: je      0x7fafb8c6a1db
  0x00007fafb8c70d3c: cmp     0x1f7cb41d(%rip),%rax
  0x00007fafb8c70d43: jne     0x7fafb8c70d55
  0x00007fafb8c70d49: xor     %edx,%edx
  0x00007fafb8c70d4b: cmp     $0xffffffffffffffff,%rcx
  0x00007fafb8c70d4f: je      0x7fafb8c70d5a
  0x00007fafb8c70d55: cqto
  0x00007fafb8c70d57: idivq   %rcx,%rax
  0x00007fafb8c70d5a: movzbl  0x1(%r13),%ebx
  0x00007fafb8c70d5f: incq    %r13
  0x00007fafb8c70d62: movabs  $0x7fafd89a6080,%r10
  0x00007fafb8c70d6c: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c70d70: add     %al,(%rax)
  0x00007fafb8c70d72: add     %al,(%rax)
  0x00007fafb8c70d74: add     %al,(%rax)
  0x00007fafb8c70d76: add     %al,(%rax)
  0x00007fafb8c70d78: add     %al,(%rax)
  0x00007fafb8c70d7a: add     %al,(%rax)
  0x00007fafb8c70d7c: add     %al,(%rax)
  0x00007fafb8c70d7e: add     %al,(%rax)

----------------------------------------------------------------------
fdiv  110 fdiv  [0x00007fafb8c70da0, 0x00007fafb8c70de0]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c70da0 Code size: 0x00000040
  0x00007fafb8c70da0: vmovss  (%rsp),%xmm0
  0x00007fafb8c70da5: add     $0x8,%rsp
  0x00007fafb8c70da9: vmovaps %xmm0,%xmm1
  0x00007fafb8c70dad: vmovss  (%rsp),%xmm0
  0x00007fafb8c70db2: add     $0x8,%rsp
  0x00007fafb8c70db6: vdivss  %xmm1,%xmm0,%xmm0
  0x00007fafb8c70dba: movzbl  0x1(%r13),%ebx
  0x00007fafb8c70dbf: incq    %r13
  0x00007fafb8c70dc2: movabs  $0x7fafd89a6880,%r10
  0x00007fafb8c70dcc: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c70dd0: add     %al,(%rax)
  0x00007fafb8c70dd2: add     %al,(%rax)
  0x00007fafb8c70dd4: add     %al,(%rax)
  0x00007fafb8c70dd6: add     %al,(%rax)
  0x00007fafb8c70dd8: add     %al,(%rax)
  0x00007fafb8c70dda: add     %al,(%rax)
  0x00007fafb8c70ddc: add     %al,(%rax)
  0x00007fafb8c70dde: add     %al,(%rax)

----------------------------------------------------------------------
ddiv  111 ddiv  [0x00007fafb8c70e00, 0x00007fafb8c70e40]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c70e00 Code size: 0x00000040
  0x00007fafb8c70e00: vmovsd  (%rsp),%xmm0
  0x00007fafb8c70e05: add     $0x10,%rsp
  0x00007fafb8c70e09: vmovapd %xmm0,%xmm1
  0x00007fafb8c70e0d: vmovsd  (%rsp),%xmm0
  0x00007fafb8c70e12: add     $0x10,%rsp
  0x00007fafb8c70e16: vdivsd  %xmm1,%xmm0,%xmm0
  0x00007fafb8c70e1a: movzbl  0x1(%r13),%ebx
  0x00007fafb8c70e1f: incq    %r13
  0x00007fafb8c70e22: movabs  $0x7fafd89a7080,%r10
  0x00007fafb8c70e2c: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c70e30: add     %al,(%rax)
  0x00007fafb8c70e32: add     %al,(%rax)
  0x00007fafb8c70e34: add     %al,(%rax)
  0x00007fafb8c70e36: add     %al,(%rax)
  0x00007fafb8c70e38: add     %al,(%rax)
  0x00007fafb8c70e3a: add     %al,(%rax)
  0x00007fafb8c70e3c: add     %al,(%rax)
  0x00007fafb8c70e3e: add     %al,(%rax)

----------------------------------------------------------------------
irem  112 irem  [0x00007fafb8c70e60, 0x00007fafb8c70ec0]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c70e60 Code size: 0x00000060
  0x00007fafb8c70e60: mov     (%rsp),%eax
  0x00007fafb8c70e63: add     $0x8,%rsp
  0x00007fafb8c70e67: mov     %eax,%ecx
  0x00007fafb8c70e69: mov     (%rsp),%eax
  0x00007fafb8c70e6c: add     $0x8,%rsp
  0x00007fafb8c70e70: cmp     $0x80000000,%eax
  0x00007fafb8c70e76: jne     0x7fafb8c70e87
  0x00007fafb8c70e7c: xor     %edx,%edx
  0x00007fafb8c70e7e: cmp     $0xffffffff,%ecx
  0x00007fafb8c70e81: je      0x7fafb8c70e8a
  0x00007fafb8c70e87: cltd
  0x00007fafb8c70e88: idivl   %ecx,%eax
  0x00007fafb8c70e8a: mov     %edx,%eax
  0x00007fafb8c70e8c: movzbl  0x1(%r13),%ebx
  0x00007fafb8c70e91: incq    %r13
  0x00007fafb8c70e94: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c70e9e: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c70ea2: nopw    0x0(%rax,%rax)
  0x00007fafb8c70ea8: add     %al,(%rax)
  0x00007fafb8c70eaa: add     %al,(%rax)
  0x00007fafb8c70eac: add     %al,(%rax)
  0x00007fafb8c70eae: add     %al,(%rax)
  0x00007fafb8c70eb0: add     %al,(%rax)
  0x00007fafb8c70eb2: add     %al,(%rax)
  0x00007fafb8c70eb4: add     %al,(%rax)
  0x00007fafb8c70eb6: add     %al,(%rax)
  0x00007fafb8c70eb8: add     %al,(%rax)
  0x00007fafb8c70eba: add     %al,(%rax)
  0x00007fafb8c70ebc: add     %al,(%rax)
  0x00007fafb8c70ebe: add     %al,(%rax)

----------------------------------------------------------------------
lrem  113 lrem  [0x00007fafb8c70ee0, 0x00007fafb8c70f40]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c70ee0 Code size: 0x00000060
  0x00007fafb8c70ee0: mov     (%rsp),%rax
  0x00007fafb8c70ee4: add     $0x10,%rsp
  0x00007fafb8c70ee8: mov     %rax,%rcx
  0x00007fafb8c70eeb: mov     (%rsp),%rax
  0x00007fafb8c70eef: add     $0x10,%rsp
  0x00007fafb8c70ef3: test    %rcx,%rcx
  0x00007fafb8c70ef6: je      0x7fafb8c6a1db
  0x00007fafb8c70efc: cmp     0x1f7cb25d(%rip),%rax
  0x00007fafb8c70f03: jne     0x7fafb8c70f15
  0x00007fafb8c70f09: xor     %edx,%edx
  0x00007fafb8c70f0b: cmp     $0xffffffffffffffff,%rcx
  0x00007fafb8c70f0f: je      0x7fafb8c70f1a
  0x00007fafb8c70f15: cqto
  0x00007fafb8c70f17: idivq   %rcx,%rax
  0x00007fafb8c70f1a: mov     %rdx,%rax
  0x00007fafb8c70f1d: movzbl  0x1(%r13),%ebx
  0x00007fafb8c70f22: incq    %r13
  0x00007fafb8c70f25: movabs  $0x7fafd89a6080,%r10
  0x00007fafb8c70f2f: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c70f33: nopl    0x0(%rax,%rax)
  0x00007fafb8c70f38: add     %al,(%rax)
  0x00007fafb8c70f3a: add     %al,(%rax)
  0x00007fafb8c70f3c: add     %al,(%rax)
  0x00007fafb8c70f3e: add     %al,(%rax)

----------------------------------------------------------------------
frem  114 frem  [0x00007fafb8c70f60, 0x00007fafb8c70fc0]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c70f60 Code size: 0x00000060
  0x00007fafb8c70f60: vmovss  (%rsp),%xmm0
  0x00007fafb8c70f65: add     $0x8,%rsp
  0x00007fafb8c70f69: vmovaps %xmm0,%xmm1
  0x00007fafb8c70f6d: vmovss  (%rsp),%xmm0
  0x00007fafb8c70f72: add     $0x8,%rsp
  0x00007fafb8c70f76: test    $0xf,%esp
  0x00007fafb8c70f7c: je      0x7fafb8c70f94
  0x00007fafb8c70f82: sub     $0x8,%rsp
  0x00007fafb8c70f86: callq   0x7fafd81e4450
  0x00007fafb8c70f8b: add     $0x8,%rsp
  0x00007fafb8c70f8f: jmpq    0x7fafb8c70f99
  0x00007fafb8c70f94: callq   0x7fafd81e4450
  0x00007fafb8c70f99: movzbl  0x1(%r13),%ebx
  0x00007fafb8c70f9e: incq    %r13
  0x00007fafb8c70fa1: movabs  $0x7fafd89a6880,%r10
  0x00007fafb8c70fab: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c70faf: nop
  0x00007fafb8c70fb0: add     %al,(%rax)
  0x00007fafb8c70fb2: add     %al,(%rax)
  0x00007fafb8c70fb4: add     %al,(%rax)
  0x00007fafb8c70fb6: add     %al,(%rax)
  0x00007fafb8c70fb8: add     %al,(%rax)
  0x00007fafb8c70fba: add     %al,(%rax)
  0x00007fafb8c70fbc: add     %al,(%rax)
  0x00007fafb8c70fbe: add     %al,(%rax)

----------------------------------------------------------------------
drem  115 drem  [0x00007fafb8c70fe0, 0x00007fafb8c71040]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c70fe0 Code size: 0x00000060
  0x00007fafb8c70fe0: vmovsd  (%rsp),%xmm0
  0x00007fafb8c70fe5: add     $0x10,%rsp
  0x00007fafb8c70fe9: vmovapd %xmm0,%xmm1
  0x00007fafb8c70fed: vmovsd  (%rsp),%xmm0
  0x00007fafb8c70ff2: add     $0x10,%rsp
  0x00007fafb8c70ff6: test    $0xf,%esp
  0x00007fafb8c70ffc: je      0x7fafb8c71014
  0x00007fafb8c71002: sub     $0x8,%rsp
  0x00007fafb8c71006: callq   0x7fafd81e4470
  0x00007fafb8c7100b: add     $0x8,%rsp
  0x00007fafb8c7100f: jmpq    0x7fafb8c71019
  0x00007fafb8c71014: callq   0x7fafd81e4470
  0x00007fafb8c71019: movzbl  0x1(%r13),%ebx
  0x00007fafb8c7101e: incq    %r13
  0x00007fafb8c71021: movabs  $0x7fafd89a7080,%r10
  0x00007fafb8c7102b: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7102f: nop
  0x00007fafb8c71030: add     %al,(%rax)
  0x00007fafb8c71032: add     %al,(%rax)
  0x00007fafb8c71034: add     %al,(%rax)
  0x00007fafb8c71036: add     %al,(%rax)
  0x00007fafb8c71038: add     %al,(%rax)
  0x00007fafb8c7103a: add     %al,(%rax)
  0x00007fafb8c7103c: add     %al,(%rax)
  0x00007fafb8c7103e: add     %al,(%rax)

----------------------------------------------------------------------
ineg  116 ineg  [0x00007fafb8c71060, 0x00007fafb8c71080]  32 bytes

Argument 0 is unknown.RIP: 0x7fafb8c71060 Code size: 0x00000020
  0x00007fafb8c71060: mov     (%rsp),%eax
  0x00007fafb8c71063: add     $0x8,%rsp
  0x00007fafb8c71067: neg     %eax
  0x00007fafb8c71069: movzbl  0x1(%r13),%ebx
  0x00007fafb8c7106e: incq    %r13
  0x00007fafb8c71071: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c7107b: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7107f: nop

----------------------------------------------------------------------
lneg  117 lneg  [0x00007fafb8c710a0, 0x00007fafb8c710e0]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c710a0 Code size: 0x00000040
  0x00007fafb8c710a0: mov     (%rsp),%rax
  0x00007fafb8c710a4: add     $0x10,%rsp
  0x00007fafb8c710a8: neg     %rax
  0x00007fafb8c710ab: movzbl  0x1(%r13),%ebx
  0x00007fafb8c710b0: incq    %r13
  0x00007fafb8c710b3: movabs  $0x7fafd89a6080,%r10
  0x00007fafb8c710bd: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c710c1: nopl    0x0(%rax)
  0x00007fafb8c710c8: add     %al,(%rax)
  0x00007fafb8c710ca: add     %al,(%rax)
  0x00007fafb8c710cc: add     %al,(%rax)
  0x00007fafb8c710ce: add     %al,(%rax)
  0x00007fafb8c710d0: add     %al,(%rax)
  0x00007fafb8c710d2: add     %al,(%rax)
  0x00007fafb8c710d4: add     %al,(%rax)
  0x00007fafb8c710d6: add     %al,(%rax)
  0x00007fafb8c710d8: add     %al,(%rax)
  0x00007fafb8c710da: add     %al,(%rax)
  0x00007fafb8c710dc: add     %al,(%rax)
  0x00007fafb8c710de: add     %al,(%rax)

----------------------------------------------------------------------
fneg  118 fneg  [0x00007fafb8c71100, 0x00007fafb8c71140]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c71100 Code size: 0x00000040
  0x00007fafb8c71100: vmovss  (%rsp),%xmm0
  0x00007fafb8c71105: add     $0x8,%rsp
  0x00007fafb8c71109: vxorps  0x1fd3ba0f(%rip),%xmm0,%xmm0
  0x00007fafb8c71111: movzbl  0x1(%r13),%ebx
  0x00007fafb8c71116: incq    %r13
  0x00007fafb8c71119: movabs  $0x7fafd89a6880,%r10
  0x00007fafb8c71123: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c71127: nop
  0x00007fafb8c71128: add     %al,(%rax)
  0x00007fafb8c7112a: add     %al,(%rax)
  0x00007fafb8c7112c: add     %al,(%rax)
  0x00007fafb8c7112e: add     %al,(%rax)
  0x00007fafb8c71130: add     %al,(%rax)
  0x00007fafb8c71132: add     %al,(%rax)
  0x00007fafb8c71134: add     %al,(%rax)
  0x00007fafb8c71136: add     %al,(%rax)
  0x00007fafb8c71138: add     %al,(%rax)
  0x00007fafb8c7113a: add     %al,(%rax)
  0x00007fafb8c7113c: add     %al,(%rax)
  0x00007fafb8c7113e: add     %al,(%rax)

----------------------------------------------------------------------
dneg  119 dneg  [0x00007fafb8c71160, 0x00007fafb8c711a0]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c71160 Code size: 0x00000040
  0x00007fafb8c71160: vmovsd  (%rsp),%xmm0
  0x00007fafb8c71165: add     $0x10,%rsp
  0x00007fafb8c71169: vxorpd  0x1fd3b98f(%rip),%xmm0,%xmm0
  0x00007fafb8c71171: movzbl  0x1(%r13),%ebx
  0x00007fafb8c71176: incq    %r13
  0x00007fafb8c71179: movabs  $0x7fafd89a7080,%r10
  0x00007fafb8c71183: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c71187: nop
  0x00007fafb8c71188: add     %al,(%rax)
  0x00007fafb8c7118a: add     %al,(%rax)
  0x00007fafb8c7118c: add     %al,(%rax)
  0x00007fafb8c7118e: add     %al,(%rax)
  0x00007fafb8c71190: add     %al,(%rax)
  0x00007fafb8c71192: add     %al,(%rax)
  0x00007fafb8c71194: add     %al,(%rax)
  0x00007fafb8c71196: add     %al,(%rax)
  0x00007fafb8c71198: add     %al,(%rax)
  0x00007fafb8c7119a: add     %al,(%rax)
  0x00007fafb8c7119c: add     %al,(%rax)
  0x00007fafb8c7119e: add     %al,(%rax)

----------------------------------------------------------------------
ishl  120 ishl  [0x00007fafb8c711c0, 0x00007fafb8c71200]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c711c0 Code size: 0x00000040
  0x00007fafb8c711c0: mov     (%rsp),%eax
  0x00007fafb8c711c3: add     $0x8,%rsp
  0x00007fafb8c711c7: mov     %eax,%ecx
  0x00007fafb8c711c9: mov     (%rsp),%eax
  0x00007fafb8c711cc: add     $0x8,%rsp
  0x00007fafb8c711d0: shl     %cl,%eax
  0x00007fafb8c711d2: movzbl  0x1(%r13),%ebx
  0x00007fafb8c711d7: incq    %r13
  0x00007fafb8c711da: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c711e4: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c711e8: add     %al,(%rax)
  0x00007fafb8c711ea: add     %al,(%rax)
  0x00007fafb8c711ec: add     %al,(%rax)
  0x00007fafb8c711ee: add     %al,(%rax)
  0x00007fafb8c711f0: add     %al,(%rax)
  0x00007fafb8c711f2: add     %al,(%rax)
  0x00007fafb8c711f4: add     %al,(%rax)
  0x00007fafb8c711f6: add     %al,(%rax)
  0x00007fafb8c711f8: add     %al,(%rax)
  0x00007fafb8c711fa: add     %al,(%rax)
  0x00007fafb8c711fc: add     %al,(%rax)
  0x00007fafb8c711fe: add     %al,(%rax)

----------------------------------------------------------------------
lshl  121 lshl  [0x00007fafb8c71220, 0x00007fafb8c71260]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c71220 Code size: 0x00000040
  0x00007fafb8c71220: mov     (%rsp),%eax
  0x00007fafb8c71223: add     $0x8,%rsp
  0x00007fafb8c71227: mov     %eax,%ecx
  0x00007fafb8c71229: mov     (%rsp),%rax
  0x00007fafb8c7122d: add     $0x10,%rsp
  0x00007fafb8c71231: shl     %cl,%rax
  0x00007fafb8c71234: movzbl  0x1(%r13),%ebx
  0x00007fafb8c71239: incq    %r13
  0x00007fafb8c7123c: movabs  $0x7fafd89a6080,%r10
  0x00007fafb8c71246: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7124a: nopw    0x0(%rax,%rax)
  0x00007fafb8c71250: add     %al,(%rax)
  0x00007fafb8c71252: add     %al,(%rax)
  0x00007fafb8c71254: add     %al,(%rax)
  0x00007fafb8c71256: add     %al,(%rax)
  0x00007fafb8c71258: add     %al,(%rax)
  0x00007fafb8c7125a: add     %al,(%rax)
  0x00007fafb8c7125c: add     %al,(%rax)
  0x00007fafb8c7125e: add     %al,(%rax)

----------------------------------------------------------------------
ishr  122 ishr  [0x00007fafb8c71280, 0x00007fafb8c712c0]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c71280 Code size: 0x00000040
  0x00007fafb8c71280: mov     (%rsp),%eax
  0x00007fafb8c71283: add     $0x8,%rsp
  0x00007fafb8c71287: mov     %eax,%ecx
  0x00007fafb8c71289: mov     (%rsp),%eax
  0x00007fafb8c7128c: add     $0x8,%rsp
  0x00007fafb8c71290: sar     %cl,%eax
  0x00007fafb8c71292: movzbl  0x1(%r13),%ebx
  0x00007fafb8c71297: incq    %r13
  0x00007fafb8c7129a: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c712a4: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c712a8: add     %al,(%rax)
  0x00007fafb8c712aa: add     %al,(%rax)
  0x00007fafb8c712ac: add     %al,(%rax)
  0x00007fafb8c712ae: add     %al,(%rax)
  0x00007fafb8c712b0: add     %al,(%rax)
  0x00007fafb8c712b2: add     %al,(%rax)
  0x00007fafb8c712b4: add     %al,(%rax)
  0x00007fafb8c712b6: add     %al,(%rax)
  0x00007fafb8c712b8: add     %al,(%rax)
  0x00007fafb8c712ba: add     %al,(%rax)
  0x00007fafb8c712bc: add     %al,(%rax)
  0x00007fafb8c712be: add     %al,(%rax)

----------------------------------------------------------------------
lshr  123 lshr  [0x00007fafb8c712e0, 0x00007fafb8c71320]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c712e0 Code size: 0x00000040
  0x00007fafb8c712e0: mov     (%rsp),%eax
  0x00007fafb8c712e3: add     $0x8,%rsp
  0x00007fafb8c712e7: mov     %eax,%ecx
  0x00007fafb8c712e9: mov     (%rsp),%rax
  0x00007fafb8c712ed: add     $0x10,%rsp
  0x00007fafb8c712f1: sar     %cl,%rax
  0x00007fafb8c712f4: movzbl  0x1(%r13),%ebx
  0x00007fafb8c712f9: incq    %r13
  0x00007fafb8c712fc: movabs  $0x7fafd89a6080,%r10
  0x00007fafb8c71306: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7130a: nopw    0x0(%rax,%rax)
  0x00007fafb8c71310: add     %al,(%rax)
  0x00007fafb8c71312: add     %al,(%rax)
  0x00007fafb8c71314: add     %al,(%rax)
  0x00007fafb8c71316: add     %al,(%rax)
  0x00007fafb8c71318: add     %al,(%rax)
  0x00007fafb8c7131a: add     %al,(%rax)
  0x00007fafb8c7131c: add     %al,(%rax)
  0x00007fafb8c7131e: add     %al,(%rax)

----------------------------------------------------------------------
iushr  124 iushr  [0x00007fafb8c71340, 0x00007fafb8c71380]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c71340 Code size: 0x00000040
  0x00007fafb8c71340: mov     (%rsp),%eax
  0x00007fafb8c71343: add     $0x8,%rsp
  0x00007fafb8c71347: mov     %eax,%ecx
  0x00007fafb8c71349: mov     (%rsp),%eax
  0x00007fafb8c7134c: add     $0x8,%rsp
  0x00007fafb8c71350: shr     %cl,%eax
  0x00007fafb8c71352: movzbl  0x1(%r13),%ebx
  0x00007fafb8c71357: incq    %r13
  0x00007fafb8c7135a: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c71364: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c71368: add     %al,(%rax)
  0x00007fafb8c7136a: add     %al,(%rax)
  0x00007fafb8c7136c: add     %al,(%rax)
  0x00007fafb8c7136e: add     %al,(%rax)
  0x00007fafb8c71370: add     %al,(%rax)
  0x00007fafb8c71372: add     %al,(%rax)
  0x00007fafb8c71374: add     %al,(%rax)
  0x00007fafb8c71376: add     %al,(%rax)
  0x00007fafb8c71378: add     %al,(%rax)
  0x00007fafb8c7137a: add     %al,(%rax)
  0x00007fafb8c7137c: add     %al,(%rax)
  0x00007fafb8c7137e: add     %al,(%rax)

----------------------------------------------------------------------
lushr  125 lushr  [0x00007fafb8c713a0, 0x00007fafb8c713e0]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c713a0 Code size: 0x00000040
  0x00007fafb8c713a0: mov     (%rsp),%eax
  0x00007fafb8c713a3: add     $0x8,%rsp
  0x00007fafb8c713a7: mov     %eax,%ecx
  0x00007fafb8c713a9: mov     (%rsp),%rax
  0x00007fafb8c713ad: add     $0x10,%rsp
  0x00007fafb8c713b1: shr     %cl,%rax
  0x00007fafb8c713b4: movzbl  0x1(%r13),%ebx
  0x00007fafb8c713b9: incq    %r13
  0x00007fafb8c713bc: movabs  $0x7fafd89a6080,%r10
  0x00007fafb8c713c6: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c713ca: nopw    0x0(%rax,%rax)
  0x00007fafb8c713d0: add     %al,(%rax)
  0x00007fafb8c713d2: add     %al,(%rax)
  0x00007fafb8c713d4: add     %al,(%rax)
  0x00007fafb8c713d6: add     %al,(%rax)
  0x00007fafb8c713d8: add     %al,(%rax)
  0x00007fafb8c713da: add     %al,(%rax)
  0x00007fafb8c713dc: add     %al,(%rax)
  0x00007fafb8c713de: add     %al,(%rax)

----------------------------------------------------------------------
iand  126 iand  [0x00007fafb8c71400, 0x00007fafb8c71440]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c71400 Code size: 0x00000040
  0x00007fafb8c71400: mov     (%rsp),%eax
  0x00007fafb8c71403: add     $0x8,%rsp
  0x00007fafb8c71407: mov     (%rsp),%edx
  0x00007fafb8c7140a: add     $0x8,%rsp
  0x00007fafb8c7140e: and     %edx,%eax
  0x00007fafb8c71410: movzbl  0x1(%r13),%ebx
  0x00007fafb8c71415: incq    %r13
  0x00007fafb8c71418: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c71422: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c71426: nop
  0x00007fafb8c71428: add     %al,(%rax)
  0x00007fafb8c7142a: add     %al,(%rax)
  0x00007fafb8c7142c: add     %al,(%rax)
  0x00007fafb8c7142e: add     %al,(%rax)
  0x00007fafb8c71430: add     %al,(%rax)
  0x00007fafb8c71432: add     %al,(%rax)
  0x00007fafb8c71434: add     %al,(%rax)
  0x00007fafb8c71436: add     %al,(%rax)
  0x00007fafb8c71438: add     %al,(%rax)
  0x00007fafb8c7143a: add     %al,(%rax)
  0x00007fafb8c7143c: add     %al,(%rax)
  0x00007fafb8c7143e: add     %al,(%rax)

----------------------------------------------------------------------
land  127 land  [0x00007fafb8c71460, 0x00007fafb8c714a0]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c71460 Code size: 0x00000040
  0x00007fafb8c71460: mov     (%rsp),%rax
  0x00007fafb8c71464: add     $0x10,%rsp
  0x00007fafb8c71468: mov     (%rsp),%rdx
  0x00007fafb8c7146c: add     $0x10,%rsp
  0x00007fafb8c71470: and     %rdx,%rax
  0x00007fafb8c71473: movzbl  0x1(%r13),%ebx
  0x00007fafb8c71478: incq    %r13
  0x00007fafb8c7147b: movabs  $0x7fafd89a6080,%r10
  0x00007fafb8c71485: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c71489: nopl    0x0(%rax)
  0x00007fafb8c71490: add     %al,(%rax)
  0x00007fafb8c71492: add     %al,(%rax)
  0x00007fafb8c71494: add     %al,(%rax)
  0x00007fafb8c71496: add     %al,(%rax)
  0x00007fafb8c71498: add     %al,(%rax)
  0x00007fafb8c7149a: add     %al,(%rax)
  0x00007fafb8c7149c: add     %al,(%rax)
  0x00007fafb8c7149e: add     %al,(%rax)

----------------------------------------------------------------------
ior  128 ior  [0x00007fafb8c714c0, 0x00007fafb8c71500]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c714c0 Code size: 0x00000040
  0x00007fafb8c714c0: mov     (%rsp),%eax
  0x00007fafb8c714c3: add     $0x8,%rsp
  0x00007fafb8c714c7: mov     (%rsp),%edx
  0x00007fafb8c714ca: add     $0x8,%rsp
  0x00007fafb8c714ce: or      %edx,%eax
  0x00007fafb8c714d0: movzbl  0x1(%r13),%ebx
  0x00007fafb8c714d5: incq    %r13
  0x00007fafb8c714d8: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c714e2: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c714e6: nop
  0x00007fafb8c714e8: add     %al,(%rax)
  0x00007fafb8c714ea: add     %al,(%rax)
  0x00007fafb8c714ec: add     %al,(%rax)
  0x00007fafb8c714ee: add     %al,(%rax)
  0x00007fafb8c714f0: add     %al,(%rax)
  0x00007fafb8c714f2: add     %al,(%rax)
  0x00007fafb8c714f4: add     %al,(%rax)
  0x00007fafb8c714f6: add     %al,(%rax)
  0x00007fafb8c714f8: add     %al,(%rax)
  0x00007fafb8c714fa: add     %al,(%rax)
  0x00007fafb8c714fc: add     %al,(%rax)
  0x00007fafb8c714fe: add     %al,(%rax)

----------------------------------------------------------------------
lor  129 lor  [0x00007fafb8c71520, 0x00007fafb8c71560]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c71520 Code size: 0x00000040
  0x00007fafb8c71520: mov     (%rsp),%rax
  0x00007fafb8c71524: add     $0x10,%rsp
  0x00007fafb8c71528: mov     (%rsp),%rdx
  0x00007fafb8c7152c: add     $0x10,%rsp
  0x00007fafb8c71530: or      %rdx,%rax
  0x00007fafb8c71533: movzbl  0x1(%r13),%ebx
  0x00007fafb8c71538: incq    %r13
  0x00007fafb8c7153b: movabs  $0x7fafd89a6080,%r10
  0x00007fafb8c71545: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c71549: nopl    0x0(%rax)
  0x00007fafb8c71550: add     %al,(%rax)
  0x00007fafb8c71552: add     %al,(%rax)
  0x00007fafb8c71554: add     %al,(%rax)
  0x00007fafb8c71556: add     %al,(%rax)
  0x00007fafb8c71558: add     %al,(%rax)
  0x00007fafb8c7155a: add     %al,(%rax)
  0x00007fafb8c7155c: add     %al,(%rax)
  0x00007fafb8c7155e: add     %al,(%rax)

----------------------------------------------------------------------
ixor  130 ixor  [0x00007fafb8c71580, 0x00007fafb8c715c0]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c71580 Code size: 0x00000040
  0x00007fafb8c71580: mov     (%rsp),%eax
  0x00007fafb8c71583: add     $0x8,%rsp
  0x00007fafb8c71587: mov     (%rsp),%edx
  0x00007fafb8c7158a: add     $0x8,%rsp
  0x00007fafb8c7158e: xor     %edx,%eax
  0x00007fafb8c71590: movzbl  0x1(%r13),%ebx
  0x00007fafb8c71595: incq    %r13
  0x00007fafb8c71598: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c715a2: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c715a6: nop
  0x00007fafb8c715a8: add     %al,(%rax)
  0x00007fafb8c715aa: add     %al,(%rax)
  0x00007fafb8c715ac: add     %al,(%rax)
  0x00007fafb8c715ae: add     %al,(%rax)
  0x00007fafb8c715b0: add     %al,(%rax)
  0x00007fafb8c715b2: add     %al,(%rax)
  0x00007fafb8c715b4: add     %al,(%rax)
  0x00007fafb8c715b6: add     %al,(%rax)
  0x00007fafb8c715b8: add     %al,(%rax)
  0x00007fafb8c715ba: add     %al,(%rax)
  0x00007fafb8c715bc: add     %al,(%rax)
  0x00007fafb8c715be: add     %al,(%rax)

----------------------------------------------------------------------
lxor  131 lxor  [0x00007fafb8c715e0, 0x00007fafb8c71620]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c715e0 Code size: 0x00000040
  0x00007fafb8c715e0: mov     (%rsp),%rax
  0x00007fafb8c715e4: add     $0x10,%rsp
  0x00007fafb8c715e8: mov     (%rsp),%rdx
  0x00007fafb8c715ec: add     $0x10,%rsp
  0x00007fafb8c715f0: xor     %rdx,%rax
  0x00007fafb8c715f3: movzbl  0x1(%r13),%ebx
  0x00007fafb8c715f8: incq    %r13
  0x00007fafb8c715fb: movabs  $0x7fafd89a6080,%r10
  0x00007fafb8c71605: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c71609: nopl    0x0(%rax)
  0x00007fafb8c71610: add     %al,(%rax)
  0x00007fafb8c71612: add     %al,(%rax)
  0x00007fafb8c71614: add     %al,(%rax)
  0x00007fafb8c71616: add     %al,(%rax)
  0x00007fafb8c71618: add     %al,(%rax)
  0x00007fafb8c7161a: add     %al,(%rax)
  0x00007fafb8c7161c: add     %al,(%rax)
  0x00007fafb8c7161e: add     %al,(%rax)

----------------------------------------------------------------------
iinc  132 iinc  [0x00007fafb8c71640, 0x00007fafb8c716e0]  160 bytes

Argument 0 is unknown.RIP: 0x7fafb8c71640 Code size: 0x000000a0
  0x00007fafb8c71640: push    %rax
  0x00007fafb8c71641: jmpq    0x7fafb8c7167f
  0x00007fafb8c71646: sub     $0x8,%rsp
  0x00007fafb8c7164a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c7164f: jmpq    0x7fafb8c7167f
  0x00007fafb8c71654: sub     $0x10,%rsp
  0x00007fafb8c71658: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c7165d: jmpq    0x7fafb8c7167f
  0x00007fafb8c71662: sub     $0x10,%rsp
  0x00007fafb8c71666: mov     %rax,(%rsp)
  0x00007fafb8c7166a: movabs  $0x0,%r10
  0x00007fafb8c71674: mov     %r10,0x8(%rsp)
  0x00007fafb8c71679: jmpq    0x7fafb8c7167f
  0x00007fafb8c7167e: push    %rax
  0x00007fafb8c7167f: movsbl  0x2(%r13),%edx
  0x00007fafb8c71684: movzbl  0x1(%r13),%ebx
  0x00007fafb8c71689: neg     %rbx
  0x00007fafb8c7168c: add     %edx,(%r14,%rbx,8)
  0x00007fafb8c71690: movzbl  0x3(%r13),%ebx
  0x00007fafb8c71695: add     $0x3,%r13
  0x00007fafb8c71699: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c716a3: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c716a7: mov     0x4(%r13),%edx
  0x00007fafb8c716ab: movzwl  0x2(%r13),%ebx
  0x00007fafb8c716b0: bswap   %ebx
  0x00007fafb8c716b2: shr     $0x10,%ebx
  0x00007fafb8c716b5: neg     %rbx
  0x00007fafb8c716b8: bswap   %edx
  0x00007fafb8c716ba: sar     $0x10,%edx
  0x00007fafb8c716bd: add     %edx,(%r14,%rbx,8)
  0x00007fafb8c716c1: movzbl  0x6(%r13),%ebx
  0x00007fafb8c716c6: add     $0x6,%r13
  0x00007fafb8c716ca: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c716d4: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c716d8: add     %al,(%rax)
  0x00007fafb8c716da: add     %al,(%rax)
  0x00007fafb8c716dc: add     %al,(%rax)
  0x00007fafb8c716de: add     %al,(%rax)

----------------------------------------------------------------------
i2l  133 i2l  [0x00007fafb8c71700, 0x00007fafb8c71720]  32 bytes

Argument 0 is unknown.RIP: 0x7fafb8c71700 Code size: 0x00000020
  0x00007fafb8c71700: mov     (%rsp),%eax
  0x00007fafb8c71703: add     $0x8,%rsp
  0x00007fafb8c71707: movsxd  %eax,%rax
  0x00007fafb8c7170a: movzbl  0x1(%r13),%ebx
  0x00007fafb8c7170f: incq    %r13
  0x00007fafb8c71712: movabs  $0x7fafd89a6080,%r10
  0x00007fafb8c7171c: jmpq    *(%r10,%rbx,8)

----------------------------------------------------------------------
i2f  134 i2f  [0x00007fafb8c71740, 0x00007fafb8c71780]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c71740 Code size: 0x00000040
  0x00007fafb8c71740: mov     (%rsp),%eax
  0x00007fafb8c71743: add     $0x8,%rsp
  0x00007fafb8c71747: vcvtsi2ssl %eax,%xmm0,%xmm0
  0x00007fafb8c7174b: movzbl  0x1(%r13),%ebx
  0x00007fafb8c71750: incq    %r13
  0x00007fafb8c71753: movabs  $0x7fafd89a6880,%r10
  0x00007fafb8c7175d: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c71761: nopl    0x0(%rax)
  0x00007fafb8c71768: add     %al,(%rax)
  0x00007fafb8c7176a: add     %al,(%rax)
  0x00007fafb8c7176c: add     %al,(%rax)
  0x00007fafb8c7176e: add     %al,(%rax)
  0x00007fafb8c71770: add     %al,(%rax)
  0x00007fafb8c71772: add     %al,(%rax)
  0x00007fafb8c71774: add     %al,(%rax)
  0x00007fafb8c71776: add     %al,(%rax)
  0x00007fafb8c71778: add     %al,(%rax)
  0x00007fafb8c7177a: add     %al,(%rax)
  0x00007fafb8c7177c: add     %al,(%rax)
  0x00007fafb8c7177e: add     %al,(%rax)

----------------------------------------------------------------------
i2d  135 i2d  [0x00007fafb8c717a0, 0x00007fafb8c717e0]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c717a0 Code size: 0x00000040
  0x00007fafb8c717a0: mov     (%rsp),%eax
  0x00007fafb8c717a3: add     $0x8,%rsp
  0x00007fafb8c717a7: vcvtsi2sdl %eax,%xmm0,%xmm0
  0x00007fafb8c717ab: movzbl  0x1(%r13),%ebx
  0x00007fafb8c717b0: incq    %r13
  0x00007fafb8c717b3: movabs  $0x7fafd89a7080,%r10
  0x00007fafb8c717bd: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c717c1: nopl    0x0(%rax)
  0x00007fafb8c717c8: add     %al,(%rax)
  0x00007fafb8c717ca: add     %al,(%rax)
  0x00007fafb8c717cc: add     %al,(%rax)
  0x00007fafb8c717ce: add     %al,(%rax)
  0x00007fafb8c717d0: add     %al,(%rax)
  0x00007fafb8c717d2: add     %al,(%rax)
  0x00007fafb8c717d4: add     %al,(%rax)
  0x00007fafb8c717d6: add     %al,(%rax)
  0x00007fafb8c717d8: add     %al,(%rax)
  0x00007fafb8c717da: add     %al,(%rax)
  0x00007fafb8c717dc: add     %al,(%rax)
  0x00007fafb8c717de: add     %al,(%rax)

----------------------------------------------------------------------
l2i  136 l2i  [0x00007fafb8c71800, 0x00007fafb8c71820]  32 bytes

Argument 0 is unknown.RIP: 0x7fafb8c71800 Code size: 0x00000020
  0x00007fafb8c71800: mov     (%rsp),%rax
  0x00007fafb8c71804: add     $0x10,%rsp
  0x00007fafb8c71808: mov     %eax,%eax
  0x00007fafb8c7180a: movzbl  0x1(%r13),%ebx
  0x00007fafb8c7180f: incq    %r13
  0x00007fafb8c71812: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c7181c: jmpq    *(%r10,%rbx,8)

----------------------------------------------------------------------
l2f  137 l2f  [0x00007fafb8c71840, 0x00007fafb8c71880]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c71840 Code size: 0x00000040
  0x00007fafb8c71840: mov     (%rsp),%rax
  0x00007fafb8c71844: add     $0x10,%rsp
  0x00007fafb8c71848: vcvtsi2ssq %rax,%xmm0,%xmm0
  0x00007fafb8c7184d: movzbl  0x1(%r13),%ebx
  0x00007fafb8c71852: incq    %r13
  0x00007fafb8c71855: movabs  $0x7fafd89a6880,%r10
  0x00007fafb8c7185f: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c71863: nopl    0x0(%rax,%rax)
  0x00007fafb8c71868: add     %al,(%rax)
  0x00007fafb8c7186a: add     %al,(%rax)
  0x00007fafb8c7186c: add     %al,(%rax)
  0x00007fafb8c7186e: add     %al,(%rax)
  0x00007fafb8c71870: add     %al,(%rax)
  0x00007fafb8c71872: add     %al,(%rax)
  0x00007fafb8c71874: add     %al,(%rax)
  0x00007fafb8c71876: add     %al,(%rax)
  0x00007fafb8c71878: add     %al,(%rax)
  0x00007fafb8c7187a: add     %al,(%rax)
  0x00007fafb8c7187c: add     %al,(%rax)
  0x00007fafb8c7187e: add     %al,(%rax)

----------------------------------------------------------------------
l2d  138 l2d  [0x00007fafb8c718a0, 0x00007fafb8c718e0]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c718a0 Code size: 0x00000040
  0x00007fafb8c718a0: mov     (%rsp),%rax
  0x00007fafb8c718a4: add     $0x10,%rsp
  0x00007fafb8c718a8: vcvtsi2sdq %rax,%xmm0,%xmm0
  0x00007fafb8c718ad: movzbl  0x1(%r13),%ebx
  0x00007fafb8c718b2: incq    %r13
  0x00007fafb8c718b5: movabs  $0x7fafd89a7080,%r10
  0x00007fafb8c718bf: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c718c3: nopl    0x0(%rax,%rax)
  0x00007fafb8c718c8: add     %al,(%rax)
  0x00007fafb8c718ca: add     %al,(%rax)
  0x00007fafb8c718cc: add     %al,(%rax)
  0x00007fafb8c718ce: add     %al,(%rax)
  0x00007fafb8c718d0: add     %al,(%rax)
  0x00007fafb8c718d2: add     %al,(%rax)
  0x00007fafb8c718d4: add     %al,(%rax)
  0x00007fafb8c718d6: add     %al,(%rax)
  0x00007fafb8c718d8: add     %al,(%rax)
  0x00007fafb8c718da: add     %al,(%rax)
  0x00007fafb8c718dc: add     %al,(%rax)
  0x00007fafb8c718de: add     %al,(%rax)

----------------------------------------------------------------------
f2i  139 f2i  [0x00007fafb8c71900, 0x00007fafb8c71960]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c71900 Code size: 0x00000060
  0x00007fafb8c71900: vmovss  (%rsp),%xmm0
  0x00007fafb8c71905: add     $0x8,%rsp
  0x00007fafb8c71909: vcvttss2si %xmm0,%eax
  0x00007fafb8c7190d: cmp     $0x80000000,%eax
  0x00007fafb8c71913: jne     0x7fafb8c7193c
  0x00007fafb8c71919: test    $0xf,%esp
  0x00007fafb8c7191f: je      0x7fafb8c71937
  0x00007fafb8c71925: sub     $0x8,%rsp
  0x00007fafb8c71929: callq   0x7fafd81e4480
  0x00007fafb8c7192e: add     $0x8,%rsp
  0x00007fafb8c71932: jmpq    0x7fafb8c7193c
  0x00007fafb8c71937: callq   0x7fafd81e4480
  0x00007fafb8c7193c: movzbl  0x1(%r13),%ebx
  0x00007fafb8c71941: incq    %r13
  0x00007fafb8c71944: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c7194e: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c71952: nopw    0x0(%rax,%rax)
  0x00007fafb8c71958: add     %al,(%rax)
  0x00007fafb8c7195a: add     %al,(%rax)
  0x00007fafb8c7195c: add     %al,(%rax)
  0x00007fafb8c7195e: add     %al,(%rax)

----------------------------------------------------------------------
f2l  140 f2l  [0x00007fafb8c71980, 0x00007fafb8c719e0]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c71980 Code size: 0x00000060
  0x00007fafb8c71980: vmovss  (%rsp),%xmm0
  0x00007fafb8c71985: add     $0x8,%rsp
  0x00007fafb8c71989: vcvttss2si %xmm0,%rax
  0x00007fafb8c7198e: cmp     0x1f7f019b(%rip),%rax
  0x00007fafb8c71995: jne     0x7fafb8c719be
  0x00007fafb8c7199b: test    $0xf,%esp
  0x00007fafb8c719a1: je      0x7fafb8c719b9
  0x00007fafb8c719a7: sub     $0x8,%rsp
  0x00007fafb8c719ab: callq   0x7fafd81e44c0
  0x00007fafb8c719b0: add     $0x8,%rsp
  0x00007fafb8c719b4: jmpq    0x7fafb8c719be
  0x00007fafb8c719b9: callq   0x7fafd81e44c0
  0x00007fafb8c719be: movzbl  0x1(%r13),%ebx
  0x00007fafb8c719c3: incq    %r13
  0x00007fafb8c719c6: movabs  $0x7fafd89a6080,%r10
  0x00007fafb8c719d0: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c719d4: nopl    0x0(%rax)
  0x00007fafb8c719d8: add     %al,(%rax)
  0x00007fafb8c719da: add     %al,(%rax)
  0x00007fafb8c719dc: add     %al,(%rax)
  0x00007fafb8c719de: add     %al,(%rax)

----------------------------------------------------------------------
f2d  141 f2d  [0x00007fafb8c71a00, 0x00007fafb8c71a40]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c71a00 Code size: 0x00000040
  0x00007fafb8c71a00: vmovss  (%rsp),%xmm0
  0x00007fafb8c71a05: add     $0x8,%rsp
  0x00007fafb8c71a09: vcvtss2sd %eax,%xmm0,%xmm0
  0x00007fafb8c71a0d: movzbl  0x1(%r13),%ebx
  0x00007fafb8c71a12: incq    %r13
  0x00007fafb8c71a15: movabs  $0x7fafd89a7080,%r10
  0x00007fafb8c71a1f: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c71a23: nopl    0x0(%rax,%rax)
  0x00007fafb8c71a28: add     %al,(%rax)
  0x00007fafb8c71a2a: add     %al,(%rax)
  0x00007fafb8c71a2c: add     %al,(%rax)
  0x00007fafb8c71a2e: add     %al,(%rax)
  0x00007fafb8c71a30: add     %al,(%rax)
  0x00007fafb8c71a32: add     %al,(%rax)
  0x00007fafb8c71a34: add     %al,(%rax)
  0x00007fafb8c71a36: add     %al,(%rax)
  0x00007fafb8c71a38: add     %al,(%rax)
  0x00007fafb8c71a3a: add     %al,(%rax)
  0x00007fafb8c71a3c: add     %al,(%rax)
  0x00007fafb8c71a3e: add     %al,(%rax)

----------------------------------------------------------------------
d2i  142 d2i  [0x00007fafb8c71a60, 0x00007fafb8c71ac0]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c71a60 Code size: 0x00000060
  0x00007fafb8c71a60: vmovsd  (%rsp),%xmm0
  0x00007fafb8c71a65: add     $0x10,%rsp
  0x00007fafb8c71a69: vcvttsd2si %xmm0,%eax
  0x00007fafb8c71a6d: cmp     $0x80000000,%eax
  0x00007fafb8c71a73: jne     0x7fafb8c71a9c
  0x00007fafb8c71a79: test    $0xf,%esp
  0x00007fafb8c71a7f: je      0x7fafb8c71a97
  0x00007fafb8c71a85: sub     $0x8,%rsp
  0x00007fafb8c71a89: callq   0x7fafd81e4510
  0x00007fafb8c71a8e: add     $0x8,%rsp
  0x00007fafb8c71a92: jmpq    0x7fafb8c71a9c
  0x00007fafb8c71a97: callq   0x7fafd81e4510
  0x00007fafb8c71a9c: movzbl  0x1(%r13),%ebx
  0x00007fafb8c71aa1: incq    %r13
  0x00007fafb8c71aa4: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c71aae: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c71ab2: nopw    0x0(%rax,%rax)
  0x00007fafb8c71ab8: add     %al,(%rax)
  0x00007fafb8c71aba: add     %al,(%rax)
  0x00007fafb8c71abc: add     %al,(%rax)
  0x00007fafb8c71abe: add     %al,(%rax)

----------------------------------------------------------------------
d2l  143 d2l  [0x00007fafb8c71ae0, 0x00007fafb8c71b40]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c71ae0 Code size: 0x00000060
  0x00007fafb8c71ae0: vmovsd  (%rsp),%xmm0
  0x00007fafb8c71ae5: add     $0x10,%rsp
  0x00007fafb8c71ae9: vcvttsd2si %xmm0,%rax
  0x00007fafb8c71aee: cmp     0x1f7f003b(%rip),%rax
  0x00007fafb8c71af5: jne     0x7fafb8c71b1e
  0x00007fafb8c71afb: test    $0xf,%esp
  0x00007fafb8c71b01: je      0x7fafb8c71b19
  0x00007fafb8c71b07: sub     $0x8,%rsp
  0x00007fafb8c71b0b: callq   0x7fafd81e4550
  0x00007fafb8c71b10: add     $0x8,%rsp
  0x00007fafb8c71b14: jmpq    0x7fafb8c71b1e
  0x00007fafb8c71b19: callq   0x7fafd81e4550
  0x00007fafb8c71b1e: movzbl  0x1(%r13),%ebx
  0x00007fafb8c71b23: incq    %r13
  0x00007fafb8c71b26: movabs  $0x7fafd89a6080,%r10
  0x00007fafb8c71b30: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c71b34: nopl    0x0(%rax)
  0x00007fafb8c71b38: add     %al,(%rax)
  0x00007fafb8c71b3a: add     %al,(%rax)
  0x00007fafb8c71b3c: add     %al,(%rax)
  0x00007fafb8c71b3e: add     %al,(%rax)

----------------------------------------------------------------------
d2f  144 d2f  [0x00007fafb8c71b60, 0x00007fafb8c71ba0]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c71b60 Code size: 0x00000040
  0x00007fafb8c71b60: vmovsd  (%rsp),%xmm0
  0x00007fafb8c71b65: add     $0x10,%rsp
  0x00007fafb8c71b69: vcvtsd2ss %xmm0,%xmm0,%xmm0
  0x00007fafb8c71b6d: movzbl  0x1(%r13),%ebx
  0x00007fafb8c71b72: incq    %r13
  0x00007fafb8c71b75: movabs  $0x7fafd89a6880,%r10
  0x00007fafb8c71b7f: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c71b83: nopl    0x0(%rax,%rax)
  0x00007fafb8c71b88: add     %al,(%rax)
  0x00007fafb8c71b8a: add     %al,(%rax)
  0x00007fafb8c71b8c: add     %al,(%rax)
  0x00007fafb8c71b8e: add     %al,(%rax)
  0x00007fafb8c71b90: add     %al,(%rax)
  0x00007fafb8c71b92: add     %al,(%rax)
  0x00007fafb8c71b94: add     %al,(%rax)
  0x00007fafb8c71b96: add     %al,(%rax)
  0x00007fafb8c71b98: add     %al,(%rax)
  0x00007fafb8c71b9a: add     %al,(%rax)
  0x00007fafb8c71b9c: add     %al,(%rax)
  0x00007fafb8c71b9e: add     %al,(%rax)

----------------------------------------------------------------------
i2b  145 i2b  [0x00007fafb8c71bc0, 0x00007fafb8c71be0]  32 bytes

Argument 0 is unknown.RIP: 0x7fafb8c71bc0 Code size: 0x00000020
  0x00007fafb8c71bc0: mov     (%rsp),%eax
  0x00007fafb8c71bc3: add     $0x8,%rsp
  0x00007fafb8c71bc7: movsbl  %al,%eax
  0x00007fafb8c71bca: movzbl  0x1(%r13),%ebx
  0x00007fafb8c71bcf: incq    %r13
  0x00007fafb8c71bd2: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c71bdc: jmpq    *(%r10,%rbx,8)

----------------------------------------------------------------------
i2c  146 i2c  [0x00007fafb8c71c00, 0x00007fafb8c71c20]  32 bytes

Argument 0 is unknown.RIP: 0x7fafb8c71c00 Code size: 0x00000020
  0x00007fafb8c71c00: mov     (%rsp),%eax
  0x00007fafb8c71c03: add     $0x8,%rsp
  0x00007fafb8c71c07: movzwl  %ax,%eax
  0x00007fafb8c71c0a: movzbl  0x1(%r13),%ebx
  0x00007fafb8c71c0f: incq    %r13
  0x00007fafb8c71c12: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c71c1c: jmpq    *(%r10,%rbx,8)

----------------------------------------------------------------------
i2s  147 i2s  [0x00007fafb8c71c40, 0x00007fafb8c71c60]  32 bytes

Argument 0 is unknown.RIP: 0x7fafb8c71c40 Code size: 0x00000020
  0x00007fafb8c71c40: mov     (%rsp),%eax
  0x00007fafb8c71c43: add     $0x8,%rsp
  0x00007fafb8c71c47: movswl  %ax,%eax
  0x00007fafb8c71c4a: movzbl  0x1(%r13),%ebx
  0x00007fafb8c71c4f: incq    %r13
  0x00007fafb8c71c52: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c71c5c: jmpq    *(%r10,%rbx,8)

----------------------------------------------------------------------
lcmp  148 lcmp  [0x00007fafb8c71c80, 0x00007fafb8c71cc0]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c71c80 Code size: 0x00000040
  0x00007fafb8c71c80: mov     (%rsp),%rax
  0x00007fafb8c71c84: add     $0x10,%rsp
  0x00007fafb8c71c88: mov     (%rsp),%rdx
  0x00007fafb8c71c8c: add     $0x10,%rsp
  0x00007fafb8c71c90: cmp     %rax,%rdx
  0x00007fafb8c71c93: mov     $0xffffffff,%eax
  0x00007fafb8c71c98: jl      0x7fafb8c71ca0
  0x00007fafb8c71c9a: setne   %al
  0x00007fafb8c71c9d: movzbl  %al,%eax
  0x00007fafb8c71ca0: movzbl  0x1(%r13),%ebx
  0x00007fafb8c71ca5: incq    %r13
  0x00007fafb8c71ca8: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c71cb2: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c71cb6: nop
  0x00007fafb8c71cb8: add     %al,(%rax)
  0x00007fafb8c71cba: add     %al,(%rax)
  0x00007fafb8c71cbc: add     %al,(%rax)
  0x00007fafb8c71cbe: add     %al,(%rax)

----------------------------------------------------------------------
fcmpl  149 fcmpl  [0x00007fafb8c71ce0, 0x00007fafb8c71d20]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c71ce0 Code size: 0x00000040
  0x00007fafb8c71ce0: vmovss  (%rsp),%xmm0
  0x00007fafb8c71ce5: add     $0x8,%rsp
  0x00007fafb8c71ce9: vmovss  (%rsp),%xmm1
  0x00007fafb8c71cee: add     $0x8,%rsp
  0x00007fafb8c71cf2: vucomiss %xmm0,%xmm1
  0x00007fafb8c71cf6: mov     $0xffffffff,%eax
  0x00007fafb8c71cfb: jp      0x7fafb8c71d05
  0x00007fafb8c71cfd: jb      0x7fafb8c71d05
  0x00007fafb8c71cff: setne   %dl
  0x00007fafb8c71d02: movzbl  %dl,%eax
  0x00007fafb8c71d05: movzbl  0x1(%r13),%ebx
  0x00007fafb8c71d0a: incq    %r13
  0x00007fafb8c71d0d: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c71d17: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c71d1b: nopl    0x0(%rax,%rax)

----------------------------------------------------------------------
fcmpg  150 fcmpg  [0x00007fafb8c71d40, 0x00007fafb8c71d80]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c71d40 Code size: 0x00000040
  0x00007fafb8c71d40: vmovss  (%rsp),%xmm0
  0x00007fafb8c71d45: add     $0x8,%rsp
  0x00007fafb8c71d49: vmovss  (%rsp),%xmm1
  0x00007fafb8c71d4e: add     $0x8,%rsp
  0x00007fafb8c71d52: vucomiss %xmm0,%xmm1
  0x00007fafb8c71d56: mov     $0x1,%eax
  0x00007fafb8c71d5b: jp      0x7fafb8c71d68
  0x00007fafb8c71d5d: jnbe    0x7fafb8c71d68
  0x00007fafb8c71d5f: mov     $0x0,%eax
  0x00007fafb8c71d64: je      0x7fafb8c71d68
  0x00007fafb8c71d66: decl    %eax
  0x00007fafb8c71d68: movzbl  0x1(%r13),%ebx
  0x00007fafb8c71d6d: incq    %r13
  0x00007fafb8c71d70: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c71d7a: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c71d7e: nop

----------------------------------------------------------------------
dcmpl  151 dcmpl  [0x00007fafb8c71da0, 0x00007fafb8c71de0]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c71da0 Code size: 0x00000040
  0x00007fafb8c71da0: vmovsd  (%rsp),%xmm0
  0x00007fafb8c71da5: add     $0x10,%rsp
  0x00007fafb8c71da9: vmovsd  (%rsp),%xmm1
  0x00007fafb8c71dae: add     $0x10,%rsp
  0x00007fafb8c71db2: vucomisd %xmm0,%xmm1
  0x00007fafb8c71db6: mov     $0xffffffff,%eax
  0x00007fafb8c71dbb: jp      0x7fafb8c71dc5
  0x00007fafb8c71dbd: jb      0x7fafb8c71dc5
  0x00007fafb8c71dbf: setne   %dl
  0x00007fafb8c71dc2: movzbl  %dl,%eax
  0x00007fafb8c71dc5: movzbl  0x1(%r13),%ebx
  0x00007fafb8c71dca: incq    %r13
  0x00007fafb8c71dcd: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c71dd7: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c71ddb: nopl    0x0(%rax,%rax)

----------------------------------------------------------------------
dcmpg  152 dcmpg  [0x00007fafb8c71e00, 0x00007fafb8c71e40]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c71e00 Code size: 0x00000040
  0x00007fafb8c71e00: vmovsd  (%rsp),%xmm0
  0x00007fafb8c71e05: add     $0x10,%rsp
  0x00007fafb8c71e09: vmovsd  (%rsp),%xmm1
  0x00007fafb8c71e0e: add     $0x10,%rsp
  0x00007fafb8c71e12: vucomisd %xmm0,%xmm1
  0x00007fafb8c71e16: mov     $0x1,%eax
  0x00007fafb8c71e1b: jp      0x7fafb8c71e28
  0x00007fafb8c71e1d: jnbe    0x7fafb8c71e28
  0x00007fafb8c71e1f: mov     $0x0,%eax
  0x00007fafb8c71e24: je      0x7fafb8c71e28
  0x00007fafb8c71e26: decl    %eax
  0x00007fafb8c71e28: movzbl  0x1(%r13),%ebx
  0x00007fafb8c71e2d: incq    %r13
  0x00007fafb8c71e30: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c71e3a: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c71e3e: nop

----------------------------------------------------------------------
ifeq  153 ifeq  [0x00007fafb8c71e60, 0x00007fafb8c72280]  1056 bytes

Argument 0 is unknown.RIP: 0x7fafb8c71e60 Code size: 0x00000420
  0x00007fafb8c71e60: mov     (%rsp),%eax
  0x00007fafb8c71e63: add     $0x8,%rsp
  0x00007fafb8c71e67: test    %eax,%eax
  0x00007fafb8c71e69: jne     0x7fafb8c72237
  0x00007fafb8c71e6f: mov     0xffffffffffffffe8(%rbp),%rcx
  0x00007fafb8c71e73: mov     0xffffffffffffffd8(%rbp),%rax
  0x00007fafb8c71e77: test    %rax,%rax
  0x00007fafb8c71e7a: je      0x7fafb8c71e98
  0x00007fafb8c71e80: mov     0x8(%rax),%rbx
  0x00007fafb8c71e84: add     $0x1,%rbx
  0x00007fafb8c71e88: sbb     $0x0,%rbx
  0x00007fafb8c71e8c: mov     %rbx,0x8(%rax)
  0x00007fafb8c71e90: add     0x10(%rax),%rax
  0x00007fafb8c71e94: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c71e98: movswl  0x1(%r13),%edx
  0x00007fafb8c71e9d: bswap   %edx
  0x00007fafb8c71e9f: sar     $0x10,%edx
  0x00007fafb8c71ea2: movsxd  %edx,%rdx
  0x00007fafb8c71ea5: add     %rdx,%r13
  0x00007fafb8c71ea8: test    %edx,%edx
  0x00007fafb8c71eaa: jns     0x7fafb8c71fac
  0x00007fafb8c71eb0: mov     0x18(%rcx),%rax
  0x00007fafb8c71eb4: test    %rax,%rax
  0x00007fafb8c71eb7: jne     0x7fafb8c71f6d
  0x00007fafb8c71ebd: push    %rdx
  0x00007fafb8c71ebe: push    %rcx
  0x00007fafb8c71ebf: callq   0x7fafb8c71ec9
  0x00007fafb8c71ec4: jmpq    0x7fafb8c71f5e
  0x00007fafb8c71ec9: mov     %rcx,%rsi
  0x00007fafb8c71ecc: lea     0x8(%rsp),%rax
  0x00007fafb8c71ed1: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c71ed5: mov     %r15,%rdi
  0x00007fafb8c71ed8: vzeroupper
  0x00007fafb8c71edb: mov     %rbp,0x330(%r15)
  0x00007fafb8c71ee2: mov     %rax,0x320(%r15)
  0x00007fafb8c71ee9: test    $0xf,%esp
  0x00007fafb8c71eef: je      0x7fafb8c71f07
  0x00007fafb8c71ef5: sub     $0x8,%rsp
  0x00007fafb8c71ef9: callq   0x7fafd7d85400
  0x00007fafb8c71efe: add     $0x8,%rsp
  0x00007fafb8c71f02: jmpq    0x7fafb8c71f0c
  0x00007fafb8c71f07: callq   0x7fafd7d85400
  0x00007fafb8c71f0c: movabs  $0x0,%r10
  0x00007fafb8c71f16: mov     %r10,0x320(%r15)
  0x00007fafb8c71f1d: movabs  $0x0,%r10
  0x00007fafb8c71f27: mov     %r10,0x330(%r15)
  0x00007fafb8c71f2e: movabs  $0x0,%r10
  0x00007fafb8c71f38: mov     %r10,0x328(%r15)
  0x00007fafb8c71f3f: vzeroupper
  0x00007fafb8c71f42: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c71f4a: je      0x7fafb8c71f55
  0x00007fafb8c71f50: jmpq    0x7fafb8c5c780
  0x00007fafb8c71f55: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c71f59: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c71f5d: retq
  0x00007fafb8c71f5e: pop     %rcx
  0x00007fafb8c71f5f: pop     %rdx
  0x00007fafb8c71f60: mov     0x18(%rcx),%rax
  0x00007fafb8c71f64: test    %rax,%rax
  0x00007fafb8c71f67: je      0x7fafb8c71fac
  0x00007fafb8c71f6d: mov     0x10(%rcx),%rbx
  0x00007fafb8c71f71: test    %rbx,%rbx
  0x00007fafb8c71f74: je      0x7fafb8c71f96
  0x00007fafb8c71f76: mov     0x108(%rbx),%eax
  0x00007fafb8c71f7c: add     $0x8,%eax
  0x00007fafb8c71f7f: mov     %eax,0x108(%rbx)
  0x00007fafb8c71f85: and     0x11c(%rbx),%eax
  0x00007fafb8c71f8b: je      0x7fafb8c720c6
  0x00007fafb8c71f91: jmpq    0x7fafb8c71fac
  0x00007fafb8c71f96: mov     0x18(%rcx),%rcx
  0x00007fafb8c71f9a: mov     0x1c(%rcx),%eax
  0x00007fafb8c71f9d: add     $0x8,%eax
  0x00007fafb8c71fa0: mov     %eax,0x1c(%rcx)
  0x00007fafb8c71fa3: and     0x34(%rcx),%eax
  0x00007fafb8c71fa6: je      0x7fafb8c720c6
  0x00007fafb8c71fac: movzbl  0x0(%r13),%ebx
  0x00007fafb8c71fb1: testb   $0x8,0x108(%r15)
  0x00007fafb8c71fb9: je      0x7fafb8c71fc7
  0x00007fafb8c71fbb: movabs  $0x7fafd899e080,%r10
  0x00007fafb8c71fc5: jmp     0x7fafb8c71fd1
  0x00007fafb8c71fc7: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c71fd1: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c71fd5: callq   0x7fafb8c71fdf
  0x00007fafb8c71fda: jmpq    0x7fafb8c72071
  0x00007fafb8c71fdf: lea     0x8(%rsp),%rax
  0x00007fafb8c71fe4: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c71fe8: mov     %r15,%rdi
  0x00007fafb8c71feb: vzeroupper
  0x00007fafb8c71fee: mov     %rbp,0x330(%r15)
  0x00007fafb8c71ff5: mov     %rax,0x320(%r15)
  0x00007fafb8c71ffc: test    $0xf,%esp
  0x00007fafb8c72002: je      0x7fafb8c7201a
  0x00007fafb8c72008: sub     $0x8,%rsp
  0x00007fafb8c7200c: callq   0x7fafd7d84c70
  0x00007fafb8c72011: add     $0x8,%rsp
  0x00007fafb8c72015: jmpq    0x7fafb8c7201f
  0x00007fafb8c7201a: callq   0x7fafd7d84c70
  0x00007fafb8c7201f: movabs  $0x0,%r10
  0x00007fafb8c72029: mov     %r10,0x320(%r15)
  0x00007fafb8c72030: movabs  $0x0,%r10
  0x00007fafb8c7203a: mov     %r10,0x330(%r15)
  0x00007fafb8c72041: movabs  $0x0,%r10
  0x00007fafb8c7204b: mov     %r10,0x328(%r15)
  0x00007fafb8c72052: vzeroupper
  0x00007fafb8c72055: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7205d: je      0x7fafb8c72068
  0x00007fafb8c72063: jmpq    0x7fafb8c5c780
  0x00007fafb8c72068: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7206c: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c72070: retq
  0x00007fafb8c72071: push    %rax
  0x00007fafb8c72072: push    %rbx
  0x00007fafb8c72073: mov     0xffffffffffffffe8(%rbp),%rbx
  0x00007fafb8c72077: mov     0x10(%rbx),%rax
  0x00007fafb8c7207b: test    %rax,%rax
  0x00007fafb8c7207e: je      0x7fafb8c720bb
  0x00007fafb8c72084: mov     %r13,%rsi
  0x00007fafb8c72087: mov     %rbx,%rdi
  0x00007fafb8c7208a: test    $0xf,%esp
  0x00007fafb8c72090: je      0x7fafb8c720a8
  0x00007fafb8c72096: sub     $0x8,%rsp
  0x00007fafb8c7209a: callq   0x7fafd7d84c20
  0x00007fafb8c7209f: add     $0x8,%rsp
  0x00007fafb8c720a3: jmpq    0x7fafb8c720ad
  0x00007fafb8c720a8: callq   0x7fafd7d84c20
  0x00007fafb8c720ad: mov     0x10(%rbx),%rbx
  0x00007fafb8c720b1: add     $0x138,%rbx
  0x00007fafb8c720b8: add     %rbx,%rax
  0x00007fafb8c720bb: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c720bf: pop     %rbx
  0x00007fafb8c720c0: pop     %rax
  0x00007fafb8c720c1: jmpq    0x7fafb8c71fac
  0x00007fafb8c720c6: neg     %rdx
  0x00007fafb8c720c9: add     %r13,%rdx
  0x00007fafb8c720cc: callq   0x7fafb8c720d6
  0x00007fafb8c720d1: jmpq    0x7fafb8c7216b
  0x00007fafb8c720d6: mov     %rdx,%rsi
  0x00007fafb8c720d9: lea     0x8(%rsp),%rax
  0x00007fafb8c720de: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c720e2: mov     %r15,%rdi
  0x00007fafb8c720e5: vzeroupper
  0x00007fafb8c720e8: mov     %rbp,0x330(%r15)
  0x00007fafb8c720ef: mov     %rax,0x320(%r15)
  0x00007fafb8c720f6: test    $0xf,%esp
  0x00007fafb8c720fc: je      0x7fafb8c72114
  0x00007fafb8c72102: sub     $0x8,%rsp
  0x00007fafb8c72106: callq   0x7fafd7d84b40
  0x00007fafb8c7210b: add     $0x8,%rsp
  0x00007fafb8c7210f: jmpq    0x7fafb8c72119
  0x00007fafb8c72114: callq   0x7fafd7d84b40
  0x00007fafb8c72119: movabs  $0x0,%r10
  0x00007fafb8c72123: mov     %r10,0x320(%r15)
  0x00007fafb8c7212a: movabs  $0x0,%r10
  0x00007fafb8c72134: mov     %r10,0x330(%r15)
  0x00007fafb8c7213b: movabs  $0x0,%r10
  0x00007fafb8c72145: mov     %r10,0x328(%r15)
  0x00007fafb8c7214c: vzeroupper
  0x00007fafb8c7214f: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c72157: je      0x7fafb8c72162
  0x00007fafb8c7215d: jmpq    0x7fafb8c5c780
  0x00007fafb8c72162: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c72166: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7216a: retq
  0x00007fafb8c7216b: test    %rax,%rax
  0x00007fafb8c7216e: je      0x7fafb8c71fac
  0x00007fafb8c72174: cmpb    $0x0,0x156(%rax)
  0x00007fafb8c7217b: jne     0x7fafb8c71fac
  0x00007fafb8c72181: mov     %rax,%rbx
  0x00007fafb8c72184: callq   0x7fafb8c7218e
  0x00007fafb8c72189: jmpq    0x7fafb8c72220
  0x00007fafb8c7218e: lea     0x8(%rsp),%rax
  0x00007fafb8c72193: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c72197: mov     %r15,%rdi
  0x00007fafb8c7219a: vzeroupper
  0x00007fafb8c7219d: mov     %rbp,0x330(%r15)
  0x00007fafb8c721a4: mov     %rax,0x320(%r15)
  0x00007fafb8c721ab: test    $0xf,%esp
  0x00007fafb8c721b1: je      0x7fafb8c721c9
  0x00007fafb8c721b7: sub     $0x8,%rsp
  0x00007fafb8c721bb: callq   0x7fafd81ee030
  0x00007fafb8c721c0: add     $0x8,%rsp
  0x00007fafb8c721c4: jmpq    0x7fafb8c721ce
  0x00007fafb8c721c9: callq   0x7fafd81ee030
  0x00007fafb8c721ce: movabs  $0x0,%r10
  0x00007fafb8c721d8: mov     %r10,0x320(%r15)
  0x00007fafb8c721df: movabs  $0x0,%r10
  0x00007fafb8c721e9: mov     %r10,0x330(%r15)
  0x00007fafb8c721f0: movabs  $0x0,%r10
  0x00007fafb8c721fa: mov     %r10,0x328(%r15)
  0x00007fafb8c72201: vzeroupper
  0x00007fafb8c72204: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7220c: je      0x7fafb8c72217
  0x00007fafb8c72212: jmpq    0x7fafb8c5c780
  0x00007fafb8c72217: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7221b: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7221f: retq
  0x00007fafb8c72220: mov     %rax,%rsi
  0x00007fafb8c72223: mov     0xfffffffffffffff8(%rbp),%rdx
  0x00007fafb8c72227: leave
  0x00007fafb8c72228: pop     %rcx
  0x00007fafb8c72229: mov     %rdx,%rsp
  0x00007fafb8c7222c: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c72230: push    %rcx
  0x00007fafb8c72231: jmpq    *0x110(%rbx)
  0x00007fafb8c72237: mov     0xffffffffffffffd8(%rbp),%rax
  0x00007fafb8c7223b: test    %rax,%rax
  0x00007fafb8c7223e: je      0x7fafb8c72256
  0x00007fafb8c72244: addq    $0x1,0x18(%rax)
  0x00007fafb8c72249: sbbq    $0x0,0x18(%rax)
  0x00007fafb8c7224e: add     $0x20,%rax
  0x00007fafb8c72252: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c72256: movzbl  0x3(%r13),%ebx
  0x00007fafb8c7225b: add     $0x3,%r13
  0x00007fafb8c7225f: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c72269: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7226d: nop
  0x00007fafb8c72270: add     %al,(%rax)
  0x00007fafb8c72272: add     %al,(%rax)
  0x00007fafb8c72274: add     %al,(%rax)
  0x00007fafb8c72276: add     %al,(%rax)
  0x00007fafb8c72278: add     %al,(%rax)
  0x00007fafb8c7227a: add     %al,(%rax)
  0x00007fafb8c7227c: add     %al,(%rax)
  0x00007fafb8c7227e: add     %al,(%rax)

----------------------------------------------------------------------
ifne  154 ifne  [0x00007fafb8c722a0, 0x00007fafb8c726c0]  1056 bytes

Argument 0 is unknown.RIP: 0x7fafb8c722a0 Code size: 0x00000420
  0x00007fafb8c722a0: mov     (%rsp),%eax
  0x00007fafb8c722a3: add     $0x8,%rsp
  0x00007fafb8c722a7: test    %eax,%eax
  0x00007fafb8c722a9: je      0x7fafb8c72677
  0x00007fafb8c722af: mov     0xffffffffffffffe8(%rbp),%rcx
  0x00007fafb8c722b3: mov     0xffffffffffffffd8(%rbp),%rax
  0x00007fafb8c722b7: test    %rax,%rax
  0x00007fafb8c722ba: je      0x7fafb8c722d8
  0x00007fafb8c722c0: mov     0x8(%rax),%rbx
  0x00007fafb8c722c4: add     $0x1,%rbx
  0x00007fafb8c722c8: sbb     $0x0,%rbx
  0x00007fafb8c722cc: mov     %rbx,0x8(%rax)
  0x00007fafb8c722d0: add     0x10(%rax),%rax
  0x00007fafb8c722d4: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c722d8: movswl  0x1(%r13),%edx
  0x00007fafb8c722dd: bswap   %edx
  0x00007fafb8c722df: sar     $0x10,%edx
  0x00007fafb8c722e2: movsxd  %edx,%rdx
  0x00007fafb8c722e5: add     %rdx,%r13
  0x00007fafb8c722e8: test    %edx,%edx
  0x00007fafb8c722ea: jns     0x7fafb8c723ec
  0x00007fafb8c722f0: mov     0x18(%rcx),%rax
  0x00007fafb8c722f4: test    %rax,%rax
  0x00007fafb8c722f7: jne     0x7fafb8c723ad
  0x00007fafb8c722fd: push    %rdx
  0x00007fafb8c722fe: push    %rcx
  0x00007fafb8c722ff: callq   0x7fafb8c72309
  0x00007fafb8c72304: jmpq    0x7fafb8c7239e
  0x00007fafb8c72309: mov     %rcx,%rsi
  0x00007fafb8c7230c: lea     0x8(%rsp),%rax
  0x00007fafb8c72311: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c72315: mov     %r15,%rdi
  0x00007fafb8c72318: vzeroupper
  0x00007fafb8c7231b: mov     %rbp,0x330(%r15)
  0x00007fafb8c72322: mov     %rax,0x320(%r15)
  0x00007fafb8c72329: test    $0xf,%esp
  0x00007fafb8c7232f: je      0x7fafb8c72347
  0x00007fafb8c72335: sub     $0x8,%rsp
  0x00007fafb8c72339: callq   0x7fafd7d85400
  0x00007fafb8c7233e: add     $0x8,%rsp
  0x00007fafb8c72342: jmpq    0x7fafb8c7234c
  0x00007fafb8c72347: callq   0x7fafd7d85400
  0x00007fafb8c7234c: movabs  $0x0,%r10
  0x00007fafb8c72356: mov     %r10,0x320(%r15)
  0x00007fafb8c7235d: movabs  $0x0,%r10
  0x00007fafb8c72367: mov     %r10,0x330(%r15)
  0x00007fafb8c7236e: movabs  $0x0,%r10
  0x00007fafb8c72378: mov     %r10,0x328(%r15)
  0x00007fafb8c7237f: vzeroupper
  0x00007fafb8c72382: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7238a: je      0x7fafb8c72395
  0x00007fafb8c72390: jmpq    0x7fafb8c5c780
  0x00007fafb8c72395: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c72399: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7239d: retq
  0x00007fafb8c7239e: pop     %rcx
  0x00007fafb8c7239f: pop     %rdx
  0x00007fafb8c723a0: mov     0x18(%rcx),%rax
  0x00007fafb8c723a4: test    %rax,%rax
  0x00007fafb8c723a7: je      0x7fafb8c723ec
  0x00007fafb8c723ad: mov     0x10(%rcx),%rbx
  0x00007fafb8c723b1: test    %rbx,%rbx
  0x00007fafb8c723b4: je      0x7fafb8c723d6
  0x00007fafb8c723b6: mov     0x108(%rbx),%eax
  0x00007fafb8c723bc: add     $0x8,%eax
  0x00007fafb8c723bf: mov     %eax,0x108(%rbx)
  0x00007fafb8c723c5: and     0x11c(%rbx),%eax
  0x00007fafb8c723cb: je      0x7fafb8c72506
  0x00007fafb8c723d1: jmpq    0x7fafb8c723ec
  0x00007fafb8c723d6: mov     0x18(%rcx),%rcx
  0x00007fafb8c723da: mov     0x1c(%rcx),%eax
  0x00007fafb8c723dd: add     $0x8,%eax
  0x00007fafb8c723e0: mov     %eax,0x1c(%rcx)
  0x00007fafb8c723e3: and     0x34(%rcx),%eax
  0x00007fafb8c723e6: je      0x7fafb8c72506
  0x00007fafb8c723ec: movzbl  0x0(%r13),%ebx
  0x00007fafb8c723f1: testb   $0x8,0x108(%r15)
  0x00007fafb8c723f9: je      0x7fafb8c72407
  0x00007fafb8c723fb: movabs  $0x7fafd899e080,%r10
  0x00007fafb8c72405: jmp     0x7fafb8c72411
  0x00007fafb8c72407: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c72411: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c72415: callq   0x7fafb8c7241f
  0x00007fafb8c7241a: jmpq    0x7fafb8c724b1
  0x00007fafb8c7241f: lea     0x8(%rsp),%rax
  0x00007fafb8c72424: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c72428: mov     %r15,%rdi
  0x00007fafb8c7242b: vzeroupper
  0x00007fafb8c7242e: mov     %rbp,0x330(%r15)
  0x00007fafb8c72435: mov     %rax,0x320(%r15)
  0x00007fafb8c7243c: test    $0xf,%esp
  0x00007fafb8c72442: je      0x7fafb8c7245a
  0x00007fafb8c72448: sub     $0x8,%rsp
  0x00007fafb8c7244c: callq   0x7fafd7d84c70
  0x00007fafb8c72451: add     $0x8,%rsp
  0x00007fafb8c72455: jmpq    0x7fafb8c7245f
  0x00007fafb8c7245a: callq   0x7fafd7d84c70
  0x00007fafb8c7245f: movabs  $0x0,%r10
  0x00007fafb8c72469: mov     %r10,0x320(%r15)
  0x00007fafb8c72470: movabs  $0x0,%r10
  0x00007fafb8c7247a: mov     %r10,0x330(%r15)
  0x00007fafb8c72481: movabs  $0x0,%r10
  0x00007fafb8c7248b: mov     %r10,0x328(%r15)
  0x00007fafb8c72492: vzeroupper
  0x00007fafb8c72495: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7249d: je      0x7fafb8c724a8
  0x00007fafb8c724a3: jmpq    0x7fafb8c5c780
  0x00007fafb8c724a8: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c724ac: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c724b0: retq
  0x00007fafb8c724b1: push    %rax
  0x00007fafb8c724b2: push    %rbx
  0x00007fafb8c724b3: mov     0xffffffffffffffe8(%rbp),%rbx
  0x00007fafb8c724b7: mov     0x10(%rbx),%rax
  0x00007fafb8c724bb: test    %rax,%rax
  0x00007fafb8c724be: je      0x7fafb8c724fb
  0x00007fafb8c724c4: mov     %r13,%rsi
  0x00007fafb8c724c7: mov     %rbx,%rdi
  0x00007fafb8c724ca: test    $0xf,%esp
  0x00007fafb8c724d0: je      0x7fafb8c724e8
  0x00007fafb8c724d6: sub     $0x8,%rsp
  0x00007fafb8c724da: callq   0x7fafd7d84c20
  0x00007fafb8c724df: add     $0x8,%rsp
  0x00007fafb8c724e3: jmpq    0x7fafb8c724ed
  0x00007fafb8c724e8: callq   0x7fafd7d84c20
  0x00007fafb8c724ed: mov     0x10(%rbx),%rbx
  0x00007fafb8c724f1: add     $0x138,%rbx
  0x00007fafb8c724f8: add     %rbx,%rax
  0x00007fafb8c724fb: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c724ff: pop     %rbx
  0x00007fafb8c72500: pop     %rax
  0x00007fafb8c72501: jmpq    0x7fafb8c723ec
  0x00007fafb8c72506: neg     %rdx
  0x00007fafb8c72509: add     %r13,%rdx
  0x00007fafb8c7250c: callq   0x7fafb8c72516
  0x00007fafb8c72511: jmpq    0x7fafb8c725ab
  0x00007fafb8c72516: mov     %rdx,%rsi
  0x00007fafb8c72519: lea     0x8(%rsp),%rax
  0x00007fafb8c7251e: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c72522: mov     %r15,%rdi
  0x00007fafb8c72525: vzeroupper
  0x00007fafb8c72528: mov     %rbp,0x330(%r15)
  0x00007fafb8c7252f: mov     %rax,0x320(%r15)
  0x00007fafb8c72536: test    $0xf,%esp
  0x00007fafb8c7253c: je      0x7fafb8c72554
  0x00007fafb8c72542: sub     $0x8,%rsp
  0x00007fafb8c72546: callq   0x7fafd7d84b40
  0x00007fafb8c7254b: add     $0x8,%rsp
  0x00007fafb8c7254f: jmpq    0x7fafb8c72559
  0x00007fafb8c72554: callq   0x7fafd7d84b40
  0x00007fafb8c72559: movabs  $0x0,%r10
  0x00007fafb8c72563: mov     %r10,0x320(%r15)
  0x00007fafb8c7256a: movabs  $0x0,%r10
  0x00007fafb8c72574: mov     %r10,0x330(%r15)
  0x00007fafb8c7257b: movabs  $0x0,%r10
  0x00007fafb8c72585: mov     %r10,0x328(%r15)
  0x00007fafb8c7258c: vzeroupper
  0x00007fafb8c7258f: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c72597: je      0x7fafb8c725a2
  0x00007fafb8c7259d: jmpq    0x7fafb8c5c780
  0x00007fafb8c725a2: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c725a6: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c725aa: retq
  0x00007fafb8c725ab: test    %rax,%rax
  0x00007fafb8c725ae: je      0x7fafb8c723ec
  0x00007fafb8c725b4: cmpb    $0x0,0x156(%rax)
  0x00007fafb8c725bb: jne     0x7fafb8c723ec
  0x00007fafb8c725c1: mov     %rax,%rbx
  0x00007fafb8c725c4: callq   0x7fafb8c725ce
  0x00007fafb8c725c9: jmpq    0x7fafb8c72660
  0x00007fafb8c725ce: lea     0x8(%rsp),%rax
  0x00007fafb8c725d3: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c725d7: mov     %r15,%rdi
  0x00007fafb8c725da: vzeroupper
  0x00007fafb8c725dd: mov     %rbp,0x330(%r15)
  0x00007fafb8c725e4: mov     %rax,0x320(%r15)
  0x00007fafb8c725eb: test    $0xf,%esp
  0x00007fafb8c725f1: je      0x7fafb8c72609
  0x00007fafb8c725f7: sub     $0x8,%rsp
  0x00007fafb8c725fb: callq   0x7fafd81ee030
  0x00007fafb8c72600: add     $0x8,%rsp
  0x00007fafb8c72604: jmpq    0x7fafb8c7260e
  0x00007fafb8c72609: callq   0x7fafd81ee030
  0x00007fafb8c7260e: movabs  $0x0,%r10
  0x00007fafb8c72618: mov     %r10,0x320(%r15)
  0x00007fafb8c7261f: movabs  $0x0,%r10
  0x00007fafb8c72629: mov     %r10,0x330(%r15)
  0x00007fafb8c72630: movabs  $0x0,%r10
  0x00007fafb8c7263a: mov     %r10,0x328(%r15)
  0x00007fafb8c72641: vzeroupper
  0x00007fafb8c72644: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7264c: je      0x7fafb8c72657
  0x00007fafb8c72652: jmpq    0x7fafb8c5c780
  0x00007fafb8c72657: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7265b: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7265f: retq
  0x00007fafb8c72660: mov     %rax,%rsi
  0x00007fafb8c72663: mov     0xfffffffffffffff8(%rbp),%rdx
  0x00007fafb8c72667: leave
  0x00007fafb8c72668: pop     %rcx
  0x00007fafb8c72669: mov     %rdx,%rsp
  0x00007fafb8c7266c: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c72670: push    %rcx
  0x00007fafb8c72671: jmpq    *0x110(%rbx)
  0x00007fafb8c72677: mov     0xffffffffffffffd8(%rbp),%rax
  0x00007fafb8c7267b: test    %rax,%rax
  0x00007fafb8c7267e: je      0x7fafb8c72696
  0x00007fafb8c72684: addq    $0x1,0x18(%rax)
  0x00007fafb8c72689: sbbq    $0x0,0x18(%rax)
  0x00007fafb8c7268e: add     $0x20,%rax
  0x00007fafb8c72692: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c72696: movzbl  0x3(%r13),%ebx
  0x00007fafb8c7269b: add     $0x3,%r13
  0x00007fafb8c7269f: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c726a9: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c726ad: nop
  0x00007fafb8c726b0: add     %al,(%rax)
  0x00007fafb8c726b2: add     %al,(%rax)
  0x00007fafb8c726b4: add     %al,(%rax)
  0x00007fafb8c726b6: add     %al,(%rax)
  0x00007fafb8c726b8: add     %al,(%rax)
  0x00007fafb8c726ba: add     %al,(%rax)
  0x00007fafb8c726bc: add     %al,(%rax)
  0x00007fafb8c726be: add     %al,(%rax)

----------------------------------------------------------------------
iflt  155 iflt  [0x00007fafb8c726e0, 0x00007fafb8c72b00]  1056 bytes

Argument 0 is unknown.RIP: 0x7fafb8c726e0 Code size: 0x00000420
  0x00007fafb8c726e0: mov     (%rsp),%eax
  0x00007fafb8c726e3: add     $0x8,%rsp
  0x00007fafb8c726e7: test    %eax,%eax
  0x00007fafb8c726e9: jnl     0x7fafb8c72ab7
  0x00007fafb8c726ef: mov     0xffffffffffffffe8(%rbp),%rcx
  0x00007fafb8c726f3: mov     0xffffffffffffffd8(%rbp),%rax
  0x00007fafb8c726f7: test    %rax,%rax
  0x00007fafb8c726fa: je      0x7fafb8c72718
  0x00007fafb8c72700: mov     0x8(%rax),%rbx
  0x00007fafb8c72704: add     $0x1,%rbx
  0x00007fafb8c72708: sbb     $0x0,%rbx
  0x00007fafb8c7270c: mov     %rbx,0x8(%rax)
  0x00007fafb8c72710: add     0x10(%rax),%rax
  0x00007fafb8c72714: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c72718: movswl  0x1(%r13),%edx
  0x00007fafb8c7271d: bswap   %edx
  0x00007fafb8c7271f: sar     $0x10,%edx
  0x00007fafb8c72722: movsxd  %edx,%rdx
  0x00007fafb8c72725: add     %rdx,%r13
  0x00007fafb8c72728: test    %edx,%edx
  0x00007fafb8c7272a: jns     0x7fafb8c7282c
  0x00007fafb8c72730: mov     0x18(%rcx),%rax
  0x00007fafb8c72734: test    %rax,%rax
  0x00007fafb8c72737: jne     0x7fafb8c727ed
  0x00007fafb8c7273d: push    %rdx
  0x00007fafb8c7273e: push    %rcx
  0x00007fafb8c7273f: callq   0x7fafb8c72749
  0x00007fafb8c72744: jmpq    0x7fafb8c727de
  0x00007fafb8c72749: mov     %rcx,%rsi
  0x00007fafb8c7274c: lea     0x8(%rsp),%rax
  0x00007fafb8c72751: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c72755: mov     %r15,%rdi
  0x00007fafb8c72758: vzeroupper
  0x00007fafb8c7275b: mov     %rbp,0x330(%r15)
  0x00007fafb8c72762: mov     %rax,0x320(%r15)
  0x00007fafb8c72769: test    $0xf,%esp
  0x00007fafb8c7276f: je      0x7fafb8c72787
  0x00007fafb8c72775: sub     $0x8,%rsp
  0x00007fafb8c72779: callq   0x7fafd7d85400
  0x00007fafb8c7277e: add     $0x8,%rsp
  0x00007fafb8c72782: jmpq    0x7fafb8c7278c
  0x00007fafb8c72787: callq   0x7fafd7d85400
  0x00007fafb8c7278c: movabs  $0x0,%r10
  0x00007fafb8c72796: mov     %r10,0x320(%r15)
  0x00007fafb8c7279d: movabs  $0x0,%r10
  0x00007fafb8c727a7: mov     %r10,0x330(%r15)
  0x00007fafb8c727ae: movabs  $0x0,%r10
  0x00007fafb8c727b8: mov     %r10,0x328(%r15)
  0x00007fafb8c727bf: vzeroupper
  0x00007fafb8c727c2: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c727ca: je      0x7fafb8c727d5
  0x00007fafb8c727d0: jmpq    0x7fafb8c5c780
  0x00007fafb8c727d5: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c727d9: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c727dd: retq
  0x00007fafb8c727de: pop     %rcx
  0x00007fafb8c727df: pop     %rdx
  0x00007fafb8c727e0: mov     0x18(%rcx),%rax
  0x00007fafb8c727e4: test    %rax,%rax
  0x00007fafb8c727e7: je      0x7fafb8c7282c
  0x00007fafb8c727ed: mov     0x10(%rcx),%rbx
  0x00007fafb8c727f1: test    %rbx,%rbx
  0x00007fafb8c727f4: je      0x7fafb8c72816
  0x00007fafb8c727f6: mov     0x108(%rbx),%eax
  0x00007fafb8c727fc: add     $0x8,%eax
  0x00007fafb8c727ff: mov     %eax,0x108(%rbx)
  0x00007fafb8c72805: and     0x11c(%rbx),%eax
  0x00007fafb8c7280b: je      0x7fafb8c72946
  0x00007fafb8c72811: jmpq    0x7fafb8c7282c
  0x00007fafb8c72816: mov     0x18(%rcx),%rcx
  0x00007fafb8c7281a: mov     0x1c(%rcx),%eax
  0x00007fafb8c7281d: add     $0x8,%eax
  0x00007fafb8c72820: mov     %eax,0x1c(%rcx)
  0x00007fafb8c72823: and     0x34(%rcx),%eax
  0x00007fafb8c72826: je      0x7fafb8c72946
  0x00007fafb8c7282c: movzbl  0x0(%r13),%ebx
  0x00007fafb8c72831: testb   $0x8,0x108(%r15)
  0x00007fafb8c72839: je      0x7fafb8c72847
  0x00007fafb8c7283b: movabs  $0x7fafd899e080,%r10
  0x00007fafb8c72845: jmp     0x7fafb8c72851
  0x00007fafb8c72847: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c72851: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c72855: callq   0x7fafb8c7285f
  0x00007fafb8c7285a: jmpq    0x7fafb8c728f1
  0x00007fafb8c7285f: lea     0x8(%rsp),%rax
  0x00007fafb8c72864: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c72868: mov     %r15,%rdi
  0x00007fafb8c7286b: vzeroupper
  0x00007fafb8c7286e: mov     %rbp,0x330(%r15)
  0x00007fafb8c72875: mov     %rax,0x320(%r15)
  0x00007fafb8c7287c: test    $0xf,%esp
  0x00007fafb8c72882: je      0x7fafb8c7289a
  0x00007fafb8c72888: sub     $0x8,%rsp
  0x00007fafb8c7288c: callq   0x7fafd7d84c70
  0x00007fafb8c72891: add     $0x8,%rsp
  0x00007fafb8c72895: jmpq    0x7fafb8c7289f
  0x00007fafb8c7289a: callq   0x7fafd7d84c70
  0x00007fafb8c7289f: movabs  $0x0,%r10
  0x00007fafb8c728a9: mov     %r10,0x320(%r15)
  0x00007fafb8c728b0: movabs  $0x0,%r10
  0x00007fafb8c728ba: mov     %r10,0x330(%r15)
  0x00007fafb8c728c1: movabs  $0x0,%r10
  0x00007fafb8c728cb: mov     %r10,0x328(%r15)
  0x00007fafb8c728d2: vzeroupper
  0x00007fafb8c728d5: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c728dd: je      0x7fafb8c728e8
  0x00007fafb8c728e3: jmpq    0x7fafb8c5c780
  0x00007fafb8c728e8: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c728ec: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c728f0: retq
  0x00007fafb8c728f1: push    %rax
  0x00007fafb8c728f2: push    %rbx
  0x00007fafb8c728f3: mov     0xffffffffffffffe8(%rbp),%rbx
  0x00007fafb8c728f7: mov     0x10(%rbx),%rax
  0x00007fafb8c728fb: test    %rax,%rax
  0x00007fafb8c728fe: je      0x7fafb8c7293b
  0x00007fafb8c72904: mov     %r13,%rsi
  0x00007fafb8c72907: mov     %rbx,%rdi
  0x00007fafb8c7290a: test    $0xf,%esp
  0x00007fafb8c72910: je      0x7fafb8c72928
  0x00007fafb8c72916: sub     $0x8,%rsp
  0x00007fafb8c7291a: callq   0x7fafd7d84c20
  0x00007fafb8c7291f: add     $0x8,%rsp
  0x00007fafb8c72923: jmpq    0x7fafb8c7292d
  0x00007fafb8c72928: callq   0x7fafd7d84c20
  0x00007fafb8c7292d: mov     0x10(%rbx),%rbx
  0x00007fafb8c72931: add     $0x138,%rbx
  0x00007fafb8c72938: add     %rbx,%rax
  0x00007fafb8c7293b: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c7293f: pop     %rbx
  0x00007fafb8c72940: pop     %rax
  0x00007fafb8c72941: jmpq    0x7fafb8c7282c
  0x00007fafb8c72946: neg     %rdx
  0x00007fafb8c72949: add     %r13,%rdx
  0x00007fafb8c7294c: callq   0x7fafb8c72956
  0x00007fafb8c72951: jmpq    0x7fafb8c729eb
  0x00007fafb8c72956: mov     %rdx,%rsi
  0x00007fafb8c72959: lea     0x8(%rsp),%rax
  0x00007fafb8c7295e: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c72962: mov     %r15,%rdi
  0x00007fafb8c72965: vzeroupper
  0x00007fafb8c72968: mov     %rbp,0x330(%r15)
  0x00007fafb8c7296f: mov     %rax,0x320(%r15)
  0x00007fafb8c72976: test    $0xf,%esp
  0x00007fafb8c7297c: je      0x7fafb8c72994
  0x00007fafb8c72982: sub     $0x8,%rsp
  0x00007fafb8c72986: callq   0x7fafd7d84b40
  0x00007fafb8c7298b: add     $0x8,%rsp
  0x00007fafb8c7298f: jmpq    0x7fafb8c72999
  0x00007fafb8c72994: callq   0x7fafd7d84b40
  0x00007fafb8c72999: movabs  $0x0,%r10
  0x00007fafb8c729a3: mov     %r10,0x320(%r15)
  0x00007fafb8c729aa: movabs  $0x0,%r10
  0x00007fafb8c729b4: mov     %r10,0x330(%r15)
  0x00007fafb8c729bb: movabs  $0x0,%r10
  0x00007fafb8c729c5: mov     %r10,0x328(%r15)
  0x00007fafb8c729cc: vzeroupper
  0x00007fafb8c729cf: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c729d7: je      0x7fafb8c729e2
  0x00007fafb8c729dd: jmpq    0x7fafb8c5c780
  0x00007fafb8c729e2: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c729e6: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c729ea: retq
  0x00007fafb8c729eb: test    %rax,%rax
  0x00007fafb8c729ee: je      0x7fafb8c7282c
  0x00007fafb8c729f4: cmpb    $0x0,0x156(%rax)
  0x00007fafb8c729fb: jne     0x7fafb8c7282c
  0x00007fafb8c72a01: mov     %rax,%rbx
  0x00007fafb8c72a04: callq   0x7fafb8c72a0e
  0x00007fafb8c72a09: jmpq    0x7fafb8c72aa0
  0x00007fafb8c72a0e: lea     0x8(%rsp),%rax
  0x00007fafb8c72a13: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c72a17: mov     %r15,%rdi
  0x00007fafb8c72a1a: vzeroupper
  0x00007fafb8c72a1d: mov     %rbp,0x330(%r15)
  0x00007fafb8c72a24: mov     %rax,0x320(%r15)
  0x00007fafb8c72a2b: test    $0xf,%esp
  0x00007fafb8c72a31: je      0x7fafb8c72a49
  0x00007fafb8c72a37: sub     $0x8,%rsp
  0x00007fafb8c72a3b: callq   0x7fafd81ee030
  0x00007fafb8c72a40: add     $0x8,%rsp
  0x00007fafb8c72a44: jmpq    0x7fafb8c72a4e
  0x00007fafb8c72a49: callq   0x7fafd81ee030
  0x00007fafb8c72a4e: movabs  $0x0,%r10
  0x00007fafb8c72a58: mov     %r10,0x320(%r15)
  0x00007fafb8c72a5f: movabs  $0x0,%r10
  0x00007fafb8c72a69: mov     %r10,0x330(%r15)
  0x00007fafb8c72a70: movabs  $0x0,%r10
  0x00007fafb8c72a7a: mov     %r10,0x328(%r15)
  0x00007fafb8c72a81: vzeroupper
  0x00007fafb8c72a84: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c72a8c: je      0x7fafb8c72a97
  0x00007fafb8c72a92: jmpq    0x7fafb8c5c780
  0x00007fafb8c72a97: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c72a9b: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c72a9f: retq
  0x00007fafb8c72aa0: mov     %rax,%rsi
  0x00007fafb8c72aa3: mov     0xfffffffffffffff8(%rbp),%rdx
  0x00007fafb8c72aa7: leave
  0x00007fafb8c72aa8: pop     %rcx
  0x00007fafb8c72aa9: mov     %rdx,%rsp
  0x00007fafb8c72aac: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c72ab0: push    %rcx
  0x00007fafb8c72ab1: jmpq    *0x110(%rbx)
  0x00007fafb8c72ab7: mov     0xffffffffffffffd8(%rbp),%rax
  0x00007fafb8c72abb: test    %rax,%rax
  0x00007fafb8c72abe: je      0x7fafb8c72ad6
  0x00007fafb8c72ac4: addq    $0x1,0x18(%rax)
  0x00007fafb8c72ac9: sbbq    $0x0,0x18(%rax)
  0x00007fafb8c72ace: add     $0x20,%rax
  0x00007fafb8c72ad2: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c72ad6: movzbl  0x3(%r13),%ebx
  0x00007fafb8c72adb: add     $0x3,%r13
  0x00007fafb8c72adf: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c72ae9: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c72aed: nop
  0x00007fafb8c72af0: add     %al,(%rax)
  0x00007fafb8c72af2: add     %al,(%rax)
  0x00007fafb8c72af4: add     %al,(%rax)
  0x00007fafb8c72af6: add     %al,(%rax)
  0x00007fafb8c72af8: add     %al,(%rax)
  0x00007fafb8c72afa: add     %al,(%rax)
  0x00007fafb8c72afc: add     %al,(%rax)
  0x00007fafb8c72afe: add     %al,(%rax)

----------------------------------------------------------------------
ifge  156 ifge  [0x00007fafb8c72b20, 0x00007fafb8c72f40]  1056 bytes

Argument 0 is unknown.RIP: 0x7fafb8c72b20 Code size: 0x00000420
  0x00007fafb8c72b20: mov     (%rsp),%eax
  0x00007fafb8c72b23: add     $0x8,%rsp
  0x00007fafb8c72b27: test    %eax,%eax
  0x00007fafb8c72b29: jl      0x7fafb8c72ef7
  0x00007fafb8c72b2f: mov     0xffffffffffffffe8(%rbp),%rcx
  0x00007fafb8c72b33: mov     0xffffffffffffffd8(%rbp),%rax
  0x00007fafb8c72b37: test    %rax,%rax
  0x00007fafb8c72b3a: je      0x7fafb8c72b58
  0x00007fafb8c72b40: mov     0x8(%rax),%rbx
  0x00007fafb8c72b44: add     $0x1,%rbx
  0x00007fafb8c72b48: sbb     $0x0,%rbx
  0x00007fafb8c72b4c: mov     %rbx,0x8(%rax)
  0x00007fafb8c72b50: add     0x10(%rax),%rax
  0x00007fafb8c72b54: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c72b58: movswl  0x1(%r13),%edx
  0x00007fafb8c72b5d: bswap   %edx
  0x00007fafb8c72b5f: sar     $0x10,%edx
  0x00007fafb8c72b62: movsxd  %edx,%rdx
  0x00007fafb8c72b65: add     %rdx,%r13
  0x00007fafb8c72b68: test    %edx,%edx
  0x00007fafb8c72b6a: jns     0x7fafb8c72c6c
  0x00007fafb8c72b70: mov     0x18(%rcx),%rax
  0x00007fafb8c72b74: test    %rax,%rax
  0x00007fafb8c72b77: jne     0x7fafb8c72c2d
  0x00007fafb8c72b7d: push    %rdx
  0x00007fafb8c72b7e: push    %rcx
  0x00007fafb8c72b7f: callq   0x7fafb8c72b89
  0x00007fafb8c72b84: jmpq    0x7fafb8c72c1e
  0x00007fafb8c72b89: mov     %rcx,%rsi
  0x00007fafb8c72b8c: lea     0x8(%rsp),%rax
  0x00007fafb8c72b91: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c72b95: mov     %r15,%rdi
  0x00007fafb8c72b98: vzeroupper
  0x00007fafb8c72b9b: mov     %rbp,0x330(%r15)
  0x00007fafb8c72ba2: mov     %rax,0x320(%r15)
  0x00007fafb8c72ba9: test    $0xf,%esp
  0x00007fafb8c72baf: je      0x7fafb8c72bc7
  0x00007fafb8c72bb5: sub     $0x8,%rsp
  0x00007fafb8c72bb9: callq   0x7fafd7d85400
  0x00007fafb8c72bbe: add     $0x8,%rsp
  0x00007fafb8c72bc2: jmpq    0x7fafb8c72bcc
  0x00007fafb8c72bc7: callq   0x7fafd7d85400
  0x00007fafb8c72bcc: movabs  $0x0,%r10
  0x00007fafb8c72bd6: mov     %r10,0x320(%r15)
  0x00007fafb8c72bdd: movabs  $0x0,%r10
  0x00007fafb8c72be7: mov     %r10,0x330(%r15)
  0x00007fafb8c72bee: movabs  $0x0,%r10
  0x00007fafb8c72bf8: mov     %r10,0x328(%r15)
  0x00007fafb8c72bff: vzeroupper
  0x00007fafb8c72c02: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c72c0a: je      0x7fafb8c72c15
  0x00007fafb8c72c10: jmpq    0x7fafb8c5c780
  0x00007fafb8c72c15: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c72c19: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c72c1d: retq
  0x00007fafb8c72c1e: pop     %rcx
  0x00007fafb8c72c1f: pop     %rdx
  0x00007fafb8c72c20: mov     0x18(%rcx),%rax
  0x00007fafb8c72c24: test    %rax,%rax
  0x00007fafb8c72c27: je      0x7fafb8c72c6c
  0x00007fafb8c72c2d: mov     0x10(%rcx),%rbx
  0x00007fafb8c72c31: test    %rbx,%rbx
  0x00007fafb8c72c34: je      0x7fafb8c72c56
  0x00007fafb8c72c36: mov     0x108(%rbx),%eax
  0x00007fafb8c72c3c: add     $0x8,%eax
  0x00007fafb8c72c3f: mov     %eax,0x108(%rbx)
  0x00007fafb8c72c45: and     0x11c(%rbx),%eax
  0x00007fafb8c72c4b: je      0x7fafb8c72d86
  0x00007fafb8c72c51: jmpq    0x7fafb8c72c6c
  0x00007fafb8c72c56: mov     0x18(%rcx),%rcx
  0x00007fafb8c72c5a: mov     0x1c(%rcx),%eax
  0x00007fafb8c72c5d: add     $0x8,%eax
  0x00007fafb8c72c60: mov     %eax,0x1c(%rcx)
  0x00007fafb8c72c63: and     0x34(%rcx),%eax
  0x00007fafb8c72c66: je      0x7fafb8c72d86
  0x00007fafb8c72c6c: movzbl  0x0(%r13),%ebx
  0x00007fafb8c72c71: testb   $0x8,0x108(%r15)
  0x00007fafb8c72c79: je      0x7fafb8c72c87
  0x00007fafb8c72c7b: movabs  $0x7fafd899e080,%r10
  0x00007fafb8c72c85: jmp     0x7fafb8c72c91
  0x00007fafb8c72c87: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c72c91: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c72c95: callq   0x7fafb8c72c9f
  0x00007fafb8c72c9a: jmpq    0x7fafb8c72d31
  0x00007fafb8c72c9f: lea     0x8(%rsp),%rax
  0x00007fafb8c72ca4: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c72ca8: mov     %r15,%rdi
  0x00007fafb8c72cab: vzeroupper
  0x00007fafb8c72cae: mov     %rbp,0x330(%r15)
  0x00007fafb8c72cb5: mov     %rax,0x320(%r15)
  0x00007fafb8c72cbc: test    $0xf,%esp
  0x00007fafb8c72cc2: je      0x7fafb8c72cda
  0x00007fafb8c72cc8: sub     $0x8,%rsp
  0x00007fafb8c72ccc: callq   0x7fafd7d84c70
  0x00007fafb8c72cd1: add     $0x8,%rsp
  0x00007fafb8c72cd5: jmpq    0x7fafb8c72cdf
  0x00007fafb8c72cda: callq   0x7fafd7d84c70
  0x00007fafb8c72cdf: movabs  $0x0,%r10
  0x00007fafb8c72ce9: mov     %r10,0x320(%r15)
  0x00007fafb8c72cf0: movabs  $0x0,%r10
  0x00007fafb8c72cfa: mov     %r10,0x330(%r15)
  0x00007fafb8c72d01: movabs  $0x0,%r10
  0x00007fafb8c72d0b: mov     %r10,0x328(%r15)
  0x00007fafb8c72d12: vzeroupper
  0x00007fafb8c72d15: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c72d1d: je      0x7fafb8c72d28
  0x00007fafb8c72d23: jmpq    0x7fafb8c5c780
  0x00007fafb8c72d28: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c72d2c: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c72d30: retq
  0x00007fafb8c72d31: push    %rax
  0x00007fafb8c72d32: push    %rbx
  0x00007fafb8c72d33: mov     0xffffffffffffffe8(%rbp),%rbx
  0x00007fafb8c72d37: mov     0x10(%rbx),%rax
  0x00007fafb8c72d3b: test    %rax,%rax
  0x00007fafb8c72d3e: je      0x7fafb8c72d7b
  0x00007fafb8c72d44: mov     %r13,%rsi
  0x00007fafb8c72d47: mov     %rbx,%rdi
  0x00007fafb8c72d4a: test    $0xf,%esp
  0x00007fafb8c72d50: je      0x7fafb8c72d68
  0x00007fafb8c72d56: sub     $0x8,%rsp
  0x00007fafb8c72d5a: callq   0x7fafd7d84c20
  0x00007fafb8c72d5f: add     $0x8,%rsp
  0x00007fafb8c72d63: jmpq    0x7fafb8c72d6d
  0x00007fafb8c72d68: callq   0x7fafd7d84c20
  0x00007fafb8c72d6d: mov     0x10(%rbx),%rbx
  0x00007fafb8c72d71: add     $0x138,%rbx
  0x00007fafb8c72d78: add     %rbx,%rax
  0x00007fafb8c72d7b: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c72d7f: pop     %rbx
  0x00007fafb8c72d80: pop     %rax
  0x00007fafb8c72d81: jmpq    0x7fafb8c72c6c
  0x00007fafb8c72d86: neg     %rdx
  0x00007fafb8c72d89: add     %r13,%rdx
  0x00007fafb8c72d8c: callq   0x7fafb8c72d96
  0x00007fafb8c72d91: jmpq    0x7fafb8c72e2b
  0x00007fafb8c72d96: mov     %rdx,%rsi
  0x00007fafb8c72d99: lea     0x8(%rsp),%rax
  0x00007fafb8c72d9e: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c72da2: mov     %r15,%rdi
  0x00007fafb8c72da5: vzeroupper
  0x00007fafb8c72da8: mov     %rbp,0x330(%r15)
  0x00007fafb8c72daf: mov     %rax,0x320(%r15)
  0x00007fafb8c72db6: test    $0xf,%esp
  0x00007fafb8c72dbc: je      0x7fafb8c72dd4
  0x00007fafb8c72dc2: sub     $0x8,%rsp
  0x00007fafb8c72dc6: callq   0x7fafd7d84b40
  0x00007fafb8c72dcb: add     $0x8,%rsp
  0x00007fafb8c72dcf: jmpq    0x7fafb8c72dd9
  0x00007fafb8c72dd4: callq   0x7fafd7d84b40
  0x00007fafb8c72dd9: movabs  $0x0,%r10
  0x00007fafb8c72de3: mov     %r10,0x320(%r15)
  0x00007fafb8c72dea: movabs  $0x0,%r10
  0x00007fafb8c72df4: mov     %r10,0x330(%r15)
  0x00007fafb8c72dfb: movabs  $0x0,%r10
  0x00007fafb8c72e05: mov     %r10,0x328(%r15)
  0x00007fafb8c72e0c: vzeroupper
  0x00007fafb8c72e0f: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c72e17: je      0x7fafb8c72e22
  0x00007fafb8c72e1d: jmpq    0x7fafb8c5c780
  0x00007fafb8c72e22: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c72e26: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c72e2a: retq
  0x00007fafb8c72e2b: test    %rax,%rax
  0x00007fafb8c72e2e: je      0x7fafb8c72c6c
  0x00007fafb8c72e34: cmpb    $0x0,0x156(%rax)
  0x00007fafb8c72e3b: jne     0x7fafb8c72c6c
  0x00007fafb8c72e41: mov     %rax,%rbx
  0x00007fafb8c72e44: callq   0x7fafb8c72e4e
  0x00007fafb8c72e49: jmpq    0x7fafb8c72ee0
  0x00007fafb8c72e4e: lea     0x8(%rsp),%rax
  0x00007fafb8c72e53: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c72e57: mov     %r15,%rdi
  0x00007fafb8c72e5a: vzeroupper
  0x00007fafb8c72e5d: mov     %rbp,0x330(%r15)
  0x00007fafb8c72e64: mov     %rax,0x320(%r15)
  0x00007fafb8c72e6b: test    $0xf,%esp
  0x00007fafb8c72e71: je      0x7fafb8c72e89
  0x00007fafb8c72e77: sub     $0x8,%rsp
  0x00007fafb8c72e7b: callq   0x7fafd81ee030
  0x00007fafb8c72e80: add     $0x8,%rsp
  0x00007fafb8c72e84: jmpq    0x7fafb8c72e8e
  0x00007fafb8c72e89: callq   0x7fafd81ee030
  0x00007fafb8c72e8e: movabs  $0x0,%r10
  0x00007fafb8c72e98: mov     %r10,0x320(%r15)
  0x00007fafb8c72e9f: movabs  $0x0,%r10
  0x00007fafb8c72ea9: mov     %r10,0x330(%r15)
  0x00007fafb8c72eb0: movabs  $0x0,%r10
  0x00007fafb8c72eba: mov     %r10,0x328(%r15)
  0x00007fafb8c72ec1: vzeroupper
  0x00007fafb8c72ec4: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c72ecc: je      0x7fafb8c72ed7
  0x00007fafb8c72ed2: jmpq    0x7fafb8c5c780
  0x00007fafb8c72ed7: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c72edb: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c72edf: retq
  0x00007fafb8c72ee0: mov     %rax,%rsi
  0x00007fafb8c72ee3: mov     0xfffffffffffffff8(%rbp),%rdx
  0x00007fafb8c72ee7: leave
  0x00007fafb8c72ee8: pop     %rcx
  0x00007fafb8c72ee9: mov     %rdx,%rsp
  0x00007fafb8c72eec: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c72ef0: push    %rcx
  0x00007fafb8c72ef1: jmpq    *0x110(%rbx)
  0x00007fafb8c72ef7: mov     0xffffffffffffffd8(%rbp),%rax
  0x00007fafb8c72efb: test    %rax,%rax
  0x00007fafb8c72efe: je      0x7fafb8c72f16
  0x00007fafb8c72f04: addq    $0x1,0x18(%rax)
  0x00007fafb8c72f09: sbbq    $0x0,0x18(%rax)
  0x00007fafb8c72f0e: add     $0x20,%rax
  0x00007fafb8c72f12: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c72f16: movzbl  0x3(%r13),%ebx
  0x00007fafb8c72f1b: add     $0x3,%r13
  0x00007fafb8c72f1f: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c72f29: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c72f2d: nop
  0x00007fafb8c72f30: add     %al,(%rax)
  0x00007fafb8c72f32: add     %al,(%rax)
  0x00007fafb8c72f34: add     %al,(%rax)
  0x00007fafb8c72f36: add     %al,(%rax)
  0x00007fafb8c72f38: add     %al,(%rax)
  0x00007fafb8c72f3a: add     %al,(%rax)
  0x00007fafb8c72f3c: add     %al,(%rax)
  0x00007fafb8c72f3e: add     %al,(%rax)

----------------------------------------------------------------------
ifgt  157 ifgt  [0x00007fafb8c72f60, 0x00007fafb8c73380]  1056 bytes

Argument 0 is unknown.RIP: 0x7fafb8c72f60 Code size: 0x00000420
  0x00007fafb8c72f60: mov     (%rsp),%eax
  0x00007fafb8c72f63: add     $0x8,%rsp
  0x00007fafb8c72f67: test    %eax,%eax
  0x00007fafb8c72f69: jle     0x7fafb8c73337
  0x00007fafb8c72f6f: mov     0xffffffffffffffe8(%rbp),%rcx
  0x00007fafb8c72f73: mov     0xffffffffffffffd8(%rbp),%rax
  0x00007fafb8c72f77: test    %rax,%rax
  0x00007fafb8c72f7a: je      0x7fafb8c72f98
  0x00007fafb8c72f80: mov     0x8(%rax),%rbx
  0x00007fafb8c72f84: add     $0x1,%rbx
  0x00007fafb8c72f88: sbb     $0x0,%rbx
  0x00007fafb8c72f8c: mov     %rbx,0x8(%rax)
  0x00007fafb8c72f90: add     0x10(%rax),%rax
  0x00007fafb8c72f94: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c72f98: movswl  0x1(%r13),%edx
  0x00007fafb8c72f9d: bswap   %edx
  0x00007fafb8c72f9f: sar     $0x10,%edx
  0x00007fafb8c72fa2: movsxd  %edx,%rdx
  0x00007fafb8c72fa5: add     %rdx,%r13
  0x00007fafb8c72fa8: test    %edx,%edx
  0x00007fafb8c72faa: jns     0x7fafb8c730ac
  0x00007fafb8c72fb0: mov     0x18(%rcx),%rax
  0x00007fafb8c72fb4: test    %rax,%rax
  0x00007fafb8c72fb7: jne     0x7fafb8c7306d
  0x00007fafb8c72fbd: push    %rdx
  0x00007fafb8c72fbe: push    %rcx
  0x00007fafb8c72fbf: callq   0x7fafb8c72fc9
  0x00007fafb8c72fc4: jmpq    0x7fafb8c7305e
  0x00007fafb8c72fc9: mov     %rcx,%rsi
  0x00007fafb8c72fcc: lea     0x8(%rsp),%rax
  0x00007fafb8c72fd1: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c72fd5: mov     %r15,%rdi
  0x00007fafb8c72fd8: vzeroupper
  0x00007fafb8c72fdb: mov     %rbp,0x330(%r15)
  0x00007fafb8c72fe2: mov     %rax,0x320(%r15)
  0x00007fafb8c72fe9: test    $0xf,%esp
  0x00007fafb8c72fef: je      0x7fafb8c73007
  0x00007fafb8c72ff5: sub     $0x8,%rsp
  0x00007fafb8c72ff9: callq   0x7fafd7d85400
  0x00007fafb8c72ffe: add     $0x8,%rsp
  0x00007fafb8c73002: jmpq    0x7fafb8c7300c
  0x00007fafb8c73007: callq   0x7fafd7d85400
  0x00007fafb8c7300c: movabs  $0x0,%r10
  0x00007fafb8c73016: mov     %r10,0x320(%r15)
  0x00007fafb8c7301d: movabs  $0x0,%r10
  0x00007fafb8c73027: mov     %r10,0x330(%r15)
  0x00007fafb8c7302e: movabs  $0x0,%r10
  0x00007fafb8c73038: mov     %r10,0x328(%r15)
  0x00007fafb8c7303f: vzeroupper
  0x00007fafb8c73042: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7304a: je      0x7fafb8c73055
  0x00007fafb8c73050: jmpq    0x7fafb8c5c780
  0x00007fafb8c73055: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c73059: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7305d: retq
  0x00007fafb8c7305e: pop     %rcx
  0x00007fafb8c7305f: pop     %rdx
  0x00007fafb8c73060: mov     0x18(%rcx),%rax
  0x00007fafb8c73064: test    %rax,%rax
  0x00007fafb8c73067: je      0x7fafb8c730ac
  0x00007fafb8c7306d: mov     0x10(%rcx),%rbx
  0x00007fafb8c73071: test    %rbx,%rbx
  0x00007fafb8c73074: je      0x7fafb8c73096
  0x00007fafb8c73076: mov     0x108(%rbx),%eax
  0x00007fafb8c7307c: add     $0x8,%eax
  0x00007fafb8c7307f: mov     %eax,0x108(%rbx)
  0x00007fafb8c73085: and     0x11c(%rbx),%eax
  0x00007fafb8c7308b: je      0x7fafb8c731c6
  0x00007fafb8c73091: jmpq    0x7fafb8c730ac
  0x00007fafb8c73096: mov     0x18(%rcx),%rcx
  0x00007fafb8c7309a: mov     0x1c(%rcx),%eax
  0x00007fafb8c7309d: add     $0x8,%eax
  0x00007fafb8c730a0: mov     %eax,0x1c(%rcx)
  0x00007fafb8c730a3: and     0x34(%rcx),%eax
  0x00007fafb8c730a6: je      0x7fafb8c731c6
  0x00007fafb8c730ac: movzbl  0x0(%r13),%ebx
  0x00007fafb8c730b1: testb   $0x8,0x108(%r15)
  0x00007fafb8c730b9: je      0x7fafb8c730c7
  0x00007fafb8c730bb: movabs  $0x7fafd899e080,%r10
  0x00007fafb8c730c5: jmp     0x7fafb8c730d1
  0x00007fafb8c730c7: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c730d1: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c730d5: callq   0x7fafb8c730df
  0x00007fafb8c730da: jmpq    0x7fafb8c73171
  0x00007fafb8c730df: lea     0x8(%rsp),%rax
  0x00007fafb8c730e4: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c730e8: mov     %r15,%rdi
  0x00007fafb8c730eb: vzeroupper
  0x00007fafb8c730ee: mov     %rbp,0x330(%r15)
  0x00007fafb8c730f5: mov     %rax,0x320(%r15)
  0x00007fafb8c730fc: test    $0xf,%esp
  0x00007fafb8c73102: je      0x7fafb8c7311a
  0x00007fafb8c73108: sub     $0x8,%rsp
  0x00007fafb8c7310c: callq   0x7fafd7d84c70
  0x00007fafb8c73111: add     $0x8,%rsp
  0x00007fafb8c73115: jmpq    0x7fafb8c7311f
  0x00007fafb8c7311a: callq   0x7fafd7d84c70
  0x00007fafb8c7311f: movabs  $0x0,%r10
  0x00007fafb8c73129: mov     %r10,0x320(%r15)
  0x00007fafb8c73130: movabs  $0x0,%r10
  0x00007fafb8c7313a: mov     %r10,0x330(%r15)
  0x00007fafb8c73141: movabs  $0x0,%r10
  0x00007fafb8c7314b: mov     %r10,0x328(%r15)
  0x00007fafb8c73152: vzeroupper
  0x00007fafb8c73155: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7315d: je      0x7fafb8c73168
  0x00007fafb8c73163: jmpq    0x7fafb8c5c780
  0x00007fafb8c73168: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7316c: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c73170: retq
  0x00007fafb8c73171: push    %rax
  0x00007fafb8c73172: push    %rbx
  0x00007fafb8c73173: mov     0xffffffffffffffe8(%rbp),%rbx
  0x00007fafb8c73177: mov     0x10(%rbx),%rax
  0x00007fafb8c7317b: test    %rax,%rax
  0x00007fafb8c7317e: je      0x7fafb8c731bb
  0x00007fafb8c73184: mov     %r13,%rsi
  0x00007fafb8c73187: mov     %rbx,%rdi
  0x00007fafb8c7318a: test    $0xf,%esp
  0x00007fafb8c73190: je      0x7fafb8c731a8
  0x00007fafb8c73196: sub     $0x8,%rsp
  0x00007fafb8c7319a: callq   0x7fafd7d84c20
  0x00007fafb8c7319f: add     $0x8,%rsp
  0x00007fafb8c731a3: jmpq    0x7fafb8c731ad
  0x00007fafb8c731a8: callq   0x7fafd7d84c20
  0x00007fafb8c731ad: mov     0x10(%rbx),%rbx
  0x00007fafb8c731b1: add     $0x138,%rbx
  0x00007fafb8c731b8: add     %rbx,%rax
  0x00007fafb8c731bb: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c731bf: pop     %rbx
  0x00007fafb8c731c0: pop     %rax
  0x00007fafb8c731c1: jmpq    0x7fafb8c730ac
  0x00007fafb8c731c6: neg     %rdx
  0x00007fafb8c731c9: add     %r13,%rdx
  0x00007fafb8c731cc: callq   0x7fafb8c731d6
  0x00007fafb8c731d1: jmpq    0x7fafb8c7326b
  0x00007fafb8c731d6: mov     %rdx,%rsi
  0x00007fafb8c731d9: lea     0x8(%rsp),%rax
  0x00007fafb8c731de: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c731e2: mov     %r15,%rdi
  0x00007fafb8c731e5: vzeroupper
  0x00007fafb8c731e8: mov     %rbp,0x330(%r15)
  0x00007fafb8c731ef: mov     %rax,0x320(%r15)
  0x00007fafb8c731f6: test    $0xf,%esp
  0x00007fafb8c731fc: je      0x7fafb8c73214
  0x00007fafb8c73202: sub     $0x8,%rsp
  0x00007fafb8c73206: callq   0x7fafd7d84b40
  0x00007fafb8c7320b: add     $0x8,%rsp
  0x00007fafb8c7320f: jmpq    0x7fafb8c73219
  0x00007fafb8c73214: callq   0x7fafd7d84b40
  0x00007fafb8c73219: movabs  $0x0,%r10
  0x00007fafb8c73223: mov     %r10,0x320(%r15)
  0x00007fafb8c7322a: movabs  $0x0,%r10
  0x00007fafb8c73234: mov     %r10,0x330(%r15)
  0x00007fafb8c7323b: movabs  $0x0,%r10
  0x00007fafb8c73245: mov     %r10,0x328(%r15)
  0x00007fafb8c7324c: vzeroupper
  0x00007fafb8c7324f: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c73257: je      0x7fafb8c73262
  0x00007fafb8c7325d: jmpq    0x7fafb8c5c780
  0x00007fafb8c73262: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c73266: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7326a: retq
  0x00007fafb8c7326b: test    %rax,%rax
  0x00007fafb8c7326e: je      0x7fafb8c730ac
  0x00007fafb8c73274: cmpb    $0x0,0x156(%rax)
  0x00007fafb8c7327b: jne     0x7fafb8c730ac
  0x00007fafb8c73281: mov     %rax,%rbx
  0x00007fafb8c73284: callq   0x7fafb8c7328e
  0x00007fafb8c73289: jmpq    0x7fafb8c73320
  0x00007fafb8c7328e: lea     0x8(%rsp),%rax
  0x00007fafb8c73293: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c73297: mov     %r15,%rdi
  0x00007fafb8c7329a: vzeroupper
  0x00007fafb8c7329d: mov     %rbp,0x330(%r15)
  0x00007fafb8c732a4: mov     %rax,0x320(%r15)
  0x00007fafb8c732ab: test    $0xf,%esp
  0x00007fafb8c732b1: je      0x7fafb8c732c9
  0x00007fafb8c732b7: sub     $0x8,%rsp
  0x00007fafb8c732bb: callq   0x7fafd81ee030
  0x00007fafb8c732c0: add     $0x8,%rsp
  0x00007fafb8c732c4: jmpq    0x7fafb8c732ce
  0x00007fafb8c732c9: callq   0x7fafd81ee030
  0x00007fafb8c732ce: movabs  $0x0,%r10
  0x00007fafb8c732d8: mov     %r10,0x320(%r15)
  0x00007fafb8c732df: movabs  $0x0,%r10
  0x00007fafb8c732e9: mov     %r10,0x330(%r15)
  0x00007fafb8c732f0: movabs  $0x0,%r10
  0x00007fafb8c732fa: mov     %r10,0x328(%r15)
  0x00007fafb8c73301: vzeroupper
  0x00007fafb8c73304: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7330c: je      0x7fafb8c73317
  0x00007fafb8c73312: jmpq    0x7fafb8c5c780
  0x00007fafb8c73317: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7331b: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7331f: retq
  0x00007fafb8c73320: mov     %rax,%rsi
  0x00007fafb8c73323: mov     0xfffffffffffffff8(%rbp),%rdx
  0x00007fafb8c73327: leave
  0x00007fafb8c73328: pop     %rcx
  0x00007fafb8c73329: mov     %rdx,%rsp
  0x00007fafb8c7332c: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c73330: push    %rcx
  0x00007fafb8c73331: jmpq    *0x110(%rbx)
  0x00007fafb8c73337: mov     0xffffffffffffffd8(%rbp),%rax
  0x00007fafb8c7333b: test    %rax,%rax
  0x00007fafb8c7333e: je      0x7fafb8c73356
  0x00007fafb8c73344: addq    $0x1,0x18(%rax)
  0x00007fafb8c73349: sbbq    $0x0,0x18(%rax)
  0x00007fafb8c7334e: add     $0x20,%rax
  0x00007fafb8c73352: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c73356: movzbl  0x3(%r13),%ebx
  0x00007fafb8c7335b: add     $0x3,%r13
  0x00007fafb8c7335f: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c73369: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7336d: nop
  0x00007fafb8c73370: add     %al,(%rax)
  0x00007fafb8c73372: add     %al,(%rax)
  0x00007fafb8c73374: add     %al,(%rax)
  0x00007fafb8c73376: add     %al,(%rax)
  0x00007fafb8c73378: add     %al,(%rax)
  0x00007fafb8c7337a: add     %al,(%rax)
  0x00007fafb8c7337c: add     %al,(%rax)
  0x00007fafb8c7337e: add     %al,(%rax)

----------------------------------------------------------------------
ifle  158 ifle  [0x00007fafb8c733a0, 0x00007fafb8c737c0]  1056 bytes

Argument 0 is unknown.RIP: 0x7fafb8c733a0 Code size: 0x00000420
  0x00007fafb8c733a0: mov     (%rsp),%eax
  0x00007fafb8c733a3: add     $0x8,%rsp
  0x00007fafb8c733a7: test    %eax,%eax
  0x00007fafb8c733a9: jnle    0x7fafb8c73777
  0x00007fafb8c733af: mov     0xffffffffffffffe8(%rbp),%rcx
  0x00007fafb8c733b3: mov     0xffffffffffffffd8(%rbp),%rax
  0x00007fafb8c733b7: test    %rax,%rax
  0x00007fafb8c733ba: je      0x7fafb8c733d8
  0x00007fafb8c733c0: mov     0x8(%rax),%rbx
  0x00007fafb8c733c4: add     $0x1,%rbx
  0x00007fafb8c733c8: sbb     $0x0,%rbx
  0x00007fafb8c733cc: mov     %rbx,0x8(%rax)
  0x00007fafb8c733d0: add     0x10(%rax),%rax
  0x00007fafb8c733d4: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c733d8: movswl  0x1(%r13),%edx
  0x00007fafb8c733dd: bswap   %edx
  0x00007fafb8c733df: sar     $0x10,%edx
  0x00007fafb8c733e2: movsxd  %edx,%rdx
  0x00007fafb8c733e5: add     %rdx,%r13
  0x00007fafb8c733e8: test    %edx,%edx
  0x00007fafb8c733ea: jns     0x7fafb8c734ec
  0x00007fafb8c733f0: mov     0x18(%rcx),%rax
  0x00007fafb8c733f4: test    %rax,%rax
  0x00007fafb8c733f7: jne     0x7fafb8c734ad
  0x00007fafb8c733fd: push    %rdx
  0x00007fafb8c733fe: push    %rcx
  0x00007fafb8c733ff: callq   0x7fafb8c73409
  0x00007fafb8c73404: jmpq    0x7fafb8c7349e
  0x00007fafb8c73409: mov     %rcx,%rsi
  0x00007fafb8c7340c: lea     0x8(%rsp),%rax
  0x00007fafb8c73411: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c73415: mov     %r15,%rdi
  0x00007fafb8c73418: vzeroupper
  0x00007fafb8c7341b: mov     %rbp,0x330(%r15)
  0x00007fafb8c73422: mov     %rax,0x320(%r15)
  0x00007fafb8c73429: test    $0xf,%esp
  0x00007fafb8c7342f: je      0x7fafb8c73447
  0x00007fafb8c73435: sub     $0x8,%rsp
  0x00007fafb8c73439: callq   0x7fafd7d85400
  0x00007fafb8c7343e: add     $0x8,%rsp
  0x00007fafb8c73442: jmpq    0x7fafb8c7344c
  0x00007fafb8c73447: callq   0x7fafd7d85400
  0x00007fafb8c7344c: movabs  $0x0,%r10
  0x00007fafb8c73456: mov     %r10,0x320(%r15)
  0x00007fafb8c7345d: movabs  $0x0,%r10
  0x00007fafb8c73467: mov     %r10,0x330(%r15)
  0x00007fafb8c7346e: movabs  $0x0,%r10
  0x00007fafb8c73478: mov     %r10,0x328(%r15)
  0x00007fafb8c7347f: vzeroupper
  0x00007fafb8c73482: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7348a: je      0x7fafb8c73495
  0x00007fafb8c73490: jmpq    0x7fafb8c5c780
  0x00007fafb8c73495: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c73499: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7349d: retq
  0x00007fafb8c7349e: pop     %rcx
  0x00007fafb8c7349f: pop     %rdx
  0x00007fafb8c734a0: mov     0x18(%rcx),%rax
  0x00007fafb8c734a4: test    %rax,%rax
  0x00007fafb8c734a7: je      0x7fafb8c734ec
  0x00007fafb8c734ad: mov     0x10(%rcx),%rbx
  0x00007fafb8c734b1: test    %rbx,%rbx
  0x00007fafb8c734b4: je      0x7fafb8c734d6
  0x00007fafb8c734b6: mov     0x108(%rbx),%eax
  0x00007fafb8c734bc: add     $0x8,%eax
  0x00007fafb8c734bf: mov     %eax,0x108(%rbx)
  0x00007fafb8c734c5: and     0x11c(%rbx),%eax
  0x00007fafb8c734cb: je      0x7fafb8c73606
  0x00007fafb8c734d1: jmpq    0x7fafb8c734ec
  0x00007fafb8c734d6: mov     0x18(%rcx),%rcx
  0x00007fafb8c734da: mov     0x1c(%rcx),%eax
  0x00007fafb8c734dd: add     $0x8,%eax
  0x00007fafb8c734e0: mov     %eax,0x1c(%rcx)
  0x00007fafb8c734e3: and     0x34(%rcx),%eax
  0x00007fafb8c734e6: je      0x7fafb8c73606
  0x00007fafb8c734ec: movzbl  0x0(%r13),%ebx
  0x00007fafb8c734f1: testb   $0x8,0x108(%r15)
  0x00007fafb8c734f9: je      0x7fafb8c73507
  0x00007fafb8c734fb: movabs  $0x7fafd899e080,%r10
  0x00007fafb8c73505: jmp     0x7fafb8c73511
  0x00007fafb8c73507: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c73511: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c73515: callq   0x7fafb8c7351f
  0x00007fafb8c7351a: jmpq    0x7fafb8c735b1
  0x00007fafb8c7351f: lea     0x8(%rsp),%rax
  0x00007fafb8c73524: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c73528: mov     %r15,%rdi
  0x00007fafb8c7352b: vzeroupper
  0x00007fafb8c7352e: mov     %rbp,0x330(%r15)
  0x00007fafb8c73535: mov     %rax,0x320(%r15)
  0x00007fafb8c7353c: test    $0xf,%esp
  0x00007fafb8c73542: je      0x7fafb8c7355a
  0x00007fafb8c73548: sub     $0x8,%rsp
  0x00007fafb8c7354c: callq   0x7fafd7d84c70
  0x00007fafb8c73551: add     $0x8,%rsp
  0x00007fafb8c73555: jmpq    0x7fafb8c7355f
  0x00007fafb8c7355a: callq   0x7fafd7d84c70
  0x00007fafb8c7355f: movabs  $0x0,%r10
  0x00007fafb8c73569: mov     %r10,0x320(%r15)
  0x00007fafb8c73570: movabs  $0x0,%r10
  0x00007fafb8c7357a: mov     %r10,0x330(%r15)
  0x00007fafb8c73581: movabs  $0x0,%r10
  0x00007fafb8c7358b: mov     %r10,0x328(%r15)
  0x00007fafb8c73592: vzeroupper
  0x00007fafb8c73595: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7359d: je      0x7fafb8c735a8
  0x00007fafb8c735a3: jmpq    0x7fafb8c5c780
  0x00007fafb8c735a8: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c735ac: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c735b0: retq
  0x00007fafb8c735b1: push    %rax
  0x00007fafb8c735b2: push    %rbx
  0x00007fafb8c735b3: mov     0xffffffffffffffe8(%rbp),%rbx
  0x00007fafb8c735b7: mov     0x10(%rbx),%rax
  0x00007fafb8c735bb: test    %rax,%rax
  0x00007fafb8c735be: je      0x7fafb8c735fb
  0x00007fafb8c735c4: mov     %r13,%rsi
  0x00007fafb8c735c7: mov     %rbx,%rdi
  0x00007fafb8c735ca: test    $0xf,%esp
  0x00007fafb8c735d0: je      0x7fafb8c735e8
  0x00007fafb8c735d6: sub     $0x8,%rsp
  0x00007fafb8c735da: callq   0x7fafd7d84c20
  0x00007fafb8c735df: add     $0x8,%rsp
  0x00007fafb8c735e3: jmpq    0x7fafb8c735ed
  0x00007fafb8c735e8: callq   0x7fafd7d84c20
  0x00007fafb8c735ed: mov     0x10(%rbx),%rbx
  0x00007fafb8c735f1: add     $0x138,%rbx
  0x00007fafb8c735f8: add     %rbx,%rax
  0x00007fafb8c735fb: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c735ff: pop     %rbx
  0x00007fafb8c73600: pop     %rax
  0x00007fafb8c73601: jmpq    0x7fafb8c734ec
  0x00007fafb8c73606: neg     %rdx
  0x00007fafb8c73609: add     %r13,%rdx
  0x00007fafb8c7360c: callq   0x7fafb8c73616
  0x00007fafb8c73611: jmpq    0x7fafb8c736ab
  0x00007fafb8c73616: mov     %rdx,%rsi
  0x00007fafb8c73619: lea     0x8(%rsp),%rax
  0x00007fafb8c7361e: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c73622: mov     %r15,%rdi
  0x00007fafb8c73625: vzeroupper
  0x00007fafb8c73628: mov     %rbp,0x330(%r15)
  0x00007fafb8c7362f: mov     %rax,0x320(%r15)
  0x00007fafb8c73636: test    $0xf,%esp
  0x00007fafb8c7363c: je      0x7fafb8c73654
  0x00007fafb8c73642: sub     $0x8,%rsp
  0x00007fafb8c73646: callq   0x7fafd7d84b40
  0x00007fafb8c7364b: add     $0x8,%rsp
  0x00007fafb8c7364f: jmpq    0x7fafb8c73659
  0x00007fafb8c73654: callq   0x7fafd7d84b40
  0x00007fafb8c73659: movabs  $0x0,%r10
  0x00007fafb8c73663: mov     %r10,0x320(%r15)
  0x00007fafb8c7366a: movabs  $0x0,%r10
  0x00007fafb8c73674: mov     %r10,0x330(%r15)
  0x00007fafb8c7367b: movabs  $0x0,%r10
  0x00007fafb8c73685: mov     %r10,0x328(%r15)
  0x00007fafb8c7368c: vzeroupper
  0x00007fafb8c7368f: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c73697: je      0x7fafb8c736a2
  0x00007fafb8c7369d: jmpq    0x7fafb8c5c780
  0x00007fafb8c736a2: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c736a6: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c736aa: retq
  0x00007fafb8c736ab: test    %rax,%rax
  0x00007fafb8c736ae: je      0x7fafb8c734ec
  0x00007fafb8c736b4: cmpb    $0x0,0x156(%rax)
  0x00007fafb8c736bb: jne     0x7fafb8c734ec
  0x00007fafb8c736c1: mov     %rax,%rbx
  0x00007fafb8c736c4: callq   0x7fafb8c736ce
  0x00007fafb8c736c9: jmpq    0x7fafb8c73760
  0x00007fafb8c736ce: lea     0x8(%rsp),%rax
  0x00007fafb8c736d3: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c736d7: mov     %r15,%rdi
  0x00007fafb8c736da: vzeroupper
  0x00007fafb8c736dd: mov     %rbp,0x330(%r15)
  0x00007fafb8c736e4: mov     %rax,0x320(%r15)
  0x00007fafb8c736eb: test    $0xf,%esp
  0x00007fafb8c736f1: je      0x7fafb8c73709
  0x00007fafb8c736f7: sub     $0x8,%rsp
  0x00007fafb8c736fb: callq   0x7fafd81ee030
  0x00007fafb8c73700: add     $0x8,%rsp
  0x00007fafb8c73704: jmpq    0x7fafb8c7370e
  0x00007fafb8c73709: callq   0x7fafd81ee030
  0x00007fafb8c7370e: movabs  $0x0,%r10
  0x00007fafb8c73718: mov     %r10,0x320(%r15)
  0x00007fafb8c7371f: movabs  $0x0,%r10
  0x00007fafb8c73729: mov     %r10,0x330(%r15)
  0x00007fafb8c73730: movabs  $0x0,%r10
  0x00007fafb8c7373a: mov     %r10,0x328(%r15)
  0x00007fafb8c73741: vzeroupper
  0x00007fafb8c73744: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7374c: je      0x7fafb8c73757
  0x00007fafb8c73752: jmpq    0x7fafb8c5c780
  0x00007fafb8c73757: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7375b: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7375f: retq
  0x00007fafb8c73760: mov     %rax,%rsi
  0x00007fafb8c73763: mov     0xfffffffffffffff8(%rbp),%rdx
  0x00007fafb8c73767: leave
  0x00007fafb8c73768: pop     %rcx
  0x00007fafb8c73769: mov     %rdx,%rsp
  0x00007fafb8c7376c: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c73770: push    %rcx
  0x00007fafb8c73771: jmpq    *0x110(%rbx)
  0x00007fafb8c73777: mov     0xffffffffffffffd8(%rbp),%rax
  0x00007fafb8c7377b: test    %rax,%rax
  0x00007fafb8c7377e: je      0x7fafb8c73796
  0x00007fafb8c73784: addq    $0x1,0x18(%rax)
  0x00007fafb8c73789: sbbq    $0x0,0x18(%rax)
  0x00007fafb8c7378e: add     $0x20,%rax
  0x00007fafb8c73792: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c73796: movzbl  0x3(%r13),%ebx
  0x00007fafb8c7379b: add     $0x3,%r13
  0x00007fafb8c7379f: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c737a9: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c737ad: nop
  0x00007fafb8c737b0: add     %al,(%rax)
  0x00007fafb8c737b2: add     %al,(%rax)
  0x00007fafb8c737b4: add     %al,(%rax)
  0x00007fafb8c737b6: add     %al,(%rax)
  0x00007fafb8c737b8: add     %al,(%rax)
  0x00007fafb8c737ba: add     %al,(%rax)
  0x00007fafb8c737bc: add     %al,(%rax)
  0x00007fafb8c737be: add     %al,(%rax)

----------------------------------------------------------------------
if_icmpeq  159 if_icmpeq  [0x00007fafb8c737e0, 0x00007fafb8c73c00]  1056 bytes

Argument 0 is unknown.RIP: 0x7fafb8c737e0 Code size: 0x00000420
  0x00007fafb8c737e0: mov     (%rsp),%eax
  0x00007fafb8c737e3: add     $0x8,%rsp
  0x00007fafb8c737e7: mov     (%rsp),%edx
  0x00007fafb8c737ea: add     $0x8,%rsp
  0x00007fafb8c737ee: cmp     %eax,%edx
  0x00007fafb8c737f0: jne     0x7fafb8c73bbe
  0x00007fafb8c737f6: mov     0xffffffffffffffe8(%rbp),%rcx
  0x00007fafb8c737fa: mov     0xffffffffffffffd8(%rbp),%rax
  0x00007fafb8c737fe: test    %rax,%rax
  0x00007fafb8c73801: je      0x7fafb8c7381f
  0x00007fafb8c73807: mov     0x8(%rax),%rbx
  0x00007fafb8c7380b: add     $0x1,%rbx
  0x00007fafb8c7380f: sbb     $0x0,%rbx
  0x00007fafb8c73813: mov     %rbx,0x8(%rax)
  0x00007fafb8c73817: add     0x10(%rax),%rax
  0x00007fafb8c7381b: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c7381f: movswl  0x1(%r13),%edx
  0x00007fafb8c73824: bswap   %edx
  0x00007fafb8c73826: sar     $0x10,%edx
  0x00007fafb8c73829: movsxd  %edx,%rdx
  0x00007fafb8c7382c: add     %rdx,%r13
  0x00007fafb8c7382f: test    %edx,%edx
  0x00007fafb8c73831: jns     0x7fafb8c73933
  0x00007fafb8c73837: mov     0x18(%rcx),%rax
  0x00007fafb8c7383b: test    %rax,%rax
  0x00007fafb8c7383e: jne     0x7fafb8c738f4
  0x00007fafb8c73844: push    %rdx
  0x00007fafb8c73845: push    %rcx
  0x00007fafb8c73846: callq   0x7fafb8c73850
  0x00007fafb8c7384b: jmpq    0x7fafb8c738e5
  0x00007fafb8c73850: mov     %rcx,%rsi
  0x00007fafb8c73853: lea     0x8(%rsp),%rax
  0x00007fafb8c73858: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7385c: mov     %r15,%rdi
  0x00007fafb8c7385f: vzeroupper
  0x00007fafb8c73862: mov     %rbp,0x330(%r15)
  0x00007fafb8c73869: mov     %rax,0x320(%r15)
  0x00007fafb8c73870: test    $0xf,%esp
  0x00007fafb8c73876: je      0x7fafb8c7388e
  0x00007fafb8c7387c: sub     $0x8,%rsp
  0x00007fafb8c73880: callq   0x7fafd7d85400
  0x00007fafb8c73885: add     $0x8,%rsp
  0x00007fafb8c73889: jmpq    0x7fafb8c73893
  0x00007fafb8c7388e: callq   0x7fafd7d85400
  0x00007fafb8c73893: movabs  $0x0,%r10
  0x00007fafb8c7389d: mov     %r10,0x320(%r15)
  0x00007fafb8c738a4: movabs  $0x0,%r10
  0x00007fafb8c738ae: mov     %r10,0x330(%r15)
  0x00007fafb8c738b5: movabs  $0x0,%r10
  0x00007fafb8c738bf: mov     %r10,0x328(%r15)
  0x00007fafb8c738c6: vzeroupper
  0x00007fafb8c738c9: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c738d1: je      0x7fafb8c738dc
  0x00007fafb8c738d7: jmpq    0x7fafb8c5c780
  0x00007fafb8c738dc: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c738e0: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c738e4: retq
  0x00007fafb8c738e5: pop     %rcx
  0x00007fafb8c738e6: pop     %rdx
  0x00007fafb8c738e7: mov     0x18(%rcx),%rax
  0x00007fafb8c738eb: test    %rax,%rax
  0x00007fafb8c738ee: je      0x7fafb8c73933
  0x00007fafb8c738f4: mov     0x10(%rcx),%rbx
  0x00007fafb8c738f8: test    %rbx,%rbx
  0x00007fafb8c738fb: je      0x7fafb8c7391d
  0x00007fafb8c738fd: mov     0x108(%rbx),%eax
  0x00007fafb8c73903: add     $0x8,%eax
  0x00007fafb8c73906: mov     %eax,0x108(%rbx)
  0x00007fafb8c7390c: and     0x11c(%rbx),%eax
  0x00007fafb8c73912: je      0x7fafb8c73a4d
  0x00007fafb8c73918: jmpq    0x7fafb8c73933
  0x00007fafb8c7391d: mov     0x18(%rcx),%rcx
  0x00007fafb8c73921: mov     0x1c(%rcx),%eax
  0x00007fafb8c73924: add     $0x8,%eax
  0x00007fafb8c73927: mov     %eax,0x1c(%rcx)
  0x00007fafb8c7392a: and     0x34(%rcx),%eax
  0x00007fafb8c7392d: je      0x7fafb8c73a4d
  0x00007fafb8c73933: movzbl  0x0(%r13),%ebx
  0x00007fafb8c73938: testb   $0x8,0x108(%r15)
  0x00007fafb8c73940: je      0x7fafb8c7394e
  0x00007fafb8c73942: movabs  $0x7fafd899e080,%r10
  0x00007fafb8c7394c: jmp     0x7fafb8c73958
  0x00007fafb8c7394e: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c73958: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7395c: callq   0x7fafb8c73966
  0x00007fafb8c73961: jmpq    0x7fafb8c739f8
  0x00007fafb8c73966: lea     0x8(%rsp),%rax
  0x00007fafb8c7396b: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7396f: mov     %r15,%rdi
  0x00007fafb8c73972: vzeroupper
  0x00007fafb8c73975: mov     %rbp,0x330(%r15)
  0x00007fafb8c7397c: mov     %rax,0x320(%r15)
  0x00007fafb8c73983: test    $0xf,%esp
  0x00007fafb8c73989: je      0x7fafb8c739a1
  0x00007fafb8c7398f: sub     $0x8,%rsp
  0x00007fafb8c73993: callq   0x7fafd7d84c70
  0x00007fafb8c73998: add     $0x8,%rsp
  0x00007fafb8c7399c: jmpq    0x7fafb8c739a6
  0x00007fafb8c739a1: callq   0x7fafd7d84c70
  0x00007fafb8c739a6: movabs  $0x0,%r10
  0x00007fafb8c739b0: mov     %r10,0x320(%r15)
  0x00007fafb8c739b7: movabs  $0x0,%r10
  0x00007fafb8c739c1: mov     %r10,0x330(%r15)
  0x00007fafb8c739c8: movabs  $0x0,%r10
  0x00007fafb8c739d2: mov     %r10,0x328(%r15)
  0x00007fafb8c739d9: vzeroupper
  0x00007fafb8c739dc: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c739e4: je      0x7fafb8c739ef
  0x00007fafb8c739ea: jmpq    0x7fafb8c5c780
  0x00007fafb8c739ef: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c739f3: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c739f7: retq
  0x00007fafb8c739f8: push    %rax
  0x00007fafb8c739f9: push    %rbx
  0x00007fafb8c739fa: mov     0xffffffffffffffe8(%rbp),%rbx
  0x00007fafb8c739fe: mov     0x10(%rbx),%rax
  0x00007fafb8c73a02: test    %rax,%rax
  0x00007fafb8c73a05: je      0x7fafb8c73a42
  0x00007fafb8c73a0b: mov     %r13,%rsi
  0x00007fafb8c73a0e: mov     %rbx,%rdi
  0x00007fafb8c73a11: test    $0xf,%esp
  0x00007fafb8c73a17: je      0x7fafb8c73a2f
  0x00007fafb8c73a1d: sub     $0x8,%rsp
  0x00007fafb8c73a21: callq   0x7fafd7d84c20
  0x00007fafb8c73a26: add     $0x8,%rsp
  0x00007fafb8c73a2a: jmpq    0x7fafb8c73a34
  0x00007fafb8c73a2f: callq   0x7fafd7d84c20
  0x00007fafb8c73a34: mov     0x10(%rbx),%rbx
  0x00007fafb8c73a38: add     $0x138,%rbx
  0x00007fafb8c73a3f: add     %rbx,%rax
  0x00007fafb8c73a42: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c73a46: pop     %rbx
  0x00007fafb8c73a47: pop     %rax
  0x00007fafb8c73a48: jmpq    0x7fafb8c73933
  0x00007fafb8c73a4d: neg     %rdx
  0x00007fafb8c73a50: add     %r13,%rdx
  0x00007fafb8c73a53: callq   0x7fafb8c73a5d
  0x00007fafb8c73a58: jmpq    0x7fafb8c73af2
  0x00007fafb8c73a5d: mov     %rdx,%rsi
  0x00007fafb8c73a60: lea     0x8(%rsp),%rax
  0x00007fafb8c73a65: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c73a69: mov     %r15,%rdi
  0x00007fafb8c73a6c: vzeroupper
  0x00007fafb8c73a6f: mov     %rbp,0x330(%r15)
  0x00007fafb8c73a76: mov     %rax,0x320(%r15)
  0x00007fafb8c73a7d: test    $0xf,%esp
  0x00007fafb8c73a83: je      0x7fafb8c73a9b
  0x00007fafb8c73a89: sub     $0x8,%rsp
  0x00007fafb8c73a8d: callq   0x7fafd7d84b40
  0x00007fafb8c73a92: add     $0x8,%rsp
  0x00007fafb8c73a96: jmpq    0x7fafb8c73aa0
  0x00007fafb8c73a9b: callq   0x7fafd7d84b40
  0x00007fafb8c73aa0: movabs  $0x0,%r10
  0x00007fafb8c73aaa: mov     %r10,0x320(%r15)
  0x00007fafb8c73ab1: movabs  $0x0,%r10
  0x00007fafb8c73abb: mov     %r10,0x330(%r15)
  0x00007fafb8c73ac2: movabs  $0x0,%r10
  0x00007fafb8c73acc: mov     %r10,0x328(%r15)
  0x00007fafb8c73ad3: vzeroupper
  0x00007fafb8c73ad6: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c73ade: je      0x7fafb8c73ae9
  0x00007fafb8c73ae4: jmpq    0x7fafb8c5c780
  0x00007fafb8c73ae9: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c73aed: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c73af1: retq
  0x00007fafb8c73af2: test    %rax,%rax
  0x00007fafb8c73af5: je      0x7fafb8c73933
  0x00007fafb8c73afb: cmpb    $0x0,0x156(%rax)
  0x00007fafb8c73b02: jne     0x7fafb8c73933
  0x00007fafb8c73b08: mov     %rax,%rbx
  0x00007fafb8c73b0b: callq   0x7fafb8c73b15
  0x00007fafb8c73b10: jmpq    0x7fafb8c73ba7
  0x00007fafb8c73b15: lea     0x8(%rsp),%rax
  0x00007fafb8c73b1a: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c73b1e: mov     %r15,%rdi
  0x00007fafb8c73b21: vzeroupper
  0x00007fafb8c73b24: mov     %rbp,0x330(%r15)
  0x00007fafb8c73b2b: mov     %rax,0x320(%r15)
  0x00007fafb8c73b32: test    $0xf,%esp
  0x00007fafb8c73b38: je      0x7fafb8c73b50
  0x00007fafb8c73b3e: sub     $0x8,%rsp
  0x00007fafb8c73b42: callq   0x7fafd81ee030
  0x00007fafb8c73b47: add     $0x8,%rsp
  0x00007fafb8c73b4b: jmpq    0x7fafb8c73b55
  0x00007fafb8c73b50: callq   0x7fafd81ee030
  0x00007fafb8c73b55: movabs  $0x0,%r10
  0x00007fafb8c73b5f: mov     %r10,0x320(%r15)
  0x00007fafb8c73b66: movabs  $0x0,%r10
  0x00007fafb8c73b70: mov     %r10,0x330(%r15)
  0x00007fafb8c73b77: movabs  $0x0,%r10
  0x00007fafb8c73b81: mov     %r10,0x328(%r15)
  0x00007fafb8c73b88: vzeroupper
  0x00007fafb8c73b8b: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c73b93: je      0x7fafb8c73b9e
  0x00007fafb8c73b99: jmpq    0x7fafb8c5c780
  0x00007fafb8c73b9e: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c73ba2: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c73ba6: retq
  0x00007fafb8c73ba7: mov     %rax,%rsi
  0x00007fafb8c73baa: mov     0xfffffffffffffff8(%rbp),%rdx
  0x00007fafb8c73bae: leave
  0x00007fafb8c73baf: pop     %rcx
  0x00007fafb8c73bb0: mov     %rdx,%rsp
  0x00007fafb8c73bb3: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c73bb7: push    %rcx
  0x00007fafb8c73bb8: jmpq    *0x110(%rbx)
  0x00007fafb8c73bbe: mov     0xffffffffffffffd8(%rbp),%rax
  0x00007fafb8c73bc2: test    %rax,%rax
  0x00007fafb8c73bc5: je      0x7fafb8c73bdd
  0x00007fafb8c73bcb: addq    $0x1,0x18(%rax)
  0x00007fafb8c73bd0: sbbq    $0x0,0x18(%rax)
  0x00007fafb8c73bd5: add     $0x20,%rax
  0x00007fafb8c73bd9: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c73bdd: movzbl  0x3(%r13),%ebx
  0x00007fafb8c73be2: add     $0x3,%r13
  0x00007fafb8c73be6: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c73bf0: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c73bf4: nopl    0x0(%rax)
  0x00007fafb8c73bf8: add     %al,(%rax)
  0x00007fafb8c73bfa: add     %al,(%rax)
  0x00007fafb8c73bfc: add     %al,(%rax)
  0x00007fafb8c73bfe: add     %al,(%rax)

----------------------------------------------------------------------
if_icmpne  160 if_icmpne  [0x00007fafb8c73c20, 0x00007fafb8c74040]  1056 bytes

Argument 0 is unknown.RIP: 0x7fafb8c73c20 Code size: 0x00000420
  0x00007fafb8c73c20: mov     (%rsp),%eax
  0x00007fafb8c73c23: add     $0x8,%rsp
  0x00007fafb8c73c27: mov     (%rsp),%edx
  0x00007fafb8c73c2a: add     $0x8,%rsp
  0x00007fafb8c73c2e: cmp     %eax,%edx
  0x00007fafb8c73c30: je      0x7fafb8c73ffe
  0x00007fafb8c73c36: mov     0xffffffffffffffe8(%rbp),%rcx
  0x00007fafb8c73c3a: mov     0xffffffffffffffd8(%rbp),%rax
  0x00007fafb8c73c3e: test    %rax,%rax
  0x00007fafb8c73c41: je      0x7fafb8c73c5f
  0x00007fafb8c73c47: mov     0x8(%rax),%rbx
  0x00007fafb8c73c4b: add     $0x1,%rbx
  0x00007fafb8c73c4f: sbb     $0x0,%rbx
  0x00007fafb8c73c53: mov     %rbx,0x8(%rax)
  0x00007fafb8c73c57: add     0x10(%rax),%rax
  0x00007fafb8c73c5b: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c73c5f: movswl  0x1(%r13),%edx
  0x00007fafb8c73c64: bswap   %edx
  0x00007fafb8c73c66: sar     $0x10,%edx
  0x00007fafb8c73c69: movsxd  %edx,%rdx
  0x00007fafb8c73c6c: add     %rdx,%r13
  0x00007fafb8c73c6f: test    %edx,%edx
  0x00007fafb8c73c71: jns     0x7fafb8c73d73
  0x00007fafb8c73c77: mov     0x18(%rcx),%rax
  0x00007fafb8c73c7b: test    %rax,%rax
  0x00007fafb8c73c7e: jne     0x7fafb8c73d34
  0x00007fafb8c73c84: push    %rdx
  0x00007fafb8c73c85: push    %rcx
  0x00007fafb8c73c86: callq   0x7fafb8c73c90
  0x00007fafb8c73c8b: jmpq    0x7fafb8c73d25
  0x00007fafb8c73c90: mov     %rcx,%rsi
  0x00007fafb8c73c93: lea     0x8(%rsp),%rax
  0x00007fafb8c73c98: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c73c9c: mov     %r15,%rdi
  0x00007fafb8c73c9f: vzeroupper
  0x00007fafb8c73ca2: mov     %rbp,0x330(%r15)
  0x00007fafb8c73ca9: mov     %rax,0x320(%r15)
  0x00007fafb8c73cb0: test    $0xf,%esp
  0x00007fafb8c73cb6: je      0x7fafb8c73cce
  0x00007fafb8c73cbc: sub     $0x8,%rsp
  0x00007fafb8c73cc0: callq   0x7fafd7d85400
  0x00007fafb8c73cc5: add     $0x8,%rsp
  0x00007fafb8c73cc9: jmpq    0x7fafb8c73cd3
  0x00007fafb8c73cce: callq   0x7fafd7d85400
  0x00007fafb8c73cd3: movabs  $0x0,%r10
  0x00007fafb8c73cdd: mov     %r10,0x320(%r15)
  0x00007fafb8c73ce4: movabs  $0x0,%r10
  0x00007fafb8c73cee: mov     %r10,0x330(%r15)
  0x00007fafb8c73cf5: movabs  $0x0,%r10
  0x00007fafb8c73cff: mov     %r10,0x328(%r15)
  0x00007fafb8c73d06: vzeroupper
  0x00007fafb8c73d09: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c73d11: je      0x7fafb8c73d1c
  0x00007fafb8c73d17: jmpq    0x7fafb8c5c780
  0x00007fafb8c73d1c: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c73d20: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c73d24: retq
  0x00007fafb8c73d25: pop     %rcx
  0x00007fafb8c73d26: pop     %rdx
  0x00007fafb8c73d27: mov     0x18(%rcx),%rax
  0x00007fafb8c73d2b: test    %rax,%rax
  0x00007fafb8c73d2e: je      0x7fafb8c73d73
  0x00007fafb8c73d34: mov     0x10(%rcx),%rbx
  0x00007fafb8c73d38: test    %rbx,%rbx
  0x00007fafb8c73d3b: je      0x7fafb8c73d5d
  0x00007fafb8c73d3d: mov     0x108(%rbx),%eax
  0x00007fafb8c73d43: add     $0x8,%eax
  0x00007fafb8c73d46: mov     %eax,0x108(%rbx)
  0x00007fafb8c73d4c: and     0x11c(%rbx),%eax
  0x00007fafb8c73d52: je      0x7fafb8c73e8d
  0x00007fafb8c73d58: jmpq    0x7fafb8c73d73
  0x00007fafb8c73d5d: mov     0x18(%rcx),%rcx
  0x00007fafb8c73d61: mov     0x1c(%rcx),%eax
  0x00007fafb8c73d64: add     $0x8,%eax
  0x00007fafb8c73d67: mov     %eax,0x1c(%rcx)
  0x00007fafb8c73d6a: and     0x34(%rcx),%eax
  0x00007fafb8c73d6d: je      0x7fafb8c73e8d
  0x00007fafb8c73d73: movzbl  0x0(%r13),%ebx
  0x00007fafb8c73d78: testb   $0x8,0x108(%r15)
  0x00007fafb8c73d80: je      0x7fafb8c73d8e
  0x00007fafb8c73d82: movabs  $0x7fafd899e080,%r10
  0x00007fafb8c73d8c: jmp     0x7fafb8c73d98
  0x00007fafb8c73d8e: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c73d98: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c73d9c: callq   0x7fafb8c73da6
  0x00007fafb8c73da1: jmpq    0x7fafb8c73e38
  0x00007fafb8c73da6: lea     0x8(%rsp),%rax
  0x00007fafb8c73dab: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c73daf: mov     %r15,%rdi
  0x00007fafb8c73db2: vzeroupper
  0x00007fafb8c73db5: mov     %rbp,0x330(%r15)
  0x00007fafb8c73dbc: mov     %rax,0x320(%r15)
  0x00007fafb8c73dc3: test    $0xf,%esp
  0x00007fafb8c73dc9: je      0x7fafb8c73de1
  0x00007fafb8c73dcf: sub     $0x8,%rsp
  0x00007fafb8c73dd3: callq   0x7fafd7d84c70
  0x00007fafb8c73dd8: add     $0x8,%rsp
  0x00007fafb8c73ddc: jmpq    0x7fafb8c73de6
  0x00007fafb8c73de1: callq   0x7fafd7d84c70
  0x00007fafb8c73de6: movabs  $0x0,%r10
  0x00007fafb8c73df0: mov     %r10,0x320(%r15)
  0x00007fafb8c73df7: movabs  $0x0,%r10
  0x00007fafb8c73e01: mov     %r10,0x330(%r15)
  0x00007fafb8c73e08: movabs  $0x0,%r10
  0x00007fafb8c73e12: mov     %r10,0x328(%r15)
  0x00007fafb8c73e19: vzeroupper
  0x00007fafb8c73e1c: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c73e24: je      0x7fafb8c73e2f
  0x00007fafb8c73e2a: jmpq    0x7fafb8c5c780
  0x00007fafb8c73e2f: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c73e33: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c73e37: retq
  0x00007fafb8c73e38: push    %rax
  0x00007fafb8c73e39: push    %rbx
  0x00007fafb8c73e3a: mov     0xffffffffffffffe8(%rbp),%rbx
  0x00007fafb8c73e3e: mov     0x10(%rbx),%rax
  0x00007fafb8c73e42: test    %rax,%rax
  0x00007fafb8c73e45: je      0x7fafb8c73e82
  0x00007fafb8c73e4b: mov     %r13,%rsi
  0x00007fafb8c73e4e: mov     %rbx,%rdi
  0x00007fafb8c73e51: test    $0xf,%esp
  0x00007fafb8c73e57: je      0x7fafb8c73e6f
  0x00007fafb8c73e5d: sub     $0x8,%rsp
  0x00007fafb8c73e61: callq   0x7fafd7d84c20
  0x00007fafb8c73e66: add     $0x8,%rsp
  0x00007fafb8c73e6a: jmpq    0x7fafb8c73e74
  0x00007fafb8c73e6f: callq   0x7fafd7d84c20
  0x00007fafb8c73e74: mov     0x10(%rbx),%rbx
  0x00007fafb8c73e78: add     $0x138,%rbx
  0x00007fafb8c73e7f: add     %rbx,%rax
  0x00007fafb8c73e82: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c73e86: pop     %rbx
  0x00007fafb8c73e87: pop     %rax
  0x00007fafb8c73e88: jmpq    0x7fafb8c73d73
  0x00007fafb8c73e8d: neg     %rdx
  0x00007fafb8c73e90: add     %r13,%rdx
  0x00007fafb8c73e93: callq   0x7fafb8c73e9d
  0x00007fafb8c73e98: jmpq    0x7fafb8c73f32
  0x00007fafb8c73e9d: mov     %rdx,%rsi
  0x00007fafb8c73ea0: lea     0x8(%rsp),%rax
  0x00007fafb8c73ea5: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c73ea9: mov     %r15,%rdi
  0x00007fafb8c73eac: vzeroupper
  0x00007fafb8c73eaf: mov     %rbp,0x330(%r15)
  0x00007fafb8c73eb6: mov     %rax,0x320(%r15)
  0x00007fafb8c73ebd: test    $0xf,%esp
  0x00007fafb8c73ec3: je      0x7fafb8c73edb
  0x00007fafb8c73ec9: sub     $0x8,%rsp
  0x00007fafb8c73ecd: callq   0x7fafd7d84b40
  0x00007fafb8c73ed2: add     $0x8,%rsp
  0x00007fafb8c73ed6: jmpq    0x7fafb8c73ee0
  0x00007fafb8c73edb: callq   0x7fafd7d84b40
  0x00007fafb8c73ee0: movabs  $0x0,%r10
  0x00007fafb8c73eea: mov     %r10,0x320(%r15)
  0x00007fafb8c73ef1: movabs  $0x0,%r10
  0x00007fafb8c73efb: mov     %r10,0x330(%r15)
  0x00007fafb8c73f02: movabs  $0x0,%r10
  0x00007fafb8c73f0c: mov     %r10,0x328(%r15)
  0x00007fafb8c73f13: vzeroupper
  0x00007fafb8c73f16: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c73f1e: je      0x7fafb8c73f29
  0x00007fafb8c73f24: jmpq    0x7fafb8c5c780
  0x00007fafb8c73f29: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c73f2d: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c73f31: retq
  0x00007fafb8c73f32: test    %rax,%rax
  0x00007fafb8c73f35: je      0x7fafb8c73d73
  0x00007fafb8c73f3b: cmpb    $0x0,0x156(%rax)
  0x00007fafb8c73f42: jne     0x7fafb8c73d73
  0x00007fafb8c73f48: mov     %rax,%rbx
  0x00007fafb8c73f4b: callq   0x7fafb8c73f55
  0x00007fafb8c73f50: jmpq    0x7fafb8c73fe7
  0x00007fafb8c73f55: lea     0x8(%rsp),%rax
  0x00007fafb8c73f5a: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c73f5e: mov     %r15,%rdi
  0x00007fafb8c73f61: vzeroupper
  0x00007fafb8c73f64: mov     %rbp,0x330(%r15)
  0x00007fafb8c73f6b: mov     %rax,0x320(%r15)
  0x00007fafb8c73f72: test    $0xf,%esp
  0x00007fafb8c73f78: je      0x7fafb8c73f90
  0x00007fafb8c73f7e: sub     $0x8,%rsp
  0x00007fafb8c73f82: callq   0x7fafd81ee030
  0x00007fafb8c73f87: add     $0x8,%rsp
  0x00007fafb8c73f8b: jmpq    0x7fafb8c73f95
  0x00007fafb8c73f90: callq   0x7fafd81ee030
  0x00007fafb8c73f95: movabs  $0x0,%r10
  0x00007fafb8c73f9f: mov     %r10,0x320(%r15)
  0x00007fafb8c73fa6: movabs  $0x0,%r10
  0x00007fafb8c73fb0: mov     %r10,0x330(%r15)
  0x00007fafb8c73fb7: movabs  $0x0,%r10
  0x00007fafb8c73fc1: mov     %r10,0x328(%r15)
  0x00007fafb8c73fc8: vzeroupper
  0x00007fafb8c73fcb: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c73fd3: je      0x7fafb8c73fde
  0x00007fafb8c73fd9: jmpq    0x7fafb8c5c780
  0x00007fafb8c73fde: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c73fe2: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c73fe6: retq
  0x00007fafb8c73fe7: mov     %rax,%rsi
  0x00007fafb8c73fea: mov     0xfffffffffffffff8(%rbp),%rdx
  0x00007fafb8c73fee: leave
  0x00007fafb8c73fef: pop     %rcx
  0x00007fafb8c73ff0: mov     %rdx,%rsp
  0x00007fafb8c73ff3: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c73ff7: push    %rcx
  0x00007fafb8c73ff8: jmpq    *0x110(%rbx)
  0x00007fafb8c73ffe: mov     0xffffffffffffffd8(%rbp),%rax
  0x00007fafb8c74002: test    %rax,%rax
  0x00007fafb8c74005: je      0x7fafb8c7401d
  0x00007fafb8c7400b: addq    $0x1,0x18(%rax)
  0x00007fafb8c74010: sbbq    $0x0,0x18(%rax)
  0x00007fafb8c74015: add     $0x20,%rax
  0x00007fafb8c74019: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c7401d: movzbl  0x3(%r13),%ebx
  0x00007fafb8c74022: add     $0x3,%r13
  0x00007fafb8c74026: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c74030: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c74034: nopl    0x0(%rax)
  0x00007fafb8c74038: add     %al,(%rax)
  0x00007fafb8c7403a: add     %al,(%rax)
  0x00007fafb8c7403c: add     %al,(%rax)
  0x00007fafb8c7403e: add     %al,(%rax)

----------------------------------------------------------------------
if_icmplt  161 if_icmplt  [0x00007fafb8c74060, 0x00007fafb8c74480]  1056 bytes

Argument 0 is unknown.RIP: 0x7fafb8c74060 Code size: 0x00000420
  0x00007fafb8c74060: mov     (%rsp),%eax
  0x00007fafb8c74063: add     $0x8,%rsp
  0x00007fafb8c74067: mov     (%rsp),%edx
  0x00007fafb8c7406a: add     $0x8,%rsp
  0x00007fafb8c7406e: cmp     %eax,%edx
  0x00007fafb8c74070: jnl     0x7fafb8c7443e
  0x00007fafb8c74076: mov     0xffffffffffffffe8(%rbp),%rcx
  0x00007fafb8c7407a: mov     0xffffffffffffffd8(%rbp),%rax
  0x00007fafb8c7407e: test    %rax,%rax
  0x00007fafb8c74081: je      0x7fafb8c7409f
  0x00007fafb8c74087: mov     0x8(%rax),%rbx
  0x00007fafb8c7408b: add     $0x1,%rbx
  0x00007fafb8c7408f: sbb     $0x0,%rbx
  0x00007fafb8c74093: mov     %rbx,0x8(%rax)
  0x00007fafb8c74097: add     0x10(%rax),%rax
  0x00007fafb8c7409b: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c7409f: movswl  0x1(%r13),%edx
  0x00007fafb8c740a4: bswap   %edx
  0x00007fafb8c740a6: sar     $0x10,%edx
  0x00007fafb8c740a9: movsxd  %edx,%rdx
  0x00007fafb8c740ac: add     %rdx,%r13
  0x00007fafb8c740af: test    %edx,%edx
  0x00007fafb8c740b1: jns     0x7fafb8c741b3
  0x00007fafb8c740b7: mov     0x18(%rcx),%rax
  0x00007fafb8c740bb: test    %rax,%rax
  0x00007fafb8c740be: jne     0x7fafb8c74174
  0x00007fafb8c740c4: push    %rdx
  0x00007fafb8c740c5: push    %rcx
  0x00007fafb8c740c6: callq   0x7fafb8c740d0
  0x00007fafb8c740cb: jmpq    0x7fafb8c74165
  0x00007fafb8c740d0: mov     %rcx,%rsi
  0x00007fafb8c740d3: lea     0x8(%rsp),%rax
  0x00007fafb8c740d8: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c740dc: mov     %r15,%rdi
  0x00007fafb8c740df: vzeroupper
  0x00007fafb8c740e2: mov     %rbp,0x330(%r15)
  0x00007fafb8c740e9: mov     %rax,0x320(%r15)
  0x00007fafb8c740f0: test    $0xf,%esp
  0x00007fafb8c740f6: je      0x7fafb8c7410e
  0x00007fafb8c740fc: sub     $0x8,%rsp
  0x00007fafb8c74100: callq   0x7fafd7d85400
  0x00007fafb8c74105: add     $0x8,%rsp
  0x00007fafb8c74109: jmpq    0x7fafb8c74113
  0x00007fafb8c7410e: callq   0x7fafd7d85400
  0x00007fafb8c74113: movabs  $0x0,%r10
  0x00007fafb8c7411d: mov     %r10,0x320(%r15)
  0x00007fafb8c74124: movabs  $0x0,%r10
  0x00007fafb8c7412e: mov     %r10,0x330(%r15)
  0x00007fafb8c74135: movabs  $0x0,%r10
  0x00007fafb8c7413f: mov     %r10,0x328(%r15)
  0x00007fafb8c74146: vzeroupper
  0x00007fafb8c74149: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c74151: je      0x7fafb8c7415c
  0x00007fafb8c74157: jmpq    0x7fafb8c5c780
  0x00007fafb8c7415c: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c74160: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c74164: retq
  0x00007fafb8c74165: pop     %rcx
  0x00007fafb8c74166: pop     %rdx
  0x00007fafb8c74167: mov     0x18(%rcx),%rax
  0x00007fafb8c7416b: test    %rax,%rax
  0x00007fafb8c7416e: je      0x7fafb8c741b3
  0x00007fafb8c74174: mov     0x10(%rcx),%rbx
  0x00007fafb8c74178: test    %rbx,%rbx
  0x00007fafb8c7417b: je      0x7fafb8c7419d
  0x00007fafb8c7417d: mov     0x108(%rbx),%eax
  0x00007fafb8c74183: add     $0x8,%eax
  0x00007fafb8c74186: mov     %eax,0x108(%rbx)
  0x00007fafb8c7418c: and     0x11c(%rbx),%eax
  0x00007fafb8c74192: je      0x7fafb8c742cd
  0x00007fafb8c74198: jmpq    0x7fafb8c741b3
  0x00007fafb8c7419d: mov     0x18(%rcx),%rcx
  0x00007fafb8c741a1: mov     0x1c(%rcx),%eax
  0x00007fafb8c741a4: add     $0x8,%eax
  0x00007fafb8c741a7: mov     %eax,0x1c(%rcx)
  0x00007fafb8c741aa: and     0x34(%rcx),%eax
  0x00007fafb8c741ad: je      0x7fafb8c742cd
  0x00007fafb8c741b3: movzbl  0x0(%r13),%ebx
  0x00007fafb8c741b8: testb   $0x8,0x108(%r15)
  0x00007fafb8c741c0: je      0x7fafb8c741ce
  0x00007fafb8c741c2: movabs  $0x7fafd899e080,%r10
  0x00007fafb8c741cc: jmp     0x7fafb8c741d8
  0x00007fafb8c741ce: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c741d8: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c741dc: callq   0x7fafb8c741e6
  0x00007fafb8c741e1: jmpq    0x7fafb8c74278
  0x00007fafb8c741e6: lea     0x8(%rsp),%rax
  0x00007fafb8c741eb: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c741ef: mov     %r15,%rdi
  0x00007fafb8c741f2: vzeroupper
  0x00007fafb8c741f5: mov     %rbp,0x330(%r15)
  0x00007fafb8c741fc: mov     %rax,0x320(%r15)
  0x00007fafb8c74203: test    $0xf,%esp
  0x00007fafb8c74209: je      0x7fafb8c74221
  0x00007fafb8c7420f: sub     $0x8,%rsp
  0x00007fafb8c74213: callq   0x7fafd7d84c70
  0x00007fafb8c74218: add     $0x8,%rsp
  0x00007fafb8c7421c: jmpq    0x7fafb8c74226
  0x00007fafb8c74221: callq   0x7fafd7d84c70
  0x00007fafb8c74226: movabs  $0x0,%r10
  0x00007fafb8c74230: mov     %r10,0x320(%r15)
  0x00007fafb8c74237: movabs  $0x0,%r10
  0x00007fafb8c74241: mov     %r10,0x330(%r15)
  0x00007fafb8c74248: movabs  $0x0,%r10
  0x00007fafb8c74252: mov     %r10,0x328(%r15)
  0x00007fafb8c74259: vzeroupper
  0x00007fafb8c7425c: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c74264: je      0x7fafb8c7426f
  0x00007fafb8c7426a: jmpq    0x7fafb8c5c780
  0x00007fafb8c7426f: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c74273: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c74277: retq
  0x00007fafb8c74278: push    %rax
  0x00007fafb8c74279: push    %rbx
  0x00007fafb8c7427a: mov     0xffffffffffffffe8(%rbp),%rbx
  0x00007fafb8c7427e: mov     0x10(%rbx),%rax
  0x00007fafb8c74282: test    %rax,%rax
  0x00007fafb8c74285: je      0x7fafb8c742c2
  0x00007fafb8c7428b: mov     %r13,%rsi
  0x00007fafb8c7428e: mov     %rbx,%rdi
  0x00007fafb8c74291: test    $0xf,%esp
  0x00007fafb8c74297: je      0x7fafb8c742af
  0x00007fafb8c7429d: sub     $0x8,%rsp
  0x00007fafb8c742a1: callq   0x7fafd7d84c20
  0x00007fafb8c742a6: add     $0x8,%rsp
  0x00007fafb8c742aa: jmpq    0x7fafb8c742b4
  0x00007fafb8c742af: callq   0x7fafd7d84c20
  0x00007fafb8c742b4: mov     0x10(%rbx),%rbx
  0x00007fafb8c742b8: add     $0x138,%rbx
  0x00007fafb8c742bf: add     %rbx,%rax
  0x00007fafb8c742c2: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c742c6: pop     %rbx
  0x00007fafb8c742c7: pop     %rax
  0x00007fafb8c742c8: jmpq    0x7fafb8c741b3
  0x00007fafb8c742cd: neg     %rdx
  0x00007fafb8c742d0: add     %r13,%rdx
  0x00007fafb8c742d3: callq   0x7fafb8c742dd
  0x00007fafb8c742d8: jmpq    0x7fafb8c74372
  0x00007fafb8c742dd: mov     %rdx,%rsi
  0x00007fafb8c742e0: lea     0x8(%rsp),%rax
  0x00007fafb8c742e5: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c742e9: mov     %r15,%rdi
  0x00007fafb8c742ec: vzeroupper
  0x00007fafb8c742ef: mov     %rbp,0x330(%r15)
  0x00007fafb8c742f6: mov     %rax,0x320(%r15)
  0x00007fafb8c742fd: test    $0xf,%esp
  0x00007fafb8c74303: je      0x7fafb8c7431b
  0x00007fafb8c74309: sub     $0x8,%rsp
  0x00007fafb8c7430d: callq   0x7fafd7d84b40
  0x00007fafb8c74312: add     $0x8,%rsp
  0x00007fafb8c74316: jmpq    0x7fafb8c74320
  0x00007fafb8c7431b: callq   0x7fafd7d84b40
  0x00007fafb8c74320: movabs  $0x0,%r10
  0x00007fafb8c7432a: mov     %r10,0x320(%r15)
  0x00007fafb8c74331: movabs  $0x0,%r10
  0x00007fafb8c7433b: mov     %r10,0x330(%r15)
  0x00007fafb8c74342: movabs  $0x0,%r10
  0x00007fafb8c7434c: mov     %r10,0x328(%r15)
  0x00007fafb8c74353: vzeroupper
  0x00007fafb8c74356: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7435e: je      0x7fafb8c74369
  0x00007fafb8c74364: jmpq    0x7fafb8c5c780
  0x00007fafb8c74369: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7436d: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c74371: retq
  0x00007fafb8c74372: test    %rax,%rax
  0x00007fafb8c74375: je      0x7fafb8c741b3
  0x00007fafb8c7437b: cmpb    $0x0,0x156(%rax)
  0x00007fafb8c74382: jne     0x7fafb8c741b3
  0x00007fafb8c74388: mov     %rax,%rbx
  0x00007fafb8c7438b: callq   0x7fafb8c74395
  0x00007fafb8c74390: jmpq    0x7fafb8c74427
  0x00007fafb8c74395: lea     0x8(%rsp),%rax
  0x00007fafb8c7439a: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7439e: mov     %r15,%rdi
  0x00007fafb8c743a1: vzeroupper
  0x00007fafb8c743a4: mov     %rbp,0x330(%r15)
  0x00007fafb8c743ab: mov     %rax,0x320(%r15)
  0x00007fafb8c743b2: test    $0xf,%esp
  0x00007fafb8c743b8: je      0x7fafb8c743d0
  0x00007fafb8c743be: sub     $0x8,%rsp
  0x00007fafb8c743c2: callq   0x7fafd81ee030
  0x00007fafb8c743c7: add     $0x8,%rsp
  0x00007fafb8c743cb: jmpq    0x7fafb8c743d5
  0x00007fafb8c743d0: callq   0x7fafd81ee030
  0x00007fafb8c743d5: movabs  $0x0,%r10
  0x00007fafb8c743df: mov     %r10,0x320(%r15)
  0x00007fafb8c743e6: movabs  $0x0,%r10
  0x00007fafb8c743f0: mov     %r10,0x330(%r15)
  0x00007fafb8c743f7: movabs  $0x0,%r10
  0x00007fafb8c74401: mov     %r10,0x328(%r15)
  0x00007fafb8c74408: vzeroupper
  0x00007fafb8c7440b: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c74413: je      0x7fafb8c7441e
  0x00007fafb8c74419: jmpq    0x7fafb8c5c780
  0x00007fafb8c7441e: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c74422: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c74426: retq
  0x00007fafb8c74427: mov     %rax,%rsi
  0x00007fafb8c7442a: mov     0xfffffffffffffff8(%rbp),%rdx
  0x00007fafb8c7442e: leave
  0x00007fafb8c7442f: pop     %rcx
  0x00007fafb8c74430: mov     %rdx,%rsp
  0x00007fafb8c74433: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c74437: push    %rcx
  0x00007fafb8c74438: jmpq    *0x110(%rbx)
  0x00007fafb8c7443e: mov     0xffffffffffffffd8(%rbp),%rax
  0x00007fafb8c74442: test    %rax,%rax
  0x00007fafb8c74445: je      0x7fafb8c7445d
  0x00007fafb8c7444b: addq    $0x1,0x18(%rax)
  0x00007fafb8c74450: sbbq    $0x0,0x18(%rax)
  0x00007fafb8c74455: add     $0x20,%rax
  0x00007fafb8c74459: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c7445d: movzbl  0x3(%r13),%ebx
  0x00007fafb8c74462: add     $0x3,%r13
  0x00007fafb8c74466: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c74470: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c74474: nopl    0x0(%rax)
  0x00007fafb8c74478: add     %al,(%rax)
  0x00007fafb8c7447a: add     %al,(%rax)
  0x00007fafb8c7447c: add     %al,(%rax)
  0x00007fafb8c7447e: add     %al,(%rax)

----------------------------------------------------------------------
if_icmpge  162 if_icmpge  [0x00007fafb8c744a0, 0x00007fafb8c748c0]  1056 bytes

Argument 0 is unknown.RIP: 0x7fafb8c744a0 Code size: 0x00000420
  0x00007fafb8c744a0: mov     (%rsp),%eax
  0x00007fafb8c744a3: add     $0x8,%rsp
  0x00007fafb8c744a7: mov     (%rsp),%edx
  0x00007fafb8c744aa: add     $0x8,%rsp
  0x00007fafb8c744ae: cmp     %eax,%edx
  0x00007fafb8c744b0: jl      0x7fafb8c7487e
  0x00007fafb8c744b6: mov     0xffffffffffffffe8(%rbp),%rcx
  0x00007fafb8c744ba: mov     0xffffffffffffffd8(%rbp),%rax
  0x00007fafb8c744be: test    %rax,%rax
  0x00007fafb8c744c1: je      0x7fafb8c744df
  0x00007fafb8c744c7: mov     0x8(%rax),%rbx
  0x00007fafb8c744cb: add     $0x1,%rbx
  0x00007fafb8c744cf: sbb     $0x0,%rbx
  0x00007fafb8c744d3: mov     %rbx,0x8(%rax)
  0x00007fafb8c744d7: add     0x10(%rax),%rax
  0x00007fafb8c744db: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c744df: movswl  0x1(%r13),%edx
  0x00007fafb8c744e4: bswap   %edx
  0x00007fafb8c744e6: sar     $0x10,%edx
  0x00007fafb8c744e9: movsxd  %edx,%rdx
  0x00007fafb8c744ec: add     %rdx,%r13
  0x00007fafb8c744ef: test    %edx,%edx
  0x00007fafb8c744f1: jns     0x7fafb8c745f3
  0x00007fafb8c744f7: mov     0x18(%rcx),%rax
  0x00007fafb8c744fb: test    %rax,%rax
  0x00007fafb8c744fe: jne     0x7fafb8c745b4
  0x00007fafb8c74504: push    %rdx
  0x00007fafb8c74505: push    %rcx
  0x00007fafb8c74506: callq   0x7fafb8c74510
  0x00007fafb8c7450b: jmpq    0x7fafb8c745a5
  0x00007fafb8c74510: mov     %rcx,%rsi
  0x00007fafb8c74513: lea     0x8(%rsp),%rax
  0x00007fafb8c74518: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7451c: mov     %r15,%rdi
  0x00007fafb8c7451f: vzeroupper
  0x00007fafb8c74522: mov     %rbp,0x330(%r15)
  0x00007fafb8c74529: mov     %rax,0x320(%r15)
  0x00007fafb8c74530: test    $0xf,%esp
  0x00007fafb8c74536: je      0x7fafb8c7454e
  0x00007fafb8c7453c: sub     $0x8,%rsp
  0x00007fafb8c74540: callq   0x7fafd7d85400
  0x00007fafb8c74545: add     $0x8,%rsp
  0x00007fafb8c74549: jmpq    0x7fafb8c74553
  0x00007fafb8c7454e: callq   0x7fafd7d85400
  0x00007fafb8c74553: movabs  $0x0,%r10
  0x00007fafb8c7455d: mov     %r10,0x320(%r15)
  0x00007fafb8c74564: movabs  $0x0,%r10
  0x00007fafb8c7456e: mov     %r10,0x330(%r15)
  0x00007fafb8c74575: movabs  $0x0,%r10
  0x00007fafb8c7457f: mov     %r10,0x328(%r15)
  0x00007fafb8c74586: vzeroupper
  0x00007fafb8c74589: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c74591: je      0x7fafb8c7459c
  0x00007fafb8c74597: jmpq    0x7fafb8c5c780
  0x00007fafb8c7459c: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c745a0: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c745a4: retq
  0x00007fafb8c745a5: pop     %rcx
  0x00007fafb8c745a6: pop     %rdx
  0x00007fafb8c745a7: mov     0x18(%rcx),%rax
  0x00007fafb8c745ab: test    %rax,%rax
  0x00007fafb8c745ae: je      0x7fafb8c745f3
  0x00007fafb8c745b4: mov     0x10(%rcx),%rbx
  0x00007fafb8c745b8: test    %rbx,%rbx
  0x00007fafb8c745bb: je      0x7fafb8c745dd
  0x00007fafb8c745bd: mov     0x108(%rbx),%eax
  0x00007fafb8c745c3: add     $0x8,%eax
  0x00007fafb8c745c6: mov     %eax,0x108(%rbx)
  0x00007fafb8c745cc: and     0x11c(%rbx),%eax
  0x00007fafb8c745d2: je      0x7fafb8c7470d
  0x00007fafb8c745d8: jmpq    0x7fafb8c745f3
  0x00007fafb8c745dd: mov     0x18(%rcx),%rcx
  0x00007fafb8c745e1: mov     0x1c(%rcx),%eax
  0x00007fafb8c745e4: add     $0x8,%eax
  0x00007fafb8c745e7: mov     %eax,0x1c(%rcx)
  0x00007fafb8c745ea: and     0x34(%rcx),%eax
  0x00007fafb8c745ed: je      0x7fafb8c7470d
  0x00007fafb8c745f3: movzbl  0x0(%r13),%ebx
  0x00007fafb8c745f8: testb   $0x8,0x108(%r15)
  0x00007fafb8c74600: je      0x7fafb8c7460e
  0x00007fafb8c74602: movabs  $0x7fafd899e080,%r10
  0x00007fafb8c7460c: jmp     0x7fafb8c74618
  0x00007fafb8c7460e: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c74618: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7461c: callq   0x7fafb8c74626
  0x00007fafb8c74621: jmpq    0x7fafb8c746b8
  0x00007fafb8c74626: lea     0x8(%rsp),%rax
  0x00007fafb8c7462b: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7462f: mov     %r15,%rdi
  0x00007fafb8c74632: vzeroupper
  0x00007fafb8c74635: mov     %rbp,0x330(%r15)
  0x00007fafb8c7463c: mov     %rax,0x320(%r15)
  0x00007fafb8c74643: test    $0xf,%esp
  0x00007fafb8c74649: je      0x7fafb8c74661
  0x00007fafb8c7464f: sub     $0x8,%rsp
  0x00007fafb8c74653: callq   0x7fafd7d84c70
  0x00007fafb8c74658: add     $0x8,%rsp
  0x00007fafb8c7465c: jmpq    0x7fafb8c74666
  0x00007fafb8c74661: callq   0x7fafd7d84c70
  0x00007fafb8c74666: movabs  $0x0,%r10
  0x00007fafb8c74670: mov     %r10,0x320(%r15)
  0x00007fafb8c74677: movabs  $0x0,%r10
  0x00007fafb8c74681: mov     %r10,0x330(%r15)
  0x00007fafb8c74688: movabs  $0x0,%r10
  0x00007fafb8c74692: mov     %r10,0x328(%r15)
  0x00007fafb8c74699: vzeroupper
  0x00007fafb8c7469c: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c746a4: je      0x7fafb8c746af
  0x00007fafb8c746aa: jmpq    0x7fafb8c5c780
  0x00007fafb8c746af: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c746b3: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c746b7: retq
  0x00007fafb8c746b8: push    %rax
  0x00007fafb8c746b9: push    %rbx
  0x00007fafb8c746ba: mov     0xffffffffffffffe8(%rbp),%rbx
  0x00007fafb8c746be: mov     0x10(%rbx),%rax
  0x00007fafb8c746c2: test    %rax,%rax
  0x00007fafb8c746c5: je      0x7fafb8c74702
  0x00007fafb8c746cb: mov     %r13,%rsi
  0x00007fafb8c746ce: mov     %rbx,%rdi
  0x00007fafb8c746d1: test    $0xf,%esp
  0x00007fafb8c746d7: je      0x7fafb8c746ef
  0x00007fafb8c746dd: sub     $0x8,%rsp
  0x00007fafb8c746e1: callq   0x7fafd7d84c20
  0x00007fafb8c746e6: add     $0x8,%rsp
  0x00007fafb8c746ea: jmpq    0x7fafb8c746f4
  0x00007fafb8c746ef: callq   0x7fafd7d84c20
  0x00007fafb8c746f4: mov     0x10(%rbx),%rbx
  0x00007fafb8c746f8: add     $0x138,%rbx
  0x00007fafb8c746ff: add     %rbx,%rax
  0x00007fafb8c74702: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c74706: pop     %rbx
  0x00007fafb8c74707: pop     %rax
  0x00007fafb8c74708: jmpq    0x7fafb8c745f3
  0x00007fafb8c7470d: neg     %rdx
  0x00007fafb8c74710: add     %r13,%rdx
  0x00007fafb8c74713: callq   0x7fafb8c7471d
  0x00007fafb8c74718: jmpq    0x7fafb8c747b2
  0x00007fafb8c7471d: mov     %rdx,%rsi
  0x00007fafb8c74720: lea     0x8(%rsp),%rax
  0x00007fafb8c74725: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c74729: mov     %r15,%rdi
  0x00007fafb8c7472c: vzeroupper
  0x00007fafb8c7472f: mov     %rbp,0x330(%r15)
  0x00007fafb8c74736: mov     %rax,0x320(%r15)
  0x00007fafb8c7473d: test    $0xf,%esp
  0x00007fafb8c74743: je      0x7fafb8c7475b
  0x00007fafb8c74749: sub     $0x8,%rsp
  0x00007fafb8c7474d: callq   0x7fafd7d84b40
  0x00007fafb8c74752: add     $0x8,%rsp
  0x00007fafb8c74756: jmpq    0x7fafb8c74760
  0x00007fafb8c7475b: callq   0x7fafd7d84b40
  0x00007fafb8c74760: movabs  $0x0,%r10
  0x00007fafb8c7476a: mov     %r10,0x320(%r15)
  0x00007fafb8c74771: movabs  $0x0,%r10
  0x00007fafb8c7477b: mov     %r10,0x330(%r15)
  0x00007fafb8c74782: movabs  $0x0,%r10
  0x00007fafb8c7478c: mov     %r10,0x328(%r15)
  0x00007fafb8c74793: vzeroupper
  0x00007fafb8c74796: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7479e: je      0x7fafb8c747a9
  0x00007fafb8c747a4: jmpq    0x7fafb8c5c780
  0x00007fafb8c747a9: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c747ad: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c747b1: retq
  0x00007fafb8c747b2: test    %rax,%rax
  0x00007fafb8c747b5: je      0x7fafb8c745f3
  0x00007fafb8c747bb: cmpb    $0x0,0x156(%rax)
  0x00007fafb8c747c2: jne     0x7fafb8c745f3
  0x00007fafb8c747c8: mov     %rax,%rbx
  0x00007fafb8c747cb: callq   0x7fafb8c747d5
  0x00007fafb8c747d0: jmpq    0x7fafb8c74867
  0x00007fafb8c747d5: lea     0x8(%rsp),%rax
  0x00007fafb8c747da: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c747de: mov     %r15,%rdi
  0x00007fafb8c747e1: vzeroupper
  0x00007fafb8c747e4: mov     %rbp,0x330(%r15)
  0x00007fafb8c747eb: mov     %rax,0x320(%r15)
  0x00007fafb8c747f2: test    $0xf,%esp
  0x00007fafb8c747f8: je      0x7fafb8c74810
  0x00007fafb8c747fe: sub     $0x8,%rsp
  0x00007fafb8c74802: callq   0x7fafd81ee030
  0x00007fafb8c74807: add     $0x8,%rsp
  0x00007fafb8c7480b: jmpq    0x7fafb8c74815
  0x00007fafb8c74810: callq   0x7fafd81ee030
  0x00007fafb8c74815: movabs  $0x0,%r10
  0x00007fafb8c7481f: mov     %r10,0x320(%r15)
  0x00007fafb8c74826: movabs  $0x0,%r10
  0x00007fafb8c74830: mov     %r10,0x330(%r15)
  0x00007fafb8c74837: movabs  $0x0,%r10
  0x00007fafb8c74841: mov     %r10,0x328(%r15)
  0x00007fafb8c74848: vzeroupper
  0x00007fafb8c7484b: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c74853: je      0x7fafb8c7485e
  0x00007fafb8c74859: jmpq    0x7fafb8c5c780
  0x00007fafb8c7485e: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c74862: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c74866: retq
  0x00007fafb8c74867: mov     %rax,%rsi
  0x00007fafb8c7486a: mov     0xfffffffffffffff8(%rbp),%rdx
  0x00007fafb8c7486e: leave
  0x00007fafb8c7486f: pop     %rcx
  0x00007fafb8c74870: mov     %rdx,%rsp
  0x00007fafb8c74873: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c74877: push    %rcx
  0x00007fafb8c74878: jmpq    *0x110(%rbx)
  0x00007fafb8c7487e: mov     0xffffffffffffffd8(%rbp),%rax
  0x00007fafb8c74882: test    %rax,%rax
  0x00007fafb8c74885: je      0x7fafb8c7489d
  0x00007fafb8c7488b: addq    $0x1,0x18(%rax)
  0x00007fafb8c74890: sbbq    $0x0,0x18(%rax)
  0x00007fafb8c74895: add     $0x20,%rax
  0x00007fafb8c74899: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c7489d: movzbl  0x3(%r13),%ebx
  0x00007fafb8c748a2: add     $0x3,%r13
  0x00007fafb8c748a6: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c748b0: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c748b4: nopl    0x0(%rax)
  0x00007fafb8c748b8: add     %al,(%rax)
  0x00007fafb8c748ba: add     %al,(%rax)
  0x00007fafb8c748bc: add     %al,(%rax)
  0x00007fafb8c748be: add     %al,(%rax)

----------------------------------------------------------------------
if_icmpgt  163 if_icmpgt  [0x00007fafb8c748e0, 0x00007fafb8c74d00]  1056 bytes

Argument 0 is unknown.RIP: 0x7fafb8c748e0 Code size: 0x00000420
  0x00007fafb8c748e0: mov     (%rsp),%eax
  0x00007fafb8c748e3: add     $0x8,%rsp
  0x00007fafb8c748e7: mov     (%rsp),%edx
  0x00007fafb8c748ea: add     $0x8,%rsp
  0x00007fafb8c748ee: cmp     %eax,%edx
  0x00007fafb8c748f0: jle     0x7fafb8c74cbe
  0x00007fafb8c748f6: mov     0xffffffffffffffe8(%rbp),%rcx
  0x00007fafb8c748fa: mov     0xffffffffffffffd8(%rbp),%rax
  0x00007fafb8c748fe: test    %rax,%rax
  0x00007fafb8c74901: je      0x7fafb8c7491f
  0x00007fafb8c74907: mov     0x8(%rax),%rbx
  0x00007fafb8c7490b: add     $0x1,%rbx
  0x00007fafb8c7490f: sbb     $0x0,%rbx
  0x00007fafb8c74913: mov     %rbx,0x8(%rax)
  0x00007fafb8c74917: add     0x10(%rax),%rax
  0x00007fafb8c7491b: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c7491f: movswl  0x1(%r13),%edx
  0x00007fafb8c74924: bswap   %edx
  0x00007fafb8c74926: sar     $0x10,%edx
  0x00007fafb8c74929: movsxd  %edx,%rdx
  0x00007fafb8c7492c: add     %rdx,%r13
  0x00007fafb8c7492f: test    %edx,%edx
  0x00007fafb8c74931: jns     0x7fafb8c74a33
  0x00007fafb8c74937: mov     0x18(%rcx),%rax
  0x00007fafb8c7493b: test    %rax,%rax
  0x00007fafb8c7493e: jne     0x7fafb8c749f4
  0x00007fafb8c74944: push    %rdx
  0x00007fafb8c74945: push    %rcx
  0x00007fafb8c74946: callq   0x7fafb8c74950
  0x00007fafb8c7494b: jmpq    0x7fafb8c749e5
  0x00007fafb8c74950: mov     %rcx,%rsi
  0x00007fafb8c74953: lea     0x8(%rsp),%rax
  0x00007fafb8c74958: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7495c: mov     %r15,%rdi
  0x00007fafb8c7495f: vzeroupper
  0x00007fafb8c74962: mov     %rbp,0x330(%r15)
  0x00007fafb8c74969: mov     %rax,0x320(%r15)
  0x00007fafb8c74970: test    $0xf,%esp
  0x00007fafb8c74976: je      0x7fafb8c7498e
  0x00007fafb8c7497c: sub     $0x8,%rsp
  0x00007fafb8c74980: callq   0x7fafd7d85400
  0x00007fafb8c74985: add     $0x8,%rsp
  0x00007fafb8c74989: jmpq    0x7fafb8c74993
  0x00007fafb8c7498e: callq   0x7fafd7d85400
  0x00007fafb8c74993: movabs  $0x0,%r10
  0x00007fafb8c7499d: mov     %r10,0x320(%r15)
  0x00007fafb8c749a4: movabs  $0x0,%r10
  0x00007fafb8c749ae: mov     %r10,0x330(%r15)
  0x00007fafb8c749b5: movabs  $0x0,%r10
  0x00007fafb8c749bf: mov     %r10,0x328(%r15)
  0x00007fafb8c749c6: vzeroupper
  0x00007fafb8c749c9: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c749d1: je      0x7fafb8c749dc
  0x00007fafb8c749d7: jmpq    0x7fafb8c5c780
  0x00007fafb8c749dc: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c749e0: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c749e4: retq
  0x00007fafb8c749e5: pop     %rcx
  0x00007fafb8c749e6: pop     %rdx
  0x00007fafb8c749e7: mov     0x18(%rcx),%rax
  0x00007fafb8c749eb: test    %rax,%rax
  0x00007fafb8c749ee: je      0x7fafb8c74a33
  0x00007fafb8c749f4: mov     0x10(%rcx),%rbx
  0x00007fafb8c749f8: test    %rbx,%rbx
  0x00007fafb8c749fb: je      0x7fafb8c74a1d
  0x00007fafb8c749fd: mov     0x108(%rbx),%eax
  0x00007fafb8c74a03: add     $0x8,%eax
  0x00007fafb8c74a06: mov     %eax,0x108(%rbx)
  0x00007fafb8c74a0c: and     0x11c(%rbx),%eax
  0x00007fafb8c74a12: je      0x7fafb8c74b4d
  0x00007fafb8c74a18: jmpq    0x7fafb8c74a33
  0x00007fafb8c74a1d: mov     0x18(%rcx),%rcx
  0x00007fafb8c74a21: mov     0x1c(%rcx),%eax
  0x00007fafb8c74a24: add     $0x8,%eax
  0x00007fafb8c74a27: mov     %eax,0x1c(%rcx)
  0x00007fafb8c74a2a: and     0x34(%rcx),%eax
  0x00007fafb8c74a2d: je      0x7fafb8c74b4d
  0x00007fafb8c74a33: movzbl  0x0(%r13),%ebx
  0x00007fafb8c74a38: testb   $0x8,0x108(%r15)
  0x00007fafb8c74a40: je      0x7fafb8c74a4e
  0x00007fafb8c74a42: movabs  $0x7fafd899e080,%r10
  0x00007fafb8c74a4c: jmp     0x7fafb8c74a58
  0x00007fafb8c74a4e: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c74a58: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c74a5c: callq   0x7fafb8c74a66
  0x00007fafb8c74a61: jmpq    0x7fafb8c74af8
  0x00007fafb8c74a66: lea     0x8(%rsp),%rax
  0x00007fafb8c74a6b: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c74a6f: mov     %r15,%rdi
  0x00007fafb8c74a72: vzeroupper
  0x00007fafb8c74a75: mov     %rbp,0x330(%r15)
  0x00007fafb8c74a7c: mov     %rax,0x320(%r15)
  0x00007fafb8c74a83: test    $0xf,%esp
  0x00007fafb8c74a89: je      0x7fafb8c74aa1
  0x00007fafb8c74a8f: sub     $0x8,%rsp
  0x00007fafb8c74a93: callq   0x7fafd7d84c70
  0x00007fafb8c74a98: add     $0x8,%rsp
  0x00007fafb8c74a9c: jmpq    0x7fafb8c74aa6
  0x00007fafb8c74aa1: callq   0x7fafd7d84c70
  0x00007fafb8c74aa6: movabs  $0x0,%r10
  0x00007fafb8c74ab0: mov     %r10,0x320(%r15)
  0x00007fafb8c74ab7: movabs  $0x0,%r10
  0x00007fafb8c74ac1: mov     %r10,0x330(%r15)
  0x00007fafb8c74ac8: movabs  $0x0,%r10
  0x00007fafb8c74ad2: mov     %r10,0x328(%r15)
  0x00007fafb8c74ad9: vzeroupper
  0x00007fafb8c74adc: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c74ae4: je      0x7fafb8c74aef
  0x00007fafb8c74aea: jmpq    0x7fafb8c5c780
  0x00007fafb8c74aef: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c74af3: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c74af7: retq
  0x00007fafb8c74af8: push    %rax
  0x00007fafb8c74af9: push    %rbx
  0x00007fafb8c74afa: mov     0xffffffffffffffe8(%rbp),%rbx
  0x00007fafb8c74afe: mov     0x10(%rbx),%rax
  0x00007fafb8c74b02: test    %rax,%rax
  0x00007fafb8c74b05: je      0x7fafb8c74b42
  0x00007fafb8c74b0b: mov     %r13,%rsi
  0x00007fafb8c74b0e: mov     %rbx,%rdi
  0x00007fafb8c74b11: test    $0xf,%esp
  0x00007fafb8c74b17: je      0x7fafb8c74b2f
  0x00007fafb8c74b1d: sub     $0x8,%rsp
  0x00007fafb8c74b21: callq   0x7fafd7d84c20
  0x00007fafb8c74b26: add     $0x8,%rsp
  0x00007fafb8c74b2a: jmpq    0x7fafb8c74b34
  0x00007fafb8c74b2f: callq   0x7fafd7d84c20
  0x00007fafb8c74b34: mov     0x10(%rbx),%rbx
  0x00007fafb8c74b38: add     $0x138,%rbx
  0x00007fafb8c74b3f: add     %rbx,%rax
  0x00007fafb8c74b42: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c74b46: pop     %rbx
  0x00007fafb8c74b47: pop     %rax
  0x00007fafb8c74b48: jmpq    0x7fafb8c74a33
  0x00007fafb8c74b4d: neg     %rdx
  0x00007fafb8c74b50: add     %r13,%rdx
  0x00007fafb8c74b53: callq   0x7fafb8c74b5d
  0x00007fafb8c74b58: jmpq    0x7fafb8c74bf2
  0x00007fafb8c74b5d: mov     %rdx,%rsi
  0x00007fafb8c74b60: lea     0x8(%rsp),%rax
  0x00007fafb8c74b65: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c74b69: mov     %r15,%rdi
  0x00007fafb8c74b6c: vzeroupper
  0x00007fafb8c74b6f: mov     %rbp,0x330(%r15)
  0x00007fafb8c74b76: mov     %rax,0x320(%r15)
  0x00007fafb8c74b7d: test    $0xf,%esp
  0x00007fafb8c74b83: je      0x7fafb8c74b9b
  0x00007fafb8c74b89: sub     $0x8,%rsp
  0x00007fafb8c74b8d: callq   0x7fafd7d84b40
  0x00007fafb8c74b92: add     $0x8,%rsp
  0x00007fafb8c74b96: jmpq    0x7fafb8c74ba0
  0x00007fafb8c74b9b: callq   0x7fafd7d84b40
  0x00007fafb8c74ba0: movabs  $0x0,%r10
  0x00007fafb8c74baa: mov     %r10,0x320(%r15)
  0x00007fafb8c74bb1: movabs  $0x0,%r10
  0x00007fafb8c74bbb: mov     %r10,0x330(%r15)
  0x00007fafb8c74bc2: movabs  $0x0,%r10
  0x00007fafb8c74bcc: mov     %r10,0x328(%r15)
  0x00007fafb8c74bd3: vzeroupper
  0x00007fafb8c74bd6: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c74bde: je      0x7fafb8c74be9
  0x00007fafb8c74be4: jmpq    0x7fafb8c5c780
  0x00007fafb8c74be9: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c74bed: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c74bf1: retq
  0x00007fafb8c74bf2: test    %rax,%rax
  0x00007fafb8c74bf5: je      0x7fafb8c74a33
  0x00007fafb8c74bfb: cmpb    $0x0,0x156(%rax)
  0x00007fafb8c74c02: jne     0x7fafb8c74a33
  0x00007fafb8c74c08: mov     %rax,%rbx
  0x00007fafb8c74c0b: callq   0x7fafb8c74c15
  0x00007fafb8c74c10: jmpq    0x7fafb8c74ca7
  0x00007fafb8c74c15: lea     0x8(%rsp),%rax
  0x00007fafb8c74c1a: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c74c1e: mov     %r15,%rdi
  0x00007fafb8c74c21: vzeroupper
  0x00007fafb8c74c24: mov     %rbp,0x330(%r15)
  0x00007fafb8c74c2b: mov     %rax,0x320(%r15)
  0x00007fafb8c74c32: test    $0xf,%esp
  0x00007fafb8c74c38: je      0x7fafb8c74c50
  0x00007fafb8c74c3e: sub     $0x8,%rsp
  0x00007fafb8c74c42: callq   0x7fafd81ee030
  0x00007fafb8c74c47: add     $0x8,%rsp
  0x00007fafb8c74c4b: jmpq    0x7fafb8c74c55
  0x00007fafb8c74c50: callq   0x7fafd81ee030
  0x00007fafb8c74c55: movabs  $0x0,%r10
  0x00007fafb8c74c5f: mov     %r10,0x320(%r15)
  0x00007fafb8c74c66: movabs  $0x0,%r10
  0x00007fafb8c74c70: mov     %r10,0x330(%r15)
  0x00007fafb8c74c77: movabs  $0x0,%r10
  0x00007fafb8c74c81: mov     %r10,0x328(%r15)
  0x00007fafb8c74c88: vzeroupper
  0x00007fafb8c74c8b: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c74c93: je      0x7fafb8c74c9e
  0x00007fafb8c74c99: jmpq    0x7fafb8c5c780
  0x00007fafb8c74c9e: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c74ca2: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c74ca6: retq
  0x00007fafb8c74ca7: mov     %rax,%rsi
  0x00007fafb8c74caa: mov     0xfffffffffffffff8(%rbp),%rdx
  0x00007fafb8c74cae: leave
  0x00007fafb8c74caf: pop     %rcx
  0x00007fafb8c74cb0: mov     %rdx,%rsp
  0x00007fafb8c74cb3: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c74cb7: push    %rcx
  0x00007fafb8c74cb8: jmpq    *0x110(%rbx)
  0x00007fafb8c74cbe: mov     0xffffffffffffffd8(%rbp),%rax
  0x00007fafb8c74cc2: test    %rax,%rax
  0x00007fafb8c74cc5: je      0x7fafb8c74cdd
  0x00007fafb8c74ccb: addq    $0x1,0x18(%rax)
  0x00007fafb8c74cd0: sbbq    $0x0,0x18(%rax)
  0x00007fafb8c74cd5: add     $0x20,%rax
  0x00007fafb8c74cd9: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c74cdd: movzbl  0x3(%r13),%ebx
  0x00007fafb8c74ce2: add     $0x3,%r13
  0x00007fafb8c74ce6: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c74cf0: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c74cf4: nopl    0x0(%rax)
  0x00007fafb8c74cf8: add     %al,(%rax)
  0x00007fafb8c74cfa: add     %al,(%rax)
  0x00007fafb8c74cfc: add     %al,(%rax)
  0x00007fafb8c74cfe: add     %al,(%rax)

----------------------------------------------------------------------
if_icmple  164 if_icmple  [0x00007fafb8c74d20, 0x00007fafb8c75140]  1056 bytes

Argument 0 is unknown.RIP: 0x7fafb8c74d20 Code size: 0x00000420
  0x00007fafb8c74d20: mov     (%rsp),%eax
  0x00007fafb8c74d23: add     $0x8,%rsp
  0x00007fafb8c74d27: mov     (%rsp),%edx
  0x00007fafb8c74d2a: add     $0x8,%rsp
  0x00007fafb8c74d2e: cmp     %eax,%edx
  0x00007fafb8c74d30: jnle    0x7fafb8c750fe
  0x00007fafb8c74d36: mov     0xffffffffffffffe8(%rbp),%rcx
  0x00007fafb8c74d3a: mov     0xffffffffffffffd8(%rbp),%rax
  0x00007fafb8c74d3e: test    %rax,%rax
  0x00007fafb8c74d41: je      0x7fafb8c74d5f
  0x00007fafb8c74d47: mov     0x8(%rax),%rbx
  0x00007fafb8c74d4b: add     $0x1,%rbx
  0x00007fafb8c74d4f: sbb     $0x0,%rbx
  0x00007fafb8c74d53: mov     %rbx,0x8(%rax)
  0x00007fafb8c74d57: add     0x10(%rax),%rax
  0x00007fafb8c74d5b: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c74d5f: movswl  0x1(%r13),%edx
  0x00007fafb8c74d64: bswap   %edx
  0x00007fafb8c74d66: sar     $0x10,%edx
  0x00007fafb8c74d69: movsxd  %edx,%rdx
  0x00007fafb8c74d6c: add     %rdx,%r13
  0x00007fafb8c74d6f: test    %edx,%edx
  0x00007fafb8c74d71: jns     0x7fafb8c74e73
  0x00007fafb8c74d77: mov     0x18(%rcx),%rax
  0x00007fafb8c74d7b: test    %rax,%rax
  0x00007fafb8c74d7e: jne     0x7fafb8c74e34
  0x00007fafb8c74d84: push    %rdx
  0x00007fafb8c74d85: push    %rcx
  0x00007fafb8c74d86: callq   0x7fafb8c74d90
  0x00007fafb8c74d8b: jmpq    0x7fafb8c74e25
  0x00007fafb8c74d90: mov     %rcx,%rsi
  0x00007fafb8c74d93: lea     0x8(%rsp),%rax
  0x00007fafb8c74d98: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c74d9c: mov     %r15,%rdi
  0x00007fafb8c74d9f: vzeroupper
  0x00007fafb8c74da2: mov     %rbp,0x330(%r15)
  0x00007fafb8c74da9: mov     %rax,0x320(%r15)
  0x00007fafb8c74db0: test    $0xf,%esp
  0x00007fafb8c74db6: je      0x7fafb8c74dce
  0x00007fafb8c74dbc: sub     $0x8,%rsp
  0x00007fafb8c74dc0: callq   0x7fafd7d85400
  0x00007fafb8c74dc5: add     $0x8,%rsp
  0x00007fafb8c74dc9: jmpq    0x7fafb8c74dd3
  0x00007fafb8c74dce: callq   0x7fafd7d85400
  0x00007fafb8c74dd3: movabs  $0x0,%r10
  0x00007fafb8c74ddd: mov     %r10,0x320(%r15)
  0x00007fafb8c74de4: movabs  $0x0,%r10
  0x00007fafb8c74dee: mov     %r10,0x330(%r15)
  0x00007fafb8c74df5: movabs  $0x0,%r10
  0x00007fafb8c74dff: mov     %r10,0x328(%r15)
  0x00007fafb8c74e06: vzeroupper
  0x00007fafb8c74e09: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c74e11: je      0x7fafb8c74e1c
  0x00007fafb8c74e17: jmpq    0x7fafb8c5c780
  0x00007fafb8c74e1c: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c74e20: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c74e24: retq
  0x00007fafb8c74e25: pop     %rcx
  0x00007fafb8c74e26: pop     %rdx
  0x00007fafb8c74e27: mov     0x18(%rcx),%rax
  0x00007fafb8c74e2b: test    %rax,%rax
  0x00007fafb8c74e2e: je      0x7fafb8c74e73
  0x00007fafb8c74e34: mov     0x10(%rcx),%rbx
  0x00007fafb8c74e38: test    %rbx,%rbx
  0x00007fafb8c74e3b: je      0x7fafb8c74e5d
  0x00007fafb8c74e3d: mov     0x108(%rbx),%eax
  0x00007fafb8c74e43: add     $0x8,%eax
  0x00007fafb8c74e46: mov     %eax,0x108(%rbx)
  0x00007fafb8c74e4c: and     0x11c(%rbx),%eax
  0x00007fafb8c74e52: je      0x7fafb8c74f8d
  0x00007fafb8c74e58: jmpq    0x7fafb8c74e73
  0x00007fafb8c74e5d: mov     0x18(%rcx),%rcx
  0x00007fafb8c74e61: mov     0x1c(%rcx),%eax
  0x00007fafb8c74e64: add     $0x8,%eax
  0x00007fafb8c74e67: mov     %eax,0x1c(%rcx)
  0x00007fafb8c74e6a: and     0x34(%rcx),%eax
  0x00007fafb8c74e6d: je      0x7fafb8c74f8d
  0x00007fafb8c74e73: movzbl  0x0(%r13),%ebx
  0x00007fafb8c74e78: testb   $0x8,0x108(%r15)
  0x00007fafb8c74e80: je      0x7fafb8c74e8e
  0x00007fafb8c74e82: movabs  $0x7fafd899e080,%r10
  0x00007fafb8c74e8c: jmp     0x7fafb8c74e98
  0x00007fafb8c74e8e: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c74e98: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c74e9c: callq   0x7fafb8c74ea6
  0x00007fafb8c74ea1: jmpq    0x7fafb8c74f38
  0x00007fafb8c74ea6: lea     0x8(%rsp),%rax
  0x00007fafb8c74eab: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c74eaf: mov     %r15,%rdi
  0x00007fafb8c74eb2: vzeroupper
  0x00007fafb8c74eb5: mov     %rbp,0x330(%r15)
  0x00007fafb8c74ebc: mov     %rax,0x320(%r15)
  0x00007fafb8c74ec3: test    $0xf,%esp
  0x00007fafb8c74ec9: je      0x7fafb8c74ee1
  0x00007fafb8c74ecf: sub     $0x8,%rsp
  0x00007fafb8c74ed3: callq   0x7fafd7d84c70
  0x00007fafb8c74ed8: add     $0x8,%rsp
  0x00007fafb8c74edc: jmpq    0x7fafb8c74ee6
  0x00007fafb8c74ee1: callq   0x7fafd7d84c70
  0x00007fafb8c74ee6: movabs  $0x0,%r10
  0x00007fafb8c74ef0: mov     %r10,0x320(%r15)
  0x00007fafb8c74ef7: movabs  $0x0,%r10
  0x00007fafb8c74f01: mov     %r10,0x330(%r15)
  0x00007fafb8c74f08: movabs  $0x0,%r10
  0x00007fafb8c74f12: mov     %r10,0x328(%r15)
  0x00007fafb8c74f19: vzeroupper
  0x00007fafb8c74f1c: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c74f24: je      0x7fafb8c74f2f
  0x00007fafb8c74f2a: jmpq    0x7fafb8c5c780
  0x00007fafb8c74f2f: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c74f33: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c74f37: retq
  0x00007fafb8c74f38: push    %rax
  0x00007fafb8c74f39: push    %rbx
  0x00007fafb8c74f3a: mov     0xffffffffffffffe8(%rbp),%rbx
  0x00007fafb8c74f3e: mov     0x10(%rbx),%rax
  0x00007fafb8c74f42: test    %rax,%rax
  0x00007fafb8c74f45: je      0x7fafb8c74f82
  0x00007fafb8c74f4b: mov     %r13,%rsi
  0x00007fafb8c74f4e: mov     %rbx,%rdi
  0x00007fafb8c74f51: test    $0xf,%esp
  0x00007fafb8c74f57: je      0x7fafb8c74f6f
  0x00007fafb8c74f5d: sub     $0x8,%rsp
  0x00007fafb8c74f61: callq   0x7fafd7d84c20
  0x00007fafb8c74f66: add     $0x8,%rsp
  0x00007fafb8c74f6a: jmpq    0x7fafb8c74f74
  0x00007fafb8c74f6f: callq   0x7fafd7d84c20
  0x00007fafb8c74f74: mov     0x10(%rbx),%rbx
  0x00007fafb8c74f78: add     $0x138,%rbx
  0x00007fafb8c74f7f: add     %rbx,%rax
  0x00007fafb8c74f82: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c74f86: pop     %rbx
  0x00007fafb8c74f87: pop     %rax
  0x00007fafb8c74f88: jmpq    0x7fafb8c74e73
  0x00007fafb8c74f8d: neg     %rdx
  0x00007fafb8c74f90: add     %r13,%rdx
  0x00007fafb8c74f93: callq   0x7fafb8c74f9d
  0x00007fafb8c74f98: jmpq    0x7fafb8c75032
  0x00007fafb8c74f9d: mov     %rdx,%rsi
  0x00007fafb8c74fa0: lea     0x8(%rsp),%rax
  0x00007fafb8c74fa5: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c74fa9: mov     %r15,%rdi
  0x00007fafb8c74fac: vzeroupper
  0x00007fafb8c74faf: mov     %rbp,0x330(%r15)
  0x00007fafb8c74fb6: mov     %rax,0x320(%r15)
  0x00007fafb8c74fbd: test    $0xf,%esp
  0x00007fafb8c74fc3: je      0x7fafb8c74fdb
  0x00007fafb8c74fc9: sub     $0x8,%rsp
  0x00007fafb8c74fcd: callq   0x7fafd7d84b40
  0x00007fafb8c74fd2: add     $0x8,%rsp
  0x00007fafb8c74fd6: jmpq    0x7fafb8c74fe0
  0x00007fafb8c74fdb: callq   0x7fafd7d84b40
  0x00007fafb8c74fe0: movabs  $0x0,%r10
  0x00007fafb8c74fea: mov     %r10,0x320(%r15)
  0x00007fafb8c74ff1: movabs  $0x0,%r10
  0x00007fafb8c74ffb: mov     %r10,0x330(%r15)
  0x00007fafb8c75002: movabs  $0x0,%r10
  0x00007fafb8c7500c: mov     %r10,0x328(%r15)
  0x00007fafb8c75013: vzeroupper
  0x00007fafb8c75016: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7501e: je      0x7fafb8c75029
  0x00007fafb8c75024: jmpq    0x7fafb8c5c780
  0x00007fafb8c75029: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7502d: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c75031: retq
  0x00007fafb8c75032: test    %rax,%rax
  0x00007fafb8c75035: je      0x7fafb8c74e73
  0x00007fafb8c7503b: cmpb    $0x0,0x156(%rax)
  0x00007fafb8c75042: jne     0x7fafb8c74e73
  0x00007fafb8c75048: mov     %rax,%rbx
  0x00007fafb8c7504b: callq   0x7fafb8c75055
  0x00007fafb8c75050: jmpq    0x7fafb8c750e7
  0x00007fafb8c75055: lea     0x8(%rsp),%rax
  0x00007fafb8c7505a: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7505e: mov     %r15,%rdi
  0x00007fafb8c75061: vzeroupper
  0x00007fafb8c75064: mov     %rbp,0x330(%r15)
  0x00007fafb8c7506b: mov     %rax,0x320(%r15)
  0x00007fafb8c75072: test    $0xf,%esp
  0x00007fafb8c75078: je      0x7fafb8c75090
  0x00007fafb8c7507e: sub     $0x8,%rsp
  0x00007fafb8c75082: callq   0x7fafd81ee030
  0x00007fafb8c75087: add     $0x8,%rsp
  0x00007fafb8c7508b: jmpq    0x7fafb8c75095
  0x00007fafb8c75090: callq   0x7fafd81ee030
  0x00007fafb8c75095: movabs  $0x0,%r10
  0x00007fafb8c7509f: mov     %r10,0x320(%r15)
  0x00007fafb8c750a6: movabs  $0x0,%r10
  0x00007fafb8c750b0: mov     %r10,0x330(%r15)
  0x00007fafb8c750b7: movabs  $0x0,%r10
  0x00007fafb8c750c1: mov     %r10,0x328(%r15)
  0x00007fafb8c750c8: vzeroupper
  0x00007fafb8c750cb: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c750d3: je      0x7fafb8c750de
  0x00007fafb8c750d9: jmpq    0x7fafb8c5c780
  0x00007fafb8c750de: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c750e2: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c750e6: retq
  0x00007fafb8c750e7: mov     %rax,%rsi
  0x00007fafb8c750ea: mov     0xfffffffffffffff8(%rbp),%rdx
  0x00007fafb8c750ee: leave
  0x00007fafb8c750ef: pop     %rcx
  0x00007fafb8c750f0: mov     %rdx,%rsp
  0x00007fafb8c750f3: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c750f7: push    %rcx
  0x00007fafb8c750f8: jmpq    *0x110(%rbx)
  0x00007fafb8c750fe: mov     0xffffffffffffffd8(%rbp),%rax
  0x00007fafb8c75102: test    %rax,%rax
  0x00007fafb8c75105: je      0x7fafb8c7511d
  0x00007fafb8c7510b: addq    $0x1,0x18(%rax)
  0x00007fafb8c75110: sbbq    $0x0,0x18(%rax)
  0x00007fafb8c75115: add     $0x20,%rax
  0x00007fafb8c75119: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c7511d: movzbl  0x3(%r13),%ebx
  0x00007fafb8c75122: add     $0x3,%r13
  0x00007fafb8c75126: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c75130: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c75134: nopl    0x0(%rax)
  0x00007fafb8c75138: add     %al,(%rax)
  0x00007fafb8c7513a: add     %al,(%rax)
  0x00007fafb8c7513c: add     %al,(%rax)
  0x00007fafb8c7513e: add     %al,(%rax)

----------------------------------------------------------------------
if_acmpeq  165 if_acmpeq  [0x00007fafb8c75160, 0x00007fafb8c75580]  1056 bytes

Argument 0 is unknown.RIP: 0x7fafb8c75160 Code size: 0x00000420
  0x00007fafb8c75160: pop     %rax
  0x00007fafb8c75161: pop     %rdx
  0x00007fafb8c75162: cmp     %rax,%rdx
  0x00007fafb8c75165: jne     0x7fafb8c75533
  0x00007fafb8c7516b: mov     0xffffffffffffffe8(%rbp),%rcx
  0x00007fafb8c7516f: mov     0xffffffffffffffd8(%rbp),%rax
  0x00007fafb8c75173: test    %rax,%rax
  0x00007fafb8c75176: je      0x7fafb8c75194
  0x00007fafb8c7517c: mov     0x8(%rax),%rbx
  0x00007fafb8c75180: add     $0x1,%rbx
  0x00007fafb8c75184: sbb     $0x0,%rbx
  0x00007fafb8c75188: mov     %rbx,0x8(%rax)
  0x00007fafb8c7518c: add     0x10(%rax),%rax
  0x00007fafb8c75190: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c75194: movswl  0x1(%r13),%edx
  0x00007fafb8c75199: bswap   %edx
  0x00007fafb8c7519b: sar     $0x10,%edx
  0x00007fafb8c7519e: movsxd  %edx,%rdx
  0x00007fafb8c751a1: add     %rdx,%r13
  0x00007fafb8c751a4: test    %edx,%edx
  0x00007fafb8c751a6: jns     0x7fafb8c752a8
  0x00007fafb8c751ac: mov     0x18(%rcx),%rax
  0x00007fafb8c751b0: test    %rax,%rax
  0x00007fafb8c751b3: jne     0x7fafb8c75269
  0x00007fafb8c751b9: push    %rdx
  0x00007fafb8c751ba: push    %rcx
  0x00007fafb8c751bb: callq   0x7fafb8c751c5
  0x00007fafb8c751c0: jmpq    0x7fafb8c7525a
  0x00007fafb8c751c5: mov     %rcx,%rsi
  0x00007fafb8c751c8: lea     0x8(%rsp),%rax
  0x00007fafb8c751cd: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c751d1: mov     %r15,%rdi
  0x00007fafb8c751d4: vzeroupper
  0x00007fafb8c751d7: mov     %rbp,0x330(%r15)
  0x00007fafb8c751de: mov     %rax,0x320(%r15)
  0x00007fafb8c751e5: test    $0xf,%esp
  0x00007fafb8c751eb: je      0x7fafb8c75203
  0x00007fafb8c751f1: sub     $0x8,%rsp
  0x00007fafb8c751f5: callq   0x7fafd7d85400
  0x00007fafb8c751fa: add     $0x8,%rsp
  0x00007fafb8c751fe: jmpq    0x7fafb8c75208
  0x00007fafb8c75203: callq   0x7fafd7d85400
  0x00007fafb8c75208: movabs  $0x0,%r10
  0x00007fafb8c75212: mov     %r10,0x320(%r15)
  0x00007fafb8c75219: movabs  $0x0,%r10
  0x00007fafb8c75223: mov     %r10,0x330(%r15)
  0x00007fafb8c7522a: movabs  $0x0,%r10
  0x00007fafb8c75234: mov     %r10,0x328(%r15)
  0x00007fafb8c7523b: vzeroupper
  0x00007fafb8c7523e: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c75246: je      0x7fafb8c75251
  0x00007fafb8c7524c: jmpq    0x7fafb8c5c780
  0x00007fafb8c75251: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c75255: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c75259: retq
  0x00007fafb8c7525a: pop     %rcx
  0x00007fafb8c7525b: pop     %rdx
  0x00007fafb8c7525c: mov     0x18(%rcx),%rax
  0x00007fafb8c75260: test    %rax,%rax
  0x00007fafb8c75263: je      0x7fafb8c752a8
  0x00007fafb8c75269: mov     0x10(%rcx),%rbx
  0x00007fafb8c7526d: test    %rbx,%rbx
  0x00007fafb8c75270: je      0x7fafb8c75292
  0x00007fafb8c75272: mov     0x108(%rbx),%eax
  0x00007fafb8c75278: add     $0x8,%eax
  0x00007fafb8c7527b: mov     %eax,0x108(%rbx)
  0x00007fafb8c75281: and     0x11c(%rbx),%eax
  0x00007fafb8c75287: je      0x7fafb8c753c2
  0x00007fafb8c7528d: jmpq    0x7fafb8c752a8
  0x00007fafb8c75292: mov     0x18(%rcx),%rcx
  0x00007fafb8c75296: mov     0x1c(%rcx),%eax
  0x00007fafb8c75299: add     $0x8,%eax
  0x00007fafb8c7529c: mov     %eax,0x1c(%rcx)
  0x00007fafb8c7529f: and     0x34(%rcx),%eax
  0x00007fafb8c752a2: je      0x7fafb8c753c2
  0x00007fafb8c752a8: movzbl  0x0(%r13),%ebx
  0x00007fafb8c752ad: testb   $0x8,0x108(%r15)
  0x00007fafb8c752b5: je      0x7fafb8c752c3
  0x00007fafb8c752b7: movabs  $0x7fafd899e080,%r10
  0x00007fafb8c752c1: jmp     0x7fafb8c752cd
  0x00007fafb8c752c3: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c752cd: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c752d1: callq   0x7fafb8c752db
  0x00007fafb8c752d6: jmpq    0x7fafb8c7536d
  0x00007fafb8c752db: lea     0x8(%rsp),%rax
  0x00007fafb8c752e0: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c752e4: mov     %r15,%rdi
  0x00007fafb8c752e7: vzeroupper
  0x00007fafb8c752ea: mov     %rbp,0x330(%r15)
  0x00007fafb8c752f1: mov     %rax,0x320(%r15)
  0x00007fafb8c752f8: test    $0xf,%esp
  0x00007fafb8c752fe: je      0x7fafb8c75316
  0x00007fafb8c75304: sub     $0x8,%rsp
  0x00007fafb8c75308: callq   0x7fafd7d84c70
  0x00007fafb8c7530d: add     $0x8,%rsp
  0x00007fafb8c75311: jmpq    0x7fafb8c7531b
  0x00007fafb8c75316: callq   0x7fafd7d84c70
  0x00007fafb8c7531b: movabs  $0x0,%r10
  0x00007fafb8c75325: mov     %r10,0x320(%r15)
  0x00007fafb8c7532c: movabs  $0x0,%r10
  0x00007fafb8c75336: mov     %r10,0x330(%r15)
  0x00007fafb8c7533d: movabs  $0x0,%r10
  0x00007fafb8c75347: mov     %r10,0x328(%r15)
  0x00007fafb8c7534e: vzeroupper
  0x00007fafb8c75351: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c75359: je      0x7fafb8c75364
  0x00007fafb8c7535f: jmpq    0x7fafb8c5c780
  0x00007fafb8c75364: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c75368: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7536c: retq
  0x00007fafb8c7536d: push    %rax
  0x00007fafb8c7536e: push    %rbx
  0x00007fafb8c7536f: mov     0xffffffffffffffe8(%rbp),%rbx
  0x00007fafb8c75373: mov     0x10(%rbx),%rax
  0x00007fafb8c75377: test    %rax,%rax
  0x00007fafb8c7537a: je      0x7fafb8c753b7
  0x00007fafb8c75380: mov     %r13,%rsi
  0x00007fafb8c75383: mov     %rbx,%rdi
  0x00007fafb8c75386: test    $0xf,%esp
  0x00007fafb8c7538c: je      0x7fafb8c753a4
  0x00007fafb8c75392: sub     $0x8,%rsp
  0x00007fafb8c75396: callq   0x7fafd7d84c20
  0x00007fafb8c7539b: add     $0x8,%rsp
  0x00007fafb8c7539f: jmpq    0x7fafb8c753a9
  0x00007fafb8c753a4: callq   0x7fafd7d84c20
  0x00007fafb8c753a9: mov     0x10(%rbx),%rbx
  0x00007fafb8c753ad: add     $0x138,%rbx
  0x00007fafb8c753b4: add     %rbx,%rax
  0x00007fafb8c753b7: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c753bb: pop     %rbx
  0x00007fafb8c753bc: pop     %rax
  0x00007fafb8c753bd: jmpq    0x7fafb8c752a8
  0x00007fafb8c753c2: neg     %rdx
  0x00007fafb8c753c5: add     %r13,%rdx
  0x00007fafb8c753c8: callq   0x7fafb8c753d2
  0x00007fafb8c753cd: jmpq    0x7fafb8c75467
  0x00007fafb8c753d2: mov     %rdx,%rsi
  0x00007fafb8c753d5: lea     0x8(%rsp),%rax
  0x00007fafb8c753da: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c753de: mov     %r15,%rdi
  0x00007fafb8c753e1: vzeroupper
  0x00007fafb8c753e4: mov     %rbp,0x330(%r15)
  0x00007fafb8c753eb: mov     %rax,0x320(%r15)
  0x00007fafb8c753f2: test    $0xf,%esp
  0x00007fafb8c753f8: je      0x7fafb8c75410
  0x00007fafb8c753fe: sub     $0x8,%rsp
  0x00007fafb8c75402: callq   0x7fafd7d84b40
  0x00007fafb8c75407: add     $0x8,%rsp
  0x00007fafb8c7540b: jmpq    0x7fafb8c75415
  0x00007fafb8c75410: callq   0x7fafd7d84b40
  0x00007fafb8c75415: movabs  $0x0,%r10
  0x00007fafb8c7541f: mov     %r10,0x320(%r15)
  0x00007fafb8c75426: movabs  $0x0,%r10
  0x00007fafb8c75430: mov     %r10,0x330(%r15)
  0x00007fafb8c75437: movabs  $0x0,%r10
  0x00007fafb8c75441: mov     %r10,0x328(%r15)
  0x00007fafb8c75448: vzeroupper
  0x00007fafb8c7544b: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c75453: je      0x7fafb8c7545e
  0x00007fafb8c75459: jmpq    0x7fafb8c5c780
  0x00007fafb8c7545e: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c75462: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c75466: retq
  0x00007fafb8c75467: test    %rax,%rax
  0x00007fafb8c7546a: je      0x7fafb8c752a8
  0x00007fafb8c75470: cmpb    $0x0,0x156(%rax)
  0x00007fafb8c75477: jne     0x7fafb8c752a8
  0x00007fafb8c7547d: mov     %rax,%rbx
  0x00007fafb8c75480: callq   0x7fafb8c7548a
  0x00007fafb8c75485: jmpq    0x7fafb8c7551c
  0x00007fafb8c7548a: lea     0x8(%rsp),%rax
  0x00007fafb8c7548f: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c75493: mov     %r15,%rdi
  0x00007fafb8c75496: vzeroupper
  0x00007fafb8c75499: mov     %rbp,0x330(%r15)
  0x00007fafb8c754a0: mov     %rax,0x320(%r15)
  0x00007fafb8c754a7: test    $0xf,%esp
  0x00007fafb8c754ad: je      0x7fafb8c754c5
  0x00007fafb8c754b3: sub     $0x8,%rsp
  0x00007fafb8c754b7: callq   0x7fafd81ee030
  0x00007fafb8c754bc: add     $0x8,%rsp
  0x00007fafb8c754c0: jmpq    0x7fafb8c754ca
  0x00007fafb8c754c5: callq   0x7fafd81ee030
  0x00007fafb8c754ca: movabs  $0x0,%r10
  0x00007fafb8c754d4: mov     %r10,0x320(%r15)
  0x00007fafb8c754db: movabs  $0x0,%r10
  0x00007fafb8c754e5: mov     %r10,0x330(%r15)
  0x00007fafb8c754ec: movabs  $0x0,%r10
  0x00007fafb8c754f6: mov     %r10,0x328(%r15)
  0x00007fafb8c754fd: vzeroupper
  0x00007fafb8c75500: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c75508: je      0x7fafb8c75513
  0x00007fafb8c7550e: jmpq    0x7fafb8c5c780
  0x00007fafb8c75513: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c75517: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7551b: retq
  0x00007fafb8c7551c: mov     %rax,%rsi
  0x00007fafb8c7551f: mov     0xfffffffffffffff8(%rbp),%rdx
  0x00007fafb8c75523: leave
  0x00007fafb8c75524: pop     %rcx
  0x00007fafb8c75525: mov     %rdx,%rsp
  0x00007fafb8c75528: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c7552c: push    %rcx
  0x00007fafb8c7552d: jmpq    *0x110(%rbx)
  0x00007fafb8c75533: mov     0xffffffffffffffd8(%rbp),%rax
  0x00007fafb8c75537: test    %rax,%rax
  0x00007fafb8c7553a: je      0x7fafb8c75552
  0x00007fafb8c75540: addq    $0x1,0x18(%rax)
  0x00007fafb8c75545: sbbq    $0x0,0x18(%rax)
  0x00007fafb8c7554a: add     $0x20,%rax
  0x00007fafb8c7554e: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c75552: movzbl  0x3(%r13),%ebx
  0x00007fafb8c75557: add     $0x3,%r13
  0x00007fafb8c7555b: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c75565: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c75569: nopl    0x0(%rax)
  0x00007fafb8c75570: add     %al,(%rax)
  0x00007fafb8c75572: add     %al,(%rax)
  0x00007fafb8c75574: add     %al,(%rax)
  0x00007fafb8c75576: add     %al,(%rax)
  0x00007fafb8c75578: add     %al,(%rax)
  0x00007fafb8c7557a: add     %al,(%rax)
  0x00007fafb8c7557c: add     %al,(%rax)
  0x00007fafb8c7557e: add     %al,(%rax)

----------------------------------------------------------------------
if_acmpne  166 if_acmpne  [0x00007fafb8c755a0, 0x00007fafb8c759c0]  1056 bytes

Argument 0 is unknown.RIP: 0x7fafb8c755a0 Code size: 0x00000420
  0x00007fafb8c755a0: pop     %rax
  0x00007fafb8c755a1: pop     %rdx
  0x00007fafb8c755a2: cmp     %rax,%rdx
  0x00007fafb8c755a5: je      0x7fafb8c75973
  0x00007fafb8c755ab: mov     0xffffffffffffffe8(%rbp),%rcx
  0x00007fafb8c755af: mov     0xffffffffffffffd8(%rbp),%rax
  0x00007fafb8c755b3: test    %rax,%rax
  0x00007fafb8c755b6: je      0x7fafb8c755d4
  0x00007fafb8c755bc: mov     0x8(%rax),%rbx
  0x00007fafb8c755c0: add     $0x1,%rbx
  0x00007fafb8c755c4: sbb     $0x0,%rbx
  0x00007fafb8c755c8: mov     %rbx,0x8(%rax)
  0x00007fafb8c755cc: add     0x10(%rax),%rax
  0x00007fafb8c755d0: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c755d4: movswl  0x1(%r13),%edx
  0x00007fafb8c755d9: bswap   %edx
  0x00007fafb8c755db: sar     $0x10,%edx
  0x00007fafb8c755de: movsxd  %edx,%rdx
  0x00007fafb8c755e1: add     %rdx,%r13
  0x00007fafb8c755e4: test    %edx,%edx
  0x00007fafb8c755e6: jns     0x7fafb8c756e8
  0x00007fafb8c755ec: mov     0x18(%rcx),%rax
  0x00007fafb8c755f0: test    %rax,%rax
  0x00007fafb8c755f3: jne     0x7fafb8c756a9
  0x00007fafb8c755f9: push    %rdx
  0x00007fafb8c755fa: push    %rcx
  0x00007fafb8c755fb: callq   0x7fafb8c75605
  0x00007fafb8c75600: jmpq    0x7fafb8c7569a
  0x00007fafb8c75605: mov     %rcx,%rsi
  0x00007fafb8c75608: lea     0x8(%rsp),%rax
  0x00007fafb8c7560d: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c75611: mov     %r15,%rdi
  0x00007fafb8c75614: vzeroupper
  0x00007fafb8c75617: mov     %rbp,0x330(%r15)
  0x00007fafb8c7561e: mov     %rax,0x320(%r15)
  0x00007fafb8c75625: test    $0xf,%esp
  0x00007fafb8c7562b: je      0x7fafb8c75643
  0x00007fafb8c75631: sub     $0x8,%rsp
  0x00007fafb8c75635: callq   0x7fafd7d85400
  0x00007fafb8c7563a: add     $0x8,%rsp
  0x00007fafb8c7563e: jmpq    0x7fafb8c75648
  0x00007fafb8c75643: callq   0x7fafd7d85400
  0x00007fafb8c75648: movabs  $0x0,%r10
  0x00007fafb8c75652: mov     %r10,0x320(%r15)
  0x00007fafb8c75659: movabs  $0x0,%r10
  0x00007fafb8c75663: mov     %r10,0x330(%r15)
  0x00007fafb8c7566a: movabs  $0x0,%r10
  0x00007fafb8c75674: mov     %r10,0x328(%r15)
  0x00007fafb8c7567b: vzeroupper
  0x00007fafb8c7567e: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c75686: je      0x7fafb8c75691
  0x00007fafb8c7568c: jmpq    0x7fafb8c5c780
  0x00007fafb8c75691: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c75695: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c75699: retq
  0x00007fafb8c7569a: pop     %rcx
  0x00007fafb8c7569b: pop     %rdx
  0x00007fafb8c7569c: mov     0x18(%rcx),%rax
  0x00007fafb8c756a0: test    %rax,%rax
  0x00007fafb8c756a3: je      0x7fafb8c756e8
  0x00007fafb8c756a9: mov     0x10(%rcx),%rbx
  0x00007fafb8c756ad: test    %rbx,%rbx
  0x00007fafb8c756b0: je      0x7fafb8c756d2
  0x00007fafb8c756b2: mov     0x108(%rbx),%eax
  0x00007fafb8c756b8: add     $0x8,%eax
  0x00007fafb8c756bb: mov     %eax,0x108(%rbx)
  0x00007fafb8c756c1: and     0x11c(%rbx),%eax
  0x00007fafb8c756c7: je      0x7fafb8c75802
  0x00007fafb8c756cd: jmpq    0x7fafb8c756e8
  0x00007fafb8c756d2: mov     0x18(%rcx),%rcx
  0x00007fafb8c756d6: mov     0x1c(%rcx),%eax
  0x00007fafb8c756d9: add     $0x8,%eax
  0x00007fafb8c756dc: mov     %eax,0x1c(%rcx)
  0x00007fafb8c756df: and     0x34(%rcx),%eax
  0x00007fafb8c756e2: je      0x7fafb8c75802
  0x00007fafb8c756e8: movzbl  0x0(%r13),%ebx
  0x00007fafb8c756ed: testb   $0x8,0x108(%r15)
  0x00007fafb8c756f5: je      0x7fafb8c75703
  0x00007fafb8c756f7: movabs  $0x7fafd899e080,%r10
  0x00007fafb8c75701: jmp     0x7fafb8c7570d
  0x00007fafb8c75703: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c7570d: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c75711: callq   0x7fafb8c7571b
  0x00007fafb8c75716: jmpq    0x7fafb8c757ad
  0x00007fafb8c7571b: lea     0x8(%rsp),%rax
  0x00007fafb8c75720: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c75724: mov     %r15,%rdi
  0x00007fafb8c75727: vzeroupper
  0x00007fafb8c7572a: mov     %rbp,0x330(%r15)
  0x00007fafb8c75731: mov     %rax,0x320(%r15)
  0x00007fafb8c75738: test    $0xf,%esp
  0x00007fafb8c7573e: je      0x7fafb8c75756
  0x00007fafb8c75744: sub     $0x8,%rsp
  0x00007fafb8c75748: callq   0x7fafd7d84c70
  0x00007fafb8c7574d: add     $0x8,%rsp
  0x00007fafb8c75751: jmpq    0x7fafb8c7575b
  0x00007fafb8c75756: callq   0x7fafd7d84c70
  0x00007fafb8c7575b: movabs  $0x0,%r10
  0x00007fafb8c75765: mov     %r10,0x320(%r15)
  0x00007fafb8c7576c: movabs  $0x0,%r10
  0x00007fafb8c75776: mov     %r10,0x330(%r15)
  0x00007fafb8c7577d: movabs  $0x0,%r10
  0x00007fafb8c75787: mov     %r10,0x328(%r15)
  0x00007fafb8c7578e: vzeroupper
  0x00007fafb8c75791: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c75799: je      0x7fafb8c757a4
  0x00007fafb8c7579f: jmpq    0x7fafb8c5c780
  0x00007fafb8c757a4: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c757a8: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c757ac: retq
  0x00007fafb8c757ad: push    %rax
  0x00007fafb8c757ae: push    %rbx
  0x00007fafb8c757af: mov     0xffffffffffffffe8(%rbp),%rbx
  0x00007fafb8c757b3: mov     0x10(%rbx),%rax
  0x00007fafb8c757b7: test    %rax,%rax
  0x00007fafb8c757ba: je      0x7fafb8c757f7
  0x00007fafb8c757c0: mov     %r13,%rsi
  0x00007fafb8c757c3: mov     %rbx,%rdi
  0x00007fafb8c757c6: test    $0xf,%esp
  0x00007fafb8c757cc: je      0x7fafb8c757e4
  0x00007fafb8c757d2: sub     $0x8,%rsp
  0x00007fafb8c757d6: callq   0x7fafd7d84c20
  0x00007fafb8c757db: add     $0x8,%rsp
  0x00007fafb8c757df: jmpq    0x7fafb8c757e9
  0x00007fafb8c757e4: callq   0x7fafd7d84c20
  0x00007fafb8c757e9: mov     0x10(%rbx),%rbx
  0x00007fafb8c757ed: add     $0x138,%rbx
  0x00007fafb8c757f4: add     %rbx,%rax
  0x00007fafb8c757f7: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c757fb: pop     %rbx
  0x00007fafb8c757fc: pop     %rax
  0x00007fafb8c757fd: jmpq    0x7fafb8c756e8
  0x00007fafb8c75802: neg     %rdx
  0x00007fafb8c75805: add     %r13,%rdx
  0x00007fafb8c75808: callq   0x7fafb8c75812
  0x00007fafb8c7580d: jmpq    0x7fafb8c758a7
  0x00007fafb8c75812: mov     %rdx,%rsi
  0x00007fafb8c75815: lea     0x8(%rsp),%rax
  0x00007fafb8c7581a: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7581e: mov     %r15,%rdi
  0x00007fafb8c75821: vzeroupper
  0x00007fafb8c75824: mov     %rbp,0x330(%r15)
  0x00007fafb8c7582b: mov     %rax,0x320(%r15)
  0x00007fafb8c75832: test    $0xf,%esp
  0x00007fafb8c75838: je      0x7fafb8c75850
  0x00007fafb8c7583e: sub     $0x8,%rsp
  0x00007fafb8c75842: callq   0x7fafd7d84b40
  0x00007fafb8c75847: add     $0x8,%rsp
  0x00007fafb8c7584b: jmpq    0x7fafb8c75855
  0x00007fafb8c75850: callq   0x7fafd7d84b40
  0x00007fafb8c75855: movabs  $0x0,%r10
  0x00007fafb8c7585f: mov     %r10,0x320(%r15)
  0x00007fafb8c75866: movabs  $0x0,%r10
  0x00007fafb8c75870: mov     %r10,0x330(%r15)
  0x00007fafb8c75877: movabs  $0x0,%r10
  0x00007fafb8c75881: mov     %r10,0x328(%r15)
  0x00007fafb8c75888: vzeroupper
  0x00007fafb8c7588b: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c75893: je      0x7fafb8c7589e
  0x00007fafb8c75899: jmpq    0x7fafb8c5c780
  0x00007fafb8c7589e: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c758a2: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c758a6: retq
  0x00007fafb8c758a7: test    %rax,%rax
  0x00007fafb8c758aa: je      0x7fafb8c756e8
  0x00007fafb8c758b0: cmpb    $0x0,0x156(%rax)
  0x00007fafb8c758b7: jne     0x7fafb8c756e8
  0x00007fafb8c758bd: mov     %rax,%rbx
  0x00007fafb8c758c0: callq   0x7fafb8c758ca
  0x00007fafb8c758c5: jmpq    0x7fafb8c7595c
  0x00007fafb8c758ca: lea     0x8(%rsp),%rax
  0x00007fafb8c758cf: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c758d3: mov     %r15,%rdi
  0x00007fafb8c758d6: vzeroupper
  0x00007fafb8c758d9: mov     %rbp,0x330(%r15)
  0x00007fafb8c758e0: mov     %rax,0x320(%r15)
  0x00007fafb8c758e7: test    $0xf,%esp
  0x00007fafb8c758ed: je      0x7fafb8c75905
  0x00007fafb8c758f3: sub     $0x8,%rsp
  0x00007fafb8c758f7: callq   0x7fafd81ee030
  0x00007fafb8c758fc: add     $0x8,%rsp
  0x00007fafb8c75900: jmpq    0x7fafb8c7590a
  0x00007fafb8c75905: callq   0x7fafd81ee030
  0x00007fafb8c7590a: movabs  $0x0,%r10
  0x00007fafb8c75914: mov     %r10,0x320(%r15)
  0x00007fafb8c7591b: movabs  $0x0,%r10
  0x00007fafb8c75925: mov     %r10,0x330(%r15)
  0x00007fafb8c7592c: movabs  $0x0,%r10
  0x00007fafb8c75936: mov     %r10,0x328(%r15)
  0x00007fafb8c7593d: vzeroupper
  0x00007fafb8c75940: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c75948: je      0x7fafb8c75953
  0x00007fafb8c7594e: jmpq    0x7fafb8c5c780
  0x00007fafb8c75953: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c75957: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7595b: retq
  0x00007fafb8c7595c: mov     %rax,%rsi
  0x00007fafb8c7595f: mov     0xfffffffffffffff8(%rbp),%rdx
  0x00007fafb8c75963: leave
  0x00007fafb8c75964: pop     %rcx
  0x00007fafb8c75965: mov     %rdx,%rsp
  0x00007fafb8c75968: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c7596c: push    %rcx
  0x00007fafb8c7596d: jmpq    *0x110(%rbx)
  0x00007fafb8c75973: mov     0xffffffffffffffd8(%rbp),%rax
  0x00007fafb8c75977: test    %rax,%rax
  0x00007fafb8c7597a: je      0x7fafb8c75992
  0x00007fafb8c75980: addq    $0x1,0x18(%rax)
  0x00007fafb8c75985: sbbq    $0x0,0x18(%rax)
  0x00007fafb8c7598a: add     $0x20,%rax
  0x00007fafb8c7598e: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c75992: movzbl  0x3(%r13),%ebx
  0x00007fafb8c75997: add     $0x3,%r13
  0x00007fafb8c7599b: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c759a5: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c759a9: nopl    0x0(%rax)
  0x00007fafb8c759b0: add     %al,(%rax)
  0x00007fafb8c759b2: add     %al,(%rax)
  0x00007fafb8c759b4: add     %al,(%rax)
  0x00007fafb8c759b6: add     %al,(%rax)
  0x00007fafb8c759b8: add     %al,(%rax)
  0x00007fafb8c759ba: add     %al,(%rax)
  0x00007fafb8c759bc: add     %al,(%rax)
  0x00007fafb8c759be: add     %al,(%rax)

----------------------------------------------------------------------
goto  167 goto  [0x00007fafb8c759e0, 0x00007fafb8c75e00]  1056 bytes

Argument 0 is unknown.RIP: 0x7fafb8c759e0 Code size: 0x00000420
  0x00007fafb8c759e0: push    %rax
  0x00007fafb8c759e1: jmpq    0x7fafb8c75a1f
  0x00007fafb8c759e6: sub     $0x8,%rsp
  0x00007fafb8c759ea: vmovss  %xmm0,(%rsp)
  0x00007fafb8c759ef: jmpq    0x7fafb8c75a1f
  0x00007fafb8c759f4: sub     $0x10,%rsp
  0x00007fafb8c759f8: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c759fd: jmpq    0x7fafb8c75a1f
  0x00007fafb8c75a02: sub     $0x10,%rsp
  0x00007fafb8c75a06: mov     %rax,(%rsp)
  0x00007fafb8c75a0a: movabs  $0x0,%r10
  0x00007fafb8c75a14: mov     %r10,0x8(%rsp)
  0x00007fafb8c75a19: jmpq    0x7fafb8c75a1f
  0x00007fafb8c75a1e: push    %rax
  0x00007fafb8c75a1f: mov     0xffffffffffffffe8(%rbp),%rcx
  0x00007fafb8c75a23: mov     0xffffffffffffffd8(%rbp),%rax
  0x00007fafb8c75a27: test    %rax,%rax
  0x00007fafb8c75a2a: je      0x7fafb8c75a48
  0x00007fafb8c75a30: mov     0x8(%rax),%rbx
  0x00007fafb8c75a34: add     $0x1,%rbx
  0x00007fafb8c75a38: sbb     $0x0,%rbx
  0x00007fafb8c75a3c: mov     %rbx,0x8(%rax)
  0x00007fafb8c75a40: add     0x10(%rax),%rax
  0x00007fafb8c75a44: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c75a48: movswl  0x1(%r13),%edx
  0x00007fafb8c75a4d: bswap   %edx
  0x00007fafb8c75a4f: sar     $0x10,%edx
  0x00007fafb8c75a52: movsxd  %edx,%rdx
  0x00007fafb8c75a55: add     %rdx,%r13
  0x00007fafb8c75a58: test    %edx,%edx
  0x00007fafb8c75a5a: jns     0x7fafb8c75b5c
  0x00007fafb8c75a60: mov     0x18(%rcx),%rax
  0x00007fafb8c75a64: test    %rax,%rax
  0x00007fafb8c75a67: jne     0x7fafb8c75b1d
  0x00007fafb8c75a6d: push    %rdx
  0x00007fafb8c75a6e: push    %rcx
  0x00007fafb8c75a6f: callq   0x7fafb8c75a79
  0x00007fafb8c75a74: jmpq    0x7fafb8c75b0e
  0x00007fafb8c75a79: mov     %rcx,%rsi
  0x00007fafb8c75a7c: lea     0x8(%rsp),%rax
  0x00007fafb8c75a81: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c75a85: mov     %r15,%rdi
  0x00007fafb8c75a88: vzeroupper
  0x00007fafb8c75a8b: mov     %rbp,0x330(%r15)
  0x00007fafb8c75a92: mov     %rax,0x320(%r15)
  0x00007fafb8c75a99: test    $0xf,%esp
  0x00007fafb8c75a9f: je      0x7fafb8c75ab7
  0x00007fafb8c75aa5: sub     $0x8,%rsp
  0x00007fafb8c75aa9: callq   0x7fafd7d85400
  0x00007fafb8c75aae: add     $0x8,%rsp
  0x00007fafb8c75ab2: jmpq    0x7fafb8c75abc
  0x00007fafb8c75ab7: callq   0x7fafd7d85400
  0x00007fafb8c75abc: movabs  $0x0,%r10
  0x00007fafb8c75ac6: mov     %r10,0x320(%r15)
  0x00007fafb8c75acd: movabs  $0x0,%r10
  0x00007fafb8c75ad7: mov     %r10,0x330(%r15)
  0x00007fafb8c75ade: movabs  $0x0,%r10
  0x00007fafb8c75ae8: mov     %r10,0x328(%r15)
  0x00007fafb8c75aef: vzeroupper
  0x00007fafb8c75af2: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c75afa: je      0x7fafb8c75b05
  0x00007fafb8c75b00: jmpq    0x7fafb8c5c780
  0x00007fafb8c75b05: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c75b09: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c75b0d: retq
  0x00007fafb8c75b0e: pop     %rcx
  0x00007fafb8c75b0f: pop     %rdx
  0x00007fafb8c75b10: mov     0x18(%rcx),%rax
  0x00007fafb8c75b14: test    %rax,%rax
  0x00007fafb8c75b17: je      0x7fafb8c75b5c
  0x00007fafb8c75b1d: mov     0x10(%rcx),%rbx
  0x00007fafb8c75b21: test    %rbx,%rbx
  0x00007fafb8c75b24: je      0x7fafb8c75b46
  0x00007fafb8c75b26: mov     0x108(%rbx),%eax
  0x00007fafb8c75b2c: add     $0x8,%eax
  0x00007fafb8c75b2f: mov     %eax,0x108(%rbx)
  0x00007fafb8c75b35: and     0x11c(%rbx),%eax
  0x00007fafb8c75b3b: je      0x7fafb8c75c76
  0x00007fafb8c75b41: jmpq    0x7fafb8c75b5c
  0x00007fafb8c75b46: mov     0x18(%rcx),%rcx
  0x00007fafb8c75b4a: mov     0x1c(%rcx),%eax
  0x00007fafb8c75b4d: add     $0x8,%eax
  0x00007fafb8c75b50: mov     %eax,0x1c(%rcx)
  0x00007fafb8c75b53: and     0x34(%rcx),%eax
  0x00007fafb8c75b56: je      0x7fafb8c75c76
  0x00007fafb8c75b5c: movzbl  0x0(%r13),%ebx
  0x00007fafb8c75b61: testb   $0x8,0x108(%r15)
  0x00007fafb8c75b69: je      0x7fafb8c75b77
  0x00007fafb8c75b6b: movabs  $0x7fafd899e080,%r10
  0x00007fafb8c75b75: jmp     0x7fafb8c75b81
  0x00007fafb8c75b77: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c75b81: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c75b85: callq   0x7fafb8c75b8f
  0x00007fafb8c75b8a: jmpq    0x7fafb8c75c21
  0x00007fafb8c75b8f: lea     0x8(%rsp),%rax
  0x00007fafb8c75b94: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c75b98: mov     %r15,%rdi
  0x00007fafb8c75b9b: vzeroupper
  0x00007fafb8c75b9e: mov     %rbp,0x330(%r15)
  0x00007fafb8c75ba5: mov     %rax,0x320(%r15)
  0x00007fafb8c75bac: test    $0xf,%esp
  0x00007fafb8c75bb2: je      0x7fafb8c75bca
  0x00007fafb8c75bb8: sub     $0x8,%rsp
  0x00007fafb8c75bbc: callq   0x7fafd7d84c70
  0x00007fafb8c75bc1: add     $0x8,%rsp
  0x00007fafb8c75bc5: jmpq    0x7fafb8c75bcf
  0x00007fafb8c75bca: callq   0x7fafd7d84c70
  0x00007fafb8c75bcf: movabs  $0x0,%r10
  0x00007fafb8c75bd9: mov     %r10,0x320(%r15)
  0x00007fafb8c75be0: movabs  $0x0,%r10
  0x00007fafb8c75bea: mov     %r10,0x330(%r15)
  0x00007fafb8c75bf1: movabs  $0x0,%r10
  0x00007fafb8c75bfb: mov     %r10,0x328(%r15)
  0x00007fafb8c75c02: vzeroupper
  0x00007fafb8c75c05: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c75c0d: je      0x7fafb8c75c18
  0x00007fafb8c75c13: jmpq    0x7fafb8c5c780
  0x00007fafb8c75c18: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c75c1c: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c75c20: retq
  0x00007fafb8c75c21: push    %rax
  0x00007fafb8c75c22: push    %rbx
  0x00007fafb8c75c23: mov     0xffffffffffffffe8(%rbp),%rbx
  0x00007fafb8c75c27: mov     0x10(%rbx),%rax
  0x00007fafb8c75c2b: test    %rax,%rax
  0x00007fafb8c75c2e: je      0x7fafb8c75c6b
  0x00007fafb8c75c34: mov     %r13,%rsi
  0x00007fafb8c75c37: mov     %rbx,%rdi
  0x00007fafb8c75c3a: test    $0xf,%esp
  0x00007fafb8c75c40: je      0x7fafb8c75c58
  0x00007fafb8c75c46: sub     $0x8,%rsp
  0x00007fafb8c75c4a: callq   0x7fafd7d84c20
  0x00007fafb8c75c4f: add     $0x8,%rsp
  0x00007fafb8c75c53: jmpq    0x7fafb8c75c5d
  0x00007fafb8c75c58: callq   0x7fafd7d84c20
  0x00007fafb8c75c5d: mov     0x10(%rbx),%rbx
  0x00007fafb8c75c61: add     $0x138,%rbx
  0x00007fafb8c75c68: add     %rbx,%rax
  0x00007fafb8c75c6b: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c75c6f: pop     %rbx
  0x00007fafb8c75c70: pop     %rax
  0x00007fafb8c75c71: jmpq    0x7fafb8c75b5c
  0x00007fafb8c75c76: neg     %rdx
  0x00007fafb8c75c79: add     %r13,%rdx
  0x00007fafb8c75c7c: callq   0x7fafb8c75c86
  0x00007fafb8c75c81: jmpq    0x7fafb8c75d1b
  0x00007fafb8c75c86: mov     %rdx,%rsi
  0x00007fafb8c75c89: lea     0x8(%rsp),%rax
  0x00007fafb8c75c8e: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c75c92: mov     %r15,%rdi
  0x00007fafb8c75c95: vzeroupper
  0x00007fafb8c75c98: mov     %rbp,0x330(%r15)
  0x00007fafb8c75c9f: mov     %rax,0x320(%r15)
  0x00007fafb8c75ca6: test    $0xf,%esp
  0x00007fafb8c75cac: je      0x7fafb8c75cc4
  0x00007fafb8c75cb2: sub     $0x8,%rsp
  0x00007fafb8c75cb6: callq   0x7fafd7d84b40
  0x00007fafb8c75cbb: add     $0x8,%rsp
  0x00007fafb8c75cbf: jmpq    0x7fafb8c75cc9
  0x00007fafb8c75cc4: callq   0x7fafd7d84b40
  0x00007fafb8c75cc9: movabs  $0x0,%r10
  0x00007fafb8c75cd3: mov     %r10,0x320(%r15)
  0x00007fafb8c75cda: movabs  $0x0,%r10
  0x00007fafb8c75ce4: mov     %r10,0x330(%r15)
  0x00007fafb8c75ceb: movabs  $0x0,%r10
  0x00007fafb8c75cf5: mov     %r10,0x328(%r15)
  0x00007fafb8c75cfc: vzeroupper
  0x00007fafb8c75cff: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c75d07: je      0x7fafb8c75d12
  0x00007fafb8c75d0d: jmpq    0x7fafb8c5c780
  0x00007fafb8c75d12: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c75d16: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c75d1a: retq
  0x00007fafb8c75d1b: test    %rax,%rax
  0x00007fafb8c75d1e: je      0x7fafb8c75b5c
  0x00007fafb8c75d24: cmpb    $0x0,0x156(%rax)
  0x00007fafb8c75d2b: jne     0x7fafb8c75b5c
  0x00007fafb8c75d31: mov     %rax,%rbx
  0x00007fafb8c75d34: callq   0x7fafb8c75d3e
  0x00007fafb8c75d39: jmpq    0x7fafb8c75dd0
  0x00007fafb8c75d3e: lea     0x8(%rsp),%rax
  0x00007fafb8c75d43: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c75d47: mov     %r15,%rdi
  0x00007fafb8c75d4a: vzeroupper
  0x00007fafb8c75d4d: mov     %rbp,0x330(%r15)
  0x00007fafb8c75d54: mov     %rax,0x320(%r15)
  0x00007fafb8c75d5b: test    $0xf,%esp
  0x00007fafb8c75d61: je      0x7fafb8c75d79
  0x00007fafb8c75d67: sub     $0x8,%rsp
  0x00007fafb8c75d6b: callq   0x7fafd81ee030
  0x00007fafb8c75d70: add     $0x8,%rsp
  0x00007fafb8c75d74: jmpq    0x7fafb8c75d7e
  0x00007fafb8c75d79: callq   0x7fafd81ee030
  0x00007fafb8c75d7e: movabs  $0x0,%r10
  0x00007fafb8c75d88: mov     %r10,0x320(%r15)
  0x00007fafb8c75d8f: movabs  $0x0,%r10
  0x00007fafb8c75d99: mov     %r10,0x330(%r15)
  0x00007fafb8c75da0: movabs  $0x0,%r10
  0x00007fafb8c75daa: mov     %r10,0x328(%r15)
  0x00007fafb8c75db1: vzeroupper
  0x00007fafb8c75db4: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c75dbc: je      0x7fafb8c75dc7
  0x00007fafb8c75dc2: jmpq    0x7fafb8c5c780
  0x00007fafb8c75dc7: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c75dcb: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c75dcf: retq
  0x00007fafb8c75dd0: mov     %rax,%rsi
  0x00007fafb8c75dd3: mov     0xfffffffffffffff8(%rbp),%rdx
  0x00007fafb8c75dd7: leave
  0x00007fafb8c75dd8: pop     %rcx
  0x00007fafb8c75dd9: mov     %rdx,%rsp
  0x00007fafb8c75ddc: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c75de0: push    %rcx
  0x00007fafb8c75de1: jmpq    *0x110(%rbx)
  0x00007fafb8c75de7: nop
  0x00007fafb8c75de8: add     %al,(%rax)
  0x00007fafb8c75dea: add     %al,(%rax)
  0x00007fafb8c75dec: add     %al,(%rax)
  0x00007fafb8c75dee: add     %al,(%rax)
  0x00007fafb8c75df0: add     %al,(%rax)
  0x00007fafb8c75df2: add     %al,(%rax)
  0x00007fafb8c75df4: add     %al,(%rax)
  0x00007fafb8c75df6: add     %al,(%rax)
  0x00007fafb8c75df8: add     %al,(%rax)
  0x00007fafb8c75dfa: add     %al,(%rax)
  0x00007fafb8c75dfc: add     %al,(%rax)
  0x00007fafb8c75dfe: add     %al,(%rax)

----------------------------------------------------------------------
jsr  168 jsr  [0x00007fafb8c75e20, 0x00007fafb8c75ee0]  192 bytes

Argument 0 is unknown.RIP: 0x7fafb8c75e20 Code size: 0x000000c0
  0x00007fafb8c75e20: push    %rax
  0x00007fafb8c75e21: jmpq    0x7fafb8c75e5f
  0x00007fafb8c75e26: sub     $0x8,%rsp
  0x00007fafb8c75e2a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c75e2f: jmpq    0x7fafb8c75e5f
  0x00007fafb8c75e34: sub     $0x10,%rsp
  0x00007fafb8c75e38: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c75e3d: jmpq    0x7fafb8c75e5f
  0x00007fafb8c75e42: sub     $0x10,%rsp
  0x00007fafb8c75e46: mov     %rax,(%rsp)
  0x00007fafb8c75e4a: movabs  $0x0,%r10
  0x00007fafb8c75e54: mov     %r10,0x8(%rsp)
  0x00007fafb8c75e59: jmpq    0x7fafb8c75e5f
  0x00007fafb8c75e5e: push    %rax
  0x00007fafb8c75e5f: mov     0xffffffffffffffe8(%rbp),%rcx
  0x00007fafb8c75e63: mov     0xffffffffffffffd8(%rbp),%rax
  0x00007fafb8c75e67: test    %rax,%rax
  0x00007fafb8c75e6a: je      0x7fafb8c75e88
  0x00007fafb8c75e70: mov     0x8(%rax),%rbx
  0x00007fafb8c75e74: add     $0x1,%rbx
  0x00007fafb8c75e78: sbb     $0x0,%rbx
  0x00007fafb8c75e7c: mov     %rbx,0x8(%rax)
  0x00007fafb8c75e80: add     0x10(%rax),%rax
  0x00007fafb8c75e84: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c75e88: movswl  0x1(%r13),%edx
  0x00007fafb8c75e8d: bswap   %edx
  0x00007fafb8c75e8f: sar     $0x10,%edx
  0x00007fafb8c75e92: movsxd  %edx,%rdx
  0x00007fafb8c75e95: movzbl  0x0(%r13,%rdx),%ebx
  0x00007fafb8c75e9b: lea     0xffffffffffffffcb(%r13),%rax
  0x00007fafb8c75e9f: sub     0x8(%rcx),%rax
  0x00007fafb8c75ea3: add     %rdx,%r13
  0x00007fafb8c75ea6: push    %rax
  0x00007fafb8c75ea7: testb   $0x8,0x108(%r15)
  0x00007fafb8c75eaf: je      0x7fafb8c75ebd
  0x00007fafb8c75eb1: movabs  $0x7fafd899e080,%r10
  0x00007fafb8c75ebb: jmp     0x7fafb8c75ec7
  0x00007fafb8c75ebd: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c75ec7: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c75ecb: nopl    0x0(%rax,%rax)
  0x00007fafb8c75ed0: add     %al,(%rax)
  0x00007fafb8c75ed2: add     %al,(%rax)
  0x00007fafb8c75ed4: add     %al,(%rax)
  0x00007fafb8c75ed6: add     %al,(%rax)
  0x00007fafb8c75ed8: add     %al,(%rax)
  0x00007fafb8c75eda: add     %al,(%rax)
  0x00007fafb8c75edc: add     %al,(%rax)
  0x00007fafb8c75ede: add     %al,(%rax)

----------------------------------------------------------------------
ret  169 ret  [0x00007fafb8c75f00, 0x00007fafb8c761c0]  704 bytes

Argument 0 is unknown.RIP: 0x7fafb8c75f00 Code size: 0x000002c0
  0x00007fafb8c75f00: push    %rax
  0x00007fafb8c75f01: jmpq    0x7fafb8c75f3f
  0x00007fafb8c75f06: sub     $0x8,%rsp
  0x00007fafb8c75f0a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c75f0f: jmpq    0x7fafb8c75f3f
  0x00007fafb8c75f14: sub     $0x10,%rsp
  0x00007fafb8c75f18: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c75f1d: jmpq    0x7fafb8c75f3f
  0x00007fafb8c75f22: sub     $0x10,%rsp
  0x00007fafb8c75f26: mov     %rax,(%rsp)
  0x00007fafb8c75f2a: movabs  $0x0,%r10
  0x00007fafb8c75f34: mov     %r10,0x8(%rsp)
  0x00007fafb8c75f39: jmpq    0x7fafb8c75f3f
  0x00007fafb8c75f3e: push    %rax
  0x00007fafb8c75f3f: movzbl  0x1(%r13),%ebx
  0x00007fafb8c75f44: neg     %rbx
  0x00007fafb8c75f47: movsxd  (%r14,%rbx,8),%rbx
  0x00007fafb8c75f4b: mov     0xffffffffffffffd8(%rbp),%rcx
  0x00007fafb8c75f4f: test    %rcx,%rcx
  0x00007fafb8c75f52: je      0x7fafb8c76045
  0x00007fafb8c75f58: addq    $0x1,0x8(%rcx)
  0x00007fafb8c75f5d: sbbq    $0x0,0x8(%rcx)
  0x00007fafb8c75f62: cmp     0x10(%rcx),%rbx
  0x00007fafb8c75f66: jne     0x7fafb8c75f83
  0x00007fafb8c75f6c: addq    $0x1,0x18(%rcx)
  0x00007fafb8c75f71: sbbq    $0x0,0x18(%rcx)
  0x00007fafb8c75f76: add     0x20(%rcx),%rcx
  0x00007fafb8c75f7a: mov     %rcx,0xffffffffffffffd8(%rbp)
  0x00007fafb8c75f7e: jmpq    0x7fafb8c76045
  0x00007fafb8c75f83: cmp     0x28(%rcx),%rbx
  0x00007fafb8c75f87: jne     0x7fafb8c75fa4
  0x00007fafb8c75f8d: addq    $0x1,0x30(%rcx)
  0x00007fafb8c75f92: sbbq    $0x0,0x30(%rcx)
  0x00007fafb8c75f97: add     0x38(%rcx),%rcx
  0x00007fafb8c75f9b: mov     %rcx,0xffffffffffffffd8(%rbp)
  0x00007fafb8c75f9f: jmpq    0x7fafb8c76045
  0x00007fafb8c75fa4: push    %rbx
  0x00007fafb8c75fa5: callq   0x7fafb8c75faf
  0x00007fafb8c75faa: jmpq    0x7fafb8c76044
  0x00007fafb8c75faf: mov     %rbx,%rsi
  0x00007fafb8c75fb2: lea     0x8(%rsp),%rax
  0x00007fafb8c75fb7: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c75fbb: mov     %r15,%rdi
  0x00007fafb8c75fbe: vzeroupper
  0x00007fafb8c75fc1: mov     %rbp,0x330(%r15)
  0x00007fafb8c75fc8: mov     %rax,0x320(%r15)
  0x00007fafb8c75fcf: test    $0xf,%esp
  0x00007fafb8c75fd5: je      0x7fafb8c75fed
  0x00007fafb8c75fdb: sub     $0x8,%rsp
  0x00007fafb8c75fdf: callq   0x7fafd7d85040
  0x00007fafb8c75fe4: add     $0x8,%rsp
  0x00007fafb8c75fe8: jmpq    0x7fafb8c75ff2
  0x00007fafb8c75fed: callq   0x7fafd7d85040
  0x00007fafb8c75ff2: movabs  $0x0,%r10
  0x00007fafb8c75ffc: mov     %r10,0x320(%r15)
  0x00007fafb8c76003: movabs  $0x0,%r10
  0x00007fafb8c7600d: mov     %r10,0x330(%r15)
  0x00007fafb8c76014: movabs  $0x0,%r10
  0x00007fafb8c7601e: mov     %r10,0x328(%r15)
  0x00007fafb8c76025: vzeroupper
  0x00007fafb8c76028: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c76030: je      0x7fafb8c7603b
  0x00007fafb8c76036: jmpq    0x7fafb8c5c780
  0x00007fafb8c7603b: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7603f: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c76043: retq
  0x00007fafb8c76044: pop     %rbx
  0x00007fafb8c76045: mov     0xffffffffffffffe8(%rbp),%rax
  0x00007fafb8c76049: mov     0x8(%rax),%r13
  0x00007fafb8c7604d: lea     0x38(%r13,%rbx),%r13
  0x00007fafb8c76052: movzbl  0x0(%r13),%ebx
  0x00007fafb8c76057: testb   $0x8,0x108(%r15)
  0x00007fafb8c7605f: je      0x7fafb8c7606d
  0x00007fafb8c76061: movabs  $0x7fafd899e080,%r10
  0x00007fafb8c7606b: jmp     0x7fafb8c76077
  0x00007fafb8c7606d: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c76077: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7607b: movzwl  0x2(%r13),%ebx
  0x00007fafb8c76080: bswap   %ebx
  0x00007fafb8c76082: shr     $0x10,%ebx
  0x00007fafb8c76085: neg     %rbx
  0x00007fafb8c76088: mov     (%r14,%rbx,8),%rbx
  0x00007fafb8c7608c: mov     0xffffffffffffffd8(%rbp),%rcx
  0x00007fafb8c76090: test    %rcx,%rcx
  0x00007fafb8c76093: je      0x7fafb8c76186
  0x00007fafb8c76099: addq    $0x1,0x8(%rcx)
  0x00007fafb8c7609e: sbbq    $0x0,0x8(%rcx)
  0x00007fafb8c760a3: cmp     0x10(%rcx),%rbx
  0x00007fafb8c760a7: jne     0x7fafb8c760c4
  0x00007fafb8c760ad: addq    $0x1,0x18(%rcx)
  0x00007fafb8c760b2: sbbq    $0x0,0x18(%rcx)
  0x00007fafb8c760b7: add     0x20(%rcx),%rcx
  0x00007fafb8c760bb: mov     %rcx,0xffffffffffffffd8(%rbp)
  0x00007fafb8c760bf: jmpq    0x7fafb8c76186
  0x00007fafb8c760c4: cmp     0x28(%rcx),%rbx
  0x00007fafb8c760c8: jne     0x7fafb8c760e5
  0x00007fafb8c760ce: addq    $0x1,0x30(%rcx)
  0x00007fafb8c760d3: sbbq    $0x0,0x30(%rcx)
  0x00007fafb8c760d8: add     0x38(%rcx),%rcx
  0x00007fafb8c760dc: mov     %rcx,0xffffffffffffffd8(%rbp)
  0x00007fafb8c760e0: jmpq    0x7fafb8c76186
  0x00007fafb8c760e5: push    %rbx
  0x00007fafb8c760e6: callq   0x7fafb8c760f0
  0x00007fafb8c760eb: jmpq    0x7fafb8c76185
  0x00007fafb8c760f0: mov     %rbx,%rsi
  0x00007fafb8c760f3: lea     0x8(%rsp),%rax
  0x00007fafb8c760f8: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c760fc: mov     %r15,%rdi
  0x00007fafb8c760ff: vzeroupper
  0x00007fafb8c76102: mov     %rbp,0x330(%r15)
  0x00007fafb8c76109: mov     %rax,0x320(%r15)
  0x00007fafb8c76110: test    $0xf,%esp
  0x00007fafb8c76116: je      0x7fafb8c7612e
  0x00007fafb8c7611c: sub     $0x8,%rsp
  0x00007fafb8c76120: callq   0x7fafd7d85040
  0x00007fafb8c76125: add     $0x8,%rsp
  0x00007fafb8c76129: jmpq    0x7fafb8c76133
  0x00007fafb8c7612e: callq   0x7fafd7d85040
  0x00007fafb8c76133: movabs  $0x0,%r10
  0x00007fafb8c7613d: mov     %r10,0x320(%r15)
  0x00007fafb8c76144: movabs  $0x0,%r10
  0x00007fafb8c7614e: mov     %r10,0x330(%r15)
  0x00007fafb8c76155: movabs  $0x0,%r10
  0x00007fafb8c7615f: mov     %r10,0x328(%r15)
  0x00007fafb8c76166: vzeroupper
  0x00007fafb8c76169: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c76171: je      0x7fafb8c7617c
  0x00007fafb8c76177: jmpq    0x7fafb8c5c780
  0x00007fafb8c7617c: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c76180: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c76184: retq
  0x00007fafb8c76185: pop     %rbx
  0x00007fafb8c76186: mov     0xffffffffffffffe8(%rbp),%rax
  0x00007fafb8c7618a: mov     0x8(%rax),%r13
  0x00007fafb8c7618e: lea     0x38(%r13,%rbx),%r13
  0x00007fafb8c76193: movzbl  0x0(%r13),%ebx
  0x00007fafb8c76198: testb   $0x8,0x108(%r15)
  0x00007fafb8c761a0: je      0x7fafb8c761ae
  0x00007fafb8c761a2: movabs  $0x7fafd899e080,%r10
  0x00007fafb8c761ac: jmp     0x7fafb8c761b8
  0x00007fafb8c761ae: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c761b8: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c761bc: nopl    0x0(%rax)

----------------------------------------------------------------------
tableswitch  170 tableswitch  [0x00007fafb8c761e0, 0x00007fafb8c762a0]  192 bytes

Argument 0 is unknown.RIP: 0x7fafb8c761e0 Code size: 0x000000c0
  0x00007fafb8c761e0: mov     (%rsp),%eax
  0x00007fafb8c761e3: add     $0x8,%rsp
  0x00007fafb8c761e7: lea     0x4(%r13),%rbx
  0x00007fafb8c761eb: and     $0xfffffffffffffffc,%rbx
  0x00007fafb8c761ef: mov     0x4(%rbx),%ecx
  0x00007fafb8c761f2: mov     0x8(%rbx),%edx
  0x00007fafb8c761f5: bswap   %ecx
  0x00007fafb8c761f7: bswap   %edx
  0x00007fafb8c761f9: cmp     %ecx,%eax
  0x00007fafb8c761fb: jl      0x7fafb8c7626e
  0x00007fafb8c76201: cmp     %edx,%eax
  0x00007fafb8c76203: jnle    0x7fafb8c7626e
  0x00007fafb8c76209: sub     %ecx,%eax
  0x00007fafb8c7620b: mov     0xc(%rbx,%rax,4),%edx
  0x00007fafb8c7620f: mov     0xffffffffffffffd8(%rbp),%rbx
  0x00007fafb8c76213: test    %rbx,%rbx
  0x00007fafb8c76216: je      0x7fafb8c7623c
  0x00007fafb8c7621c: mov     $0x10,%ecx
  0x00007fafb8c76221: imulq   %rcx,%rax
  0x00007fafb8c76225: add     $0x20,%rax
  0x00007fafb8c76229: addq    $0x1,(%rbx,%rax)
  0x00007fafb8c7622e: sbbq    $0x0,(%rbx,%rax)
  0x00007fafb8c76233: add     0x8(%rbx,%rax),%rbx
  0x00007fafb8c76238: mov     %rbx,0xffffffffffffffd8(%rbp)
  0x00007fafb8c7623c: bswap   %edx
  0x00007fafb8c7623e: movsxd  %edx,%rdx
  0x00007fafb8c76241: movzbl  0x0(%r13,%rdx),%ebx
  0x00007fafb8c76247: add     %rdx,%r13
  0x00007fafb8c7624a: testb   $0x8,0x108(%r15)
  0x00007fafb8c76252: je      0x7fafb8c76260
  0x00007fafb8c76254: movabs  $0x7fafd899e080,%r10
  0x00007fafb8c7625e: jmp     0x7fafb8c7626a
  0x00007fafb8c76260: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c7626a: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7626e: mov     0xffffffffffffffd8(%rbp),%rax
  0x00007fafb8c76272: test    %rax,%rax
  0x00007fafb8c76275: je      0x7fafb8c7628d
  0x00007fafb8c7627b: addq    $0x1,0x10(%rax)
  0x00007fafb8c76280: sbbq    $0x0,0x10(%rax)
  0x00007fafb8c76285: add     0x18(%rax),%rax
  0x00007fafb8c76289: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c7628d: mov     (%rbx),%edx
  0x00007fafb8c7628f: jmp     0x7fafb8c7623c
  0x00007fafb8c76291: nopl    0x0(%rax)
  0x00007fafb8c76298: add     %al,(%rax)
  0x00007fafb8c7629a: add     %al,(%rax)
  0x00007fafb8c7629c: add     %al,(%rax)
  0x00007fafb8c7629e: add     %al,(%rax)

----------------------------------------------------------------------
lookupswitch  171 lookupswitch  [0x00007fafb8c762c0, 0x00007fafb8c76340]  128 bytes

Argument 0 is unknown.RIP: 0x7fafb8c762c0 Code size: 0x00000080
  0x00007fafb8c762c0: mov     (%rsp),%eax
  0x00007fafb8c762c3: add     $0x8,%rsp
  0x00007fafb8c762c7: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c762cc: sub     $0x80,%rsp
  0x00007fafb8c762d3: mov     %rax,0x78(%rsp)
  0x00007fafb8c762d8: mov     %rcx,0x70(%rsp)
  0x00007fafb8c762dd: mov     %rdx,0x68(%rsp)
  0x00007fafb8c762e2: mov     %rbx,0x60(%rsp)
  0x00007fafb8c762e7: mov     %rbp,0x50(%rsp)
  0x00007fafb8c762ec: mov     %rsi,0x48(%rsp)
  0x00007fafb8c762f1: mov     %rdi,0x40(%rsp)
  0x00007fafb8c762f6: mov     %r8,0x38(%rsp)
  0x00007fafb8c762fb: mov     %r9,0x30(%rsp)
  0x00007fafb8c76300: mov     %r10,0x28(%rsp)
  0x00007fafb8c76305: mov     %r11,0x20(%rsp)
  0x00007fafb8c7630a: mov     %r12,0x18(%rsp)
  0x00007fafb8c7630f: mov     %r13,0x10(%rsp)
  0x00007fafb8c76314: mov     %r14,0x8(%rsp)
  0x00007fafb8c76319: mov     %r15,(%rsp)
  0x00007fafb8c7631d: movabs  $0x7fafd8461930,%rdi
  0x00007fafb8c76327: movabs  $0x7fafb8c762c7,%rsi
  0x00007fafb8c76331: mov     %rsp,%rdx
  0x00007fafb8c76334: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c76338: callq   0x7fafd7fdd230
  0x00007fafb8c7633d: hlt
  0x00007fafb8c7633e: nop

----------------------------------------------------------------------
ireturn  172 ireturn  [0x00007fafb8c76360, 0x00007fafb8c76980]  1568 bytes

Argument 0 is unknown.RIP: 0x7fafb8c76360 Code size: 0x00000620
  0x00007fafb8c76360: mov     (%rsp),%eax
  0x00007fafb8c76363: add     $0x8,%rsp
  0x00007fafb8c76367: testb   $0x8,0x108(%r15)
  0x00007fafb8c7636f: je      0x7fafb8c76419
  0x00007fafb8c76375: push    %rax
  0x00007fafb8c76376: callq   0x7fafb8c76380
  0x00007fafb8c7637b: jmpq    0x7fafb8c76412
  0x00007fafb8c76380: lea     0x8(%rsp),%rax
  0x00007fafb8c76385: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c76389: mov     %r15,%rdi
  0x00007fafb8c7638c: vzeroupper
  0x00007fafb8c7638f: mov     %rbp,0x330(%r15)
  0x00007fafb8c76396: mov     %rax,0x320(%r15)
  0x00007fafb8c7639d: test    $0xf,%esp
  0x00007fafb8c763a3: je      0x7fafb8c763bb
  0x00007fafb8c763a9: sub     $0x8,%rsp
  0x00007fafb8c763ad: callq   0x7fafd7d855e0
  0x00007fafb8c763b2: add     $0x8,%rsp
  0x00007fafb8c763b6: jmpq    0x7fafb8c763c0
  0x00007fafb8c763bb: callq   0x7fafd7d855e0
  0x00007fafb8c763c0: movabs  $0x0,%r10
  0x00007fafb8c763ca: mov     %r10,0x320(%r15)
  0x00007fafb8c763d1: movabs  $0x0,%r10
  0x00007fafb8c763db: mov     %r10,0x330(%r15)
  0x00007fafb8c763e2: movabs  $0x0,%r10
  0x00007fafb8c763ec: mov     %r10,0x328(%r15)
  0x00007fafb8c763f3: vzeroupper
  0x00007fafb8c763f6: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c763fe: je      0x7fafb8c76409
  0x00007fafb8c76404: jmpq    0x7fafb8c5c780
  0x00007fafb8c76409: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7640d: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c76411: retq
  0x00007fafb8c76412: mov     (%rsp),%eax
  0x00007fafb8c76415: add     $0x8,%rsp
  0x00007fafb8c76419: mov     0xffffffffffffffe8(%rbp),%rcx
  0x00007fafb8c7641d: mov     0x8(%rcx),%rcx
  0x00007fafb8c76421: movzbl  0x26(%rcx),%ecx
  0x00007fafb8c76425: cmp     $0xa,%ecx
  0x00007fafb8c76428: je      0x7fafb8c76464
  0x00007fafb8c7642e: cmp     $0x4,%ecx
  0x00007fafb8c76431: jne     0x7fafb8c7643f
  0x00007fafb8c76437: and     $0x1,%eax
  0x00007fafb8c7643a: jmpq    0x7fafb8c76464
  0x00007fafb8c7643f: cmp     $0x8,%ecx
  0x00007fafb8c76442: jne     0x7fafb8c76450
  0x00007fafb8c76448: movsbl  %al,%eax
  0x00007fafb8c7644b: jmpq    0x7fafb8c76464
  0x00007fafb8c76450: cmp     $0x5,%ecx
  0x00007fafb8c76453: jne     0x7fafb8c76461
  0x00007fafb8c76459: movzwl  %ax,%eax
  0x00007fafb8c7645c: jmpq    0x7fafb8c76464
  0x00007fafb8c76461: movswl  %ax,%eax
  0x00007fafb8c76464: mov     0x3dd(%r15),%bl
  0x00007fafb8c7646b: movb    $0x0,0x3dd(%r15)
  0x00007fafb8c76473: mov     0xffffffffffffffe8(%rbp),%rcx
  0x00007fafb8c76477: mov     0x20(%rcx),%ecx
  0x00007fafb8c7647a: test    $0x20,%ecx
  0x00007fafb8c76480: je      0x7fafb8c766a1
  0x00007fafb8c76486: testb   $0xff,%bl
  0x00007fafb8c76489: jne     0x7fafb8c767d8
  0x00007fafb8c7648f: push    %rax
  0x00007fafb8c76490: lea     0xffffffffffffffa8(%rbp),%rsi
  0x00007fafb8c76494: mov     0x8(%rsi),%rax
  0x00007fafb8c76498: test    %rax,%rax
  0x00007fafb8c7649b: jne     0x7fafb8c765bb
  0x00007fafb8c764a1: mov     (%rsp),%eax
  0x00007fafb8c764a4: add     $0x8,%rsp
  0x00007fafb8c764a8: callq   0x7fafb8c764b2
  0x00007fafb8c764ad: jmpq    0x7fafb8c76544
  0x00007fafb8c764b2: lea     0x8(%rsp),%rax
  0x00007fafb8c764b7: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c764bb: mov     %r15,%rdi
  0x00007fafb8c764be: vzeroupper
  0x00007fafb8c764c1: mov     %rbp,0x330(%r15)
  0x00007fafb8c764c8: mov     %rax,0x320(%r15)
  0x00007fafb8c764cf: test    $0xf,%esp
  0x00007fafb8c764d5: je      0x7fafb8c764ed
  0x00007fafb8c764db: sub     $0x8,%rsp
  0x00007fafb8c764df: callq   0x7fafd7d826a0
  0x00007fafb8c764e4: add     $0x8,%rsp
  0x00007fafb8c764e8: jmpq    0x7fafb8c764f2
  0x00007fafb8c764ed: callq   0x7fafd7d826a0
  0x00007fafb8c764f2: movabs  $0x0,%r10
  0x00007fafb8c764fc: mov     %r10,0x320(%r15)
  0x00007fafb8c76503: movabs  $0x0,%r10
  0x00007fafb8c7650d: mov     %r10,0x330(%r15)
  0x00007fafb8c76514: movabs  $0x0,%r10
  0x00007fafb8c7651e: mov     %r10,0x328(%r15)
  0x00007fafb8c76525: vzeroupper
  0x00007fafb8c76528: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c76530: je      0x7fafb8c7653b
  0x00007fafb8c76536: jmpq    0x7fafb8c5c780
  0x00007fafb8c7653b: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7653f: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c76543: retq
  0x00007fafb8c76544: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c76549: sub     $0x80,%rsp
  0x00007fafb8c76550: mov     %rax,0x78(%rsp)
  0x00007fafb8c76555: mov     %rcx,0x70(%rsp)
  0x00007fafb8c7655a: mov     %rdx,0x68(%rsp)
  0x00007fafb8c7655f: mov     %rbx,0x60(%rsp)
  0x00007fafb8c76564: mov     %rbp,0x50(%rsp)
  0x00007fafb8c76569: mov     %rsi,0x48(%rsp)
  0x00007fafb8c7656e: mov     %rdi,0x40(%rsp)
  0x00007fafb8c76573: mov     %r8,0x38(%rsp)
  0x00007fafb8c76578: mov     %r9,0x30(%rsp)
  0x00007fafb8c7657d: mov     %r10,0x28(%rsp)
  0x00007fafb8c76582: mov     %r11,0x20(%rsp)
  0x00007fafb8c76587: mov     %r12,0x18(%rsp)
  0x00007fafb8c7658c: mov     %r13,0x10(%rsp)
  0x00007fafb8c76591: mov     %r14,0x8(%rsp)
  0x00007fafb8c76596: mov     %r15,(%rsp)
  0x00007fafb8c7659a: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c765a4: movabs  $0x7fafb8c76544,%rsi
  0x00007fafb8c765ae: mov     %rsp,%rdx
  0x00007fafb8c765b1: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c765b5: callq   0x7fafd7fdd230
  0x00007fafb8c765ba: hlt
  0x00007fafb8c765bb: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c765bf: lea     (%rsi),%rax
  0x00007fafb8c765c2: mov     0x8(%rsi),%rcx
  0x00007fafb8c765c6: movq    $0x0,0x8(%rsi)
  0x00007fafb8c765ce: mov     (%rcx),%rdx
  0x00007fafb8c765d1: and     $0x7,%rdx
  0x00007fafb8c765d5: cmp     $0x5,%rdx
  0x00007fafb8c765d9: je      0x7fafb8c76696
  0x00007fafb8c765df: mov     (%rax),%rdx
  0x00007fafb8c765e2: test    %rdx,%rdx
  0x00007fafb8c765e5: je      0x7fafb8c76696
  0x00007fafb8c765eb: lock cmpxchg %rdx,(%rcx)
  0x00007fafb8c765f0: je      0x7fafb8c76696
  0x00007fafb8c765f6: mov     %rcx,0x8(%rsi)
  0x00007fafb8c765fa: callq   0x7fafb8c76604
  0x00007fafb8c765ff: jmpq    0x7fafb8c76696
  0x00007fafb8c76604: lea     0x8(%rsp),%rax
  0x00007fafb8c76609: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7660d: mov     %r15,%rdi
  0x00007fafb8c76610: vzeroupper
  0x00007fafb8c76613: mov     %rbp,0x330(%r15)
  0x00007fafb8c7661a: mov     %rax,0x320(%r15)
  0x00007fafb8c76621: test    $0xf,%esp
  0x00007fafb8c76627: je      0x7fafb8c7663f
  0x00007fafb8c7662d: sub     $0x8,%rsp
  0x00007fafb8c76631: callq   0x7fafd7d82470
  0x00007fafb8c76636: add     $0x8,%rsp
  0x00007fafb8c7663a: jmpq    0x7fafb8c76644
  0x00007fafb8c7663f: callq   0x7fafd7d82470
  0x00007fafb8c76644: movabs  $0x0,%r10
  0x00007fafb8c7664e: mov     %r10,0x320(%r15)
  0x00007fafb8c76655: movabs  $0x0,%r10
  0x00007fafb8c7665f: mov     %r10,0x330(%r15)
  0x00007fafb8c76666: movabs  $0x0,%r10
  0x00007fafb8c76670: mov     %r10,0x328(%r15)
  0x00007fafb8c76677: vzeroupper
  0x00007fafb8c7667a: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c76682: je      0x7fafb8c7668d
  0x00007fafb8c76688: jmpq    0x7fafb8c5c780
  0x00007fafb8c7668d: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c76691: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c76695: retq
  0x00007fafb8c76696: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7669a: mov     (%rsp),%eax
  0x00007fafb8c7669d: add     $0x8,%rsp
  0x00007fafb8c766a1: mov     0xffffffffffffffb8(%rbp),%rsi
  0x00007fafb8c766a5: lea     0xffffffffffffffb8(%rbp),%rbx
  0x00007fafb8c766a9: jmpq    0x7fafb8c767d3
  0x00007fafb8c766ae: callq   0x7fafb8c766b8
  0x00007fafb8c766b3: jmpq    0x7fafb8c7674a
  0x00007fafb8c766b8: lea     0x8(%rsp),%rax
  0x00007fafb8c766bd: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c766c1: mov     %r15,%rdi
  0x00007fafb8c766c4: vzeroupper
  0x00007fafb8c766c7: mov     %rbp,0x330(%r15)
  0x00007fafb8c766ce: mov     %rax,0x320(%r15)
  0x00007fafb8c766d5: test    $0xf,%esp
  0x00007fafb8c766db: je      0x7fafb8c766f3
  0x00007fafb8c766e1: sub     $0x8,%rsp
  0x00007fafb8c766e5: callq   0x7fafd7d826a0
  0x00007fafb8c766ea: add     $0x8,%rsp
  0x00007fafb8c766ee: jmpq    0x7fafb8c766f8
  0x00007fafb8c766f3: callq   0x7fafd7d826a0
  0x00007fafb8c766f8: movabs  $0x0,%r10
  0x00007fafb8c76702: mov     %r10,0x320(%r15)
  0x00007fafb8c76709: movabs  $0x0,%r10
  0x00007fafb8c76713: mov     %r10,0x330(%r15)
  0x00007fafb8c7671a: movabs  $0x0,%r10
  0x00007fafb8c76724: mov     %r10,0x328(%r15)
  0x00007fafb8c7672b: vzeroupper
  0x00007fafb8c7672e: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c76736: je      0x7fafb8c76741
  0x00007fafb8c7673c: jmpq    0x7fafb8c5c780
  0x00007fafb8c76741: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c76745: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c76749: retq
  0x00007fafb8c7674a: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c7674f: sub     $0x80,%rsp
  0x00007fafb8c76756: mov     %rax,0x78(%rsp)
  0x00007fafb8c7675b: mov     %rcx,0x70(%rsp)
  0x00007fafb8c76760: mov     %rdx,0x68(%rsp)
  0x00007fafb8c76765: mov     %rbx,0x60(%rsp)
  0x00007fafb8c7676a: mov     %rbp,0x50(%rsp)
  0x00007fafb8c7676f: mov     %rsi,0x48(%rsp)
  0x00007fafb8c76774: mov     %rdi,0x40(%rsp)
  0x00007fafb8c76779: mov     %r8,0x38(%rsp)
  0x00007fafb8c7677e: mov     %r9,0x30(%rsp)
  0x00007fafb8c76783: mov     %r10,0x28(%rsp)
  0x00007fafb8c76788: mov     %r11,0x20(%rsp)
  0x00007fafb8c7678d: mov     %r12,0x18(%rsp)
  0x00007fafb8c76792: mov     %r13,0x10(%rsp)
  0x00007fafb8c76797: mov     %r14,0x8(%rsp)
  0x00007fafb8c7679c: mov     %r15,(%rsp)
  0x00007fafb8c767a0: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c767aa: movabs  $0x7fafb8c7674a,%rsi
  0x00007fafb8c767b4: mov     %rsp,%rdx
  0x00007fafb8c767b7: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c767bb: callq   0x7fafd7fdd230
  0x00007fafb8c767c0: hlt
  0x00007fafb8c767c1: cmpq    $0x0,0x8(%rsi)
  0x00007fafb8c767c9: jne     0x7fafb8c766ae
  0x00007fafb8c767cf: add     $0x10,%rsi
  0x00007fafb8c767d3: cmp     %rbx,%rsi
  0x00007fafb8c767d6: jne     0x7fafb8c767c1
  0x00007fafb8c767d8: cmpb    $0x0,0x1fd014b8(%rip)
  0x00007fafb8c767df: je      0x7fafb8c76817
  0x00007fafb8c767e5: push    %rax
  0x00007fafb8c767e6: mov     0xffffffffffffffe8(%rbp),%rsi
  0x00007fafb8c767ea: mov     %r15,%rdi
  0x00007fafb8c767ed: test    $0xf,%esp
  0x00007fafb8c767f3: je      0x7fafb8c7680b
  0x00007fafb8c767f9: sub     $0x8,%rsp
  0x00007fafb8c767fd: callq   0x7fafd81e7140
  0x00007fafb8c76802: add     $0x8,%rsp
  0x00007fafb8c76806: jmpq    0x7fafb8c76810
  0x00007fafb8c7680b: callq   0x7fafd81e7140
  0x00007fafb8c76810: mov     (%rsp),%eax
  0x00007fafb8c76813: add     $0x8,%rsp
  0x00007fafb8c76817: mov     0xfffffffffffffff8(%rbp),%rbx
  0x00007fafb8c7681b: cmpl    $0x3,0x408(%r15)
  0x00007fafb8c76826: je      0x7fafb8c76972
  0x00007fafb8c7682c: cmp     0x418(%r15),%rbx
  0x00007fafb8c76833: jle     0x7fafb8c76972
  0x00007fafb8c76839: mov     %r15,%rdi
  0x00007fafb8c7683c: test    $0xf,%esp
  0x00007fafb8c76842: je      0x7fafb8c7685a
  0x00007fafb8c76848: sub     $0x8,%rsp
  0x00007fafb8c7684c: callq   0x7fafd81ee2f0
  0x00007fafb8c76851: add     $0x8,%rsp
  0x00007fafb8c76855: jmpq    0x7fafb8c7685f
  0x00007fafb8c7685a: callq   0x7fafd81ee2f0
  0x00007fafb8c7685f: callq   0x7fafb8c76869
  0x00007fafb8c76864: jmpq    0x7fafb8c768fb
  0x00007fafb8c76869: lea     0x8(%rsp),%rax
  0x00007fafb8c7686e: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c76872: mov     %r15,%rdi
  0x00007fafb8c76875: vzeroupper
  0x00007fafb8c76878: mov     %rbp,0x330(%r15)
  0x00007fafb8c7687f: mov     %rax,0x320(%r15)
  0x00007fafb8c76886: test    $0xf,%esp
  0x00007fafb8c7688c: je      0x7fafb8c768a4
  0x00007fafb8c76892: sub     $0x8,%rsp
  0x00007fafb8c76896: callq   0x7fafd7d7ef30
  0x00007fafb8c7689b: add     $0x8,%rsp
  0x00007fafb8c7689f: jmpq    0x7fafb8c768a9
  0x00007fafb8c768a4: callq   0x7fafd7d7ef30
  0x00007fafb8c768a9: movabs  $0x0,%r10
  0x00007fafb8c768b3: mov     %r10,0x320(%r15)
  0x00007fafb8c768ba: movabs  $0x0,%r10
  0x00007fafb8c768c4: mov     %r10,0x330(%r15)
  0x00007fafb8c768cb: movabs  $0x0,%r10
  0x00007fafb8c768d5: mov     %r10,0x328(%r15)
  0x00007fafb8c768dc: vzeroupper
  0x00007fafb8c768df: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c768e7: je      0x7fafb8c768f2
  0x00007fafb8c768ed: jmpq    0x7fafb8c5c780
  0x00007fafb8c768f2: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c768f6: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c768fa: retq
  0x00007fafb8c768fb: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c76900: sub     $0x80,%rsp
  0x00007fafb8c76907: mov     %rax,0x78(%rsp)
  0x00007fafb8c7690c: mov     %rcx,0x70(%rsp)
  0x00007fafb8c76911: mov     %rdx,0x68(%rsp)
  0x00007fafb8c76916: mov     %rbx,0x60(%rsp)
  0x00007fafb8c7691b: mov     %rbp,0x50(%rsp)
  0x00007fafb8c76920: mov     %rsi,0x48(%rsp)
  0x00007fafb8c76925: mov     %rdi,0x40(%rsp)
  0x00007fafb8c7692a: mov     %r8,0x38(%rsp)
  0x00007fafb8c7692f: mov     %r9,0x30(%rsp)
  0x00007fafb8c76934: mov     %r10,0x28(%rsp)
  0x00007fafb8c76939: mov     %r11,0x20(%rsp)
  0x00007fafb8c7693e: mov     %r12,0x18(%rsp)
  0x00007fafb8c76943: mov     %r13,0x10(%rsp)
  0x00007fafb8c76948: mov     %r14,0x8(%rsp)
  0x00007fafb8c7694d: mov     %r15,(%rsp)
  0x00007fafb8c76951: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c7695b: movabs  $0x7fafb8c768fb,%rsi
  0x00007fafb8c76965: mov     %rsp,%rdx
  0x00007fafb8c76968: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c7696c: callq   0x7fafd7fdd230
  0x00007fafb8c76971: hlt
  0x00007fafb8c76972: leave
  0x00007fafb8c76973: pop     %r13
  0x00007fafb8c76975: mov     %rbx,%rsp
  0x00007fafb8c76978: jmpq    %r13
  0x00007fafb8c7697b: nopl    0x0(%rax,%rax)

----------------------------------------------------------------------
lreturn  173 lreturn  [0x00007fafb8c769a0, 0x00007fafb8c76fc0]  1568 bytes

Argument 0 is unknown.RIP: 0x7fafb8c769a0 Code size: 0x00000620
  0x00007fafb8c769a0: mov     (%rsp),%rax
  0x00007fafb8c769a4: add     $0x10,%rsp
  0x00007fafb8c769a8: testb   $0x8,0x108(%r15)
  0x00007fafb8c769b0: je      0x7fafb8c76a71
  0x00007fafb8c769b6: sub     $0x10,%rsp
  0x00007fafb8c769ba: mov     %rax,(%rsp)
  0x00007fafb8c769be: movabs  $0x0,%r10
  0x00007fafb8c769c8: mov     %r10,0x8(%rsp)
  0x00007fafb8c769cd: callq   0x7fafb8c769d7
  0x00007fafb8c769d2: jmpq    0x7fafb8c76a69
  0x00007fafb8c769d7: lea     0x8(%rsp),%rax
  0x00007fafb8c769dc: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c769e0: mov     %r15,%rdi
  0x00007fafb8c769e3: vzeroupper
  0x00007fafb8c769e6: mov     %rbp,0x330(%r15)
  0x00007fafb8c769ed: mov     %rax,0x320(%r15)
  0x00007fafb8c769f4: test    $0xf,%esp
  0x00007fafb8c769fa: je      0x7fafb8c76a12
  0x00007fafb8c76a00: sub     $0x8,%rsp
  0x00007fafb8c76a04: callq   0x7fafd7d855e0
  0x00007fafb8c76a09: add     $0x8,%rsp
  0x00007fafb8c76a0d: jmpq    0x7fafb8c76a17
  0x00007fafb8c76a12: callq   0x7fafd7d855e0
  0x00007fafb8c76a17: movabs  $0x0,%r10
  0x00007fafb8c76a21: mov     %r10,0x320(%r15)
  0x00007fafb8c76a28: movabs  $0x0,%r10
  0x00007fafb8c76a32: mov     %r10,0x330(%r15)
  0x00007fafb8c76a39: movabs  $0x0,%r10
  0x00007fafb8c76a43: mov     %r10,0x328(%r15)
  0x00007fafb8c76a4a: vzeroupper
  0x00007fafb8c76a4d: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c76a55: je      0x7fafb8c76a60
  0x00007fafb8c76a5b: jmpq    0x7fafb8c5c780
  0x00007fafb8c76a60: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c76a64: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c76a68: retq
  0x00007fafb8c76a69: mov     (%rsp),%rax
  0x00007fafb8c76a6d: add     $0x10,%rsp
  0x00007fafb8c76a71: mov     0x3dd(%r15),%bl
  0x00007fafb8c76a78: movb    $0x0,0x3dd(%r15)
  0x00007fafb8c76a80: mov     0xffffffffffffffe8(%rbp),%rcx
  0x00007fafb8c76a84: mov     0x20(%rcx),%ecx
  0x00007fafb8c76a87: test    $0x20,%ecx
  0x00007fafb8c76a8d: je      0x7fafb8c76cc6
  0x00007fafb8c76a93: testb   $0xff,%bl
  0x00007fafb8c76a96: jne     0x7fafb8c76dfd
  0x00007fafb8c76a9c: sub     $0x10,%rsp
  0x00007fafb8c76aa0: mov     %rax,(%rsp)
  0x00007fafb8c76aa4: movabs  $0x0,%r10
  0x00007fafb8c76aae: mov     %r10,0x8(%rsp)
  0x00007fafb8c76ab3: lea     0xffffffffffffffa8(%rbp),%rsi
  0x00007fafb8c76ab7: mov     0x8(%rsi),%rax
  0x00007fafb8c76abb: test    %rax,%rax
  0x00007fafb8c76abe: jne     0x7fafb8c76bdf
  0x00007fafb8c76ac4: mov     (%rsp),%rax
  0x00007fafb8c76ac8: add     $0x10,%rsp
  0x00007fafb8c76acc: callq   0x7fafb8c76ad6
  0x00007fafb8c76ad1: jmpq    0x7fafb8c76b68
  0x00007fafb8c76ad6: lea     0x8(%rsp),%rax
  0x00007fafb8c76adb: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c76adf: mov     %r15,%rdi
  0x00007fafb8c76ae2: vzeroupper
  0x00007fafb8c76ae5: mov     %rbp,0x330(%r15)
  0x00007fafb8c76aec: mov     %rax,0x320(%r15)
  0x00007fafb8c76af3: test    $0xf,%esp
  0x00007fafb8c76af9: je      0x7fafb8c76b11
  0x00007fafb8c76aff: sub     $0x8,%rsp
  0x00007fafb8c76b03: callq   0x7fafd7d826a0
  0x00007fafb8c76b08: add     $0x8,%rsp
  0x00007fafb8c76b0c: jmpq    0x7fafb8c76b16
  0x00007fafb8c76b11: callq   0x7fafd7d826a0
  0x00007fafb8c76b16: movabs  $0x0,%r10
  0x00007fafb8c76b20: mov     %r10,0x320(%r15)
  0x00007fafb8c76b27: movabs  $0x0,%r10
  0x00007fafb8c76b31: mov     %r10,0x330(%r15)
  0x00007fafb8c76b38: movabs  $0x0,%r10
  0x00007fafb8c76b42: mov     %r10,0x328(%r15)
  0x00007fafb8c76b49: vzeroupper
  0x00007fafb8c76b4c: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c76b54: je      0x7fafb8c76b5f
  0x00007fafb8c76b5a: jmpq    0x7fafb8c5c780
  0x00007fafb8c76b5f: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c76b63: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c76b67: retq
  0x00007fafb8c76b68: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c76b6d: sub     $0x80,%rsp
  0x00007fafb8c76b74: mov     %rax,0x78(%rsp)
  0x00007fafb8c76b79: mov     %rcx,0x70(%rsp)
  0x00007fafb8c76b7e: mov     %rdx,0x68(%rsp)
  0x00007fafb8c76b83: mov     %rbx,0x60(%rsp)
  0x00007fafb8c76b88: mov     %rbp,0x50(%rsp)
  0x00007fafb8c76b8d: mov     %rsi,0x48(%rsp)
  0x00007fafb8c76b92: mov     %rdi,0x40(%rsp)
  0x00007fafb8c76b97: mov     %r8,0x38(%rsp)
  0x00007fafb8c76b9c: mov     %r9,0x30(%rsp)
  0x00007fafb8c76ba1: mov     %r10,0x28(%rsp)
  0x00007fafb8c76ba6: mov     %r11,0x20(%rsp)
  0x00007fafb8c76bab: mov     %r12,0x18(%rsp)
  0x00007fafb8c76bb0: mov     %r13,0x10(%rsp)
  0x00007fafb8c76bb5: mov     %r14,0x8(%rsp)
  0x00007fafb8c76bba: mov     %r15,(%rsp)
  0x00007fafb8c76bbe: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c76bc8: movabs  $0x7fafb8c76b68,%rsi
  0x00007fafb8c76bd2: mov     %rsp,%rdx
  0x00007fafb8c76bd5: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c76bd9: callq   0x7fafd7fdd230
  0x00007fafb8c76bde: hlt
  0x00007fafb8c76bdf: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c76be3: lea     (%rsi),%rax
  0x00007fafb8c76be6: mov     0x8(%rsi),%rcx
  0x00007fafb8c76bea: movq    $0x0,0x8(%rsi)
  0x00007fafb8c76bf2: mov     (%rcx),%rdx
  0x00007fafb8c76bf5: and     $0x7,%rdx
  0x00007fafb8c76bf9: cmp     $0x5,%rdx
  0x00007fafb8c76bfd: je      0x7fafb8c76cba
  0x00007fafb8c76c03: mov     (%rax),%rdx
  0x00007fafb8c76c06: test    %rdx,%rdx
  0x00007fafb8c76c09: je      0x7fafb8c76cba
  0x00007fafb8c76c0f: lock cmpxchg %rdx,(%rcx)
  0x00007fafb8c76c14: je      0x7fafb8c76cba
  0x00007fafb8c76c1a: mov     %rcx,0x8(%rsi)
  0x00007fafb8c76c1e: callq   0x7fafb8c76c28
  0x00007fafb8c76c23: jmpq    0x7fafb8c76cba
  0x00007fafb8c76c28: lea     0x8(%rsp),%rax
  0x00007fafb8c76c2d: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c76c31: mov     %r15,%rdi
  0x00007fafb8c76c34: vzeroupper
  0x00007fafb8c76c37: mov     %rbp,0x330(%r15)
  0x00007fafb8c76c3e: mov     %rax,0x320(%r15)
  0x00007fafb8c76c45: test    $0xf,%esp
  0x00007fafb8c76c4b: je      0x7fafb8c76c63
  0x00007fafb8c76c51: sub     $0x8,%rsp
  0x00007fafb8c76c55: callq   0x7fafd7d82470
  0x00007fafb8c76c5a: add     $0x8,%rsp
  0x00007fafb8c76c5e: jmpq    0x7fafb8c76c68
  0x00007fafb8c76c63: callq   0x7fafd7d82470
  0x00007fafb8c76c68: movabs  $0x0,%r10
  0x00007fafb8c76c72: mov     %r10,0x320(%r15)
  0x00007fafb8c76c79: movabs  $0x0,%r10
  0x00007fafb8c76c83: mov     %r10,0x330(%r15)
  0x00007fafb8c76c8a: movabs  $0x0,%r10
  0x00007fafb8c76c94: mov     %r10,0x328(%r15)
  0x00007fafb8c76c9b: vzeroupper
  0x00007fafb8c76c9e: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c76ca6: je      0x7fafb8c76cb1
  0x00007fafb8c76cac: jmpq    0x7fafb8c5c780
  0x00007fafb8c76cb1: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c76cb5: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c76cb9: retq
  0x00007fafb8c76cba: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c76cbe: mov     (%rsp),%rax
  0x00007fafb8c76cc2: add     $0x10,%rsp
  0x00007fafb8c76cc6: mov     0xffffffffffffffb8(%rbp),%rsi
  0x00007fafb8c76cca: lea     0xffffffffffffffb8(%rbp),%rbx
  0x00007fafb8c76cce: jmpq    0x7fafb8c76df8
  0x00007fafb8c76cd3: callq   0x7fafb8c76cdd
  0x00007fafb8c76cd8: jmpq    0x7fafb8c76d6f
  0x00007fafb8c76cdd: lea     0x8(%rsp),%rax
  0x00007fafb8c76ce2: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c76ce6: mov     %r15,%rdi
  0x00007fafb8c76ce9: vzeroupper
  0x00007fafb8c76cec: mov     %rbp,0x330(%r15)
  0x00007fafb8c76cf3: mov     %rax,0x320(%r15)
  0x00007fafb8c76cfa: test    $0xf,%esp
  0x00007fafb8c76d00: je      0x7fafb8c76d18
  0x00007fafb8c76d06: sub     $0x8,%rsp
  0x00007fafb8c76d0a: callq   0x7fafd7d826a0
  0x00007fafb8c76d0f: add     $0x8,%rsp
  0x00007fafb8c76d13: jmpq    0x7fafb8c76d1d
  0x00007fafb8c76d18: callq   0x7fafd7d826a0
  0x00007fafb8c76d1d: movabs  $0x0,%r10
  0x00007fafb8c76d27: mov     %r10,0x320(%r15)
  0x00007fafb8c76d2e: movabs  $0x0,%r10
  0x00007fafb8c76d38: mov     %r10,0x330(%r15)
  0x00007fafb8c76d3f: movabs  $0x0,%r10
  0x00007fafb8c76d49: mov     %r10,0x328(%r15)
  0x00007fafb8c76d50: vzeroupper
  0x00007fafb8c76d53: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c76d5b: je      0x7fafb8c76d66
  0x00007fafb8c76d61: jmpq    0x7fafb8c5c780
  0x00007fafb8c76d66: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c76d6a: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c76d6e: retq
  0x00007fafb8c76d6f: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c76d74: sub     $0x80,%rsp
  0x00007fafb8c76d7b: mov     %rax,0x78(%rsp)
  0x00007fafb8c76d80: mov     %rcx,0x70(%rsp)
  0x00007fafb8c76d85: mov     %rdx,0x68(%rsp)
  0x00007fafb8c76d8a: mov     %rbx,0x60(%rsp)
  0x00007fafb8c76d8f: mov     %rbp,0x50(%rsp)
  0x00007fafb8c76d94: mov     %rsi,0x48(%rsp)
  0x00007fafb8c76d99: mov     %rdi,0x40(%rsp)
  0x00007fafb8c76d9e: mov     %r8,0x38(%rsp)
  0x00007fafb8c76da3: mov     %r9,0x30(%rsp)
  0x00007fafb8c76da8: mov     %r10,0x28(%rsp)
  0x00007fafb8c76dad: mov     %r11,0x20(%rsp)
  0x00007fafb8c76db2: mov     %r12,0x18(%rsp)
  0x00007fafb8c76db7: mov     %r13,0x10(%rsp)
  0x00007fafb8c76dbc: mov     %r14,0x8(%rsp)
  0x00007fafb8c76dc1: mov     %r15,(%rsp)
  0x00007fafb8c76dc5: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c76dcf: movabs  $0x7fafb8c76d6f,%rsi
  0x00007fafb8c76dd9: mov     %rsp,%rdx
  0x00007fafb8c76ddc: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c76de0: callq   0x7fafd7fdd230
  0x00007fafb8c76de5: hlt
  0x00007fafb8c76de6: cmpq    $0x0,0x8(%rsi)
  0x00007fafb8c76dee: jne     0x7fafb8c76cd3
  0x00007fafb8c76df4: add     $0x10,%rsi
  0x00007fafb8c76df8: cmp     %rbx,%rsi
  0x00007fafb8c76dfb: jne     0x7fafb8c76de6
  0x00007fafb8c76dfd: cmpb    $0x0,0x1fd00e93(%rip)
  0x00007fafb8c76e04: je      0x7fafb8c76e53
  0x00007fafb8c76e0a: sub     $0x10,%rsp
  0x00007fafb8c76e0e: mov     %rax,(%rsp)
  0x00007fafb8c76e12: movabs  $0x0,%r10
  0x00007fafb8c76e1c: mov     %r10,0x8(%rsp)
  0x00007fafb8c76e21: mov     0xffffffffffffffe8(%rbp),%rsi
  0x00007fafb8c76e25: mov     %r15,%rdi
  0x00007fafb8c76e28: test    $0xf,%esp
  0x00007fafb8c76e2e: je      0x7fafb8c76e46
  0x00007fafb8c76e34: sub     $0x8,%rsp
  0x00007fafb8c76e38: callq   0x7fafd81e7140
  0x00007fafb8c76e3d: add     $0x8,%rsp
  0x00007fafb8c76e41: jmpq    0x7fafb8c76e4b
  0x00007fafb8c76e46: callq   0x7fafd81e7140
  0x00007fafb8c76e4b: mov     (%rsp),%rax
  0x00007fafb8c76e4f: add     $0x10,%rsp
  0x00007fafb8c76e53: mov     0xfffffffffffffff8(%rbp),%rbx
  0x00007fafb8c76e57: cmpl    $0x3,0x408(%r15)
  0x00007fafb8c76e62: je      0x7fafb8c76fae
  0x00007fafb8c76e68: cmp     0x418(%r15),%rbx
  0x00007fafb8c76e6f: jle     0x7fafb8c76fae
  0x00007fafb8c76e75: mov     %r15,%rdi
  0x00007fafb8c76e78: test    $0xf,%esp
  0x00007fafb8c76e7e: je      0x7fafb8c76e96
  0x00007fafb8c76e84: sub     $0x8,%rsp
  0x00007fafb8c76e88: callq   0x7fafd81ee2f0
  0x00007fafb8c76e8d: add     $0x8,%rsp
  0x00007fafb8c76e91: jmpq    0x7fafb8c76e9b
  0x00007fafb8c76e96: callq   0x7fafd81ee2f0
  0x00007fafb8c76e9b: callq   0x7fafb8c76ea5
  0x00007fafb8c76ea0: jmpq    0x7fafb8c76f37
  0x00007fafb8c76ea5: lea     0x8(%rsp),%rax
  0x00007fafb8c76eaa: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c76eae: mov     %r15,%rdi
  0x00007fafb8c76eb1: vzeroupper
  0x00007fafb8c76eb4: mov     %rbp,0x330(%r15)
  0x00007fafb8c76ebb: mov     %rax,0x320(%r15)
  0x00007fafb8c76ec2: test    $0xf,%esp
  0x00007fafb8c76ec8: je      0x7fafb8c76ee0
  0x00007fafb8c76ece: sub     $0x8,%rsp
  0x00007fafb8c76ed2: callq   0x7fafd7d7ef30
  0x00007fafb8c76ed7: add     $0x8,%rsp
  0x00007fafb8c76edb: jmpq    0x7fafb8c76ee5
  0x00007fafb8c76ee0: callq   0x7fafd7d7ef30
  0x00007fafb8c76ee5: movabs  $0x0,%r10
  0x00007fafb8c76eef: mov     %r10,0x320(%r15)
  0x00007fafb8c76ef6: movabs  $0x0,%r10
  0x00007fafb8c76f00: mov     %r10,0x330(%r15)
  0x00007fafb8c76f07: movabs  $0x0,%r10
  0x00007fafb8c76f11: mov     %r10,0x328(%r15)
  0x00007fafb8c76f18: vzeroupper
  0x00007fafb8c76f1b: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c76f23: je      0x7fafb8c76f2e
  0x00007fafb8c76f29: jmpq    0x7fafb8c5c780
  0x00007fafb8c76f2e: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c76f32: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c76f36: retq
  0x00007fafb8c76f37: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c76f3c: sub     $0x80,%rsp
  0x00007fafb8c76f43: mov     %rax,0x78(%rsp)
  0x00007fafb8c76f48: mov     %rcx,0x70(%rsp)
  0x00007fafb8c76f4d: mov     %rdx,0x68(%rsp)
  0x00007fafb8c76f52: mov     %rbx,0x60(%rsp)
  0x00007fafb8c76f57: mov     %rbp,0x50(%rsp)
  0x00007fafb8c76f5c: mov     %rsi,0x48(%rsp)
  0x00007fafb8c76f61: mov     %rdi,0x40(%rsp)
  0x00007fafb8c76f66: mov     %r8,0x38(%rsp)
  0x00007fafb8c76f6b: mov     %r9,0x30(%rsp)
  0x00007fafb8c76f70: mov     %r10,0x28(%rsp)
  0x00007fafb8c76f75: mov     %r11,0x20(%rsp)
  0x00007fafb8c76f7a: mov     %r12,0x18(%rsp)
  0x00007fafb8c76f7f: mov     %r13,0x10(%rsp)
  0x00007fafb8c76f84: mov     %r14,0x8(%rsp)
  0x00007fafb8c76f89: mov     %r15,(%rsp)
  0x00007fafb8c76f8d: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c76f97: movabs  $0x7fafb8c76f37,%rsi
  0x00007fafb8c76fa1: mov     %rsp,%rdx
  0x00007fafb8c76fa4: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c76fa8: callq   0x7fafd7fdd230
  0x00007fafb8c76fad: hlt
  0x00007fafb8c76fae: leave
  0x00007fafb8c76faf: pop     %r13
  0x00007fafb8c76fb1: mov     %rbx,%rsp
  0x00007fafb8c76fb4: jmpq    %r13
  0x00007fafb8c76fb7: nop
  0x00007fafb8c76fb8: add     %al,(%rax)
  0x00007fafb8c76fba: add     %al,(%rax)
  0x00007fafb8c76fbc: add     %al,(%rax)
  0x00007fafb8c76fbe: add     %al,(%rax)

----------------------------------------------------------------------
freturn  174 freturn  [0x00007fafb8c76fe0, 0x00007fafb8c775e0]  1536 bytes

Argument 0 is unknown.RIP: 0x7fafb8c76fe0 Code size: 0x00000600
  0x00007fafb8c76fe0: vmovss  (%rsp),%xmm0
  0x00007fafb8c76fe5: add     $0x8,%rsp
  0x00007fafb8c76fe9: testb   $0x8,0x108(%r15)
  0x00007fafb8c76ff1: je      0x7fafb8c770a5
  0x00007fafb8c76ff7: sub     $0x8,%rsp
  0x00007fafb8c76ffb: vmovss  %xmm0,(%rsp)
  0x00007fafb8c77000: callq   0x7fafb8c7700a
  0x00007fafb8c77005: jmpq    0x7fafb8c7709c
  0x00007fafb8c7700a: lea     0x8(%rsp),%rax
  0x00007fafb8c7700f: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c77013: mov     %r15,%rdi
  0x00007fafb8c77016: vzeroupper
  0x00007fafb8c77019: mov     %rbp,0x330(%r15)
  0x00007fafb8c77020: mov     %rax,0x320(%r15)
  0x00007fafb8c77027: test    $0xf,%esp
  0x00007fafb8c7702d: je      0x7fafb8c77045
  0x00007fafb8c77033: sub     $0x8,%rsp
  0x00007fafb8c77037: callq   0x7fafd7d855e0
  0x00007fafb8c7703c: add     $0x8,%rsp
  0x00007fafb8c77040: jmpq    0x7fafb8c7704a
  0x00007fafb8c77045: callq   0x7fafd7d855e0
  0x00007fafb8c7704a: movabs  $0x0,%r10
  0x00007fafb8c77054: mov     %r10,0x320(%r15)
  0x00007fafb8c7705b: movabs  $0x0,%r10
  0x00007fafb8c77065: mov     %r10,0x330(%r15)
  0x00007fafb8c7706c: movabs  $0x0,%r10
  0x00007fafb8c77076: mov     %r10,0x328(%r15)
  0x00007fafb8c7707d: vzeroupper
  0x00007fafb8c77080: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c77088: je      0x7fafb8c77093
  0x00007fafb8c7708e: jmpq    0x7fafb8c5c780
  0x00007fafb8c77093: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c77097: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7709b: retq
  0x00007fafb8c7709c: vmovss  (%rsp),%xmm0
  0x00007fafb8c770a1: add     $0x8,%rsp
  0x00007fafb8c770a5: mov     0x3dd(%r15),%bl
  0x00007fafb8c770ac: movb    $0x0,0x3dd(%r15)
  0x00007fafb8c770b4: mov     0xffffffffffffffe8(%rbp),%rcx
  0x00007fafb8c770b8: mov     0x20(%rcx),%ecx
  0x00007fafb8c770bb: test    $0x20,%ecx
  0x00007fafb8c770c1: je      0x7fafb8c772ee
  0x00007fafb8c770c7: testb   $0xff,%bl
  0x00007fafb8c770ca: jne     0x7fafb8c77425
  0x00007fafb8c770d0: sub     $0x8,%rsp
  0x00007fafb8c770d4: vmovss  %xmm0,(%rsp)
  0x00007fafb8c770d9: lea     0xffffffffffffffa8(%rbp),%rsi
  0x00007fafb8c770dd: mov     0x8(%rsi),%rax
  0x00007fafb8c770e1: test    %rax,%rax
  0x00007fafb8c770e4: jne     0x7fafb8c77206
  0x00007fafb8c770ea: vmovss  (%rsp),%xmm0
  0x00007fafb8c770ef: add     $0x8,%rsp
  0x00007fafb8c770f3: callq   0x7fafb8c770fd
  0x00007fafb8c770f8: jmpq    0x7fafb8c7718f
  0x00007fafb8c770fd: lea     0x8(%rsp),%rax
  0x00007fafb8c77102: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c77106: mov     %r15,%rdi
  0x00007fafb8c77109: vzeroupper
  0x00007fafb8c7710c: mov     %rbp,0x330(%r15)
  0x00007fafb8c77113: mov     %rax,0x320(%r15)
  0x00007fafb8c7711a: test    $0xf,%esp
  0x00007fafb8c77120: je      0x7fafb8c77138
  0x00007fafb8c77126: sub     $0x8,%rsp
  0x00007fafb8c7712a: callq   0x7fafd7d826a0
  0x00007fafb8c7712f: add     $0x8,%rsp
  0x00007fafb8c77133: jmpq    0x7fafb8c7713d
  0x00007fafb8c77138: callq   0x7fafd7d826a0
  0x00007fafb8c7713d: movabs  $0x0,%r10
  0x00007fafb8c77147: mov     %r10,0x320(%r15)
  0x00007fafb8c7714e: movabs  $0x0,%r10
  0x00007fafb8c77158: mov     %r10,0x330(%r15)
  0x00007fafb8c7715f: movabs  $0x0,%r10
  0x00007fafb8c77169: mov     %r10,0x328(%r15)
  0x00007fafb8c77170: vzeroupper
  0x00007fafb8c77173: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7717b: je      0x7fafb8c77186
  0x00007fafb8c77181: jmpq    0x7fafb8c5c780
  0x00007fafb8c77186: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7718a: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7718e: retq
  0x00007fafb8c7718f: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c77194: sub     $0x80,%rsp
  0x00007fafb8c7719b: mov     %rax,0x78(%rsp)
  0x00007fafb8c771a0: mov     %rcx,0x70(%rsp)
  0x00007fafb8c771a5: mov     %rdx,0x68(%rsp)
  0x00007fafb8c771aa: mov     %rbx,0x60(%rsp)
  0x00007fafb8c771af: mov     %rbp,0x50(%rsp)
  0x00007fafb8c771b4: mov     %rsi,0x48(%rsp)
  0x00007fafb8c771b9: mov     %rdi,0x40(%rsp)
  0x00007fafb8c771be: mov     %r8,0x38(%rsp)
  0x00007fafb8c771c3: mov     %r9,0x30(%rsp)
  0x00007fafb8c771c8: mov     %r10,0x28(%rsp)
  0x00007fafb8c771cd: mov     %r11,0x20(%rsp)
  0x00007fafb8c771d2: mov     %r12,0x18(%rsp)
  0x00007fafb8c771d7: mov     %r13,0x10(%rsp)
  0x00007fafb8c771dc: mov     %r14,0x8(%rsp)
  0x00007fafb8c771e1: mov     %r15,(%rsp)
  0x00007fafb8c771e5: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c771ef: movabs  $0x7fafb8c7718f,%rsi
  0x00007fafb8c771f9: mov     %rsp,%rdx
  0x00007fafb8c771fc: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c77200: callq   0x7fafd7fdd230
  0x00007fafb8c77205: hlt
  0x00007fafb8c77206: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7720a: lea     (%rsi),%rax
  0x00007fafb8c7720d: mov     0x8(%rsi),%rcx
  0x00007fafb8c77211: movq    $0x0,0x8(%rsi)
  0x00007fafb8c77219: mov     (%rcx),%rdx
  0x00007fafb8c7721c: and     $0x7,%rdx
  0x00007fafb8c77220: cmp     $0x5,%rdx
  0x00007fafb8c77224: je      0x7fafb8c772e1
  0x00007fafb8c7722a: mov     (%rax),%rdx
  0x00007fafb8c7722d: test    %rdx,%rdx
  0x00007fafb8c77230: je      0x7fafb8c772e1
  0x00007fafb8c77236: lock cmpxchg %rdx,(%rcx)
  0x00007fafb8c7723b: je      0x7fafb8c772e1
  0x00007fafb8c77241: mov     %rcx,0x8(%rsi)
  0x00007fafb8c77245: callq   0x7fafb8c7724f
  0x00007fafb8c7724a: jmpq    0x7fafb8c772e1
  0x00007fafb8c7724f: lea     0x8(%rsp),%rax
  0x00007fafb8c77254: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c77258: mov     %r15,%rdi
  0x00007fafb8c7725b: vzeroupper
  0x00007fafb8c7725e: mov     %rbp,0x330(%r15)
  0x00007fafb8c77265: mov     %rax,0x320(%r15)
  0x00007fafb8c7726c: test    $0xf,%esp
  0x00007fafb8c77272: je      0x7fafb8c7728a
  0x00007fafb8c77278: sub     $0x8,%rsp
  0x00007fafb8c7727c: callq   0x7fafd7d82470
  0x00007fafb8c77281: add     $0x8,%rsp
  0x00007fafb8c77285: jmpq    0x7fafb8c7728f
  0x00007fafb8c7728a: callq   0x7fafd7d82470
  0x00007fafb8c7728f: movabs  $0x0,%r10
  0x00007fafb8c77299: mov     %r10,0x320(%r15)
  0x00007fafb8c772a0: movabs  $0x0,%r10
  0x00007fafb8c772aa: mov     %r10,0x330(%r15)
  0x00007fafb8c772b1: movabs  $0x0,%r10
  0x00007fafb8c772bb: mov     %r10,0x328(%r15)
  0x00007fafb8c772c2: vzeroupper
  0x00007fafb8c772c5: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c772cd: je      0x7fafb8c772d8
  0x00007fafb8c772d3: jmpq    0x7fafb8c5c780
  0x00007fafb8c772d8: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c772dc: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c772e0: retq
  0x00007fafb8c772e1: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c772e5: vmovss  (%rsp),%xmm0
  0x00007fafb8c772ea: add     $0x8,%rsp
  0x00007fafb8c772ee: mov     0xffffffffffffffb8(%rbp),%rsi
  0x00007fafb8c772f2: lea     0xffffffffffffffb8(%rbp),%rbx
  0x00007fafb8c772f6: jmpq    0x7fafb8c77420
  0x00007fafb8c772fb: callq   0x7fafb8c77305
  0x00007fafb8c77300: jmpq    0x7fafb8c77397
  0x00007fafb8c77305: lea     0x8(%rsp),%rax
  0x00007fafb8c7730a: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7730e: mov     %r15,%rdi
  0x00007fafb8c77311: vzeroupper
  0x00007fafb8c77314: mov     %rbp,0x330(%r15)
  0x00007fafb8c7731b: mov     %rax,0x320(%r15)
  0x00007fafb8c77322: test    $0xf,%esp
  0x00007fafb8c77328: je      0x7fafb8c77340
  0x00007fafb8c7732e: sub     $0x8,%rsp
  0x00007fafb8c77332: callq   0x7fafd7d826a0
  0x00007fafb8c77337: add     $0x8,%rsp
  0x00007fafb8c7733b: jmpq    0x7fafb8c77345
  0x00007fafb8c77340: callq   0x7fafd7d826a0
  0x00007fafb8c77345: movabs  $0x0,%r10
  0x00007fafb8c7734f: mov     %r10,0x320(%r15)
  0x00007fafb8c77356: movabs  $0x0,%r10
  0x00007fafb8c77360: mov     %r10,0x330(%r15)
  0x00007fafb8c77367: movabs  $0x0,%r10
  0x00007fafb8c77371: mov     %r10,0x328(%r15)
  0x00007fafb8c77378: vzeroupper
  0x00007fafb8c7737b: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c77383: je      0x7fafb8c7738e
  0x00007fafb8c77389: jmpq    0x7fafb8c5c780
  0x00007fafb8c7738e: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c77392: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c77396: retq
  0x00007fafb8c77397: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c7739c: sub     $0x80,%rsp
  0x00007fafb8c773a3: mov     %rax,0x78(%rsp)
  0x00007fafb8c773a8: mov     %rcx,0x70(%rsp)
  0x00007fafb8c773ad: mov     %rdx,0x68(%rsp)
  0x00007fafb8c773b2: mov     %rbx,0x60(%rsp)
  0x00007fafb8c773b7: mov     %rbp,0x50(%rsp)
  0x00007fafb8c773bc: mov     %rsi,0x48(%rsp)
  0x00007fafb8c773c1: mov     %rdi,0x40(%rsp)
  0x00007fafb8c773c6: mov     %r8,0x38(%rsp)
  0x00007fafb8c773cb: mov     %r9,0x30(%rsp)
  0x00007fafb8c773d0: mov     %r10,0x28(%rsp)
  0x00007fafb8c773d5: mov     %r11,0x20(%rsp)
  0x00007fafb8c773da: mov     %r12,0x18(%rsp)
  0x00007fafb8c773df: mov     %r13,0x10(%rsp)
  0x00007fafb8c773e4: mov     %r14,0x8(%rsp)
  0x00007fafb8c773e9: mov     %r15,(%rsp)
  0x00007fafb8c773ed: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c773f7: movabs  $0x7fafb8c77397,%rsi
  0x00007fafb8c77401: mov     %rsp,%rdx
  0x00007fafb8c77404: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c77408: callq   0x7fafd7fdd230
  0x00007fafb8c7740d: hlt
  0x00007fafb8c7740e: cmpq    $0x0,0x8(%rsi)
  0x00007fafb8c77416: jne     0x7fafb8c772fb
  0x00007fafb8c7741c: add     $0x10,%rsi
  0x00007fafb8c77420: cmp     %rbx,%rsi
  0x00007fafb8c77423: jne     0x7fafb8c7740e
  0x00007fafb8c77425: cmpb    $0x0,0x1fd0086b(%rip)
  0x00007fafb8c7742c: je      0x7fafb8c7746e
  0x00007fafb8c77432: sub     $0x8,%rsp
  0x00007fafb8c77436: vmovss  %xmm0,(%rsp)
  0x00007fafb8c7743b: mov     0xffffffffffffffe8(%rbp),%rsi
  0x00007fafb8c7743f: mov     %r15,%rdi
  0x00007fafb8c77442: test    $0xf,%esp
  0x00007fafb8c77448: je      0x7fafb8c77460
  0x00007fafb8c7744e: sub     $0x8,%rsp
  0x00007fafb8c77452: callq   0x7fafd81e7140
  0x00007fafb8c77457: add     $0x8,%rsp
  0x00007fafb8c7745b: jmpq    0x7fafb8c77465
  0x00007fafb8c77460: callq   0x7fafd81e7140
  0x00007fafb8c77465: vmovss  (%rsp),%xmm0
  0x00007fafb8c7746a: add     $0x8,%rsp
  0x00007fafb8c7746e: mov     0xfffffffffffffff8(%rbp),%rbx
  0x00007fafb8c77472: cmpl    $0x3,0x408(%r15)
  0x00007fafb8c7747d: je      0x7fafb8c775c9
  0x00007fafb8c77483: cmp     0x418(%r15),%rbx
  0x00007fafb8c7748a: jle     0x7fafb8c775c9
  0x00007fafb8c77490: mov     %r15,%rdi
  0x00007fafb8c77493: test    $0xf,%esp
  0x00007fafb8c77499: je      0x7fafb8c774b1
  0x00007fafb8c7749f: sub     $0x8,%rsp
  0x00007fafb8c774a3: callq   0x7fafd81ee2f0
  0x00007fafb8c774a8: add     $0x8,%rsp
  0x00007fafb8c774ac: jmpq    0x7fafb8c774b6
  0x00007fafb8c774b1: callq   0x7fafd81ee2f0
  0x00007fafb8c774b6: callq   0x7fafb8c774c0
  0x00007fafb8c774bb: jmpq    0x7fafb8c77552
  0x00007fafb8c774c0: lea     0x8(%rsp),%rax
  0x00007fafb8c774c5: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c774c9: mov     %r15,%rdi
  0x00007fafb8c774cc: vzeroupper
  0x00007fafb8c774cf: mov     %rbp,0x330(%r15)
  0x00007fafb8c774d6: mov     %rax,0x320(%r15)
  0x00007fafb8c774dd: test    $0xf,%esp
  0x00007fafb8c774e3: je      0x7fafb8c774fb
  0x00007fafb8c774e9: sub     $0x8,%rsp
  0x00007fafb8c774ed: callq   0x7fafd7d7ef30
  0x00007fafb8c774f2: add     $0x8,%rsp
  0x00007fafb8c774f6: jmpq    0x7fafb8c77500
  0x00007fafb8c774fb: callq   0x7fafd7d7ef30
  0x00007fafb8c77500: movabs  $0x0,%r10
  0x00007fafb8c7750a: mov     %r10,0x320(%r15)
  0x00007fafb8c77511: movabs  $0x0,%r10
  0x00007fafb8c7751b: mov     %r10,0x330(%r15)
  0x00007fafb8c77522: movabs  $0x0,%r10
  0x00007fafb8c7752c: mov     %r10,0x328(%r15)
  0x00007fafb8c77533: vzeroupper
  0x00007fafb8c77536: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7753e: je      0x7fafb8c77549
  0x00007fafb8c77544: jmpq    0x7fafb8c5c780
  0x00007fafb8c77549: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7754d: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c77551: retq
  0x00007fafb8c77552: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c77557: sub     $0x80,%rsp
  0x00007fafb8c7755e: mov     %rax,0x78(%rsp)
  0x00007fafb8c77563: mov     %rcx,0x70(%rsp)
  0x00007fafb8c77568: mov     %rdx,0x68(%rsp)
  0x00007fafb8c7756d: mov     %rbx,0x60(%rsp)
  0x00007fafb8c77572: mov     %rbp,0x50(%rsp)
  0x00007fafb8c77577: mov     %rsi,0x48(%rsp)
  0x00007fafb8c7757c: mov     %rdi,0x40(%rsp)
  0x00007fafb8c77581: mov     %r8,0x38(%rsp)
  0x00007fafb8c77586: mov     %r9,0x30(%rsp)
  0x00007fafb8c7758b: mov     %r10,0x28(%rsp)
  0x00007fafb8c77590: mov     %r11,0x20(%rsp)
  0x00007fafb8c77595: mov     %r12,0x18(%rsp)
  0x00007fafb8c7759a: mov     %r13,0x10(%rsp)
  0x00007fafb8c7759f: mov     %r14,0x8(%rsp)
  0x00007fafb8c775a4: mov     %r15,(%rsp)
  0x00007fafb8c775a8: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c775b2: movabs  $0x7fafb8c77552,%rsi
  0x00007fafb8c775bc: mov     %rsp,%rdx
  0x00007fafb8c775bf: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c775c3: callq   0x7fafd7fdd230
  0x00007fafb8c775c8: hlt
  0x00007fafb8c775c9: leave
  0x00007fafb8c775ca: pop     %r13
  0x00007fafb8c775cc: mov     %rbx,%rsp
  0x00007fafb8c775cf: jmpq    %r13
  0x00007fafb8c775d2: nopw    0x0(%rax,%rax)
  0x00007fafb8c775d8: add     %al,(%rax)
  0x00007fafb8c775da: add     %al,(%rax)
  0x00007fafb8c775dc: add     %al,(%rax)
  0x00007fafb8c775de: add     %al,(%rax)

----------------------------------------------------------------------
dreturn  175 dreturn  [0x00007fafb8c77600, 0x00007fafb8c77c00]  1536 bytes

Argument 0 is unknown.RIP: 0x7fafb8c77600 Code size: 0x00000600
  0x00007fafb8c77600: vmovsd  (%rsp),%xmm0
  0x00007fafb8c77605: add     $0x10,%rsp
  0x00007fafb8c77609: testb   $0x8,0x108(%r15)
  0x00007fafb8c77611: je      0x7fafb8c776c5
  0x00007fafb8c77617: sub     $0x10,%rsp
  0x00007fafb8c7761b: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c77620: callq   0x7fafb8c7762a
  0x00007fafb8c77625: jmpq    0x7fafb8c776bc
  0x00007fafb8c7762a: lea     0x8(%rsp),%rax
  0x00007fafb8c7762f: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c77633: mov     %r15,%rdi
  0x00007fafb8c77636: vzeroupper
  0x00007fafb8c77639: mov     %rbp,0x330(%r15)
  0x00007fafb8c77640: mov     %rax,0x320(%r15)
  0x00007fafb8c77647: test    $0xf,%esp
  0x00007fafb8c7764d: je      0x7fafb8c77665
  0x00007fafb8c77653: sub     $0x8,%rsp
  0x00007fafb8c77657: callq   0x7fafd7d855e0
  0x00007fafb8c7765c: add     $0x8,%rsp
  0x00007fafb8c77660: jmpq    0x7fafb8c7766a
  0x00007fafb8c77665: callq   0x7fafd7d855e0
  0x00007fafb8c7766a: movabs  $0x0,%r10
  0x00007fafb8c77674: mov     %r10,0x320(%r15)
  0x00007fafb8c7767b: movabs  $0x0,%r10
  0x00007fafb8c77685: mov     %r10,0x330(%r15)
  0x00007fafb8c7768c: movabs  $0x0,%r10
  0x00007fafb8c77696: mov     %r10,0x328(%r15)
  0x00007fafb8c7769d: vzeroupper
  0x00007fafb8c776a0: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c776a8: je      0x7fafb8c776b3
  0x00007fafb8c776ae: jmpq    0x7fafb8c5c780
  0x00007fafb8c776b3: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c776b7: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c776bb: retq
  0x00007fafb8c776bc: vmovsd  (%rsp),%xmm0
  0x00007fafb8c776c1: add     $0x10,%rsp
  0x00007fafb8c776c5: mov     0x3dd(%r15),%bl
  0x00007fafb8c776cc: movb    $0x0,0x3dd(%r15)
  0x00007fafb8c776d4: mov     0xffffffffffffffe8(%rbp),%rcx
  0x00007fafb8c776d8: mov     0x20(%rcx),%ecx
  0x00007fafb8c776db: test    $0x20,%ecx
  0x00007fafb8c776e1: je      0x7fafb8c7790e
  0x00007fafb8c776e7: testb   $0xff,%bl
  0x00007fafb8c776ea: jne     0x7fafb8c77a45
  0x00007fafb8c776f0: sub     $0x10,%rsp
  0x00007fafb8c776f4: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c776f9: lea     0xffffffffffffffa8(%rbp),%rsi
  0x00007fafb8c776fd: mov     0x8(%rsi),%rax
  0x00007fafb8c77701: test    %rax,%rax
  0x00007fafb8c77704: jne     0x7fafb8c77826
  0x00007fafb8c7770a: vmovsd  (%rsp),%xmm0
  0x00007fafb8c7770f: add     $0x10,%rsp
  0x00007fafb8c77713: callq   0x7fafb8c7771d
  0x00007fafb8c77718: jmpq    0x7fafb8c777af
  0x00007fafb8c7771d: lea     0x8(%rsp),%rax
  0x00007fafb8c77722: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c77726: mov     %r15,%rdi
  0x00007fafb8c77729: vzeroupper
  0x00007fafb8c7772c: mov     %rbp,0x330(%r15)
  0x00007fafb8c77733: mov     %rax,0x320(%r15)
  0x00007fafb8c7773a: test    $0xf,%esp
  0x00007fafb8c77740: je      0x7fafb8c77758
  0x00007fafb8c77746: sub     $0x8,%rsp
  0x00007fafb8c7774a: callq   0x7fafd7d826a0
  0x00007fafb8c7774f: add     $0x8,%rsp
  0x00007fafb8c77753: jmpq    0x7fafb8c7775d
  0x00007fafb8c77758: callq   0x7fafd7d826a0
  0x00007fafb8c7775d: movabs  $0x0,%r10
  0x00007fafb8c77767: mov     %r10,0x320(%r15)
  0x00007fafb8c7776e: movabs  $0x0,%r10
  0x00007fafb8c77778: mov     %r10,0x330(%r15)
  0x00007fafb8c7777f: movabs  $0x0,%r10
  0x00007fafb8c77789: mov     %r10,0x328(%r15)
  0x00007fafb8c77790: vzeroupper
  0x00007fafb8c77793: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7779b: je      0x7fafb8c777a6
  0x00007fafb8c777a1: jmpq    0x7fafb8c5c780
  0x00007fafb8c777a6: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c777aa: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c777ae: retq
  0x00007fafb8c777af: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c777b4: sub     $0x80,%rsp
  0x00007fafb8c777bb: mov     %rax,0x78(%rsp)
  0x00007fafb8c777c0: mov     %rcx,0x70(%rsp)
  0x00007fafb8c777c5: mov     %rdx,0x68(%rsp)
  0x00007fafb8c777ca: mov     %rbx,0x60(%rsp)
  0x00007fafb8c777cf: mov     %rbp,0x50(%rsp)
  0x00007fafb8c777d4: mov     %rsi,0x48(%rsp)
  0x00007fafb8c777d9: mov     %rdi,0x40(%rsp)
  0x00007fafb8c777de: mov     %r8,0x38(%rsp)
  0x00007fafb8c777e3: mov     %r9,0x30(%rsp)
  0x00007fafb8c777e8: mov     %r10,0x28(%rsp)
  0x00007fafb8c777ed: mov     %r11,0x20(%rsp)
  0x00007fafb8c777f2: mov     %r12,0x18(%rsp)
  0x00007fafb8c777f7: mov     %r13,0x10(%rsp)
  0x00007fafb8c777fc: mov     %r14,0x8(%rsp)
  0x00007fafb8c77801: mov     %r15,(%rsp)
  0x00007fafb8c77805: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c7780f: movabs  $0x7fafb8c777af,%rsi
  0x00007fafb8c77819: mov     %rsp,%rdx
  0x00007fafb8c7781c: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c77820: callq   0x7fafd7fdd230
  0x00007fafb8c77825: hlt
  0x00007fafb8c77826: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7782a: lea     (%rsi),%rax
  0x00007fafb8c7782d: mov     0x8(%rsi),%rcx
  0x00007fafb8c77831: movq    $0x0,0x8(%rsi)
  0x00007fafb8c77839: mov     (%rcx),%rdx
  0x00007fafb8c7783c: and     $0x7,%rdx
  0x00007fafb8c77840: cmp     $0x5,%rdx
  0x00007fafb8c77844: je      0x7fafb8c77901
  0x00007fafb8c7784a: mov     (%rax),%rdx
  0x00007fafb8c7784d: test    %rdx,%rdx
  0x00007fafb8c77850: je      0x7fafb8c77901
  0x00007fafb8c77856: lock cmpxchg %rdx,(%rcx)
  0x00007fafb8c7785b: je      0x7fafb8c77901
  0x00007fafb8c77861: mov     %rcx,0x8(%rsi)
  0x00007fafb8c77865: callq   0x7fafb8c7786f
  0x00007fafb8c7786a: jmpq    0x7fafb8c77901
  0x00007fafb8c7786f: lea     0x8(%rsp),%rax
  0x00007fafb8c77874: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c77878: mov     %r15,%rdi
  0x00007fafb8c7787b: vzeroupper
  0x00007fafb8c7787e: mov     %rbp,0x330(%r15)
  0x00007fafb8c77885: mov     %rax,0x320(%r15)
  0x00007fafb8c7788c: test    $0xf,%esp
  0x00007fafb8c77892: je      0x7fafb8c778aa
  0x00007fafb8c77898: sub     $0x8,%rsp
  0x00007fafb8c7789c: callq   0x7fafd7d82470
  0x00007fafb8c778a1: add     $0x8,%rsp
  0x00007fafb8c778a5: jmpq    0x7fafb8c778af
  0x00007fafb8c778aa: callq   0x7fafd7d82470
  0x00007fafb8c778af: movabs  $0x0,%r10
  0x00007fafb8c778b9: mov     %r10,0x320(%r15)
  0x00007fafb8c778c0: movabs  $0x0,%r10
  0x00007fafb8c778ca: mov     %r10,0x330(%r15)
  0x00007fafb8c778d1: movabs  $0x0,%r10
  0x00007fafb8c778db: mov     %r10,0x328(%r15)
  0x00007fafb8c778e2: vzeroupper
  0x00007fafb8c778e5: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c778ed: je      0x7fafb8c778f8
  0x00007fafb8c778f3: jmpq    0x7fafb8c5c780
  0x00007fafb8c778f8: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c778fc: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c77900: retq
  0x00007fafb8c77901: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c77905: vmovsd  (%rsp),%xmm0
  0x00007fafb8c7790a: add     $0x10,%rsp
  0x00007fafb8c7790e: mov     0xffffffffffffffb8(%rbp),%rsi
  0x00007fafb8c77912: lea     0xffffffffffffffb8(%rbp),%rbx
  0x00007fafb8c77916: jmpq    0x7fafb8c77a40
  0x00007fafb8c7791b: callq   0x7fafb8c77925
  0x00007fafb8c77920: jmpq    0x7fafb8c779b7
  0x00007fafb8c77925: lea     0x8(%rsp),%rax
  0x00007fafb8c7792a: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7792e: mov     %r15,%rdi
  0x00007fafb8c77931: vzeroupper
  0x00007fafb8c77934: mov     %rbp,0x330(%r15)
  0x00007fafb8c7793b: mov     %rax,0x320(%r15)
  0x00007fafb8c77942: test    $0xf,%esp
  0x00007fafb8c77948: je      0x7fafb8c77960
  0x00007fafb8c7794e: sub     $0x8,%rsp
  0x00007fafb8c77952: callq   0x7fafd7d826a0
  0x00007fafb8c77957: add     $0x8,%rsp
  0x00007fafb8c7795b: jmpq    0x7fafb8c77965
  0x00007fafb8c77960: callq   0x7fafd7d826a0
  0x00007fafb8c77965: movabs  $0x0,%r10
  0x00007fafb8c7796f: mov     %r10,0x320(%r15)
  0x00007fafb8c77976: movabs  $0x0,%r10
  0x00007fafb8c77980: mov     %r10,0x330(%r15)
  0x00007fafb8c77987: movabs  $0x0,%r10
  0x00007fafb8c77991: mov     %r10,0x328(%r15)
  0x00007fafb8c77998: vzeroupper
  0x00007fafb8c7799b: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c779a3: je      0x7fafb8c779ae
  0x00007fafb8c779a9: jmpq    0x7fafb8c5c780
  0x00007fafb8c779ae: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c779b2: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c779b6: retq
  0x00007fafb8c779b7: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c779bc: sub     $0x80,%rsp
  0x00007fafb8c779c3: mov     %rax,0x78(%rsp)
  0x00007fafb8c779c8: mov     %rcx,0x70(%rsp)
  0x00007fafb8c779cd: mov     %rdx,0x68(%rsp)
  0x00007fafb8c779d2: mov     %rbx,0x60(%rsp)
  0x00007fafb8c779d7: mov     %rbp,0x50(%rsp)
  0x00007fafb8c779dc: mov     %rsi,0x48(%rsp)
  0x00007fafb8c779e1: mov     %rdi,0x40(%rsp)
  0x00007fafb8c779e6: mov     %r8,0x38(%rsp)
  0x00007fafb8c779eb: mov     %r9,0x30(%rsp)
  0x00007fafb8c779f0: mov     %r10,0x28(%rsp)
  0x00007fafb8c779f5: mov     %r11,0x20(%rsp)
  0x00007fafb8c779fa: mov     %r12,0x18(%rsp)
  0x00007fafb8c779ff: mov     %r13,0x10(%rsp)
  0x00007fafb8c77a04: mov     %r14,0x8(%rsp)
  0x00007fafb8c77a09: mov     %r15,(%rsp)
  0x00007fafb8c77a0d: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c77a17: movabs  $0x7fafb8c779b7,%rsi
  0x00007fafb8c77a21: mov     %rsp,%rdx
  0x00007fafb8c77a24: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c77a28: callq   0x7fafd7fdd230
  0x00007fafb8c77a2d: hlt
  0x00007fafb8c77a2e: cmpq    $0x0,0x8(%rsi)
  0x00007fafb8c77a36: jne     0x7fafb8c7791b
  0x00007fafb8c77a3c: add     $0x10,%rsi
  0x00007fafb8c77a40: cmp     %rbx,%rsi
  0x00007fafb8c77a43: jne     0x7fafb8c77a2e
  0x00007fafb8c77a45: cmpb    $0x0,0x1fd0024b(%rip)
  0x00007fafb8c77a4c: je      0x7fafb8c77a8e
  0x00007fafb8c77a52: sub     $0x10,%rsp
  0x00007fafb8c77a56: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c77a5b: mov     0xffffffffffffffe8(%rbp),%rsi
  0x00007fafb8c77a5f: mov     %r15,%rdi
  0x00007fafb8c77a62: test    $0xf,%esp
  0x00007fafb8c77a68: je      0x7fafb8c77a80
  0x00007fafb8c77a6e: sub     $0x8,%rsp
  0x00007fafb8c77a72: callq   0x7fafd81e7140
  0x00007fafb8c77a77: add     $0x8,%rsp
  0x00007fafb8c77a7b: jmpq    0x7fafb8c77a85
  0x00007fafb8c77a80: callq   0x7fafd81e7140
  0x00007fafb8c77a85: vmovsd  (%rsp),%xmm0
  0x00007fafb8c77a8a: add     $0x10,%rsp
  0x00007fafb8c77a8e: mov     0xfffffffffffffff8(%rbp),%rbx
  0x00007fafb8c77a92: cmpl    $0x3,0x408(%r15)
  0x00007fafb8c77a9d: je      0x7fafb8c77be9
  0x00007fafb8c77aa3: cmp     0x418(%r15),%rbx
  0x00007fafb8c77aaa: jle     0x7fafb8c77be9
  0x00007fafb8c77ab0: mov     %r15,%rdi
  0x00007fafb8c77ab3: test    $0xf,%esp
  0x00007fafb8c77ab9: je      0x7fafb8c77ad1
  0x00007fafb8c77abf: sub     $0x8,%rsp
  0x00007fafb8c77ac3: callq   0x7fafd81ee2f0
  0x00007fafb8c77ac8: add     $0x8,%rsp
  0x00007fafb8c77acc: jmpq    0x7fafb8c77ad6
  0x00007fafb8c77ad1: callq   0x7fafd81ee2f0
  0x00007fafb8c77ad6: callq   0x7fafb8c77ae0
  0x00007fafb8c77adb: jmpq    0x7fafb8c77b72
  0x00007fafb8c77ae0: lea     0x8(%rsp),%rax
  0x00007fafb8c77ae5: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c77ae9: mov     %r15,%rdi
  0x00007fafb8c77aec: vzeroupper
  0x00007fafb8c77aef: mov     %rbp,0x330(%r15)
  0x00007fafb8c77af6: mov     %rax,0x320(%r15)
  0x00007fafb8c77afd: test    $0xf,%esp
  0x00007fafb8c77b03: je      0x7fafb8c77b1b
  0x00007fafb8c77b09: sub     $0x8,%rsp
  0x00007fafb8c77b0d: callq   0x7fafd7d7ef30
  0x00007fafb8c77b12: add     $0x8,%rsp
  0x00007fafb8c77b16: jmpq    0x7fafb8c77b20
  0x00007fafb8c77b1b: callq   0x7fafd7d7ef30
  0x00007fafb8c77b20: movabs  $0x0,%r10
  0x00007fafb8c77b2a: mov     %r10,0x320(%r15)
  0x00007fafb8c77b31: movabs  $0x0,%r10
  0x00007fafb8c77b3b: mov     %r10,0x330(%r15)
  0x00007fafb8c77b42: movabs  $0x0,%r10
  0x00007fafb8c77b4c: mov     %r10,0x328(%r15)
  0x00007fafb8c77b53: vzeroupper
  0x00007fafb8c77b56: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c77b5e: je      0x7fafb8c77b69
  0x00007fafb8c77b64: jmpq    0x7fafb8c5c780
  0x00007fafb8c77b69: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c77b6d: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c77b71: retq
  0x00007fafb8c77b72: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c77b77: sub     $0x80,%rsp
  0x00007fafb8c77b7e: mov     %rax,0x78(%rsp)
  0x00007fafb8c77b83: mov     %rcx,0x70(%rsp)
  0x00007fafb8c77b88: mov     %rdx,0x68(%rsp)
  0x00007fafb8c77b8d: mov     %rbx,0x60(%rsp)
  0x00007fafb8c77b92: mov     %rbp,0x50(%rsp)
  0x00007fafb8c77b97: mov     %rsi,0x48(%rsp)
  0x00007fafb8c77b9c: mov     %rdi,0x40(%rsp)
  0x00007fafb8c77ba1: mov     %r8,0x38(%rsp)
  0x00007fafb8c77ba6: mov     %r9,0x30(%rsp)
  0x00007fafb8c77bab: mov     %r10,0x28(%rsp)
  0x00007fafb8c77bb0: mov     %r11,0x20(%rsp)
  0x00007fafb8c77bb5: mov     %r12,0x18(%rsp)
  0x00007fafb8c77bba: mov     %r13,0x10(%rsp)
  0x00007fafb8c77bbf: mov     %r14,0x8(%rsp)
  0x00007fafb8c77bc4: mov     %r15,(%rsp)
  0x00007fafb8c77bc8: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c77bd2: movabs  $0x7fafb8c77b72,%rsi
  0x00007fafb8c77bdc: mov     %rsp,%rdx
  0x00007fafb8c77bdf: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c77be3: callq   0x7fafd7fdd230
  0x00007fafb8c77be8: hlt
  0x00007fafb8c77be9: leave
  0x00007fafb8c77bea: pop     %r13
  0x00007fafb8c77bec: mov     %rbx,%rsp
  0x00007fafb8c77bef: jmpq    %r13
  0x00007fafb8c77bf2: nopw    0x0(%rax,%rax)
  0x00007fafb8c77bf8: add     %al,(%rax)
  0x00007fafb8c77bfa: add     %al,(%rax)
  0x00007fafb8c77bfc: add     %al,(%rax)
  0x00007fafb8c77bfe: add     %al,(%rax)

----------------------------------------------------------------------
areturn  176 areturn  [0x00007fafb8c77c20, 0x00007fafb8c781e0]  1472 bytes

Argument 0 is unknown.RIP: 0x7fafb8c77c20 Code size: 0x000005c0
  0x00007fafb8c77c20: pop     %rax
  0x00007fafb8c77c21: testb   $0x8,0x108(%r15)
  0x00007fafb8c77c29: je      0x7fafb8c77ccd
  0x00007fafb8c77c2f: push    %rax
  0x00007fafb8c77c30: callq   0x7fafb8c77c3a
  0x00007fafb8c77c35: jmpq    0x7fafb8c77ccc
  0x00007fafb8c77c3a: lea     0x8(%rsp),%rax
  0x00007fafb8c77c3f: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c77c43: mov     %r15,%rdi
  0x00007fafb8c77c46: vzeroupper
  0x00007fafb8c77c49: mov     %rbp,0x330(%r15)
  0x00007fafb8c77c50: mov     %rax,0x320(%r15)
  0x00007fafb8c77c57: test    $0xf,%esp
  0x00007fafb8c77c5d: je      0x7fafb8c77c75
  0x00007fafb8c77c63: sub     $0x8,%rsp
  0x00007fafb8c77c67: callq   0x7fafd7d855e0
  0x00007fafb8c77c6c: add     $0x8,%rsp
  0x00007fafb8c77c70: jmpq    0x7fafb8c77c7a
  0x00007fafb8c77c75: callq   0x7fafd7d855e0
  0x00007fafb8c77c7a: movabs  $0x0,%r10
  0x00007fafb8c77c84: mov     %r10,0x320(%r15)
  0x00007fafb8c77c8b: movabs  $0x0,%r10
  0x00007fafb8c77c95: mov     %r10,0x330(%r15)
  0x00007fafb8c77c9c: movabs  $0x0,%r10
  0x00007fafb8c77ca6: mov     %r10,0x328(%r15)
  0x00007fafb8c77cad: vzeroupper
  0x00007fafb8c77cb0: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c77cb8: je      0x7fafb8c77cc3
  0x00007fafb8c77cbe: jmpq    0x7fafb8c5c780
  0x00007fafb8c77cc3: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c77cc7: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c77ccb: retq
  0x00007fafb8c77ccc: pop     %rax
  0x00007fafb8c77ccd: mov     0x3dd(%r15),%bl
  0x00007fafb8c77cd4: movb    $0x0,0x3dd(%r15)
  0x00007fafb8c77cdc: mov     0xffffffffffffffe8(%rbp),%rcx
  0x00007fafb8c77ce0: mov     0x20(%rcx),%ecx
  0x00007fafb8c77ce3: test    $0x20,%ecx
  0x00007fafb8c77ce9: je      0x7fafb8c77efe
  0x00007fafb8c77cef: testb   $0xff,%bl
  0x00007fafb8c77cf2: jne     0x7fafb8c78035
  0x00007fafb8c77cf8: push    %rax
  0x00007fafb8c77cf9: lea     0xffffffffffffffa8(%rbp),%rsi
  0x00007fafb8c77cfd: mov     0x8(%rsi),%rax
  0x00007fafb8c77d01: test    %rax,%rax
  0x00007fafb8c77d04: jne     0x7fafb8c77e1e
  0x00007fafb8c77d0a: pop     %rax
  0x00007fafb8c77d0b: callq   0x7fafb8c77d15
  0x00007fafb8c77d10: jmpq    0x7fafb8c77da7
  0x00007fafb8c77d15: lea     0x8(%rsp),%rax
  0x00007fafb8c77d1a: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c77d1e: mov     %r15,%rdi
  0x00007fafb8c77d21: vzeroupper
  0x00007fafb8c77d24: mov     %rbp,0x330(%r15)
  0x00007fafb8c77d2b: mov     %rax,0x320(%r15)
  0x00007fafb8c77d32: test    $0xf,%esp
  0x00007fafb8c77d38: je      0x7fafb8c77d50
  0x00007fafb8c77d3e: sub     $0x8,%rsp
  0x00007fafb8c77d42: callq   0x7fafd7d826a0
  0x00007fafb8c77d47: add     $0x8,%rsp
  0x00007fafb8c77d4b: jmpq    0x7fafb8c77d55
  0x00007fafb8c77d50: callq   0x7fafd7d826a0
  0x00007fafb8c77d55: movabs  $0x0,%r10
  0x00007fafb8c77d5f: mov     %r10,0x320(%r15)
  0x00007fafb8c77d66: movabs  $0x0,%r10
  0x00007fafb8c77d70: mov     %r10,0x330(%r15)
  0x00007fafb8c77d77: movabs  $0x0,%r10
  0x00007fafb8c77d81: mov     %r10,0x328(%r15)
  0x00007fafb8c77d88: vzeroupper
  0x00007fafb8c77d8b: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c77d93: je      0x7fafb8c77d9e
  0x00007fafb8c77d99: jmpq    0x7fafb8c5c780
  0x00007fafb8c77d9e: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c77da2: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c77da6: retq
  0x00007fafb8c77da7: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c77dac: sub     $0x80,%rsp
  0x00007fafb8c77db3: mov     %rax,0x78(%rsp)
  0x00007fafb8c77db8: mov     %rcx,0x70(%rsp)
  0x00007fafb8c77dbd: mov     %rdx,0x68(%rsp)
  0x00007fafb8c77dc2: mov     %rbx,0x60(%rsp)
  0x00007fafb8c77dc7: mov     %rbp,0x50(%rsp)
  0x00007fafb8c77dcc: mov     %rsi,0x48(%rsp)
  0x00007fafb8c77dd1: mov     %rdi,0x40(%rsp)
  0x00007fafb8c77dd6: mov     %r8,0x38(%rsp)
  0x00007fafb8c77ddb: mov     %r9,0x30(%rsp)
  0x00007fafb8c77de0: mov     %r10,0x28(%rsp)
  0x00007fafb8c77de5: mov     %r11,0x20(%rsp)
  0x00007fafb8c77dea: mov     %r12,0x18(%rsp)
  0x00007fafb8c77def: mov     %r13,0x10(%rsp)
  0x00007fafb8c77df4: mov     %r14,0x8(%rsp)
  0x00007fafb8c77df9: mov     %r15,(%rsp)
  0x00007fafb8c77dfd: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c77e07: movabs  $0x7fafb8c77da7,%rsi
  0x00007fafb8c77e11: mov     %rsp,%rdx
  0x00007fafb8c77e14: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c77e18: callq   0x7fafd7fdd230
  0x00007fafb8c77e1d: hlt
  0x00007fafb8c77e1e: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c77e22: lea     (%rsi),%rax
  0x00007fafb8c77e25: mov     0x8(%rsi),%rcx
  0x00007fafb8c77e29: movq    $0x0,0x8(%rsi)
  0x00007fafb8c77e31: mov     (%rcx),%rdx
  0x00007fafb8c77e34: and     $0x7,%rdx
  0x00007fafb8c77e38: cmp     $0x5,%rdx
  0x00007fafb8c77e3c: je      0x7fafb8c77ef9
  0x00007fafb8c77e42: mov     (%rax),%rdx
  0x00007fafb8c77e45: test    %rdx,%rdx
  0x00007fafb8c77e48: je      0x7fafb8c77ef9
  0x00007fafb8c77e4e: lock cmpxchg %rdx,(%rcx)
  0x00007fafb8c77e53: je      0x7fafb8c77ef9
  0x00007fafb8c77e59: mov     %rcx,0x8(%rsi)
  0x00007fafb8c77e5d: callq   0x7fafb8c77e67
  0x00007fafb8c77e62: jmpq    0x7fafb8c77ef9
  0x00007fafb8c77e67: lea     0x8(%rsp),%rax
  0x00007fafb8c77e6c: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c77e70: mov     %r15,%rdi
  0x00007fafb8c77e73: vzeroupper
  0x00007fafb8c77e76: mov     %rbp,0x330(%r15)
  0x00007fafb8c77e7d: mov     %rax,0x320(%r15)
  0x00007fafb8c77e84: test    $0xf,%esp
  0x00007fafb8c77e8a: je      0x7fafb8c77ea2
  0x00007fafb8c77e90: sub     $0x8,%rsp
  0x00007fafb8c77e94: callq   0x7fafd7d82470
  0x00007fafb8c77e99: add     $0x8,%rsp
  0x00007fafb8c77e9d: jmpq    0x7fafb8c77ea7
  0x00007fafb8c77ea2: callq   0x7fafd7d82470
  0x00007fafb8c77ea7: movabs  $0x0,%r10
  0x00007fafb8c77eb1: mov     %r10,0x320(%r15)
  0x00007fafb8c77eb8: movabs  $0x0,%r10
  0x00007fafb8c77ec2: mov     %r10,0x330(%r15)
  0x00007fafb8c77ec9: movabs  $0x0,%r10
  0x00007fafb8c77ed3: mov     %r10,0x328(%r15)
  0x00007fafb8c77eda: vzeroupper
  0x00007fafb8c77edd: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c77ee5: je      0x7fafb8c77ef0
  0x00007fafb8c77eeb: jmpq    0x7fafb8c5c780
  0x00007fafb8c77ef0: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c77ef4: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c77ef8: retq
  0x00007fafb8c77ef9: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c77efd: pop     %rax
  0x00007fafb8c77efe: mov     0xffffffffffffffb8(%rbp),%rsi
  0x00007fafb8c77f02: lea     0xffffffffffffffb8(%rbp),%rbx
  0x00007fafb8c77f06: jmpq    0x7fafb8c78030
  0x00007fafb8c77f0b: callq   0x7fafb8c77f15
  0x00007fafb8c77f10: jmpq    0x7fafb8c77fa7
  0x00007fafb8c77f15: lea     0x8(%rsp),%rax
  0x00007fafb8c77f1a: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c77f1e: mov     %r15,%rdi
  0x00007fafb8c77f21: vzeroupper
  0x00007fafb8c77f24: mov     %rbp,0x330(%r15)
  0x00007fafb8c77f2b: mov     %rax,0x320(%r15)
  0x00007fafb8c77f32: test    $0xf,%esp
  0x00007fafb8c77f38: je      0x7fafb8c77f50
  0x00007fafb8c77f3e: sub     $0x8,%rsp
  0x00007fafb8c77f42: callq   0x7fafd7d826a0
  0x00007fafb8c77f47: add     $0x8,%rsp
  0x00007fafb8c77f4b: jmpq    0x7fafb8c77f55
  0x00007fafb8c77f50: callq   0x7fafd7d826a0
  0x00007fafb8c77f55: movabs  $0x0,%r10
  0x00007fafb8c77f5f: mov     %r10,0x320(%r15)
  0x00007fafb8c77f66: movabs  $0x0,%r10
  0x00007fafb8c77f70: mov     %r10,0x330(%r15)
  0x00007fafb8c77f77: movabs  $0x0,%r10
  0x00007fafb8c77f81: mov     %r10,0x328(%r15)
  0x00007fafb8c77f88: vzeroupper
  0x00007fafb8c77f8b: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c77f93: je      0x7fafb8c77f9e
  0x00007fafb8c77f99: jmpq    0x7fafb8c5c780
  0x00007fafb8c77f9e: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c77fa2: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c77fa6: retq
  0x00007fafb8c77fa7: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c77fac: sub     $0x80,%rsp
  0x00007fafb8c77fb3: mov     %rax,0x78(%rsp)
  0x00007fafb8c77fb8: mov     %rcx,0x70(%rsp)
  0x00007fafb8c77fbd: mov     %rdx,0x68(%rsp)
  0x00007fafb8c77fc2: mov     %rbx,0x60(%rsp)
  0x00007fafb8c77fc7: mov     %rbp,0x50(%rsp)
  0x00007fafb8c77fcc: mov     %rsi,0x48(%rsp)
  0x00007fafb8c77fd1: mov     %rdi,0x40(%rsp)
  0x00007fafb8c77fd6: mov     %r8,0x38(%rsp)
  0x00007fafb8c77fdb: mov     %r9,0x30(%rsp)
  0x00007fafb8c77fe0: mov     %r10,0x28(%rsp)
  0x00007fafb8c77fe5: mov     %r11,0x20(%rsp)
  0x00007fafb8c77fea: mov     %r12,0x18(%rsp)
  0x00007fafb8c77fef: mov     %r13,0x10(%rsp)
  0x00007fafb8c77ff4: mov     %r14,0x8(%rsp)
  0x00007fafb8c77ff9: mov     %r15,(%rsp)
  0x00007fafb8c77ffd: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c78007: movabs  $0x7fafb8c77fa7,%rsi
  0x00007fafb8c78011: mov     %rsp,%rdx
  0x00007fafb8c78014: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c78018: callq   0x7fafd7fdd230
  0x00007fafb8c7801d: hlt
  0x00007fafb8c7801e: cmpq    $0x0,0x8(%rsi)
  0x00007fafb8c78026: jne     0x7fafb8c77f0b
  0x00007fafb8c7802c: add     $0x10,%rsi
  0x00007fafb8c78030: cmp     %rbx,%rsi
  0x00007fafb8c78033: jne     0x7fafb8c7801e
  0x00007fafb8c78035: cmpb    $0x0,0x1fcffc5b(%rip)
  0x00007fafb8c7803c: je      0x7fafb8c7806e
  0x00007fafb8c78042: push    %rax
  0x00007fafb8c78043: mov     0xffffffffffffffe8(%rbp),%rsi
  0x00007fafb8c78047: mov     %r15,%rdi
  0x00007fafb8c7804a: test    $0xf,%esp
  0x00007fafb8c78050: je      0x7fafb8c78068
  0x00007fafb8c78056: sub     $0x8,%rsp
  0x00007fafb8c7805a: callq   0x7fafd81e7140
  0x00007fafb8c7805f: add     $0x8,%rsp
  0x00007fafb8c78063: jmpq    0x7fafb8c7806d
  0x00007fafb8c78068: callq   0x7fafd81e7140
  0x00007fafb8c7806d: pop     %rax
  0x00007fafb8c7806e: mov     0xfffffffffffffff8(%rbp),%rbx
  0x00007fafb8c78072: cmpl    $0x3,0x408(%r15)
  0x00007fafb8c7807d: je      0x7fafb8c781c9
  0x00007fafb8c78083: cmp     0x418(%r15),%rbx
  0x00007fafb8c7808a: jle     0x7fafb8c781c9
  0x00007fafb8c78090: mov     %r15,%rdi
  0x00007fafb8c78093: test    $0xf,%esp
  0x00007fafb8c78099: je      0x7fafb8c780b1
  0x00007fafb8c7809f: sub     $0x8,%rsp
  0x00007fafb8c780a3: callq   0x7fafd81ee2f0
  0x00007fafb8c780a8: add     $0x8,%rsp
  0x00007fafb8c780ac: jmpq    0x7fafb8c780b6
  0x00007fafb8c780b1: callq   0x7fafd81ee2f0
  0x00007fafb8c780b6: callq   0x7fafb8c780c0
  0x00007fafb8c780bb: jmpq    0x7fafb8c78152
  0x00007fafb8c780c0: lea     0x8(%rsp),%rax
  0x00007fafb8c780c5: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c780c9: mov     %r15,%rdi
  0x00007fafb8c780cc: vzeroupper
  0x00007fafb8c780cf: mov     %rbp,0x330(%r15)
  0x00007fafb8c780d6: mov     %rax,0x320(%r15)
  0x00007fafb8c780dd: test    $0xf,%esp
  0x00007fafb8c780e3: je      0x7fafb8c780fb
  0x00007fafb8c780e9: sub     $0x8,%rsp
  0x00007fafb8c780ed: callq   0x7fafd7d7ef30
  0x00007fafb8c780f2: add     $0x8,%rsp
  0x00007fafb8c780f6: jmpq    0x7fafb8c78100
  0x00007fafb8c780fb: callq   0x7fafd7d7ef30
  0x00007fafb8c78100: movabs  $0x0,%r10
  0x00007fafb8c7810a: mov     %r10,0x320(%r15)
  0x00007fafb8c78111: movabs  $0x0,%r10
  0x00007fafb8c7811b: mov     %r10,0x330(%r15)
  0x00007fafb8c78122: movabs  $0x0,%r10
  0x00007fafb8c7812c: mov     %r10,0x328(%r15)
  0x00007fafb8c78133: vzeroupper
  0x00007fafb8c78136: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7813e: je      0x7fafb8c78149
  0x00007fafb8c78144: jmpq    0x7fafb8c5c780
  0x00007fafb8c78149: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7814d: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c78151: retq
  0x00007fafb8c78152: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c78157: sub     $0x80,%rsp
  0x00007fafb8c7815e: mov     %rax,0x78(%rsp)
  0x00007fafb8c78163: mov     %rcx,0x70(%rsp)
  0x00007fafb8c78168: mov     %rdx,0x68(%rsp)
  0x00007fafb8c7816d: mov     %rbx,0x60(%rsp)
  0x00007fafb8c78172: mov     %rbp,0x50(%rsp)
  0x00007fafb8c78177: mov     %rsi,0x48(%rsp)
  0x00007fafb8c7817c: mov     %rdi,0x40(%rsp)
  0x00007fafb8c78181: mov     %r8,0x38(%rsp)
  0x00007fafb8c78186: mov     %r9,0x30(%rsp)
  0x00007fafb8c7818b: mov     %r10,0x28(%rsp)
  0x00007fafb8c78190: mov     %r11,0x20(%rsp)
  0x00007fafb8c78195: mov     %r12,0x18(%rsp)
  0x00007fafb8c7819a: mov     %r13,0x10(%rsp)
  0x00007fafb8c7819f: mov     %r14,0x8(%rsp)
  0x00007fafb8c781a4: mov     %r15,(%rsp)
  0x00007fafb8c781a8: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c781b2: movabs  $0x7fafb8c78152,%rsi
  0x00007fafb8c781bc: mov     %rsp,%rdx
  0x00007fafb8c781bf: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c781c3: callq   0x7fafd7fdd230
  0x00007fafb8c781c8: hlt
  0x00007fafb8c781c9: leave
  0x00007fafb8c781ca: pop     %r13
  0x00007fafb8c781cc: mov     %rbx,%rsp
  0x00007fafb8c781cf: jmpq    %r13
  0x00007fafb8c781d2: nopw    0x0(%rax,%rax)
  0x00007fafb8c781d8: add     %al,(%rax)
  0x00007fafb8c781da: add     %al,(%rax)
  0x00007fafb8c781dc: add     %al,(%rax)
  0x00007fafb8c781de: add     %al,(%rax)

----------------------------------------------------------------------
return  177 return  [0x00007fafb8c78200, 0x00007fafb8c78800]  1536 bytes

Argument 0 is unknown.RIP: 0x7fafb8c78200 Code size: 0x00000600
  0x00007fafb8c78200: push    %rax
  0x00007fafb8c78201: jmpq    0x7fafb8c7823f
  0x00007fafb8c78206: sub     $0x8,%rsp
  0x00007fafb8c7820a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c7820f: jmpq    0x7fafb8c7823f
  0x00007fafb8c78214: sub     $0x10,%rsp
  0x00007fafb8c78218: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c7821d: jmpq    0x7fafb8c7823f
  0x00007fafb8c78222: sub     $0x10,%rsp
  0x00007fafb8c78226: mov     %rax,(%rsp)
  0x00007fafb8c7822a: movabs  $0x0,%r10
  0x00007fafb8c78234: mov     %r10,0x8(%rsp)
  0x00007fafb8c78239: jmpq    0x7fafb8c7823f
  0x00007fafb8c7823e: push    %rax
  0x00007fafb8c7823f: testb   $0x8,0x108(%r15)
  0x00007fafb8c78247: je      0x7fafb8c782e9
  0x00007fafb8c7824d: callq   0x7fafb8c78257
  0x00007fafb8c78252: jmpq    0x7fafb8c782e9
  0x00007fafb8c78257: lea     0x8(%rsp),%rax
  0x00007fafb8c7825c: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c78260: mov     %r15,%rdi
  0x00007fafb8c78263: vzeroupper
  0x00007fafb8c78266: mov     %rbp,0x330(%r15)
  0x00007fafb8c7826d: mov     %rax,0x320(%r15)
  0x00007fafb8c78274: test    $0xf,%esp
  0x00007fafb8c7827a: je      0x7fafb8c78292
  0x00007fafb8c78280: sub     $0x8,%rsp
  0x00007fafb8c78284: callq   0x7fafd7d855e0
  0x00007fafb8c78289: add     $0x8,%rsp
  0x00007fafb8c7828d: jmpq    0x7fafb8c78297
  0x00007fafb8c78292: callq   0x7fafd7d855e0
  0x00007fafb8c78297: movabs  $0x0,%r10
  0x00007fafb8c782a1: mov     %r10,0x320(%r15)
  0x00007fafb8c782a8: movabs  $0x0,%r10
  0x00007fafb8c782b2: mov     %r10,0x330(%r15)
  0x00007fafb8c782b9: movabs  $0x0,%r10
  0x00007fafb8c782c3: mov     %r10,0x328(%r15)
  0x00007fafb8c782ca: vzeroupper
  0x00007fafb8c782cd: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c782d5: je      0x7fafb8c782e0
  0x00007fafb8c782db: jmpq    0x7fafb8c5c780
  0x00007fafb8c782e0: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c782e4: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c782e8: retq
  0x00007fafb8c782e9: mov     0x3dd(%r15),%bl
  0x00007fafb8c782f0: movb    $0x0,0x3dd(%r15)
  0x00007fafb8c782f8: mov     0xffffffffffffffe8(%rbp),%rcx
  0x00007fafb8c782fc: mov     0x20(%rcx),%ecx
  0x00007fafb8c782ff: test    $0x20,%ecx
  0x00007fafb8c78305: je      0x7fafb8c78517
  0x00007fafb8c7830b: testb   $0xff,%bl
  0x00007fafb8c7830e: jne     0x7fafb8c7864e
  0x00007fafb8c78314: lea     0xffffffffffffffa8(%rbp),%rsi
  0x00007fafb8c78318: mov     0x8(%rsi),%rax
  0x00007fafb8c7831c: test    %rax,%rax
  0x00007fafb8c7831f: jne     0x7fafb8c78438
  0x00007fafb8c78325: callq   0x7fafb8c7832f
  0x00007fafb8c7832a: jmpq    0x7fafb8c783c1
  0x00007fafb8c7832f: lea     0x8(%rsp),%rax
  0x00007fafb8c78334: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c78338: mov     %r15,%rdi
  0x00007fafb8c7833b: vzeroupper
  0x00007fafb8c7833e: mov     %rbp,0x330(%r15)
  0x00007fafb8c78345: mov     %rax,0x320(%r15)
  0x00007fafb8c7834c: test    $0xf,%esp
  0x00007fafb8c78352: je      0x7fafb8c7836a
  0x00007fafb8c78358: sub     $0x8,%rsp
  0x00007fafb8c7835c: callq   0x7fafd7d826a0
  0x00007fafb8c78361: add     $0x8,%rsp
  0x00007fafb8c78365: jmpq    0x7fafb8c7836f
  0x00007fafb8c7836a: callq   0x7fafd7d826a0
  0x00007fafb8c7836f: movabs  $0x0,%r10
  0x00007fafb8c78379: mov     %r10,0x320(%r15)
  0x00007fafb8c78380: movabs  $0x0,%r10
  0x00007fafb8c7838a: mov     %r10,0x330(%r15)
  0x00007fafb8c78391: movabs  $0x0,%r10
  0x00007fafb8c7839b: mov     %r10,0x328(%r15)
  0x00007fafb8c783a2: vzeroupper
  0x00007fafb8c783a5: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c783ad: je      0x7fafb8c783b8
  0x00007fafb8c783b3: jmpq    0x7fafb8c5c780
  0x00007fafb8c783b8: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c783bc: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c783c0: retq
  0x00007fafb8c783c1: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c783c6: sub     $0x80,%rsp
  0x00007fafb8c783cd: mov     %rax,0x78(%rsp)
  0x00007fafb8c783d2: mov     %rcx,0x70(%rsp)
  0x00007fafb8c783d7: mov     %rdx,0x68(%rsp)
  0x00007fafb8c783dc: mov     %rbx,0x60(%rsp)
  0x00007fafb8c783e1: mov     %rbp,0x50(%rsp)
  0x00007fafb8c783e6: mov     %rsi,0x48(%rsp)
  0x00007fafb8c783eb: mov     %rdi,0x40(%rsp)
  0x00007fafb8c783f0: mov     %r8,0x38(%rsp)
  0x00007fafb8c783f5: mov     %r9,0x30(%rsp)
  0x00007fafb8c783fa: mov     %r10,0x28(%rsp)
  0x00007fafb8c783ff: mov     %r11,0x20(%rsp)
  0x00007fafb8c78404: mov     %r12,0x18(%rsp)
  0x00007fafb8c78409: mov     %r13,0x10(%rsp)
  0x00007fafb8c7840e: mov     %r14,0x8(%rsp)
  0x00007fafb8c78413: mov     %r15,(%rsp)
  0x00007fafb8c78417: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c78421: movabs  $0x7fafb8c783c1,%rsi
  0x00007fafb8c7842b: mov     %rsp,%rdx
  0x00007fafb8c7842e: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c78432: callq   0x7fafd7fdd230
  0x00007fafb8c78437: hlt
  0x00007fafb8c78438: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7843c: lea     (%rsi),%rax
  0x00007fafb8c7843f: mov     0x8(%rsi),%rcx
  0x00007fafb8c78443: movq    $0x0,0x8(%rsi)
  0x00007fafb8c7844b: mov     (%rcx),%rdx
  0x00007fafb8c7844e: and     $0x7,%rdx
  0x00007fafb8c78452: cmp     $0x5,%rdx
  0x00007fafb8c78456: je      0x7fafb8c78513
  0x00007fafb8c7845c: mov     (%rax),%rdx
  0x00007fafb8c7845f: test    %rdx,%rdx
  0x00007fafb8c78462: je      0x7fafb8c78513
  0x00007fafb8c78468: lock cmpxchg %rdx,(%rcx)
  0x00007fafb8c7846d: je      0x7fafb8c78513
  0x00007fafb8c78473: mov     %rcx,0x8(%rsi)
  0x00007fafb8c78477: callq   0x7fafb8c78481
  0x00007fafb8c7847c: jmpq    0x7fafb8c78513
  0x00007fafb8c78481: lea     0x8(%rsp),%rax
  0x00007fafb8c78486: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7848a: mov     %r15,%rdi
  0x00007fafb8c7848d: vzeroupper
  0x00007fafb8c78490: mov     %rbp,0x330(%r15)
  0x00007fafb8c78497: mov     %rax,0x320(%r15)
  0x00007fafb8c7849e: test    $0xf,%esp
  0x00007fafb8c784a4: je      0x7fafb8c784bc
  0x00007fafb8c784aa: sub     $0x8,%rsp
  0x00007fafb8c784ae: callq   0x7fafd7d82470
  0x00007fafb8c784b3: add     $0x8,%rsp
  0x00007fafb8c784b7: jmpq    0x7fafb8c784c1
  0x00007fafb8c784bc: callq   0x7fafd7d82470
  0x00007fafb8c784c1: movabs  $0x0,%r10
  0x00007fafb8c784cb: mov     %r10,0x320(%r15)
  0x00007fafb8c784d2: movabs  $0x0,%r10
  0x00007fafb8c784dc: mov     %r10,0x330(%r15)
  0x00007fafb8c784e3: movabs  $0x0,%r10
  0x00007fafb8c784ed: mov     %r10,0x328(%r15)
  0x00007fafb8c784f4: vzeroupper
  0x00007fafb8c784f7: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c784ff: je      0x7fafb8c7850a
  0x00007fafb8c78505: jmpq    0x7fafb8c5c780
  0x00007fafb8c7850a: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7850e: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c78512: retq
  0x00007fafb8c78513: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c78517: mov     0xffffffffffffffb8(%rbp),%rsi
  0x00007fafb8c7851b: lea     0xffffffffffffffb8(%rbp),%rbx
  0x00007fafb8c7851f: jmpq    0x7fafb8c78649
  0x00007fafb8c78524: callq   0x7fafb8c7852e
  0x00007fafb8c78529: jmpq    0x7fafb8c785c0
  0x00007fafb8c7852e: lea     0x8(%rsp),%rax
  0x00007fafb8c78533: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c78537: mov     %r15,%rdi
  0x00007fafb8c7853a: vzeroupper
  0x00007fafb8c7853d: mov     %rbp,0x330(%r15)
  0x00007fafb8c78544: mov     %rax,0x320(%r15)
  0x00007fafb8c7854b: test    $0xf,%esp
  0x00007fafb8c78551: je      0x7fafb8c78569
  0x00007fafb8c78557: sub     $0x8,%rsp
  0x00007fafb8c7855b: callq   0x7fafd7d826a0
  0x00007fafb8c78560: add     $0x8,%rsp
  0x00007fafb8c78564: jmpq    0x7fafb8c7856e
  0x00007fafb8c78569: callq   0x7fafd7d826a0
  0x00007fafb8c7856e: movabs  $0x0,%r10
  0x00007fafb8c78578: mov     %r10,0x320(%r15)
  0x00007fafb8c7857f: movabs  $0x0,%r10
  0x00007fafb8c78589: mov     %r10,0x330(%r15)
  0x00007fafb8c78590: movabs  $0x0,%r10
  0x00007fafb8c7859a: mov     %r10,0x328(%r15)
  0x00007fafb8c785a1: vzeroupper
  0x00007fafb8c785a4: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c785ac: je      0x7fafb8c785b7
  0x00007fafb8c785b2: jmpq    0x7fafb8c5c780
  0x00007fafb8c785b7: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c785bb: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c785bf: retq
  0x00007fafb8c785c0: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c785c5: sub     $0x80,%rsp
  0x00007fafb8c785cc: mov     %rax,0x78(%rsp)
  0x00007fafb8c785d1: mov     %rcx,0x70(%rsp)
  0x00007fafb8c785d6: mov     %rdx,0x68(%rsp)
  0x00007fafb8c785db: mov     %rbx,0x60(%rsp)
  0x00007fafb8c785e0: mov     %rbp,0x50(%rsp)
  0x00007fafb8c785e5: mov     %rsi,0x48(%rsp)
  0x00007fafb8c785ea: mov     %rdi,0x40(%rsp)
  0x00007fafb8c785ef: mov     %r8,0x38(%rsp)
  0x00007fafb8c785f4: mov     %r9,0x30(%rsp)
  0x00007fafb8c785f9: mov     %r10,0x28(%rsp)
  0x00007fafb8c785fe: mov     %r11,0x20(%rsp)
  0x00007fafb8c78603: mov     %r12,0x18(%rsp)
  0x00007fafb8c78608: mov     %r13,0x10(%rsp)
  0x00007fafb8c7860d: mov     %r14,0x8(%rsp)
  0x00007fafb8c78612: mov     %r15,(%rsp)
  0x00007fafb8c78616: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c78620: movabs  $0x7fafb8c785c0,%rsi
  0x00007fafb8c7862a: mov     %rsp,%rdx
  0x00007fafb8c7862d: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c78631: callq   0x7fafd7fdd230
  0x00007fafb8c78636: hlt
  0x00007fafb8c78637: cmpq    $0x0,0x8(%rsi)
  0x00007fafb8c7863f: jne     0x7fafb8c78524
  0x00007fafb8c78645: add     $0x10,%rsi
  0x00007fafb8c78649: cmp     %rbx,%rsi
  0x00007fafb8c7864c: jne     0x7fafb8c78637
  0x00007fafb8c7864e: cmpb    $0x0,0x1fcff642(%rip)
  0x00007fafb8c78655: je      0x7fafb8c78685
  0x00007fafb8c7865b: mov     0xffffffffffffffe8(%rbp),%rsi
  0x00007fafb8c7865f: mov     %r15,%rdi
  0x00007fafb8c78662: test    $0xf,%esp
  0x00007fafb8c78668: je      0x7fafb8c78680
  0x00007fafb8c7866e: sub     $0x8,%rsp
  0x00007fafb8c78672: callq   0x7fafd81e7140
  0x00007fafb8c78677: add     $0x8,%rsp
  0x00007fafb8c7867b: jmpq    0x7fafb8c78685
  0x00007fafb8c78680: callq   0x7fafd81e7140
  0x00007fafb8c78685: mov     0xfffffffffffffff8(%rbp),%rbx
  0x00007fafb8c78689: cmpl    $0x3,0x408(%r15)
  0x00007fafb8c78694: je      0x7fafb8c787e0
  0x00007fafb8c7869a: cmp     0x418(%r15),%rbx
  0x00007fafb8c786a1: jle     0x7fafb8c787e0
  0x00007fafb8c786a7: mov     %r15,%rdi
  0x00007fafb8c786aa: test    $0xf,%esp
  0x00007fafb8c786b0: je      0x7fafb8c786c8
  0x00007fafb8c786b6: sub     $0x8,%rsp
  0x00007fafb8c786ba: callq   0x7fafd81ee2f0
  0x00007fafb8c786bf: add     $0x8,%rsp
  0x00007fafb8c786c3: jmpq    0x7fafb8c786cd
  0x00007fafb8c786c8: callq   0x7fafd81ee2f0
  0x00007fafb8c786cd: callq   0x7fafb8c786d7
  0x00007fafb8c786d2: jmpq    0x7fafb8c78769
  0x00007fafb8c786d7: lea     0x8(%rsp),%rax
  0x00007fafb8c786dc: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c786e0: mov     %r15,%rdi
  0x00007fafb8c786e3: vzeroupper
  0x00007fafb8c786e6: mov     %rbp,0x330(%r15)
  0x00007fafb8c786ed: mov     %rax,0x320(%r15)
  0x00007fafb8c786f4: test    $0xf,%esp
  0x00007fafb8c786fa: je      0x7fafb8c78712
  0x00007fafb8c78700: sub     $0x8,%rsp
  0x00007fafb8c78704: callq   0x7fafd7d7ef30
  0x00007fafb8c78709: add     $0x8,%rsp
  0x00007fafb8c7870d: jmpq    0x7fafb8c78717
  0x00007fafb8c78712: callq   0x7fafd7d7ef30
  0x00007fafb8c78717: movabs  $0x0,%r10
  0x00007fafb8c78721: mov     %r10,0x320(%r15)
  0x00007fafb8c78728: movabs  $0x0,%r10
  0x00007fafb8c78732: mov     %r10,0x330(%r15)
  0x00007fafb8c78739: movabs  $0x0,%r10
  0x00007fafb8c78743: mov     %r10,0x328(%r15)
  0x00007fafb8c7874a: vzeroupper
  0x00007fafb8c7874d: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c78755: je      0x7fafb8c78760
  0x00007fafb8c7875b: jmpq    0x7fafb8c5c780
  0x00007fafb8c78760: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c78764: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c78768: retq
  0x00007fafb8c78769: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c7876e: sub     $0x80,%rsp
  0x00007fafb8c78775: mov     %rax,0x78(%rsp)
  0x00007fafb8c7877a: mov     %rcx,0x70(%rsp)
  0x00007fafb8c7877f: mov     %rdx,0x68(%rsp)
  0x00007fafb8c78784: mov     %rbx,0x60(%rsp)
  0x00007fafb8c78789: mov     %rbp,0x50(%rsp)
  0x00007fafb8c7878e: mov     %rsi,0x48(%rsp)
  0x00007fafb8c78793: mov     %rdi,0x40(%rsp)
  0x00007fafb8c78798: mov     %r8,0x38(%rsp)
  0x00007fafb8c7879d: mov     %r9,0x30(%rsp)
  0x00007fafb8c787a2: mov     %r10,0x28(%rsp)
  0x00007fafb8c787a7: mov     %r11,0x20(%rsp)
  0x00007fafb8c787ac: mov     %r12,0x18(%rsp)
  0x00007fafb8c787b1: mov     %r13,0x10(%rsp)
  0x00007fafb8c787b6: mov     %r14,0x8(%rsp)
  0x00007fafb8c787bb: mov     %r15,(%rsp)
  0x00007fafb8c787bf: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c787c9: movabs  $0x7fafb8c78769,%rsi
  0x00007fafb8c787d3: mov     %rsp,%rdx
  0x00007fafb8c787d6: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c787da: callq   0x7fafd7fdd230
  0x00007fafb8c787df: hlt
  0x00007fafb8c787e0: leave
  0x00007fafb8c787e1: pop     %r13
  0x00007fafb8c787e3: mov     %rbx,%rsp
  0x00007fafb8c787e6: jmpq    %r13
  0x00007fafb8c787e9: nopl    0x0(%rax)
  0x00007fafb8c787f0: add     %al,(%rax)
  0x00007fafb8c787f2: add     %al,(%rax)
  0x00007fafb8c787f4: add     %al,(%rax)
  0x00007fafb8c787f6: add     %al,(%rax)
  0x00007fafb8c787f8: add     %al,(%rax)
  0x00007fafb8c787fa: add     %al,(%rax)
  0x00007fafb8c787fc: add     %al,(%rax)
  0x00007fafb8c787fe: add     %al,(%rax)

----------------------------------------------------------------------
getstatic  178 getstatic  [0x00007fafb8c78820, 0x00007fafb8c78a40]  544 bytes

Argument 0 is unknown.RIP: 0x7fafb8c78820 Code size: 0x00000220
  0x00007fafb8c78820: push    %rax
  0x00007fafb8c78821: jmpq    0x7fafb8c7885f
  0x00007fafb8c78826: sub     $0x8,%rsp
  0x00007fafb8c7882a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c7882f: jmpq    0x7fafb8c7885f
  0x00007fafb8c78834: sub     $0x10,%rsp
  0x00007fafb8c78838: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c7883d: jmpq    0x7fafb8c7885f
  0x00007fafb8c78842: sub     $0x10,%rsp
  0x00007fafb8c78846: mov     %rax,(%rsp)
  0x00007fafb8c7884a: movabs  $0x0,%r10
  0x00007fafb8c78854: mov     %r10,0x8(%rsp)
  0x00007fafb8c78859: jmpq    0x7fafb8c7885f
  0x00007fafb8c7885e: push    %rax
  0x00007fafb8c7885f: movzwl  0x1(%r13),%edx
  0x00007fafb8c78864: mov     0xffffffffffffffd0(%rbp),%rcx
  0x00007fafb8c78868: shl     $0x2,%edx
  0x00007fafb8c7886b: mov     0x28(%rcx,%rdx,8),%ebx
  0x00007fafb8c7886f: shr     $0x10,%ebx
  0x00007fafb8c78872: and     $0xff,%ebx
  0x00007fafb8c78878: cmp     $0xb2,%ebx
  0x00007fafb8c7887e: je      0x7fafb8c78934
  0x00007fafb8c78884: mov     $0xb2,%ebx
  0x00007fafb8c78889: callq   0x7fafb8c78893
  0x00007fafb8c7888e: jmpq    0x7fafb8c78928
  0x00007fafb8c78893: mov     %rbx,%rsi
  0x00007fafb8c78896: lea     0x8(%rsp),%rax
  0x00007fafb8c7889b: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7889f: mov     %r15,%rdi
  0x00007fafb8c788a2: vzeroupper
  0x00007fafb8c788a5: mov     %rbp,0x330(%r15)
  0x00007fafb8c788ac: mov     %rax,0x320(%r15)
  0x00007fafb8c788b3: test    $0xf,%esp
  0x00007fafb8c788b9: je      0x7fafb8c788d1
  0x00007fafb8c788bf: sub     $0x8,%rsp
  0x00007fafb8c788c3: callq   0x7fafd7d841d0
  0x00007fafb8c788c8: add     $0x8,%rsp
  0x00007fafb8c788cc: jmpq    0x7fafb8c788d6
  0x00007fafb8c788d1: callq   0x7fafd7d841d0
  0x00007fafb8c788d6: movabs  $0x0,%r10
  0x00007fafb8c788e0: mov     %r10,0x320(%r15)
  0x00007fafb8c788e7: movabs  $0x0,%r10
  0x00007fafb8c788f1: mov     %r10,0x330(%r15)
  0x00007fafb8c788f8: movabs  $0x0,%r10
  0x00007fafb8c78902: mov     %r10,0x328(%r15)
  0x00007fafb8c78909: vzeroupper
  0x00007fafb8c7890c: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c78914: je      0x7fafb8c7891f
  0x00007fafb8c7891a: jmpq    0x7fafb8c5c780
  0x00007fafb8c7891f: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c78923: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c78927: retq
  0x00007fafb8c78928: movzwl  0x1(%r13),%edx
  0x00007fafb8c7892d: mov     0xffffffffffffffd0(%rbp),%rcx
  0x00007fafb8c78931: shl     $0x2,%edx
  0x00007fafb8c78934: mov     0x38(%rcx,%rdx,8),%rbx
  0x00007fafb8c78939: mov     0x40(%rcx,%rdx,8),%eax
  0x00007fafb8c7893d: mov     0x30(%rcx,%rdx,8),%rcx
  0x00007fafb8c78942: mov     0x70(%rcx),%rcx
  0x00007fafb8c78946: mov     (%rcx),%rcx
  0x00007fafb8c78949: shr     $0x1c,%eax
  0x00007fafb8c7894c: and     $0xf,%eax
  0x00007fafb8c7894f: jne     0x7fafb8c7895f
  0x00007fafb8c78955: movsbl  (%rcx,%rbx),%eax
  0x00007fafb8c78959: push    %rax
  0x00007fafb8c7895a: jmpq    0x7fafb8c78a13
  0x00007fafb8c7895f: cmp     $0x1,%eax
  0x00007fafb8c78962: jne     0x7fafb8c78972
  0x00007fafb8c78968: movzbl  (%rcx,%rbx),%eax
  0x00007fafb8c7896c: push    %rax
  0x00007fafb8c7896d: jmpq    0x7fafb8c78a13
  0x00007fafb8c78972: cmp     $0x8,%eax
  0x00007fafb8c78975: jne     0x7fafb8c78988
  0x00007fafb8c7897b: mov     (%rcx,%rbx),%eax
  0x00007fafb8c7897e: shl     $0x3,%rax
  0x00007fafb8c78982: push    %rax
  0x00007fafb8c78983: jmpq    0x7fafb8c78a13
  0x00007fafb8c78988: cmp     $0x4,%eax
  0x00007fafb8c7898b: jne     0x7fafb8c7899a
  0x00007fafb8c78991: mov     (%rcx,%rbx),%eax
  0x00007fafb8c78994: push    %rax
  0x00007fafb8c78995: jmpq    0x7fafb8c78a13
  0x00007fafb8c7899a: cmp     $0x2,%eax
  0x00007fafb8c7899d: jne     0x7fafb8c789ad
  0x00007fafb8c789a3: movzwl  (%rcx,%rbx),%eax
  0x00007fafb8c789a7: push    %rax
  0x00007fafb8c789a8: jmpq    0x7fafb8c78a13
  0x00007fafb8c789ad: cmp     $0x3,%eax
  0x00007fafb8c789b0: jne     0x7fafb8c789c0
  0x00007fafb8c789b6: movswl  (%rcx,%rbx),%eax
  0x00007fafb8c789ba: push    %rax
  0x00007fafb8c789bb: jmpq    0x7fafb8c78a13
  0x00007fafb8c789c0: cmp     $0x5,%eax
  0x00007fafb8c789c3: jne     0x7fafb8c789e9
  0x00007fafb8c789c9: mov     (%rcx,%rbx),%rax
  0x00007fafb8c789cd: sub     $0x10,%rsp
  0x00007fafb8c789d1: mov     %rax,(%rsp)
  0x00007fafb8c789d5: movabs  $0x0,%r10
  0x00007fafb8c789df: mov     %r10,0x8(%rsp)
  0x00007fafb8c789e4: jmpq    0x7fafb8c78a13
  0x00007fafb8c789e9: cmp     $0x6,%eax
  0x00007fafb8c789ec: jne     0x7fafb8c78a05
  0x00007fafb8c789f2: vmovss  (%rcx,%rbx),%xmm0
  0x00007fafb8c789f7: sub     $0x8,%rsp
  0x00007fafb8c789fb: vmovss  %xmm0,(%rsp)
  0x00007fafb8c78a00: jmpq    0x7fafb8c78a13
  0x00007fafb8c78a05: vmovsd  (%rcx,%rbx),%xmm0
  0x00007fafb8c78a0a: sub     $0x10,%rsp
  0x00007fafb8c78a0e: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c78a13: movzbl  0x3(%r13),%ebx
  0x00007fafb8c78a18: add     $0x3,%r13
  0x00007fafb8c78a1c: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c78a26: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c78a2a: nopw    0x0(%rax,%rax)
  0x00007fafb8c78a30: add     %al,(%rax)
  0x00007fafb8c78a32: add     %al,(%rax)
  0x00007fafb8c78a34: add     %al,(%rax)
  0x00007fafb8c78a36: add     %al,(%rax)
  0x00007fafb8c78a38: add     %al,(%rax)
  0x00007fafb8c78a3a: add     %al,(%rax)
  0x00007fafb8c78a3c: add     %al,(%rax)
  0x00007fafb8c78a3e: add     %al,(%rax)

----------------------------------------------------------------------
putstatic  179 putstatic  [0x00007fafb8c78a60, 0x00007fafb8c78dc0]  864 bytes

Argument 0 is unknown.RIP: 0x7fafb8c78a60 Code size: 0x00000360
  0x00007fafb8c78a60: push    %rax
  0x00007fafb8c78a61: jmpq    0x7fafb8c78a9f
  0x00007fafb8c78a66: sub     $0x8,%rsp
  0x00007fafb8c78a6a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c78a6f: jmpq    0x7fafb8c78a9f
  0x00007fafb8c78a74: sub     $0x10,%rsp
  0x00007fafb8c78a78: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c78a7d: jmpq    0x7fafb8c78a9f
  0x00007fafb8c78a82: sub     $0x10,%rsp
  0x00007fafb8c78a86: mov     %rax,(%rsp)
  0x00007fafb8c78a8a: movabs  $0x0,%r10
  0x00007fafb8c78a94: mov     %r10,0x8(%rsp)
  0x00007fafb8c78a99: jmpq    0x7fafb8c78a9f
  0x00007fafb8c78a9e: push    %rax
  0x00007fafb8c78a9f: movzwl  0x1(%r13),%edx
  0x00007fafb8c78aa4: mov     0xffffffffffffffd0(%rbp),%rcx
  0x00007fafb8c78aa8: shl     $0x2,%edx
  0x00007fafb8c78aab: mov     0x28(%rcx,%rdx,8),%ebx
  0x00007fafb8c78aaf: shr     $0x18,%ebx
  0x00007fafb8c78ab2: and     $0xff,%ebx
  0x00007fafb8c78ab8: cmp     $0xb3,%ebx
  0x00007fafb8c78abe: je      0x7fafb8c78b74
  0x00007fafb8c78ac4: mov     $0xb3,%ebx
  0x00007fafb8c78ac9: callq   0x7fafb8c78ad3
  0x00007fafb8c78ace: jmpq    0x7fafb8c78b68
  0x00007fafb8c78ad3: mov     %rbx,%rsi
  0x00007fafb8c78ad6: lea     0x8(%rsp),%rax
  0x00007fafb8c78adb: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c78adf: mov     %r15,%rdi
  0x00007fafb8c78ae2: vzeroupper
  0x00007fafb8c78ae5: mov     %rbp,0x330(%r15)
  0x00007fafb8c78aec: mov     %rax,0x320(%r15)
  0x00007fafb8c78af3: test    $0xf,%esp
  0x00007fafb8c78af9: je      0x7fafb8c78b11
  0x00007fafb8c78aff: sub     $0x8,%rsp
  0x00007fafb8c78b03: callq   0x7fafd7d841d0
  0x00007fafb8c78b08: add     $0x8,%rsp
  0x00007fafb8c78b0c: jmpq    0x7fafb8c78b16
  0x00007fafb8c78b11: callq   0x7fafd7d841d0
  0x00007fafb8c78b16: movabs  $0x0,%r10
  0x00007fafb8c78b20: mov     %r10,0x320(%r15)
  0x00007fafb8c78b27: movabs  $0x0,%r10
  0x00007fafb8c78b31: mov     %r10,0x330(%r15)
  0x00007fafb8c78b38: movabs  $0x0,%r10
  0x00007fafb8c78b42: mov     %r10,0x328(%r15)
  0x00007fafb8c78b49: vzeroupper
  0x00007fafb8c78b4c: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c78b54: je      0x7fafb8c78b5f
  0x00007fafb8c78b5a: jmpq    0x7fafb8c5c780
  0x00007fafb8c78b5f: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c78b63: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c78b67: retq
  0x00007fafb8c78b68: movzwl  0x1(%r13),%edx
  0x00007fafb8c78b6d: mov     0xffffffffffffffd0(%rbp),%rcx
  0x00007fafb8c78b71: shl     $0x2,%edx
  0x00007fafb8c78b74: mov     0x38(%rcx,%rdx,8),%rbx
  0x00007fafb8c78b79: mov     0x40(%rcx,%rdx,8),%eax
  0x00007fafb8c78b7d: mov     0x30(%rcx,%rdx,8),%rcx
  0x00007fafb8c78b82: mov     0x70(%rcx),%rcx
  0x00007fafb8c78b86: mov     (%rcx),%rcx
  0x00007fafb8c78b89: mov     %eax,%edx
  0x00007fafb8c78b8b: shr     $0x15,%edx
  0x00007fafb8c78b8e: and     $0x1,%edx
  0x00007fafb8c78b91: shr     $0x1c,%eax
  0x00007fafb8c78b94: and     $0xf,%eax
  0x00007fafb8c78b97: jne     0x7fafb8c78bac
  0x00007fafb8c78b9d: mov     (%rsp),%eax
  0x00007fafb8c78ba0: add     $0x8,%rsp
  0x00007fafb8c78ba4: mov     %al,(%rcx,%rbx)
  0x00007fafb8c78ba7: jmpq    0x7fafb8c78d7f
  0x00007fafb8c78bac: cmp     $0x1,%eax
  0x00007fafb8c78baf: jne     0x7fafb8c78bc7
  0x00007fafb8c78bb5: mov     (%rsp),%eax
  0x00007fafb8c78bb8: add     $0x8,%rsp
  0x00007fafb8c78bbc: and     $0x1,%eax
  0x00007fafb8c78bbf: mov     %al,(%rcx,%rbx)
  0x00007fafb8c78bc2: jmpq    0x7fafb8c78d7f
  0x00007fafb8c78bc7: cmp     $0x8,%eax
  0x00007fafb8c78bca: jne     0x7fafb8c78cf1
  0x00007fafb8c78bd0: pop     %rax
  0x00007fafb8c78bd1: lea     (%rcx,%rbx),%rdx
  0x00007fafb8c78bd5: cmpb    $0x0,0x30(%r15)
  0x00007fafb8c78bda: je      0x7fafb8c78c41
  0x00007fafb8c78be0: mov     (%rdx),%ebx
  0x00007fafb8c78be2: shl     $0x3,%rbx
  0x00007fafb8c78be6: cmp     $0x0,%rbx
  0x00007fafb8c78bea: je      0x7fafb8c78c41
  0x00007fafb8c78bf0: mov     0x38(%r15),%r8
  0x00007fafb8c78bf4: cmp     $0x0,%r8
  0x00007fafb8c78bf8: je      0x7fafb8c78c12
  0x00007fafb8c78bfe: sub     $0x8,%r8
  0x00007fafb8c78c02: mov     %r8,0x38(%r15)
  0x00007fafb8c78c06: add     0x48(%r15),%r8
  0x00007fafb8c78c0a: mov     %rbx,(%r8)
  0x00007fafb8c78c0d: jmpq    0x7fafb8c78c41
  0x00007fafb8c78c12: push    %rax
  0x00007fafb8c78c13: push    %rdx
  0x00007fafb8c78c14: push    %rbx
  0x00007fafb8c78c15: mov     %r15,%rsi
  0x00007fafb8c78c18: mov     %rbx,%rdi
  0x00007fafb8c78c1b: test    $0xf,%esp
  0x00007fafb8c78c21: je      0x7fafb8c78c39
  0x00007fafb8c78c27: sub     $0x8,%rsp
  0x00007fafb8c78c2b: callq   0x7fafd7c74620
  0x00007fafb8c78c30: add     $0x8,%rsp
  0x00007fafb8c78c34: jmpq    0x7fafb8c78c3e
  0x00007fafb8c78c39: callq   0x7fafd7c74620
  0x00007fafb8c78c3e: pop     %rbx
  0x00007fafb8c78c3f: pop     %rdx
  0x00007fafb8c78c40: pop     %rax
  0x00007fafb8c78c41: mov     %rax,%rbx
  0x00007fafb8c78c44: shr     $0x3,%rax
  0x00007fafb8c78c48: mov     %eax,(%rdx)
  0x00007fafb8c78c4a: mov     %rdx,%r8
  0x00007fafb8c78c4d: xor     %rbx,%r8
  0x00007fafb8c78c50: shr     $0x14,%r8
  0x00007fafb8c78c54: je      0x7fafb8c78cec
  0x00007fafb8c78c5a: cmp     $0x0,%rbx
  0x00007fafb8c78c5e: je      0x7fafb8c78cec
  0x00007fafb8c78c64: mov     %rdx,%r8
  0x00007fafb8c78c67: shr     $0x9,%r8
  0x00007fafb8c78c6b: movabs  $0x7fafb0000000,%rbx
  0x00007fafb8c78c75: add     %rbx,%r8
  0x00007fafb8c78c78: cmpb    $0x20,(%r8)
  0x00007fafb8c78c7c: je      0x7fafb8c78cec
  0x00007fafb8c78c82: lock addl $0x0,0xffffffffffffffc0(%rsp)
  0x00007fafb8c78c88: cmpb    $0x0,(%r8)
  0x00007fafb8c78c8c: je      0x7fafb8c78cec
  0x00007fafb8c78c92: movb    $0x0,(%r8)
  0x00007fafb8c78c96: cmpl    $0x0,0x70(%r15)
  0x00007fafb8c78c9e: je      0x7fafb8c78cbf
  0x00007fafb8c78ca4: subl    $0x8,0x70(%r15)
  0x00007fafb8c78ca9: mov     0x80(%r15),%rbx
  0x00007fafb8c78cb0: movsxd  0x70(%r15),%r10
  0x00007fafb8c78cb4: add     %r10,%rbx
  0x00007fafb8c78cb7: mov     %r8,(%rbx)
  0x00007fafb8c78cba: jmpq    0x7fafb8c78cec
  0x00007fafb8c78cbf: push    %rdx
  0x00007fafb8c78cc0: push    %rbx
  0x00007fafb8c78cc1: mov     %r15,%rsi
  0x00007fafb8c78cc4: mov     %r8,%rdi
  0x00007fafb8c78cc7: test    $0xf,%esp
  0x00007fafb8c78ccd: je      0x7fafb8c78ce5
  0x00007fafb8c78cd3: sub     $0x8,%rsp
  0x00007fafb8c78cd7: callq   0x7fafd7c74650
  0x00007fafb8c78cdc: add     $0x8,%rsp
  0x00007fafb8c78ce0: jmpq    0x7fafb8c78cea
  0x00007fafb8c78ce5: callq   0x7fafd7c74650
  0x00007fafb8c78cea: pop     %rbx
  0x00007fafb8c78ceb: pop     %rdx
  0x00007fafb8c78cec: jmpq    0x7fafb8c78d7f
  0x00007fafb8c78cf1: cmp     $0x4,%eax
  0x00007fafb8c78cf4: jne     0x7fafb8c78d09
  0x00007fafb8c78cfa: mov     (%rsp),%eax
  0x00007fafb8c78cfd: add     $0x8,%rsp
  0x00007fafb8c78d01: mov     %eax,(%rcx,%rbx)
  0x00007fafb8c78d04: jmpq    0x7fafb8c78d7f
  0x00007fafb8c78d09: cmp     $0x2,%eax
  0x00007fafb8c78d0c: jne     0x7fafb8c78d22
  0x00007fafb8c78d12: mov     (%rsp),%eax
  0x00007fafb8c78d15: add     $0x8,%rsp
  0x00007fafb8c78d19: mov     %ax,(%rcx,%rbx)
  0x00007fafb8c78d1d: jmpq    0x7fafb8c78d7f
  0x00007fafb8c78d22: cmp     $0x3,%eax
  0x00007fafb8c78d25: jne     0x7fafb8c78d3b
  0x00007fafb8c78d2b: mov     (%rsp),%eax
  0x00007fafb8c78d2e: add     $0x8,%rsp
  0x00007fafb8c78d32: mov     %ax,(%rcx,%rbx)
  0x00007fafb8c78d36: jmpq    0x7fafb8c78d7f
  0x00007fafb8c78d3b: cmp     $0x5,%eax
  0x00007fafb8c78d3e: jne     0x7fafb8c78d55
  0x00007fafb8c78d44: mov     (%rsp),%rax
  0x00007fafb8c78d48: add     $0x10,%rsp
  0x00007fafb8c78d4c: mov     %rax,(%rcx,%rbx)
  0x00007fafb8c78d50: jmpq    0x7fafb8c78d7f
  0x00007fafb8c78d55: cmp     $0x6,%eax
  0x00007fafb8c78d58: jne     0x7fafb8c78d71
  0x00007fafb8c78d5e: vmovss  (%rsp),%xmm0
  0x00007fafb8c78d63: add     $0x8,%rsp
  0x00007fafb8c78d67: vmovss  %xmm0,(%rcx,%rbx)
  0x00007fafb8c78d6c: jmpq    0x7fafb8c78d7f
  0x00007fafb8c78d71: vmovsd  (%rsp),%xmm0
  0x00007fafb8c78d76: add     $0x10,%rsp
  0x00007fafb8c78d7a: vmovsd  %xmm0,(%rcx,%rbx)
  0x00007fafb8c78d7f: test    %edx,%edx
  0x00007fafb8c78d81: je      0x7fafb8c78d8d
  0x00007fafb8c78d87: lock addl $0x0,0xffffffffffffffc0(%rsp)
  0x00007fafb8c78d8d: movzbl  0x3(%r13),%ebx
  0x00007fafb8c78d92: add     $0x3,%r13
  0x00007fafb8c78d96: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c78da0: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c78da4: nopl    0x0(%rax)
  0x00007fafb8c78da8: add     %al,(%rax)
  0x00007fafb8c78daa: add     %al,(%rax)
  0x00007fafb8c78dac: add     %al,(%rax)
  0x00007fafb8c78dae: add     %al,(%rax)
  0x00007fafb8c78db0: add     %al,(%rax)
  0x00007fafb8c78db2: add     %al,(%rax)
  0x00007fafb8c78db4: add     %al,(%rax)
  0x00007fafb8c78db6: add     %al,(%rax)
  0x00007fafb8c78db8: add     %al,(%rax)
  0x00007fafb8c78dba: add     %al,(%rax)
  0x00007fafb8c78dbc: add     %al,(%rax)
  0x00007fafb8c78dbe: add     %al,(%rax)

----------------------------------------------------------------------
getfield  180 getfield  [0x00007fafb8c78de0, 0x00007fafb8c79040]  608 bytes

Argument 0 is unknown.RIP: 0x7fafb8c78de0 Code size: 0x00000260
  0x00007fafb8c78de0: push    %rax
  0x00007fafb8c78de1: jmpq    0x7fafb8c78e1f
  0x00007fafb8c78de6: sub     $0x8,%rsp
  0x00007fafb8c78dea: vmovss  %xmm0,(%rsp)
  0x00007fafb8c78def: jmpq    0x7fafb8c78e1f
  0x00007fafb8c78df4: sub     $0x10,%rsp
  0x00007fafb8c78df8: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c78dfd: jmpq    0x7fafb8c78e1f
  0x00007fafb8c78e02: sub     $0x10,%rsp
  0x00007fafb8c78e06: mov     %rax,(%rsp)
  0x00007fafb8c78e0a: movabs  $0x0,%r10
  0x00007fafb8c78e14: mov     %r10,0x8(%rsp)
  0x00007fafb8c78e19: jmpq    0x7fafb8c78e1f
  0x00007fafb8c78e1e: push    %rax
  0x00007fafb8c78e1f: movzwl  0x1(%r13),%edx
  0x00007fafb8c78e24: mov     0xffffffffffffffd0(%rbp),%rcx
  0x00007fafb8c78e28: shl     $0x2,%edx
  0x00007fafb8c78e2b: mov     0x28(%rcx,%rdx,8),%ebx
  0x00007fafb8c78e2f: shr     $0x10,%ebx
  0x00007fafb8c78e32: and     $0xff,%ebx
  0x00007fafb8c78e38: cmp     $0xb4,%ebx
  0x00007fafb8c78e3e: je      0x7fafb8c78ef4
  0x00007fafb8c78e44: mov     $0xb4,%ebx
  0x00007fafb8c78e49: callq   0x7fafb8c78e53
  0x00007fafb8c78e4e: jmpq    0x7fafb8c78ee8
  0x00007fafb8c78e53: mov     %rbx,%rsi
  0x00007fafb8c78e56: lea     0x8(%rsp),%rax
  0x00007fafb8c78e5b: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c78e5f: mov     %r15,%rdi
  0x00007fafb8c78e62: vzeroupper
  0x00007fafb8c78e65: mov     %rbp,0x330(%r15)
  0x00007fafb8c78e6c: mov     %rax,0x320(%r15)
  0x00007fafb8c78e73: test    $0xf,%esp
  0x00007fafb8c78e79: je      0x7fafb8c78e91
  0x00007fafb8c78e7f: sub     $0x8,%rsp
  0x00007fafb8c78e83: callq   0x7fafd7d841d0
  0x00007fafb8c78e88: add     $0x8,%rsp
  0x00007fafb8c78e8c: jmpq    0x7fafb8c78e96
  0x00007fafb8c78e91: callq   0x7fafd7d841d0
  0x00007fafb8c78e96: movabs  $0x0,%r10
  0x00007fafb8c78ea0: mov     %r10,0x320(%r15)
  0x00007fafb8c78ea7: movabs  $0x0,%r10
  0x00007fafb8c78eb1: mov     %r10,0x330(%r15)
  0x00007fafb8c78eb8: movabs  $0x0,%r10
  0x00007fafb8c78ec2: mov     %r10,0x328(%r15)
  0x00007fafb8c78ec9: vzeroupper
  0x00007fafb8c78ecc: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c78ed4: je      0x7fafb8c78edf
  0x00007fafb8c78eda: jmpq    0x7fafb8c5c780
  0x00007fafb8c78edf: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c78ee3: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c78ee7: retq
  0x00007fafb8c78ee8: movzwl  0x1(%r13),%edx
  0x00007fafb8c78eed: mov     0xffffffffffffffd0(%rbp),%rcx
  0x00007fafb8c78ef1: shl     $0x2,%edx
  0x00007fafb8c78ef4: mov     0x38(%rcx,%rdx,8),%rbx
  0x00007fafb8c78ef9: mov     0x40(%rcx,%rdx,8),%eax
  0x00007fafb8c78efd: pop     %rcx
  0x00007fafb8c78efe: cmp     (%rcx),%rax
  0x00007fafb8c78f01: shr     $0x1c,%eax
  0x00007fafb8c78f04: and     $0xf,%eax
  0x00007fafb8c78f07: jne     0x7fafb8c78f20
  0x00007fafb8c78f0d: movsbl  (%rcx,%rbx),%eax
  0x00007fafb8c78f11: push    %rax
  0x00007fafb8c78f12: mov     $0xcc,%ecx
  0x00007fafb8c78f17: mov     %cl,0x0(%r13)
  0x00007fafb8c78f1b: jmpq    0x7fafb8c7901c
  0x00007fafb8c78f20: cmp     $0x1,%eax
  0x00007fafb8c78f23: jne     0x7fafb8c78f3c
  0x00007fafb8c78f29: movzbl  (%rcx,%rbx),%eax
  0x00007fafb8c78f2d: push    %rax
  0x00007fafb8c78f2e: mov     $0xcc,%ecx
  0x00007fafb8c78f33: mov     %cl,0x0(%r13)
  0x00007fafb8c78f37: jmpq    0x7fafb8c7901c
  0x00007fafb8c78f3c: cmp     $0x8,%eax
  0x00007fafb8c78f3f: jne     0x7fafb8c78f5b
  0x00007fafb8c78f45: mov     (%rcx,%rbx),%eax
  0x00007fafb8c78f48: shl     $0x3,%rax
  0x00007fafb8c78f4c: push    %rax
  0x00007fafb8c78f4d: mov     $0xcb,%ecx
  0x00007fafb8c78f52: mov     %cl,0x0(%r13)
  0x00007fafb8c78f56: jmpq    0x7fafb8c7901c
  0x00007fafb8c78f5b: cmp     $0x4,%eax
  0x00007fafb8c78f5e: jne     0x7fafb8c78f76
  0x00007fafb8c78f64: mov     (%rcx,%rbx),%eax
  0x00007fafb8c78f67: push    %rax
  0x00007fafb8c78f68: mov     $0xd0,%ecx
  0x00007fafb8c78f6d: mov     %cl,0x0(%r13)
  0x00007fafb8c78f71: jmpq    0x7fafb8c7901c
  0x00007fafb8c78f76: cmp     $0x2,%eax
  0x00007fafb8c78f79: jne     0x7fafb8c78f92
  0x00007fafb8c78f7f: movzwl  (%rcx,%rbx),%eax
  0x00007fafb8c78f83: push    %rax
  0x00007fafb8c78f84: mov     $0xcd,%ecx
  0x00007fafb8c78f89: mov     %cl,0x0(%r13)
  0x00007fafb8c78f8d: jmpq    0x7fafb8c7901c
  0x00007fafb8c78f92: cmp     $0x3,%eax
  0x00007fafb8c78f95: jne     0x7fafb8c78fae
  0x00007fafb8c78f9b: movswl  (%rcx,%rbx),%eax
  0x00007fafb8c78f9f: push    %rax
  0x00007fafb8c78fa0: mov     $0xd2,%ecx
  0x00007fafb8c78fa5: mov     %cl,0x0(%r13)
  0x00007fafb8c78fa9: jmpq    0x7fafb8c7901c
  0x00007fafb8c78fae: cmp     $0x5,%eax
  0x00007fafb8c78fb1: jne     0x7fafb8c78fe0
  0x00007fafb8c78fb7: mov     (%rcx,%rbx),%rax
  0x00007fafb8c78fbb: sub     $0x10,%rsp
  0x00007fafb8c78fbf: mov     %rax,(%rsp)
  0x00007fafb8c78fc3: movabs  $0x0,%r10
  0x00007fafb8c78fcd: mov     %r10,0x8(%rsp)
  0x00007fafb8c78fd2: mov     $0xd1,%ecx
  0x00007fafb8c78fd7: mov     %cl,0x0(%r13)
  0x00007fafb8c78fdb: jmpq    0x7fafb8c7901c
  0x00007fafb8c78fe0: cmp     $0x6,%eax
  0x00007fafb8c78fe3: jne     0x7fafb8c79005
  0x00007fafb8c78fe9: vmovss  (%rcx,%rbx),%xmm0
  0x00007fafb8c78fee: sub     $0x8,%rsp
  0x00007fafb8c78ff2: vmovss  %xmm0,(%rsp)
  0x00007fafb8c78ff7: mov     $0xcf,%ecx
  0x00007fafb8c78ffc: mov     %cl,0x0(%r13)
  0x00007fafb8c79000: jmpq    0x7fafb8c7901c
  0x00007fafb8c79005: vmovsd  (%rcx,%rbx),%xmm0
  0x00007fafb8c7900a: sub     $0x10,%rsp
  0x00007fafb8c7900e: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c79013: mov     $0xce,%ecx
  0x00007fafb8c79018: mov     %cl,0x0(%r13)
  0x00007fafb8c7901c: movzbl  0x3(%r13),%ebx
  0x00007fafb8c79021: add     $0x3,%r13
  0x00007fafb8c79025: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c7902f: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c79033: nopl    0x0(%rax,%rax)
  0x00007fafb8c79038: add     %al,(%rax)
  0x00007fafb8c7903a: add     %al,(%rax)
  0x00007fafb8c7903c: add     %al,(%rax)
  0x00007fafb8c7903e: add     %al,(%rax)

----------------------------------------------------------------------
putfield  181 putfield  [0x00007fafb8c79060, 0x00007fafb8c79540]  1248 bytes

Argument 0 is unknown.RIP: 0x7fafb8c79060 Code size: 0x000004e0
  0x00007fafb8c79060: push    %rax
  0x00007fafb8c79061: jmpq    0x7fafb8c7909f
  0x00007fafb8c79066: sub     $0x8,%rsp
  0x00007fafb8c7906a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c7906f: jmpq    0x7fafb8c7909f
  0x00007fafb8c79074: sub     $0x10,%rsp
  0x00007fafb8c79078: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c7907d: jmpq    0x7fafb8c7909f
  0x00007fafb8c79082: sub     $0x10,%rsp
  0x00007fafb8c79086: mov     %rax,(%rsp)
  0x00007fafb8c7908a: movabs  $0x0,%r10
  0x00007fafb8c79094: mov     %r10,0x8(%rsp)
  0x00007fafb8c79099: jmpq    0x7fafb8c7909f
  0x00007fafb8c7909e: push    %rax
  0x00007fafb8c7909f: movzwl  0x1(%r13),%edx
  0x00007fafb8c790a4: mov     0xffffffffffffffd0(%rbp),%rcx
  0x00007fafb8c790a8: shl     $0x2,%edx
  0x00007fafb8c790ab: mov     0x28(%rcx,%rdx,8),%ebx
  0x00007fafb8c790af: shr     $0x18,%ebx
  0x00007fafb8c790b2: and     $0xff,%ebx
  0x00007fafb8c790b8: cmp     $0xb5,%ebx
  0x00007fafb8c790be: je      0x7fafb8c79174
  0x00007fafb8c790c4: mov     $0xb5,%ebx
  0x00007fafb8c790c9: callq   0x7fafb8c790d3
  0x00007fafb8c790ce: jmpq    0x7fafb8c79168
  0x00007fafb8c790d3: mov     %rbx,%rsi
  0x00007fafb8c790d6: lea     0x8(%rsp),%rax
  0x00007fafb8c790db: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c790df: mov     %r15,%rdi
  0x00007fafb8c790e2: vzeroupper
  0x00007fafb8c790e5: mov     %rbp,0x330(%r15)
  0x00007fafb8c790ec: mov     %rax,0x320(%r15)
  0x00007fafb8c790f3: test    $0xf,%esp
  0x00007fafb8c790f9: je      0x7fafb8c79111
  0x00007fafb8c790ff: sub     $0x8,%rsp
  0x00007fafb8c79103: callq   0x7fafd7d841d0
  0x00007fafb8c79108: add     $0x8,%rsp
  0x00007fafb8c7910c: jmpq    0x7fafb8c79116
  0x00007fafb8c79111: callq   0x7fafd7d841d0
  0x00007fafb8c79116: movabs  $0x0,%r10
  0x00007fafb8c79120: mov     %r10,0x320(%r15)
  0x00007fafb8c79127: movabs  $0x0,%r10
  0x00007fafb8c79131: mov     %r10,0x330(%r15)
  0x00007fafb8c79138: movabs  $0x0,%r10
  0x00007fafb8c79142: mov     %r10,0x328(%r15)
  0x00007fafb8c79149: vzeroupper
  0x00007fafb8c7914c: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c79154: je      0x7fafb8c7915f
  0x00007fafb8c7915a: jmpq    0x7fafb8c5c780
  0x00007fafb8c7915f: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c79163: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c79167: retq
  0x00007fafb8c79168: movzwl  0x1(%r13),%edx
  0x00007fafb8c7916d: mov     0xffffffffffffffd0(%rbp),%rcx
  0x00007fafb8c79171: shl     $0x2,%edx
  0x00007fafb8c79174: mov     0x38(%rcx,%rdx,8),%rbx
  0x00007fafb8c79179: mov     0x40(%rcx,%rdx,8),%eax
  0x00007fafb8c7917d: mov     %eax,%edx
  0x00007fafb8c7917f: shr     $0x15,%edx
  0x00007fafb8c79182: and     $0x1,%edx
  0x00007fafb8c79185: shr     $0x1c,%eax
  0x00007fafb8c79188: and     $0xf,%eax
  0x00007fafb8c7918b: jne     0x7fafb8c791cf
  0x00007fafb8c79191: mov     (%rsp),%eax
  0x00007fafb8c79194: add     $0x8,%rsp
  0x00007fafb8c79198: pop     %rcx
  0x00007fafb8c79199: cmp     (%rcx),%rax
  0x00007fafb8c7919c: mov     %al,(%rcx,%rbx)
  0x00007fafb8c7919f: movzwl  0x1(%r13),%ecx
  0x00007fafb8c791a4: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c791a8: shl     $0x2,%ecx
  0x00007fafb8c791ab: mov     0x28(%rbx,%rcx,8),%ebx
  0x00007fafb8c791af: shr     $0x18,%ebx
  0x00007fafb8c791b2: and     $0xff,%ebx
  0x00007fafb8c791b8: mov     $0xd4,%ecx
  0x00007fafb8c791bd: cmp     $0x0,%ebx
  0x00007fafb8c791c0: je      0x7fafb8c791ca
  0x00007fafb8c791c6: mov     %cl,0x0(%r13)
  0x00007fafb8c791ca: jmpq    0x7fafb8c7951a
  0x00007fafb8c791cf: cmp     $0x1,%eax
  0x00007fafb8c791d2: jne     0x7fafb8c79219
  0x00007fafb8c791d8: mov     (%rsp),%eax
  0x00007fafb8c791db: add     $0x8,%rsp
  0x00007fafb8c791df: pop     %rcx
  0x00007fafb8c791e0: cmp     (%rcx),%rax
  0x00007fafb8c791e3: and     $0x1,%eax
  0x00007fafb8c791e6: mov     %al,(%rcx,%rbx)
  0x00007fafb8c791e9: movzwl  0x1(%r13),%ecx
  0x00007fafb8c791ee: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c791f2: shl     $0x2,%ecx
  0x00007fafb8c791f5: mov     0x28(%rbx,%rcx,8),%ebx
  0x00007fafb8c791f9: shr     $0x18,%ebx
  0x00007fafb8c791fc: and     $0xff,%ebx
  0x00007fafb8c79202: mov     $0xd5,%ecx
  0x00007fafb8c79207: cmp     $0x0,%ebx
  0x00007fafb8c7920a: je      0x7fafb8c79214
  0x00007fafb8c79210: mov     %cl,0x0(%r13)
  0x00007fafb8c79214: jmpq    0x7fafb8c7951a
  0x00007fafb8c79219: cmp     $0x8,%eax
  0x00007fafb8c7921c: jne     0x7fafb8c79372
  0x00007fafb8c79222: pop     %rax
  0x00007fafb8c79223: pop     %rcx
  0x00007fafb8c79224: cmp     (%rcx),%rax
  0x00007fafb8c79227: lea     (%rcx,%rbx),%rdx
  0x00007fafb8c7922b: cmpb    $0x0,0x30(%r15)
  0x00007fafb8c79230: je      0x7fafb8c79297
  0x00007fafb8c79236: mov     (%rdx),%ebx
  0x00007fafb8c79238: shl     $0x3,%rbx
  0x00007fafb8c7923c: cmp     $0x0,%rbx
  0x00007fafb8c79240: je      0x7fafb8c79297
  0x00007fafb8c79246: mov     0x38(%r15),%r8
  0x00007fafb8c7924a: cmp     $0x0,%r8
  0x00007fafb8c7924e: je      0x7fafb8c79268
  0x00007fafb8c79254: sub     $0x8,%r8
  0x00007fafb8c79258: mov     %r8,0x38(%r15)
  0x00007fafb8c7925c: add     0x48(%r15),%r8
  0x00007fafb8c79260: mov     %rbx,(%r8)
  0x00007fafb8c79263: jmpq    0x7fafb8c79297
  0x00007fafb8c79268: push    %rax
  0x00007fafb8c79269: push    %rdx
  0x00007fafb8c7926a: push    %rbx
  0x00007fafb8c7926b: mov     %r15,%rsi
  0x00007fafb8c7926e: mov     %rbx,%rdi
  0x00007fafb8c79271: test    $0xf,%esp
  0x00007fafb8c79277: je      0x7fafb8c7928f
  0x00007fafb8c7927d: sub     $0x8,%rsp
  0x00007fafb8c79281: callq   0x7fafd7c74620
  0x00007fafb8c79286: add     $0x8,%rsp
  0x00007fafb8c7928a: jmpq    0x7fafb8c79294
  0x00007fafb8c7928f: callq   0x7fafd7c74620
  0x00007fafb8c79294: pop     %rbx
  0x00007fafb8c79295: pop     %rdx
  0x00007fafb8c79296: pop     %rax
  0x00007fafb8c79297: mov     %rax,%rbx
  0x00007fafb8c7929a: shr     $0x3,%rax
  0x00007fafb8c7929e: mov     %eax,(%rdx)
  0x00007fafb8c792a0: mov     %rdx,%r8
  0x00007fafb8c792a3: xor     %rbx,%r8
  0x00007fafb8c792a6: shr     $0x14,%r8
  0x00007fafb8c792aa: je      0x7fafb8c79342
  0x00007fafb8c792b0: cmp     $0x0,%rbx
  0x00007fafb8c792b4: je      0x7fafb8c79342
  0x00007fafb8c792ba: mov     %rdx,%r8
  0x00007fafb8c792bd: shr     $0x9,%r8
  0x00007fafb8c792c1: movabs  $0x7fafb0000000,%rbx
  0x00007fafb8c792cb: add     %rbx,%r8
  0x00007fafb8c792ce: cmpb    $0x20,(%r8)
  0x00007fafb8c792d2: je      0x7fafb8c79342
  0x00007fafb8c792d8: lock addl $0x0,0xffffffffffffffc0(%rsp)
  0x00007fafb8c792de: cmpb    $0x0,(%r8)
  0x00007fafb8c792e2: je      0x7fafb8c79342
  0x00007fafb8c792e8: movb    $0x0,(%r8)
  0x00007fafb8c792ec: cmpl    $0x0,0x70(%r15)
  0x00007fafb8c792f4: je      0x7fafb8c79315
  0x00007fafb8c792fa: subl    $0x8,0x70(%r15)
  0x00007fafb8c792ff: mov     0x80(%r15),%rbx
  0x00007fafb8c79306: movsxd  0x70(%r15),%r10
  0x00007fafb8c7930a: add     %r10,%rbx
  0x00007fafb8c7930d: mov     %r8,(%rbx)
  0x00007fafb8c79310: jmpq    0x7fafb8c79342
  0x00007fafb8c79315: push    %rdx
  0x00007fafb8c79316: push    %rbx
  0x00007fafb8c79317: mov     %r15,%rsi
  0x00007fafb8c7931a: mov     %r8,%rdi
  0x00007fafb8c7931d: test    $0xf,%esp
  0x00007fafb8c79323: je      0x7fafb8c7933b
  0x00007fafb8c79329: sub     $0x8,%rsp
  0x00007fafb8c7932d: callq   0x7fafd7c74650
  0x00007fafb8c79332: add     $0x8,%rsp
  0x00007fafb8c79336: jmpq    0x7fafb8c79340
  0x00007fafb8c7933b: callq   0x7fafd7c74650
  0x00007fafb8c79340: pop     %rbx
  0x00007fafb8c79341: pop     %rdx
  0x00007fafb8c79342: movzwl  0x1(%r13),%ecx
  0x00007fafb8c79347: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c7934b: shl     $0x2,%ecx
  0x00007fafb8c7934e: mov     0x28(%rbx,%rcx,8),%ebx
  0x00007fafb8c79352: shr     $0x18,%ebx
  0x00007fafb8c79355: and     $0xff,%ebx
  0x00007fafb8c7935b: mov     $0xd3,%ecx
  0x00007fafb8c79360: cmp     $0x0,%ebx
  0x00007fafb8c79363: je      0x7fafb8c7936d
  0x00007fafb8c79369: mov     %cl,0x0(%r13)
  0x00007fafb8c7936d: jmpq    0x7fafb8c7951a
  0x00007fafb8c79372: cmp     $0x4,%eax
  0x00007fafb8c79375: jne     0x7fafb8c793b9
  0x00007fafb8c7937b: mov     (%rsp),%eax
  0x00007fafb8c7937e: add     $0x8,%rsp
  0x00007fafb8c79382: pop     %rcx
  0x00007fafb8c79383: cmp     (%rcx),%rax
  0x00007fafb8c79386: mov     %eax,(%rcx,%rbx)
  0x00007fafb8c79389: movzwl  0x1(%r13),%ecx
  0x00007fafb8c7938e: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c79392: shl     $0x2,%ecx
  0x00007fafb8c79395: mov     0x28(%rbx,%rcx,8),%ebx
  0x00007fafb8c79399: shr     $0x18,%ebx
  0x00007fafb8c7939c: and     $0xff,%ebx
  0x00007fafb8c793a2: mov     $0xd9,%ecx
  0x00007fafb8c793a7: cmp     $0x0,%ebx
  0x00007fafb8c793aa: je      0x7fafb8c793b4
  0x00007fafb8c793b0: mov     %cl,0x0(%r13)
  0x00007fafb8c793b4: jmpq    0x7fafb8c7951a
  0x00007fafb8c793b9: cmp     $0x2,%eax
  0x00007fafb8c793bc: jne     0x7fafb8c79401
  0x00007fafb8c793c2: mov     (%rsp),%eax
  0x00007fafb8c793c5: add     $0x8,%rsp
  0x00007fafb8c793c9: pop     %rcx
  0x00007fafb8c793ca: cmp     (%rcx),%rax
  0x00007fafb8c793cd: mov     %ax,(%rcx,%rbx)
  0x00007fafb8c793d1: movzwl  0x1(%r13),%ecx
  0x00007fafb8c793d6: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c793da: shl     $0x2,%ecx
  0x00007fafb8c793dd: mov     0x28(%rbx,%rcx,8),%ebx
  0x00007fafb8c793e1: shr     $0x18,%ebx
  0x00007fafb8c793e4: and     $0xff,%ebx
  0x00007fafb8c793ea: mov     $0xd6,%ecx
  0x00007fafb8c793ef: cmp     $0x0,%ebx
  0x00007fafb8c793f2: je      0x7fafb8c793fc
  0x00007fafb8c793f8: mov     %cl,0x0(%r13)
  0x00007fafb8c793fc: jmpq    0x7fafb8c7951a
  0x00007fafb8c79401: cmp     $0x3,%eax
  0x00007fafb8c79404: jne     0x7fafb8c79449
  0x00007fafb8c7940a: mov     (%rsp),%eax
  0x00007fafb8c7940d: add     $0x8,%rsp
  0x00007fafb8c79411: pop     %rcx
  0x00007fafb8c79412: cmp     (%rcx),%rax
  0x00007fafb8c79415: mov     %ax,(%rcx,%rbx)
  0x00007fafb8c79419: movzwl  0x1(%r13),%ecx
  0x00007fafb8c7941e: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c79422: shl     $0x2,%ecx
  0x00007fafb8c79425: mov     0x28(%rbx,%rcx,8),%ebx
  0x00007fafb8c79429: shr     $0x18,%ebx
  0x00007fafb8c7942c: and     $0xff,%ebx
  0x00007fafb8c79432: mov     $0xdb,%ecx
  0x00007fafb8c79437: cmp     $0x0,%ebx
  0x00007fafb8c7943a: je      0x7fafb8c79444
  0x00007fafb8c79440: mov     %cl,0x0(%r13)
  0x00007fafb8c79444: jmpq    0x7fafb8c7951a
  0x00007fafb8c79449: cmp     $0x5,%eax
  0x00007fafb8c7944c: jne     0x7fafb8c79492
  0x00007fafb8c79452: mov     (%rsp),%rax
  0x00007fafb8c79456: add     $0x10,%rsp
  0x00007fafb8c7945a: pop     %rcx
  0x00007fafb8c7945b: cmp     (%rcx),%rax
  0x00007fafb8c7945e: mov     %rax,(%rcx,%rbx)
  0x00007fafb8c79462: movzwl  0x1(%r13),%ecx
  0x00007fafb8c79467: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c7946b: shl     $0x2,%ecx
  0x00007fafb8c7946e: mov     0x28(%rbx,%rcx,8),%ebx
  0x00007fafb8c79472: shr     $0x18,%ebx
  0x00007fafb8c79475: and     $0xff,%ebx
  0x00007fafb8c7947b: mov     $0xda,%ecx
  0x00007fafb8c79480: cmp     $0x0,%ebx
  0x00007fafb8c79483: je      0x7fafb8c7948d
  0x00007fafb8c79489: mov     %cl,0x0(%r13)
  0x00007fafb8c7948d: jmpq    0x7fafb8c7951a
  0x00007fafb8c79492: cmp     $0x6,%eax
  0x00007fafb8c79495: jne     0x7fafb8c794dd
  0x00007fafb8c7949b: vmovss  (%rsp),%xmm0
  0x00007fafb8c794a0: add     $0x8,%rsp
  0x00007fafb8c794a4: pop     %rcx
  0x00007fafb8c794a5: cmp     (%rcx),%rax
  0x00007fafb8c794a8: vmovss  %xmm0,(%rcx,%rbx)
  0x00007fafb8c794ad: movzwl  0x1(%r13),%ecx
  0x00007fafb8c794b2: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c794b6: shl     $0x2,%ecx
  0x00007fafb8c794b9: mov     0x28(%rbx,%rcx,8),%ebx
  0x00007fafb8c794bd: shr     $0x18,%ebx
  0x00007fafb8c794c0: and     $0xff,%ebx
  0x00007fafb8c794c6: mov     $0xd8,%ecx
  0x00007fafb8c794cb: cmp     $0x0,%ebx
  0x00007fafb8c794ce: je      0x7fafb8c794d8
  0x00007fafb8c794d4: mov     %cl,0x0(%r13)
  0x00007fafb8c794d8: jmpq    0x7fafb8c7951a
  0x00007fafb8c794dd: vmovsd  (%rsp),%xmm0
  0x00007fafb8c794e2: add     $0x10,%rsp
  0x00007fafb8c794e6: pop     %rcx
  0x00007fafb8c794e7: cmp     (%rcx),%rax
  0x00007fafb8c794ea: vmovsd  %xmm0,(%rcx,%rbx)
  0x00007fafb8c794ef: movzwl  0x1(%r13),%ecx
  0x00007fafb8c794f4: mov     0xffffffffffffffd0(%rbp),%rbx
  0x00007fafb8c794f8: shl     $0x2,%ecx
  0x00007fafb8c794fb: mov     0x28(%rbx,%rcx,8),%ebx
  0x00007fafb8c794ff: shr     $0x18,%ebx
  0x00007fafb8c79502: and     $0xff,%ebx
  0x00007fafb8c79508: mov     $0xd7,%ecx
  0x00007fafb8c7950d: cmp     $0x0,%ebx
  0x00007fafb8c79510: je      0x7fafb8c7951a
  0x00007fafb8c79516: mov     %cl,0x0(%r13)
  0x00007fafb8c7951a: test    %edx,%edx
  0x00007fafb8c7951c: je      0x7fafb8c79528
  0x00007fafb8c79522: lock addl $0x0,0xffffffffffffffc0(%rsp)
  0x00007fafb8c79528: movzbl  0x3(%r13),%ebx
  0x00007fafb8c7952d: add     $0x3,%r13
  0x00007fafb8c79531: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c7953b: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7953f: nop

----------------------------------------------------------------------
invokevirtual  182 invokevirtual  [0x00007fafb8c79560, 0x00007fafb8c79a60]  1280 bytes

Argument 0 is unknown.RIP: 0x7fafb8c79560 Code size: 0x00000500
  0x00007fafb8c79560: push    %rax
  0x00007fafb8c79561: jmpq    0x7fafb8c7959f
  0x00007fafb8c79566: sub     $0x8,%rsp
  0x00007fafb8c7956a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c7956f: jmpq    0x7fafb8c7959f
  0x00007fafb8c79574: sub     $0x10,%rsp
  0x00007fafb8c79578: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c7957d: jmpq    0x7fafb8c7959f
  0x00007fafb8c79582: sub     $0x10,%rsp
  0x00007fafb8c79586: mov     %rax,(%rsp)
  0x00007fafb8c7958a: movabs  $0x0,%r10
  0x00007fafb8c79594: mov     %r10,0x8(%rsp)
  0x00007fafb8c79599: jmpq    0x7fafb8c7959f
  0x00007fafb8c7959e: push    %rax
  0x00007fafb8c7959f: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c795a3: movzwl  0x1(%r13),%edx
  0x00007fafb8c795a8: mov     0xffffffffffffffd0(%rbp),%rcx
  0x00007fafb8c795ac: shl     $0x2,%edx
  0x00007fafb8c795af: mov     0x28(%rcx,%rdx,8),%ebx
  0x00007fafb8c795b3: shr     $0x18,%ebx
  0x00007fafb8c795b6: and     $0xff,%ebx
  0x00007fafb8c795bc: cmp     $0xb6,%ebx
  0x00007fafb8c795c2: je      0x7fafb8c79678
  0x00007fafb8c795c8: mov     $0xb6,%ebx
  0x00007fafb8c795cd: callq   0x7fafb8c795d7
  0x00007fafb8c795d2: jmpq    0x7fafb8c7966c
  0x00007fafb8c795d7: mov     %rbx,%rsi
  0x00007fafb8c795da: lea     0x8(%rsp),%rax
  0x00007fafb8c795df: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c795e3: mov     %r15,%rdi
  0x00007fafb8c795e6: vzeroupper
  0x00007fafb8c795e9: mov     %rbp,0x330(%r15)
  0x00007fafb8c795f0: mov     %rax,0x320(%r15)
  0x00007fafb8c795f7: test    $0xf,%esp
  0x00007fafb8c795fd: je      0x7fafb8c79615
  0x00007fafb8c79603: sub     $0x8,%rsp
  0x00007fafb8c79607: callq   0x7fafd7d841d0
  0x00007fafb8c7960c: add     $0x8,%rsp
  0x00007fafb8c79610: jmpq    0x7fafb8c7961a
  0x00007fafb8c79615: callq   0x7fafd7d841d0
  0x00007fafb8c7961a: movabs  $0x0,%r10
  0x00007fafb8c79624: mov     %r10,0x320(%r15)
  0x00007fafb8c7962b: movabs  $0x0,%r10
  0x00007fafb8c79635: mov     %r10,0x330(%r15)
  0x00007fafb8c7963c: movabs  $0x0,%r10
  0x00007fafb8c79646: mov     %r10,0x328(%r15)
  0x00007fafb8c7964d: vzeroupper
  0x00007fafb8c79650: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c79658: je      0x7fafb8c79663
  0x00007fafb8c7965e: jmpq    0x7fafb8c5c780
  0x00007fafb8c79663: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c79667: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7966b: retq
  0x00007fafb8c7966c: movzwl  0x1(%r13),%edx
  0x00007fafb8c79671: mov     0xffffffffffffffd0(%rbp),%rcx
  0x00007fafb8c79675: shl     $0x2,%edx
  0x00007fafb8c79678: mov     0x38(%rcx,%rdx,8),%rbx
  0x00007fafb8c7967d: mov     0x40(%rcx,%rdx,8),%edx
  0x00007fafb8c79681: mov     %edx,%ecx
  0x00007fafb8c79683: and     $0xff,%ecx
  0x00007fafb8c79689: mov     0xfffffffffffffff8(%rsp,%rcx,8),%rcx
  0x00007fafb8c7968e: mov     %edx,%r13d
  0x00007fafb8c79691: shr     $0x1c,%edx
  0x00007fafb8c79694: movabs  $0x7fafd89a8940,%r10
  0x00007fafb8c7969e: mov     (%r10,%rdx,8),%rdx
  0x00007fafb8c796a2: push    %rdx
  0x00007fafb8c796a3: mov     %r13d,%edx
  0x00007fafb8c796a6: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c796aa: mov     %edx,%eax
  0x00007fafb8c796ac: and     $0x100000,%eax
  0x00007fafb8c796b2: je      0x7fafb8c7983a
  0x00007fafb8c796b8: cmp     (%rcx),%rax
  0x00007fafb8c796bb: mov     0xffffffffffffffd8(%rbp),%rax
  0x00007fafb8c796bf: test    %rax,%rax
  0x00007fafb8c796c2: je      0x7fafb8c796da
  0x00007fafb8c796c8: addq    $0x1,0x8(%rax)
  0x00007fafb8c796cd: sbbq    $0x0,0x8(%rax)
  0x00007fafb8c796d2: add     $0x38,%rax
  0x00007fafb8c796d6: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c796da: mov     0xffffffffffffffd8(%rbp),%rax
  0x00007fafb8c796de: test    %rax,%rax
  0x00007fafb8c796e1: je      0x7fafb8c7982e
  0x00007fafb8c796e7: cmpb    $0xb,0xffffffffffffffc8(%rax)
  0x00007fafb8c796eb: jne     0x7fafb8c7982e
  0x00007fafb8c796f1: add     $0x8,%rax
  0x00007fafb8c796f5: mov     0xfffffffffffffff8(%rax),%r13
  0x00007fafb8c796f9: sub     $0x0,%r13d
  0x00007fafb8c796fd: cmp     $0x2,%r13d
  0x00007fafb8c79701: jl      0x7fafb8c79823
  0x00007fafb8c79707: mov     0x8(%rbx),%r13
  0x00007fafb8c7970b: movzwl  0x34(%r13),%r13d
  0x00007fafb8c79710: sub     (%rax),%r13
  0x00007fafb8c79713: sub     $0x1,%r13d
  0x00007fafb8c79717: mov     0x8(%rsp,%r13,8),%r13
  0x00007fafb8c7971c: test    %r13,%r13
  0x00007fafb8c7971f: jne     0x7fafb8c7972b
  0x00007fafb8c79721: orq     $0x1,0x8(%rax)
  0x00007fafb8c79729: jmp     0x7fafb8c79784
  0x00007fafb8c7972b: mov     0x8(%r13),%r13d
  0x00007fafb8c7972f: movabs  $0x800000000,%r12
  0x00007fafb8c79739: add     %r12,%r13
  0x00007fafb8c7973c: xor     %r12,%r12
  0x00007fafb8c7973f: xor     0x8(%rax),%r13
  0x00007fafb8c79743: test    $0xfffffffffffffffc,%r13
  0x00007fafb8c7974a: je      0x7fafb8c79784
  0x00007fafb8c7974c: test    $0x2,%r13
  0x00007fafb8c79753: jne     0x7fafb8c79784
  0x00007fafb8c79755: cmpq    $0x0,0x8(%rax)
  0x00007fafb8c7975d: je      0x7fafb8c79780
  0x00007fafb8c7975f: cmpq    $0x1,0x8(%rax)
  0x00007fafb8c79767: je      0x7fafb8c79780
  0x00007fafb8c79769: xor     0x8(%rax),%r13
  0x00007fafb8c7976d: test    $0xfffffffffffffffc,%r13
  0x00007fafb8c79774: je      0x7fafb8c79784
  0x00007fafb8c79776: orq     $0x2,0x8(%rax)
  0x00007fafb8c7977e: jmp     0x7fafb8c79784
  0x00007fafb8c79780: mov     %r13,0x8(%rax)
  0x00007fafb8c79784: add     $0x10,%rax
  0x00007fafb8c79788: mov     0xffffffffffffffe8(%rax),%r13
  0x00007fafb8c7978c: sub     $0x2,%r13d
  0x00007fafb8c79790: cmp     $0x2,%r13d
  0x00007fafb8c79794: jl      0x7fafb8c79823
  0x00007fafb8c7979a: mov     0x8(%rbx),%r13
  0x00007fafb8c7979e: movzwl  0x34(%r13),%r13d
  0x00007fafb8c797a3: sub     (%rax),%r13
  0x00007fafb8c797a6: sub     $0x1,%r13d
  0x00007fafb8c797aa: mov     0x8(%rsp,%r13,8),%r13
  0x00007fafb8c797af: test    %r13,%r13
  0x00007fafb8c797b2: jne     0x7fafb8c797be
  0x00007fafb8c797b4: orq     $0x1,0x8(%rax)
  0x00007fafb8c797bc: jmp     0x7fafb8c79817
  0x00007fafb8c797be: mov     0x8(%r13),%r13d
  0x00007fafb8c797c2: movabs  $0x800000000,%r12
  0x00007fafb8c797cc: add     %r12,%r13
  0x00007fafb8c797cf: xor     %r12,%r12
  0x00007fafb8c797d2: xor     0x8(%rax),%r13
  0x00007fafb8c797d6: test    $0xfffffffffffffffc,%r13
  0x00007fafb8c797dd: je      0x7fafb8c79817
  0x00007fafb8c797df: test    $0x2,%r13
  0x00007fafb8c797e6: jne     0x7fafb8c79817
  0x00007fafb8c797e8: cmpq    $0x0,0x8(%rax)
  0x00007fafb8c797f0: je      0x7fafb8c79813
  0x00007fafb8c797f2: cmpq    $0x1,0x8(%rax)
  0x00007fafb8c797fa: je      0x7fafb8c79813
  0x00007fafb8c797fc: xor     0x8(%rax),%r13
  0x00007fafb8c79800: test    $0xfffffffffffffffc,%r13
  0x00007fafb8c79807: je      0x7fafb8c79817
  0x00007fafb8c79809: orq     $0x2,0x8(%rax)
  0x00007fafb8c79811: jmp     0x7fafb8c79817
  0x00007fafb8c79813: mov     %r13,0x8(%rax)
  0x00007fafb8c79817: add     $0x10,%rax
  0x00007fafb8c7981b: mov     0xffffffffffffffd8(%rax),%r13
  0x00007fafb8c7981f: sub     $0x4,%r13d
  0x00007fafb8c79823: shl     $0x3,%r13d
  0x00007fafb8c79827: add     %r13,%rax
  0x00007fafb8c7982a: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c7982e: lea     0x8(%rsp),%r13
  0x00007fafb8c79833: mov     %r13,0xfffffffffffffff0(%rbp)
  0x00007fafb8c79837: jmpq    *0x48(%rbx)
  0x00007fafb8c7983a: mov     0x8(%rcx),%eax
  0x00007fafb8c7983d: movabs  $0x800000000,%r12
  0x00007fafb8c79847: add     %r12,%rax
  0x00007fafb8c7984a: xor     %r12,%r12
  0x00007fafb8c7984d: mov     0xffffffffffffffd8(%rbp),%r14
  0x00007fafb8c79851: test    %r14,%r14
  0x00007fafb8c79854: je      0x7fafb8c798ef
  0x00007fafb8c7985a: mov     0x18(%r14),%rdx
  0x00007fafb8c7985e: cmp     %rax,%rdx
  0x00007fafb8c79861: jne     0x7fafb8c79876
  0x00007fafb8c79867: addq    $0x1,0x20(%r14)
  0x00007fafb8c7986c: sbbq    $0x0,0x20(%r14)
  0x00007fafb8c79871: jmpq    0x7fafb8c798e7
  0x00007fafb8c79876: test    %rdx,%rdx
  0x00007fafb8c79879: je      0x7fafb8c798c1
  0x00007fafb8c7987f: mov     0x28(%r14),%rdx
  0x00007fafb8c79883: cmp     %rax,%rdx
  0x00007fafb8c79886: jne     0x7fafb8c7989b
  0x00007fafb8c7988c: addq    $0x1,0x30(%r14)
  0x00007fafb8c79891: sbbq    $0x0,0x30(%r14)
  0x00007fafb8c79896: jmpq    0x7fafb8c798e7
  0x00007fafb8c7989b: test    %rdx,%rdx
  0x00007fafb8c7989e: je      0x7fafb8c798af
  0x00007fafb8c798a0: addq    $0x1,0x8(%r14)
  0x00007fafb8c798a5: sbbq    $0x0,0x8(%r14)
  0x00007fafb8c798aa: jmpq    0x7fafb8c798e7
  0x00007fafb8c798af: mov     %rax,0x28(%r14)
  0x00007fafb8c798b3: mov     $0x1,%edx
  0x00007fafb8c798b8: mov     %rdx,0x30(%r14)
  0x00007fafb8c798bc: jmpq    0x7fafb8c798e7
  0x00007fafb8c798c1: cmp     0x28(%r14),%rax
  0x00007fafb8c798c5: jne     0x7fafb8c798da
  0x00007fafb8c798cb: addq    $0x1,0x30(%r14)
  0x00007fafb8c798d0: sbbq    $0x0,0x30(%r14)
  0x00007fafb8c798d5: jmpq    0x7fafb8c798e7
  0x00007fafb8c798da: mov     %rax,0x18(%r14)
  0x00007fafb8c798de: mov     $0x1,%edx
  0x00007fafb8c798e3: mov     %rdx,0x20(%r14)
  0x00007fafb8c798e7: add     $0x38,%r14
  0x00007fafb8c798eb: mov     %r14,0xffffffffffffffd8(%rbp)
  0x00007fafb8c798ef: mov     0x1d0(%rax,%rbx,8),%rbx
  0x00007fafb8c798f7: mov     0xffffffffffffffd8(%rbp),%rdx
  0x00007fafb8c798fb: test    %rdx,%rdx
  0x00007fafb8c798fe: je      0x7fafb8c79a4b
  0x00007fafb8c79904: cmpb    $0xb,0xffffffffffffffc8(%rdx)
  0x00007fafb8c79908: jne     0x7fafb8c79a4b
  0x00007fafb8c7990e: add     $0x8,%rdx
  0x00007fafb8c79912: mov     0xfffffffffffffff8(%rdx),%r13
  0x00007fafb8c79916: sub     $0x0,%r13d
  0x00007fafb8c7991a: cmp     $0x2,%r13d
  0x00007fafb8c7991e: jl      0x7fafb8c79a40
  0x00007fafb8c79924: mov     0x8(%rbx),%r13
  0x00007fafb8c79928: movzwl  0x34(%r13),%r13d
  0x00007fafb8c7992d: sub     (%rdx),%r13
  0x00007fafb8c79930: sub     $0x1,%r13d
  0x00007fafb8c79934: mov     0x8(%rsp,%r13,8),%r13
  0x00007fafb8c79939: test    %r13,%r13
  0x00007fafb8c7993c: jne     0x7fafb8c79948
  0x00007fafb8c7993e: orq     $0x1,0x8(%rdx)
  0x00007fafb8c79946: jmp     0x7fafb8c799a1
  0x00007fafb8c79948: mov     0x8(%r13),%r13d
  0x00007fafb8c7994c: movabs  $0x800000000,%r12
  0x00007fafb8c79956: add     %r12,%r13
  0x00007fafb8c79959: xor     %r12,%r12
  0x00007fafb8c7995c: xor     0x8(%rdx),%r13
  0x00007fafb8c79960: test    $0xfffffffffffffffc,%r13
  0x00007fafb8c79967: je      0x7fafb8c799a1
  0x00007fafb8c79969: test    $0x2,%r13
  0x00007fafb8c79970: jne     0x7fafb8c799a1
  0x00007fafb8c79972: cmpq    $0x0,0x8(%rdx)
  0x00007fafb8c7997a: je      0x7fafb8c7999d
  0x00007fafb8c7997c: cmpq    $0x1,0x8(%rdx)
  0x00007fafb8c79984: je      0x7fafb8c7999d
  0x00007fafb8c79986: xor     0x8(%rdx),%r13
  0x00007fafb8c7998a: test    $0xfffffffffffffffc,%r13
  0x00007fafb8c79991: je      0x7fafb8c799a1
  0x00007fafb8c79993: orq     $0x2,0x8(%rdx)
  0x00007fafb8c7999b: jmp     0x7fafb8c799a1
  0x00007fafb8c7999d: mov     %r13,0x8(%rdx)
  0x00007fafb8c799a1: add     $0x10,%rdx
  0x00007fafb8c799a5: mov     0xffffffffffffffe8(%rdx),%r13
  0x00007fafb8c799a9: sub     $0x2,%r13d
  0x00007fafb8c799ad: cmp     $0x2,%r13d
  0x00007fafb8c799b1: jl      0x7fafb8c79a40
  0x00007fafb8c799b7: mov     0x8(%rbx),%r13
  0x00007fafb8c799bb: movzwl  0x34(%r13),%r13d
  0x00007fafb8c799c0: sub     (%rdx),%r13
  0x00007fafb8c799c3: sub     $0x1,%r13d
  0x00007fafb8c799c7: mov     0x8(%rsp,%r13,8),%r13
  0x00007fafb8c799cc: test    %r13,%r13
  0x00007fafb8c799cf: jne     0x7fafb8c799db
  0x00007fafb8c799d1: orq     $0x1,0x8(%rdx)
  0x00007fafb8c799d9: jmp     0x7fafb8c79a34
  0x00007fafb8c799db: mov     0x8(%r13),%r13d
  0x00007fafb8c799df: movabs  $0x800000000,%r12
  0x00007fafb8c799e9: add     %r12,%r13
  0x00007fafb8c799ec: xor     %r12,%r12
  0x00007fafb8c799ef: xor     0x8(%rdx),%r13
  0x00007fafb8c799f3: test    $0xfffffffffffffffc,%r13
  0x00007fafb8c799fa: je      0x7fafb8c79a34
  0x00007fafb8c799fc: test    $0x2,%r13
  0x00007fafb8c79a03: jne     0x7fafb8c79a34
  0x00007fafb8c79a05: cmpq    $0x0,0x8(%rdx)
  0x00007fafb8c79a0d: je      0x7fafb8c79a30
  0x00007fafb8c79a0f: cmpq    $0x1,0x8(%rdx)
  0x00007fafb8c79a17: je      0x7fafb8c79a30
  0x00007fafb8c79a19: xor     0x8(%rdx),%r13
  0x00007fafb8c79a1d: test    $0xfffffffffffffffc,%r13
  0x00007fafb8c79a24: je      0x7fafb8c79a34
  0x00007fafb8c79a26: orq     $0x2,0x8(%rdx)
  0x00007fafb8c79a2e: jmp     0x7fafb8c79a34
  0x00007fafb8c79a30: mov     %r13,0x8(%rdx)
  0x00007fafb8c79a34: add     $0x10,%rdx
  0x00007fafb8c79a38: mov     0xffffffffffffffd8(%rdx),%r13
  0x00007fafb8c79a3c: sub     $0x4,%r13d
  0x00007fafb8c79a40: shl     $0x3,%r13d
  0x00007fafb8c79a44: add     %r13,%rdx
  0x00007fafb8c79a47: mov     %rdx,0xffffffffffffffd8(%rbp)
  0x00007fafb8c79a4b: lea     0x8(%rsp),%r13
  0x00007fafb8c79a50: mov     %r13,0xfffffffffffffff0(%rbp)
  0x00007fafb8c79a54: jmpq    *0x48(%rbx)
  0x00007fafb8c79a57: nop
  0x00007fafb8c79a58: add     %al,(%rax)
  0x00007fafb8c79a5a: add     %al,(%rax)
  0x00007fafb8c79a5c: add     %al,(%rax)
  0x00007fafb8c79a5e: add     %al,(%rax)

----------------------------------------------------------------------
invokespecial  183 invokespecial  [0x00007fafb8c79a80, 0x00007fafb8c79d60]  736 bytes

Argument 0 is unknown.RIP: 0x7fafb8c79a80 Code size: 0x000002e0
  0x00007fafb8c79a80: push    %rax
  0x00007fafb8c79a81: jmpq    0x7fafb8c79abf
  0x00007fafb8c79a86: sub     $0x8,%rsp
  0x00007fafb8c79a8a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c79a8f: jmpq    0x7fafb8c79abf
  0x00007fafb8c79a94: sub     $0x10,%rsp
  0x00007fafb8c79a98: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c79a9d: jmpq    0x7fafb8c79abf
  0x00007fafb8c79aa2: sub     $0x10,%rsp
  0x00007fafb8c79aa6: mov     %rax,(%rsp)
  0x00007fafb8c79aaa: movabs  $0x0,%r10
  0x00007fafb8c79ab4: mov     %r10,0x8(%rsp)
  0x00007fafb8c79ab9: jmpq    0x7fafb8c79abf
  0x00007fafb8c79abe: push    %rax
  0x00007fafb8c79abf: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c79ac3: movzwl  0x1(%r13),%edx
  0x00007fafb8c79ac8: mov     0xffffffffffffffd0(%rbp),%rcx
  0x00007fafb8c79acc: shl     $0x2,%edx
  0x00007fafb8c79acf: mov     0x28(%rcx,%rdx,8),%ebx
  0x00007fafb8c79ad3: shr     $0x10,%ebx
  0x00007fafb8c79ad6: and     $0xff,%ebx
  0x00007fafb8c79adc: cmp     $0xb7,%ebx
  0x00007fafb8c79ae2: je      0x7fafb8c79b98
  0x00007fafb8c79ae8: mov     $0xb7,%ebx
  0x00007fafb8c79aed: callq   0x7fafb8c79af7
  0x00007fafb8c79af2: jmpq    0x7fafb8c79b8c
  0x00007fafb8c79af7: mov     %rbx,%rsi
  0x00007fafb8c79afa: lea     0x8(%rsp),%rax
  0x00007fafb8c79aff: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c79b03: mov     %r15,%rdi
  0x00007fafb8c79b06: vzeroupper
  0x00007fafb8c79b09: mov     %rbp,0x330(%r15)
  0x00007fafb8c79b10: mov     %rax,0x320(%r15)
  0x00007fafb8c79b17: test    $0xf,%esp
  0x00007fafb8c79b1d: je      0x7fafb8c79b35
  0x00007fafb8c79b23: sub     $0x8,%rsp
  0x00007fafb8c79b27: callq   0x7fafd7d841d0
  0x00007fafb8c79b2c: add     $0x8,%rsp
  0x00007fafb8c79b30: jmpq    0x7fafb8c79b3a
  0x00007fafb8c79b35: callq   0x7fafd7d841d0
  0x00007fafb8c79b3a: movabs  $0x0,%r10
  0x00007fafb8c79b44: mov     %r10,0x320(%r15)
  0x00007fafb8c79b4b: movabs  $0x0,%r10
  0x00007fafb8c79b55: mov     %r10,0x330(%r15)
  0x00007fafb8c79b5c: movabs  $0x0,%r10
  0x00007fafb8c79b66: mov     %r10,0x328(%r15)
  0x00007fafb8c79b6d: vzeroupper
  0x00007fafb8c79b70: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c79b78: je      0x7fafb8c79b83
  0x00007fafb8c79b7e: jmpq    0x7fafb8c5c780
  0x00007fafb8c79b83: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c79b87: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c79b8b: retq
  0x00007fafb8c79b8c: movzwl  0x1(%r13),%edx
  0x00007fafb8c79b91: mov     0xffffffffffffffd0(%rbp),%rcx
  0x00007fafb8c79b95: shl     $0x2,%edx
  0x00007fafb8c79b98: mov     0x30(%rcx,%rdx,8),%rbx
  0x00007fafb8c79b9d: mov     0x40(%rcx,%rdx,8),%edx
  0x00007fafb8c79ba1: mov     %edx,%ecx
  0x00007fafb8c79ba3: and     $0xff,%ecx
  0x00007fafb8c79ba9: mov     0xfffffffffffffff8(%rsp,%rcx,8),%rcx
  0x00007fafb8c79bae: shr     $0x1c,%edx
  0x00007fafb8c79bb1: movabs  $0x7fafd89a8940,%r10
  0x00007fafb8c79bbb: mov     (%r10,%rdx,8),%rdx
  0x00007fafb8c79bbf: push    %rdx
  0x00007fafb8c79bc0: cmp     (%rcx),%rax
  0x00007fafb8c79bc3: mov     0xffffffffffffffd8(%rbp),%rax
  0x00007fafb8c79bc7: test    %rax,%rax
  0x00007fafb8c79bca: je      0x7fafb8c79be2
  0x00007fafb8c79bd0: addq    $0x1,0x8(%rax)
  0x00007fafb8c79bd5: sbbq    $0x0,0x8(%rax)
  0x00007fafb8c79bda: add     $0x10,%rax
  0x00007fafb8c79bde: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c79be2: mov     0xffffffffffffffd8(%rbp),%rax
  0x00007fafb8c79be6: test    %rax,%rax
  0x00007fafb8c79be9: je      0x7fafb8c79d36
  0x00007fafb8c79bef: cmpb    $0xa,0xfffffffffffffff0(%rax)
  0x00007fafb8c79bf3: jne     0x7fafb8c79d36
  0x00007fafb8c79bf9: add     $0x8,%rax
  0x00007fafb8c79bfd: mov     0xfffffffffffffff8(%rax),%r13
  0x00007fafb8c79c01: sub     $0x0,%r13d
  0x00007fafb8c79c05: cmp     $0x2,%r13d
  0x00007fafb8c79c09: jl      0x7fafb8c79d2b
  0x00007fafb8c79c0f: mov     0x8(%rbx),%r13
  0x00007fafb8c79c13: movzwl  0x34(%r13),%r13d
  0x00007fafb8c79c18: sub     (%rax),%r13
  0x00007fafb8c79c1b: sub     $0x1,%r13d
  0x00007fafb8c79c1f: mov     0x8(%rsp,%r13,8),%r13
  0x00007fafb8c79c24: test    %r13,%r13
  0x00007fafb8c79c27: jne     0x7fafb8c79c33
  0x00007fafb8c79c29: orq     $0x1,0x8(%rax)
  0x00007fafb8c79c31: jmp     0x7fafb8c79c8c
  0x00007fafb8c79c33: mov     0x8(%r13),%r13d
  0x00007fafb8c79c37: movabs  $0x800000000,%r12
  0x00007fafb8c79c41: add     %r12,%r13
  0x00007fafb8c79c44: xor     %r12,%r12
  0x00007fafb8c79c47: xor     0x8(%rax),%r13
  0x00007fafb8c79c4b: test    $0xfffffffffffffffc,%r13
  0x00007fafb8c79c52: je      0x7fafb8c79c8c
  0x00007fafb8c79c54: test    $0x2,%r13
  0x00007fafb8c79c5b: jne     0x7fafb8c79c8c
  0x00007fafb8c79c5d: cmpq    $0x0,0x8(%rax)
  0x00007fafb8c79c65: je      0x7fafb8c79c88
  0x00007fafb8c79c67: cmpq    $0x1,0x8(%rax)
  0x00007fafb8c79c6f: je      0x7fafb8c79c88
  0x00007fafb8c79c71: xor     0x8(%rax),%r13
  0x00007fafb8c79c75: test    $0xfffffffffffffffc,%r13
  0x00007fafb8c79c7c: je      0x7fafb8c79c8c
  0x00007fafb8c79c7e: orq     $0x2,0x8(%rax)
  0x00007fafb8c79c86: jmp     0x7fafb8c79c8c
  0x00007fafb8c79c88: mov     %r13,0x8(%rax)
  0x00007fafb8c79c8c: add     $0x10,%rax
  0x00007fafb8c79c90: mov     0xffffffffffffffe8(%rax),%r13
  0x00007fafb8c79c94: sub     $0x2,%r13d
  0x00007fafb8c79c98: cmp     $0x2,%r13d
  0x00007fafb8c79c9c: jl      0x7fafb8c79d2b
  0x00007fafb8c79ca2: mov     0x8(%rbx),%r13
  0x00007fafb8c79ca6: movzwl  0x34(%r13),%r13d
  0x00007fafb8c79cab: sub     (%rax),%r13
  0x00007fafb8c79cae: sub     $0x1,%r13d
  0x00007fafb8c79cb2: mov     0x8(%rsp,%r13,8),%r13
  0x00007fafb8c79cb7: test    %r13,%r13
  0x00007fafb8c79cba: jne     0x7fafb8c79cc6
  0x00007fafb8c79cbc: orq     $0x1,0x8(%rax)
  0x00007fafb8c79cc4: jmp     0x7fafb8c79d1f
  0x00007fafb8c79cc6: mov     0x8(%r13),%r13d
  0x00007fafb8c79cca: movabs  $0x800000000,%r12
  0x00007fafb8c79cd4: add     %r12,%r13
  0x00007fafb8c79cd7: xor     %r12,%r12
  0x00007fafb8c79cda: xor     0x8(%rax),%r13
  0x00007fafb8c79cde: test    $0xfffffffffffffffc,%r13
  0x00007fafb8c79ce5: je      0x7fafb8c79d1f
  0x00007fafb8c79ce7: test    $0x2,%r13
  0x00007fafb8c79cee: jne     0x7fafb8c79d1f
  0x00007fafb8c79cf0: cmpq    $0x0,0x8(%rax)
  0x00007fafb8c79cf8: je      0x7fafb8c79d1b
  0x00007fafb8c79cfa: cmpq    $0x1,0x8(%rax)
  0x00007fafb8c79d02: je      0x7fafb8c79d1b
  0x00007fafb8c79d04: xor     0x8(%rax),%r13
  0x00007fafb8c79d08: test    $0xfffffffffffffffc,%r13
  0x00007fafb8c79d0f: je      0x7fafb8c79d1f
  0x00007fafb8c79d11: orq     $0x2,0x8(%rax)
  0x00007fafb8c79d19: jmp     0x7fafb8c79d1f
  0x00007fafb8c79d1b: mov     %r13,0x8(%rax)
  0x00007fafb8c79d1f: add     $0x10,%rax
  0x00007fafb8c79d23: mov     0xffffffffffffffd8(%rax),%r13
  0x00007fafb8c79d27: sub     $0x4,%r13d
  0x00007fafb8c79d2b: shl     $0x3,%r13d
  0x00007fafb8c79d2f: add     %r13,%rax
  0x00007fafb8c79d32: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c79d36: lea     0x8(%rsp),%r13
  0x00007fafb8c79d3b: mov     %r13,0xfffffffffffffff0(%rbp)
  0x00007fafb8c79d3f: jmpq    *0x48(%rbx)
  0x00007fafb8c79d42: nopw    0x0(%rax,%rax)
  0x00007fafb8c79d48: add     %al,(%rax)
  0x00007fafb8c79d4a: add     %al,(%rax)
  0x00007fafb8c79d4c: add     %al,(%rax)
  0x00007fafb8c79d4e: add     %al,(%rax)
  0x00007fafb8c79d50: add     %al,(%rax)
  0x00007fafb8c79d52: add     %al,(%rax)
  0x00007fafb8c79d54: add     %al,(%rax)
  0x00007fafb8c79d56: add     %al,(%rax)
  0x00007fafb8c79d58: add     %al,(%rax)
  0x00007fafb8c79d5a: add     %al,(%rax)
  0x00007fafb8c79d5c: add     %al,(%rax)
  0x00007fafb8c79d5e: add     %al,(%rax)

----------------------------------------------------------------------
invokestatic  184 invokestatic  [0x00007fafb8c79d80, 0x00007fafb8c7a040]  704 bytes

Argument 0 is unknown.RIP: 0x7fafb8c79d80 Code size: 0x000002c0
  0x00007fafb8c79d80: push    %rax
  0x00007fafb8c79d81: jmpq    0x7fafb8c79dbf
  0x00007fafb8c79d86: sub     $0x8,%rsp
  0x00007fafb8c79d8a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c79d8f: jmpq    0x7fafb8c79dbf
  0x00007fafb8c79d94: sub     $0x10,%rsp
  0x00007fafb8c79d98: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c79d9d: jmpq    0x7fafb8c79dbf
  0x00007fafb8c79da2: sub     $0x10,%rsp
  0x00007fafb8c79da6: mov     %rax,(%rsp)
  0x00007fafb8c79daa: movabs  $0x0,%r10
  0x00007fafb8c79db4: mov     %r10,0x8(%rsp)
  0x00007fafb8c79db9: jmpq    0x7fafb8c79dbf
  0x00007fafb8c79dbe: push    %rax
  0x00007fafb8c79dbf: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c79dc3: movzwl  0x1(%r13),%edx
  0x00007fafb8c79dc8: mov     0xffffffffffffffd0(%rbp),%rcx
  0x00007fafb8c79dcc: shl     $0x2,%edx
  0x00007fafb8c79dcf: mov     0x28(%rcx,%rdx,8),%ebx
  0x00007fafb8c79dd3: shr     $0x10,%ebx
  0x00007fafb8c79dd6: and     $0xff,%ebx
  0x00007fafb8c79ddc: cmp     $0xb8,%ebx
  0x00007fafb8c79de2: je      0x7fafb8c79e98
  0x00007fafb8c79de8: mov     $0xb8,%ebx
  0x00007fafb8c79ded: callq   0x7fafb8c79df7
  0x00007fafb8c79df2: jmpq    0x7fafb8c79e8c
  0x00007fafb8c79df7: mov     %rbx,%rsi
  0x00007fafb8c79dfa: lea     0x8(%rsp),%rax
  0x00007fafb8c79dff: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c79e03: mov     %r15,%rdi
  0x00007fafb8c79e06: vzeroupper
  0x00007fafb8c79e09: mov     %rbp,0x330(%r15)
  0x00007fafb8c79e10: mov     %rax,0x320(%r15)
  0x00007fafb8c79e17: test    $0xf,%esp
  0x00007fafb8c79e1d: je      0x7fafb8c79e35
  0x00007fafb8c79e23: sub     $0x8,%rsp
  0x00007fafb8c79e27: callq   0x7fafd7d841d0
  0x00007fafb8c79e2c: add     $0x8,%rsp
  0x00007fafb8c79e30: jmpq    0x7fafb8c79e3a
  0x00007fafb8c79e35: callq   0x7fafd7d841d0
  0x00007fafb8c79e3a: movabs  $0x0,%r10
  0x00007fafb8c79e44: mov     %r10,0x320(%r15)
  0x00007fafb8c79e4b: movabs  $0x0,%r10
  0x00007fafb8c79e55: mov     %r10,0x330(%r15)
  0x00007fafb8c79e5c: movabs  $0x0,%r10
  0x00007fafb8c79e66: mov     %r10,0x328(%r15)
  0x00007fafb8c79e6d: vzeroupper
  0x00007fafb8c79e70: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c79e78: je      0x7fafb8c79e83
  0x00007fafb8c79e7e: jmpq    0x7fafb8c5c780
  0x00007fafb8c79e83: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c79e87: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c79e8b: retq
  0x00007fafb8c79e8c: movzwl  0x1(%r13),%edx
  0x00007fafb8c79e91: mov     0xffffffffffffffd0(%rbp),%rcx
  0x00007fafb8c79e95: shl     $0x2,%edx
  0x00007fafb8c79e98: mov     0x30(%rcx,%rdx,8),%rbx
  0x00007fafb8c79e9d: mov     0x40(%rcx,%rdx,8),%edx
  0x00007fafb8c79ea1: shr     $0x1c,%edx
  0x00007fafb8c79ea4: movabs  $0x7fafd89a8940,%r10
  0x00007fafb8c79eae: mov     (%r10,%rdx,8),%rdx
  0x00007fafb8c79eb2: push    %rdx
  0x00007fafb8c79eb3: mov     0xffffffffffffffd8(%rbp),%rax
  0x00007fafb8c79eb7: test    %rax,%rax
  0x00007fafb8c79eba: je      0x7fafb8c79ed2
  0x00007fafb8c79ec0: addq    $0x1,0x8(%rax)
  0x00007fafb8c79ec5: sbbq    $0x0,0x8(%rax)
  0x00007fafb8c79eca: add     $0x10,%rax
  0x00007fafb8c79ece: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c79ed2: mov     0xffffffffffffffd8(%rbp),%rax
  0x00007fafb8c79ed6: test    %rax,%rax
  0x00007fafb8c79ed9: je      0x7fafb8c7a026
  0x00007fafb8c79edf: cmpb    $0xa,0xfffffffffffffff0(%rax)
  0x00007fafb8c79ee3: jne     0x7fafb8c7a026
  0x00007fafb8c79ee9: add     $0x8,%rax
  0x00007fafb8c79eed: mov     0xfffffffffffffff8(%rax),%r13
  0x00007fafb8c79ef1: sub     $0x0,%r13d
  0x00007fafb8c79ef5: cmp     $0x2,%r13d
  0x00007fafb8c79ef9: jl      0x7fafb8c7a01b
  0x00007fafb8c79eff: mov     0x8(%rbx),%r13
  0x00007fafb8c79f03: movzwl  0x34(%r13),%r13d
  0x00007fafb8c79f08: sub     (%rax),%r13
  0x00007fafb8c79f0b: sub     $0x1,%r13d
  0x00007fafb8c79f0f: mov     0x8(%rsp,%r13,8),%r13
  0x00007fafb8c79f14: test    %r13,%r13
  0x00007fafb8c79f17: jne     0x7fafb8c79f23
  0x00007fafb8c79f19: orq     $0x1,0x8(%rax)
  0x00007fafb8c79f21: jmp     0x7fafb8c79f7c
  0x00007fafb8c79f23: mov     0x8(%r13),%r13d
  0x00007fafb8c79f27: movabs  $0x800000000,%r12
  0x00007fafb8c79f31: add     %r12,%r13
  0x00007fafb8c79f34: xor     %r12,%r12
  0x00007fafb8c79f37: xor     0x8(%rax),%r13
  0x00007fafb8c79f3b: test    $0xfffffffffffffffc,%r13
  0x00007fafb8c79f42: je      0x7fafb8c79f7c
  0x00007fafb8c79f44: test    $0x2,%r13
  0x00007fafb8c79f4b: jne     0x7fafb8c79f7c
  0x00007fafb8c79f4d: cmpq    $0x0,0x8(%rax)
  0x00007fafb8c79f55: je      0x7fafb8c79f78
  0x00007fafb8c79f57: cmpq    $0x1,0x8(%rax)
  0x00007fafb8c79f5f: je      0x7fafb8c79f78
  0x00007fafb8c79f61: xor     0x8(%rax),%r13
  0x00007fafb8c79f65: test    $0xfffffffffffffffc,%r13
  0x00007fafb8c79f6c: je      0x7fafb8c79f7c
  0x00007fafb8c79f6e: orq     $0x2,0x8(%rax)
  0x00007fafb8c79f76: jmp     0x7fafb8c79f7c
  0x00007fafb8c79f78: mov     %r13,0x8(%rax)
  0x00007fafb8c79f7c: add     $0x10,%rax
  0x00007fafb8c79f80: mov     0xffffffffffffffe8(%rax),%r13
  0x00007fafb8c79f84: sub     $0x2,%r13d
  0x00007fafb8c79f88: cmp     $0x2,%r13d
  0x00007fafb8c79f8c: jl      0x7fafb8c7a01b
  0x00007fafb8c79f92: mov     0x8(%rbx),%r13
  0x00007fafb8c79f96: movzwl  0x34(%r13),%r13d
  0x00007fafb8c79f9b: sub     (%rax),%r13
  0x00007fafb8c79f9e: sub     $0x1,%r13d
  0x00007fafb8c79fa2: mov     0x8(%rsp,%r13,8),%r13
  0x00007fafb8c79fa7: test    %r13,%r13
  0x00007fafb8c79faa: jne     0x7fafb8c79fb6
  0x00007fafb8c79fac: orq     $0x1,0x8(%rax)
  0x00007fafb8c79fb4: jmp     0x7fafb8c7a00f
  0x00007fafb8c79fb6: mov     0x8(%r13),%r13d
  0x00007fafb8c79fba: movabs  $0x800000000,%r12
  0x00007fafb8c79fc4: add     %r12,%r13
  0x00007fafb8c79fc7: xor     %r12,%r12
  0x00007fafb8c79fca: xor     0x8(%rax),%r13
  0x00007fafb8c79fce: test    $0xfffffffffffffffc,%r13
  0x00007fafb8c79fd5: je      0x7fafb8c7a00f
  0x00007fafb8c79fd7: test    $0x2,%r13
  0x00007fafb8c79fde: jne     0x7fafb8c7a00f
  0x00007fafb8c79fe0: cmpq    $0x0,0x8(%rax)
  0x00007fafb8c79fe8: je      0x7fafb8c7a00b
  0x00007fafb8c79fea: cmpq    $0x1,0x8(%rax)
  0x00007fafb8c79ff2: je      0x7fafb8c7a00b
  0x00007fafb8c79ff4: xor     0x8(%rax),%r13
  0x00007fafb8c79ff8: test    $0xfffffffffffffffc,%r13
  0x00007fafb8c79fff: je      0x7fafb8c7a00f
  0x00007fafb8c7a001: orq     $0x2,0x8(%rax)
  0x00007fafb8c7a009: jmp     0x7fafb8c7a00f
  0x00007fafb8c7a00b: mov     %r13,0x8(%rax)
  0x00007fafb8c7a00f: add     $0x10,%rax
  0x00007fafb8c7a013: mov     0xffffffffffffffd8(%rax),%r13
  0x00007fafb8c7a017: sub     $0x4,%r13d
  0x00007fafb8c7a01b: shl     $0x3,%r13d
  0x00007fafb8c7a01f: add     %r13,%rax
  0x00007fafb8c7a022: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c7a026: lea     0x8(%rsp),%r13
  0x00007fafb8c7a02b: mov     %r13,0xfffffffffffffff0(%rbp)
  0x00007fafb8c7a02f: jmpq    *0x48(%rbx)
  0x00007fafb8c7a032: nopw    0x0(%rax,%rax)
  0x00007fafb8c7a038: add     %al,(%rax)
  0x00007fafb8c7a03a: add     %al,(%rax)
  0x00007fafb8c7a03c: add     %al,(%rax)
  0x00007fafb8c7a03e: add     %al,(%rax)

----------------------------------------------------------------------
invokeinterface  185 invokeinterface  [0x00007fafb8c7a060, 0x00007fafb8c7acc0]  3168 bytes

Argument 0 is unknown.RIP: 0x7fafb8c7a060 Code size: 0x00000c60
  0x00007fafb8c7a060: push    %rax
  0x00007fafb8c7a061: jmpq    0x7fafb8c7a09f
  0x00007fafb8c7a066: sub     $0x8,%rsp
  0x00007fafb8c7a06a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c7a06f: jmpq    0x7fafb8c7a09f
  0x00007fafb8c7a074: sub     $0x10,%rsp
  0x00007fafb8c7a078: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c7a07d: jmpq    0x7fafb8c7a09f
  0x00007fafb8c7a082: sub     $0x10,%rsp
  0x00007fafb8c7a086: mov     %rax,(%rsp)
  0x00007fafb8c7a08a: movabs  $0x0,%r10
  0x00007fafb8c7a094: mov     %r10,0x8(%rsp)
  0x00007fafb8c7a099: jmpq    0x7fafb8c7a09f
  0x00007fafb8c7a09e: push    %rax
  0x00007fafb8c7a09f: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7a0a3: movzwl  0x1(%r13),%edx
  0x00007fafb8c7a0a8: mov     0xffffffffffffffd0(%rbp),%rcx
  0x00007fafb8c7a0ac: shl     $0x2,%edx
  0x00007fafb8c7a0af: mov     0x28(%rcx,%rdx,8),%ebx
  0x00007fafb8c7a0b3: shr     $0x10,%ebx
  0x00007fafb8c7a0b6: and     $0xff,%ebx
  0x00007fafb8c7a0bc: cmp     $0xb9,%ebx
  0x00007fafb8c7a0c2: je      0x7fafb8c7a178
  0x00007fafb8c7a0c8: mov     $0xb9,%ebx
  0x00007fafb8c7a0cd: callq   0x7fafb8c7a0d7
  0x00007fafb8c7a0d2: jmpq    0x7fafb8c7a16c
  0x00007fafb8c7a0d7: mov     %rbx,%rsi
  0x00007fafb8c7a0da: lea     0x8(%rsp),%rax
  0x00007fafb8c7a0df: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7a0e3: mov     %r15,%rdi
  0x00007fafb8c7a0e6: vzeroupper
  0x00007fafb8c7a0e9: mov     %rbp,0x330(%r15)
  0x00007fafb8c7a0f0: mov     %rax,0x320(%r15)
  0x00007fafb8c7a0f7: test    $0xf,%esp
  0x00007fafb8c7a0fd: je      0x7fafb8c7a115
  0x00007fafb8c7a103: sub     $0x8,%rsp
  0x00007fafb8c7a107: callq   0x7fafd7d841d0
  0x00007fafb8c7a10c: add     $0x8,%rsp
  0x00007fafb8c7a110: jmpq    0x7fafb8c7a11a
  0x00007fafb8c7a115: callq   0x7fafd7d841d0
  0x00007fafb8c7a11a: movabs  $0x0,%r10
  0x00007fafb8c7a124: mov     %r10,0x320(%r15)
  0x00007fafb8c7a12b: movabs  $0x0,%r10
  0x00007fafb8c7a135: mov     %r10,0x330(%r15)
  0x00007fafb8c7a13c: movabs  $0x0,%r10
  0x00007fafb8c7a146: mov     %r10,0x328(%r15)
  0x00007fafb8c7a14d: vzeroupper
  0x00007fafb8c7a150: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7a158: je      0x7fafb8c7a163
  0x00007fafb8c7a15e: jmpq    0x7fafb8c5c780
  0x00007fafb8c7a163: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7a167: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7a16b: retq
  0x00007fafb8c7a16c: movzwl  0x1(%r13),%edx
  0x00007fafb8c7a171: mov     0xffffffffffffffd0(%rbp),%rcx
  0x00007fafb8c7a175: shl     $0x2,%edx
  0x00007fafb8c7a178: mov     0x30(%rcx,%rdx,8),%rax
  0x00007fafb8c7a17d: mov     0x38(%rcx,%rdx,8),%rbx
  0x00007fafb8c7a182: mov     0x40(%rcx,%rdx,8),%edx
  0x00007fafb8c7a186: mov     %edx,%ecx
  0x00007fafb8c7a188: and     $0xff,%ecx
  0x00007fafb8c7a18e: mov     0xfffffffffffffff8(%rsp,%rcx,8),%rcx
  0x00007fafb8c7a193: mov     %edx,%r13d
  0x00007fafb8c7a196: shr     $0x1c,%edx
  0x00007fafb8c7a199: movabs  $0x7fafd89a88e0,%r10
  0x00007fafb8c7a1a3: mov     (%r10,%rdx,8),%rdx
  0x00007fafb8c7a1a7: push    %rdx
  0x00007fafb8c7a1a8: mov     %r13d,%edx
  0x00007fafb8c7a1ab: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7a1af: mov     %edx,%r14d
  0x00007fafb8c7a1b2: and     $0x800000,%r14d
  0x00007fafb8c7a1b9: je      0x7fafb8c7a56c
  0x00007fafb8c7a1bf: mov     %edx,%eax
  0x00007fafb8c7a1c1: and     $0x100000,%eax
  0x00007fafb8c7a1c7: je      0x7fafb8c7a34f
  0x00007fafb8c7a1cd: cmp     (%rcx),%rax
  0x00007fafb8c7a1d0: mov     0xffffffffffffffd8(%rbp),%rax
  0x00007fafb8c7a1d4: test    %rax,%rax
  0x00007fafb8c7a1d7: je      0x7fafb8c7a1ef
  0x00007fafb8c7a1dd: addq    $0x1,0x8(%rax)
  0x00007fafb8c7a1e2: sbbq    $0x0,0x8(%rax)
  0x00007fafb8c7a1e7: add     $0x38,%rax
  0x00007fafb8c7a1eb: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c7a1ef: mov     0xffffffffffffffd8(%rbp),%rax
  0x00007fafb8c7a1f3: test    %rax,%rax
  0x00007fafb8c7a1f6: je      0x7fafb8c7a343
  0x00007fafb8c7a1fc: cmpb    $0xb,0xffffffffffffffc8(%rax)
  0x00007fafb8c7a200: jne     0x7fafb8c7a343
  0x00007fafb8c7a206: add     $0x8,%rax
  0x00007fafb8c7a20a: mov     0xfffffffffffffff8(%rax),%r13
  0x00007fafb8c7a20e: sub     $0x0,%r13d
  0x00007fafb8c7a212: cmp     $0x2,%r13d
  0x00007fafb8c7a216: jl      0x7fafb8c7a338
  0x00007fafb8c7a21c: mov     0x8(%rbx),%r13
  0x00007fafb8c7a220: movzwl  0x34(%r13),%r13d
  0x00007fafb8c7a225: sub     (%rax),%r13
  0x00007fafb8c7a228: sub     $0x1,%r13d
  0x00007fafb8c7a22c: mov     0x8(%rsp,%r13,8),%r13
  0x00007fafb8c7a231: test    %r13,%r13
  0x00007fafb8c7a234: jne     0x7fafb8c7a240
  0x00007fafb8c7a236: orq     $0x1,0x8(%rax)
  0x00007fafb8c7a23e: jmp     0x7fafb8c7a299
  0x00007fafb8c7a240: mov     0x8(%r13),%r13d
  0x00007fafb8c7a244: movabs  $0x800000000,%r12
  0x00007fafb8c7a24e: add     %r12,%r13
  0x00007fafb8c7a251: xor     %r12,%r12
  0x00007fafb8c7a254: xor     0x8(%rax),%r13
  0x00007fafb8c7a258: test    $0xfffffffffffffffc,%r13
  0x00007fafb8c7a25f: je      0x7fafb8c7a299
  0x00007fafb8c7a261: test    $0x2,%r13
  0x00007fafb8c7a268: jne     0x7fafb8c7a299
  0x00007fafb8c7a26a: cmpq    $0x0,0x8(%rax)
  0x00007fafb8c7a272: je      0x7fafb8c7a295
  0x00007fafb8c7a274: cmpq    $0x1,0x8(%rax)
  0x00007fafb8c7a27c: je      0x7fafb8c7a295
  0x00007fafb8c7a27e: xor     0x8(%rax),%r13
  0x00007fafb8c7a282: test    $0xfffffffffffffffc,%r13
  0x00007fafb8c7a289: je      0x7fafb8c7a299
  0x00007fafb8c7a28b: orq     $0x2,0x8(%rax)
  0x00007fafb8c7a293: jmp     0x7fafb8c7a299
  0x00007fafb8c7a295: mov     %r13,0x8(%rax)
  0x00007fafb8c7a299: add     $0x10,%rax
  0x00007fafb8c7a29d: mov     0xffffffffffffffe8(%rax),%r13
  0x00007fafb8c7a2a1: sub     $0x2,%r13d
  0x00007fafb8c7a2a5: cmp     $0x2,%r13d
  0x00007fafb8c7a2a9: jl      0x7fafb8c7a338
  0x00007fafb8c7a2af: mov     0x8(%rbx),%r13
  0x00007fafb8c7a2b3: movzwl  0x34(%r13),%r13d
  0x00007fafb8c7a2b8: sub     (%rax),%r13
  0x00007fafb8c7a2bb: sub     $0x1,%r13d
  0x00007fafb8c7a2bf: mov     0x8(%rsp,%r13,8),%r13
  0x00007fafb8c7a2c4: test    %r13,%r13
  0x00007fafb8c7a2c7: jne     0x7fafb8c7a2d3
  0x00007fafb8c7a2c9: orq     $0x1,0x8(%rax)
  0x00007fafb8c7a2d1: jmp     0x7fafb8c7a32c
  0x00007fafb8c7a2d3: mov     0x8(%r13),%r13d
  0x00007fafb8c7a2d7: movabs  $0x800000000,%r12
  0x00007fafb8c7a2e1: add     %r12,%r13
  0x00007fafb8c7a2e4: xor     %r12,%r12
  0x00007fafb8c7a2e7: xor     0x8(%rax),%r13
  0x00007fafb8c7a2eb: test    $0xfffffffffffffffc,%r13
  0x00007fafb8c7a2f2: je      0x7fafb8c7a32c
  0x00007fafb8c7a2f4: test    $0x2,%r13
  0x00007fafb8c7a2fb: jne     0x7fafb8c7a32c
  0x00007fafb8c7a2fd: cmpq    $0x0,0x8(%rax)
  0x00007fafb8c7a305: je      0x7fafb8c7a328
  0x00007fafb8c7a307: cmpq    $0x1,0x8(%rax)
  0x00007fafb8c7a30f: je      0x7fafb8c7a328
  0x00007fafb8c7a311: xor     0x8(%rax),%r13
  0x00007fafb8c7a315: test    $0xfffffffffffffffc,%r13
  0x00007fafb8c7a31c: je      0x7fafb8c7a32c
  0x00007fafb8c7a31e: orq     $0x2,0x8(%rax)
  0x00007fafb8c7a326: jmp     0x7fafb8c7a32c
  0x00007fafb8c7a328: mov     %r13,0x8(%rax)
  0x00007fafb8c7a32c: add     $0x10,%rax
  0x00007fafb8c7a330: mov     0xffffffffffffffd8(%rax),%r13
  0x00007fafb8c7a334: sub     $0x4,%r13d
  0x00007fafb8c7a338: shl     $0x3,%r13d
  0x00007fafb8c7a33c: add     %r13,%rax
  0x00007fafb8c7a33f: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c7a343: lea     0x8(%rsp),%r13
  0x00007fafb8c7a348: mov     %r13,0xfffffffffffffff0(%rbp)
  0x00007fafb8c7a34c: jmpq    *0x48(%rbx)
  0x00007fafb8c7a34f: mov     0x8(%rcx),%eax
  0x00007fafb8c7a352: movabs  $0x800000000,%r12
  0x00007fafb8c7a35c: add     %r12,%rax
  0x00007fafb8c7a35f: xor     %r12,%r12
  0x00007fafb8c7a362: mov     0xffffffffffffffd8(%rbp),%r14
  0x00007fafb8c7a366: test    %r14,%r14
  0x00007fafb8c7a369: je      0x7fafb8c7a404
  0x00007fafb8c7a36f: mov     0x18(%r14),%rdx
  0x00007fafb8c7a373: cmp     %rax,%rdx
  0x00007fafb8c7a376: jne     0x7fafb8c7a38b
  0x00007fafb8c7a37c: addq    $0x1,0x20(%r14)
  0x00007fafb8c7a381: sbbq    $0x0,0x20(%r14)
  0x00007fafb8c7a386: jmpq    0x7fafb8c7a3fc
  0x00007fafb8c7a38b: test    %rdx,%rdx
  0x00007fafb8c7a38e: je      0x7fafb8c7a3d6
  0x00007fafb8c7a394: mov     0x28(%r14),%rdx
  0x00007fafb8c7a398: cmp     %rax,%rdx
  0x00007fafb8c7a39b: jne     0x7fafb8c7a3b0
  0x00007fafb8c7a3a1: addq    $0x1,0x30(%r14)
  0x00007fafb8c7a3a6: sbbq    $0x0,0x30(%r14)
  0x00007fafb8c7a3ab: jmpq    0x7fafb8c7a3fc
  0x00007fafb8c7a3b0: test    %rdx,%rdx
  0x00007fafb8c7a3b3: je      0x7fafb8c7a3c4
  0x00007fafb8c7a3b5: addq    $0x1,0x8(%r14)
  0x00007fafb8c7a3ba: sbbq    $0x0,0x8(%r14)
  0x00007fafb8c7a3bf: jmpq    0x7fafb8c7a3fc
  0x00007fafb8c7a3c4: mov     %rax,0x28(%r14)
  0x00007fafb8c7a3c8: mov     $0x1,%edx
  0x00007fafb8c7a3cd: mov     %rdx,0x30(%r14)
  0x00007fafb8c7a3d1: jmpq    0x7fafb8c7a3fc
  0x00007fafb8c7a3d6: cmp     0x28(%r14),%rax
  0x00007fafb8c7a3da: jne     0x7fafb8c7a3ef
  0x00007fafb8c7a3e0: addq    $0x1,0x30(%r14)
  0x00007fafb8c7a3e5: sbbq    $0x0,0x30(%r14)
  0x00007fafb8c7a3ea: jmpq    0x7fafb8c7a3fc
  0x00007fafb8c7a3ef: mov     %rax,0x18(%r14)
  0x00007fafb8c7a3f3: mov     $0x1,%edx
  0x00007fafb8c7a3f8: mov     %rdx,0x20(%r14)
  0x00007fafb8c7a3fc: add     $0x38,%r14
  0x00007fafb8c7a400: mov     %r14,0xffffffffffffffd8(%rbp)
  0x00007fafb8c7a404: mov     0x1d0(%rax,%rbx,8),%rbx
  0x00007fafb8c7a40c: mov     0xffffffffffffffd8(%rbp),%rdx
  0x00007fafb8c7a410: test    %rdx,%rdx
  0x00007fafb8c7a413: je      0x7fafb8c7a560
  0x00007fafb8c7a419: cmpb    $0xb,0xffffffffffffffc8(%rdx)
  0x00007fafb8c7a41d: jne     0x7fafb8c7a560
  0x00007fafb8c7a423: add     $0x8,%rdx
  0x00007fafb8c7a427: mov     0xfffffffffffffff8(%rdx),%r13
  0x00007fafb8c7a42b: sub     $0x0,%r13d
  0x00007fafb8c7a42f: cmp     $0x2,%r13d
  0x00007fafb8c7a433: jl      0x7fafb8c7a555
  0x00007fafb8c7a439: mov     0x8(%rbx),%r13
  0x00007fafb8c7a43d: movzwl  0x34(%r13),%r13d
  0x00007fafb8c7a442: sub     (%rdx),%r13
  0x00007fafb8c7a445: sub     $0x1,%r13d
  0x00007fafb8c7a449: mov     0x8(%rsp,%r13,8),%r13
  0x00007fafb8c7a44e: test    %r13,%r13
  0x00007fafb8c7a451: jne     0x7fafb8c7a45d
  0x00007fafb8c7a453: orq     $0x1,0x8(%rdx)
  0x00007fafb8c7a45b: jmp     0x7fafb8c7a4b6
  0x00007fafb8c7a45d: mov     0x8(%r13),%r13d
  0x00007fafb8c7a461: movabs  $0x800000000,%r12
  0x00007fafb8c7a46b: add     %r12,%r13
  0x00007fafb8c7a46e: xor     %r12,%r12
  0x00007fafb8c7a471: xor     0x8(%rdx),%r13
  0x00007fafb8c7a475: test    $0xfffffffffffffffc,%r13
  0x00007fafb8c7a47c: je      0x7fafb8c7a4b6
  0x00007fafb8c7a47e: test    $0x2,%r13
  0x00007fafb8c7a485: jne     0x7fafb8c7a4b6
  0x00007fafb8c7a487: cmpq    $0x0,0x8(%rdx)
  0x00007fafb8c7a48f: je      0x7fafb8c7a4b2
  0x00007fafb8c7a491: cmpq    $0x1,0x8(%rdx)
  0x00007fafb8c7a499: je      0x7fafb8c7a4b2
  0x00007fafb8c7a49b: xor     0x8(%rdx),%r13
  0x00007fafb8c7a49f: test    $0xfffffffffffffffc,%r13
  0x00007fafb8c7a4a6: je      0x7fafb8c7a4b6
  0x00007fafb8c7a4a8: orq     $0x2,0x8(%rdx)
  0x00007fafb8c7a4b0: jmp     0x7fafb8c7a4b6
  0x00007fafb8c7a4b2: mov     %r13,0x8(%rdx)
  0x00007fafb8c7a4b6: add     $0x10,%rdx
  0x00007fafb8c7a4ba: mov     0xffffffffffffffe8(%rdx),%r13
  0x00007fafb8c7a4be: sub     $0x2,%r13d
  0x00007fafb8c7a4c2: cmp     $0x2,%r13d
  0x00007fafb8c7a4c6: jl      0x7fafb8c7a555
  0x00007fafb8c7a4cc: mov     0x8(%rbx),%r13
  0x00007fafb8c7a4d0: movzwl  0x34(%r13),%r13d
  0x00007fafb8c7a4d5: sub     (%rdx),%r13
  0x00007fafb8c7a4d8: sub     $0x1,%r13d
  0x00007fafb8c7a4dc: mov     0x8(%rsp,%r13,8),%r13
  0x00007fafb8c7a4e1: test    %r13,%r13
  0x00007fafb8c7a4e4: jne     0x7fafb8c7a4f0
  0x00007fafb8c7a4e6: orq     $0x1,0x8(%rdx)
  0x00007fafb8c7a4ee: jmp     0x7fafb8c7a549
  0x00007fafb8c7a4f0: mov     0x8(%r13),%r13d
  0x00007fafb8c7a4f4: movabs  $0x800000000,%r12
  0x00007fafb8c7a4fe: add     %r12,%r13
  0x00007fafb8c7a501: xor     %r12,%r12
  0x00007fafb8c7a504: xor     0x8(%rdx),%r13
  0x00007fafb8c7a508: test    $0xfffffffffffffffc,%r13
  0x00007fafb8c7a50f: je      0x7fafb8c7a549
  0x00007fafb8c7a511: test    $0x2,%r13
  0x00007fafb8c7a518: jne     0x7fafb8c7a549
  0x00007fafb8c7a51a: cmpq    $0x0,0x8(%rdx)
  0x00007fafb8c7a522: je      0x7fafb8c7a545
  0x00007fafb8c7a524: cmpq    $0x1,0x8(%rdx)
  0x00007fafb8c7a52c: je      0x7fafb8c7a545
  0x00007fafb8c7a52e: xor     0x8(%rdx),%r13
  0x00007fafb8c7a532: test    $0xfffffffffffffffc,%r13
  0x00007fafb8c7a539: je      0x7fafb8c7a549
  0x00007fafb8c7a53b: orq     $0x2,0x8(%rdx)
  0x00007fafb8c7a543: jmp     0x7fafb8c7a549
  0x00007fafb8c7a545: mov     %r13,0x8(%rdx)
  0x00007fafb8c7a549: add     $0x10,%rdx
  0x00007fafb8c7a54d: mov     0xffffffffffffffd8(%rdx),%r13
  0x00007fafb8c7a551: sub     $0x4,%r13d
  0x00007fafb8c7a555: shl     $0x3,%r13d
  0x00007fafb8c7a559: add     %r13,%rdx
  0x00007fafb8c7a55c: mov     %rdx,0xffffffffffffffd8(%rbp)
  0x00007fafb8c7a560: lea     0x8(%rsp),%r13
  0x00007fafb8c7a565: mov     %r13,0xfffffffffffffff0(%rbp)
  0x00007fafb8c7a569: jmpq    *0x48(%rbx)
  0x00007fafb8c7a56c: mov     %edx,%r14d
  0x00007fafb8c7a56f: and     $0x100000,%r14d
  0x00007fafb8c7a576: je      0x7fafb8c7a75c
  0x00007fafb8c7a57c: mov     0x8(%rcx),%r14d
  0x00007fafb8c7a580: movabs  $0x800000000,%r12
  0x00007fafb8c7a58a: add     %r12,%r14
  0x00007fafb8c7a58d: xor     %r12,%r12
  0x00007fafb8c7a590: cmp     %rax,%r14
  0x00007fafb8c7a593: je      0x7fafb8c7a5dd
  0x00007fafb8c7a599: mov     0x10(%rax),%r13d
  0x00007fafb8c7a59d: cmp     (%r14,%r13),%rax
  0x00007fafb8c7a5a1: je      0x7fafb8c7a5dd
  0x00007fafb8c7a5a7: cmp     $0x20,%r13d
  0x00007fafb8c7a5ab: jne     0x7fafb8c7a5d5
  0x00007fafb8c7a5b1: push    %rax
  0x00007fafb8c7a5b2: mov     %rax,%rax
  0x00007fafb8c7a5b5: push    %rcx
  0x00007fafb8c7a5b6: push    %rdi
  0x00007fafb8c7a5b7: mov     0x28(%r14),%rdi
  0x00007fafb8c7a5bb: mov     (%rdi),%ecx
  0x00007fafb8c7a5bd: add     $0x8,%rdi
  0x00007fafb8c7a5c1: test    %rax,%rax
  0x00007fafb8c7a5c4: repne scasq (%rdi)
  0x00007fafb8c7a5c7: pop     %rdi
  0x00007fafb8c7a5c8: pop     %rcx
  0x00007fafb8c7a5c9: pop     %rax
  0x00007fafb8c7a5ca: jne     0x7fafb8c7a5d5
  0x00007fafb8c7a5cc: mov     %rax,0x20(%r14)
  0x00007fafb8c7a5d0: jmpq    0x7fafb8c7a5dd
  0x00007fafb8c7a5d5: mov     %r14,%rdx
  0x00007fafb8c7a5d8: jmpq    0x7fafb8c7ab9d
  0x00007fafb8c7a5dd: mov     0xffffffffffffffd8(%rbp),%rdx
  0x00007fafb8c7a5e1: test    %rdx,%rdx
  0x00007fafb8c7a5e4: je      0x7fafb8c7a5fc
  0x00007fafb8c7a5ea: addq    $0x1,0x8(%rdx)
  0x00007fafb8c7a5ef: sbbq    $0x0,0x8(%rdx)
  0x00007fafb8c7a5f4: add     $0x38,%rdx
  0x00007fafb8c7a5f8: mov     %rdx,0xffffffffffffffd8(%rbp)
  0x00007fafb8c7a5fc: mov     0xffffffffffffffd8(%rbp),%rdx
  0x00007fafb8c7a600: test    %rdx,%rdx
  0x00007fafb8c7a603: je      0x7fafb8c7a750
  0x00007fafb8c7a609: cmpb    $0xb,0xffffffffffffffc8(%rdx)
  0x00007fafb8c7a60d: jne     0x7fafb8c7a750
  0x00007fafb8c7a613: add     $0x8,%rdx
  0x00007fafb8c7a617: mov     0xfffffffffffffff8(%rdx),%r13
  0x00007fafb8c7a61b: sub     $0x0,%r13d
  0x00007fafb8c7a61f: cmp     $0x2,%r13d
  0x00007fafb8c7a623: jl      0x7fafb8c7a745
  0x00007fafb8c7a629: mov     0x8(%rbx),%r13
  0x00007fafb8c7a62d: movzwl  0x34(%r13),%r13d
  0x00007fafb8c7a632: sub     (%rdx),%r13
  0x00007fafb8c7a635: sub     $0x1,%r13d
  0x00007fafb8c7a639: mov     0x8(%rsp,%r13,8),%r13
  0x00007fafb8c7a63e: test    %r13,%r13
  0x00007fafb8c7a641: jne     0x7fafb8c7a64d
  0x00007fafb8c7a643: orq     $0x1,0x8(%rdx)
  0x00007fafb8c7a64b: jmp     0x7fafb8c7a6a6
  0x00007fafb8c7a64d: mov     0x8(%r13),%r13d
  0x00007fafb8c7a651: movabs  $0x800000000,%r12
  0x00007fafb8c7a65b: add     %r12,%r13
  0x00007fafb8c7a65e: xor     %r12,%r12
  0x00007fafb8c7a661: xor     0x8(%rdx),%r13
  0x00007fafb8c7a665: test    $0xfffffffffffffffc,%r13
  0x00007fafb8c7a66c: je      0x7fafb8c7a6a6
  0x00007fafb8c7a66e: test    $0x2,%r13
  0x00007fafb8c7a675: jne     0x7fafb8c7a6a6
  0x00007fafb8c7a677: cmpq    $0x0,0x8(%rdx)
  0x00007fafb8c7a67f: je      0x7fafb8c7a6a2
  0x00007fafb8c7a681: cmpq    $0x1,0x8(%rdx)
  0x00007fafb8c7a689: je      0x7fafb8c7a6a2
  0x00007fafb8c7a68b: xor     0x8(%rdx),%r13
  0x00007fafb8c7a68f: test    $0xfffffffffffffffc,%r13
  0x00007fafb8c7a696: je      0x7fafb8c7a6a6
  0x00007fafb8c7a698: orq     $0x2,0x8(%rdx)
  0x00007fafb8c7a6a0: jmp     0x7fafb8c7a6a6
  0x00007fafb8c7a6a2: mov     %r13,0x8(%rdx)
  0x00007fafb8c7a6a6: add     $0x10,%rdx
  0x00007fafb8c7a6aa: mov     0xffffffffffffffe8(%rdx),%r13
  0x00007fafb8c7a6ae: sub     $0x2,%r13d
  0x00007fafb8c7a6b2: cmp     $0x2,%r13d
  0x00007fafb8c7a6b6: jl      0x7fafb8c7a745
  0x00007fafb8c7a6bc: mov     0x8(%rbx),%r13
  0x00007fafb8c7a6c0: movzwl  0x34(%r13),%r13d
  0x00007fafb8c7a6c5: sub     (%rdx),%r13
  0x00007fafb8c7a6c8: sub     $0x1,%r13d
  0x00007fafb8c7a6cc: mov     0x8(%rsp,%r13,8),%r13
  0x00007fafb8c7a6d1: test    %r13,%r13
  0x00007fafb8c7a6d4: jne     0x7fafb8c7a6e0
  0x00007fafb8c7a6d6: orq     $0x1,0x8(%rdx)
  0x00007fafb8c7a6de: jmp     0x7fafb8c7a739
  0x00007fafb8c7a6e0: mov     0x8(%r13),%r13d
  0x00007fafb8c7a6e4: movabs  $0x800000000,%r12
  0x00007fafb8c7a6ee: add     %r12,%r13
  0x00007fafb8c7a6f1: xor     %r12,%r12
  0x00007fafb8c7a6f4: xor     0x8(%rdx),%r13
  0x00007fafb8c7a6f8: test    $0xfffffffffffffffc,%r13
  0x00007fafb8c7a6ff: je      0x7fafb8c7a739
  0x00007fafb8c7a701: test    $0x2,%r13
  0x00007fafb8c7a708: jne     0x7fafb8c7a739
  0x00007fafb8c7a70a: cmpq    $0x0,0x8(%rdx)
  0x00007fafb8c7a712: je      0x7fafb8c7a735
  0x00007fafb8c7a714: cmpq    $0x1,0x8(%rdx)
  0x00007fafb8c7a71c: je      0x7fafb8c7a735
  0x00007fafb8c7a71e: xor     0x8(%rdx),%r13
  0x00007fafb8c7a722: test    $0xfffffffffffffffc,%r13
  0x00007fafb8c7a729: je      0x7fafb8c7a739
  0x00007fafb8c7a72b: orq     $0x2,0x8(%rdx)
  0x00007fafb8c7a733: jmp     0x7fafb8c7a739
  0x00007fafb8c7a735: mov     %r13,0x8(%rdx)
  0x00007fafb8c7a739: add     $0x10,%rdx
  0x00007fafb8c7a73d: mov     0xffffffffffffffd8(%rdx),%r13
  0x00007fafb8c7a741: sub     $0x4,%r13d
  0x00007fafb8c7a745: shl     $0x3,%r13d
  0x00007fafb8c7a749: add     %r13,%rdx
  0x00007fafb8c7a74c: mov     %rdx,0xffffffffffffffd8(%rbp)
  0x00007fafb8c7a750: lea     0x8(%rsp),%r13
  0x00007fafb8c7a755: mov     %r13,0xfffffffffffffff0(%rbp)
  0x00007fafb8c7a759: jmpq    *0x48(%rbx)
  0x00007fafb8c7a75c: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7a760: mov     0x8(%rcx),%edx
  0x00007fafb8c7a763: movabs  $0x800000000,%r12
  0x00007fafb8c7a76d: add     %r12,%rdx
  0x00007fafb8c7a770: xor     %r12,%r12
  0x00007fafb8c7a773: mov     %rbx,%rcx
  0x00007fafb8c7a776: mov     0xc4(%rdx),%r14d
  0x00007fafb8c7a77d: lea     0x1d0(%rdx,%r14,8),%r14
  0x00007fafb8c7a785: mov     (%r14),%r13
  0x00007fafb8c7a788: cmp     %r13,%rax
  0x00007fafb8c7a78b: je      0x7fafb8c7a7a2
  0x00007fafb8c7a78d: test    %r13,%r13
  0x00007fafb8c7a790: je      0x7fafb8c7ab9d
  0x00007fafb8c7a796: add     $0x10,%r14
  0x00007fafb8c7a79a: mov     (%r14),%r13
  0x00007fafb8c7a79d: cmp     %r13,%rax
  0x00007fafb8c7a7a0: jne     0x7fafb8c7a78d
  0x00007fafb8c7a7a2: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7a7a6: mov     0xffffffffffffffd8(%rbp),%r13
  0x00007fafb8c7a7aa: test    %r13,%r13
  0x00007fafb8c7a7ad: je      0x7fafb8c7a84a
  0x00007fafb8c7a7b3: mov     0x18(%r13),%r14
  0x00007fafb8c7a7b7: cmp     %rdx,%r14
  0x00007fafb8c7a7ba: jne     0x7fafb8c7a7cf
  0x00007fafb8c7a7c0: addq    $0x1,0x20(%r13)
  0x00007fafb8c7a7c5: sbbq    $0x0,0x20(%r13)
  0x00007fafb8c7a7ca: jmpq    0x7fafb8c7a842
  0x00007fafb8c7a7cf: test    %r14,%r14
  0x00007fafb8c7a7d2: je      0x7fafb8c7a81b
  0x00007fafb8c7a7d8: mov     0x28(%r13),%r14
  0x00007fafb8c7a7dc: cmp     %rdx,%r14
  0x00007fafb8c7a7df: jne     0x7fafb8c7a7f4
  0x00007fafb8c7a7e5: addq    $0x1,0x30(%r13)
  0x00007fafb8c7a7ea: sbbq    $0x0,0x30(%r13)
  0x00007fafb8c7a7ef: jmpq    0x7fafb8c7a842
  0x00007fafb8c7a7f4: test    %r14,%r14
  0x00007fafb8c7a7f7: je      0x7fafb8c7a808
  0x00007fafb8c7a7f9: addq    $0x1,0x8(%r13)
  0x00007fafb8c7a7fe: sbbq    $0x0,0x8(%r13)
  0x00007fafb8c7a803: jmpq    0x7fafb8c7a842
  0x00007fafb8c7a808: mov     %rdx,0x28(%r13)
  0x00007fafb8c7a80c: mov     $0x1,%r14d
  0x00007fafb8c7a812: mov     %r14,0x30(%r13)
  0x00007fafb8c7a816: jmpq    0x7fafb8c7a842
  0x00007fafb8c7a81b: cmp     0x28(%r13),%rdx
  0x00007fafb8c7a81f: jne     0x7fafb8c7a834
  0x00007fafb8c7a825: addq    $0x1,0x30(%r13)
  0x00007fafb8c7a82a: sbbq    $0x0,0x30(%r13)
  0x00007fafb8c7a82f: jmpq    0x7fafb8c7a842
  0x00007fafb8c7a834: mov     %rdx,0x18(%r13)
  0x00007fafb8c7a838: mov     $0x1,%r14d
  0x00007fafb8c7a83e: mov     %r14,0x20(%r13)
  0x00007fafb8c7a842: add     $0x38,%r13
  0x00007fafb8c7a846: mov     %r13,0xffffffffffffffd8(%rbp)
  0x00007fafb8c7a84a: mov     0x8(%rbx),%rax
  0x00007fafb8c7a84e: mov     0x8(%rax),%rax
  0x00007fafb8c7a852: mov     0x18(%rax),%rax
  0x00007fafb8c7a856: mov     0x24(%rbx),%ebx
  0x00007fafb8c7a859: sub     $0xfffffff6,%ebx
  0x00007fafb8c7a85c: neg     %ebx
  0x00007fafb8c7a85e: mov     %rdx,%r14
  0x00007fafb8c7a861: mov     0xc4(%r14),%r13d
  0x00007fafb8c7a868: lea     0x1d0(%r14,%r13,8),%r13
  0x00007fafb8c7a870: lea     (%r14,%rbx,8),%r14
  0x00007fafb8c7a874: mov     0x0(%r13),%rbx
  0x00007fafb8c7a878: cmp     %rbx,%rax
  0x00007fafb8c7a87b: je      0x7fafb8c7a893
  0x00007fafb8c7a87d: test    %rbx,%rbx
  0x00007fafb8c7a880: je      0x7fafb8c7ab9d
  0x00007fafb8c7a886: add     $0x10,%r13
  0x00007fafb8c7a88a: mov     0x0(%r13),%rbx
  0x00007fafb8c7a88e: cmp     %rbx,%rax
  0x00007fafb8c7a891: jne     0x7fafb8c7a87d
  0x00007fafb8c7a893: mov     0x8(%r13),%r13d
  0x00007fafb8c7a897: mov     (%r14,%r13),%rbx
  0x00007fafb8c7a89b: test    %rbx,%rbx
  0x00007fafb8c7a89e: je      0x7fafb8c7aa7b
  0x00007fafb8c7a8a4: mov     0xffffffffffffffd8(%rbp),%rdx
  0x00007fafb8c7a8a8: test    %rdx,%rdx
  0x00007fafb8c7a8ab: je      0x7fafb8c7a9f8
  0x00007fafb8c7a8b1: cmpb    $0xb,0xffffffffffffffc8(%rdx)
  0x00007fafb8c7a8b5: jne     0x7fafb8c7a9f8
  0x00007fafb8c7a8bb: add     $0x8,%rdx
  0x00007fafb8c7a8bf: mov     0xfffffffffffffff8(%rdx),%r13
  0x00007fafb8c7a8c3: sub     $0x0,%r13d
  0x00007fafb8c7a8c7: cmp     $0x2,%r13d
  0x00007fafb8c7a8cb: jl      0x7fafb8c7a9ed
  0x00007fafb8c7a8d1: mov     0x8(%rbx),%r13
  0x00007fafb8c7a8d5: movzwl  0x34(%r13),%r13d
  0x00007fafb8c7a8da: sub     (%rdx),%r13
  0x00007fafb8c7a8dd: sub     $0x1,%r13d
  0x00007fafb8c7a8e1: mov     0x8(%rsp,%r13,8),%r13
  0x00007fafb8c7a8e6: test    %r13,%r13
  0x00007fafb8c7a8e9: jne     0x7fafb8c7a8f5
  0x00007fafb8c7a8eb: orq     $0x1,0x8(%rdx)
  0x00007fafb8c7a8f3: jmp     0x7fafb8c7a94e
  0x00007fafb8c7a8f5: mov     0x8(%r13),%r13d
  0x00007fafb8c7a8f9: movabs  $0x800000000,%r12
  0x00007fafb8c7a903: add     %r12,%r13
  0x00007fafb8c7a906: xor     %r12,%r12
  0x00007fafb8c7a909: xor     0x8(%rdx),%r13
  0x00007fafb8c7a90d: test    $0xfffffffffffffffc,%r13
  0x00007fafb8c7a914: je      0x7fafb8c7a94e
  0x00007fafb8c7a916: test    $0x2,%r13
  0x00007fafb8c7a91d: jne     0x7fafb8c7a94e
  0x00007fafb8c7a91f: cmpq    $0x0,0x8(%rdx)
  0x00007fafb8c7a927: je      0x7fafb8c7a94a
  0x00007fafb8c7a929: cmpq    $0x1,0x8(%rdx)
  0x00007fafb8c7a931: je      0x7fafb8c7a94a
  0x00007fafb8c7a933: xor     0x8(%rdx),%r13
  0x00007fafb8c7a937: test    $0xfffffffffffffffc,%r13
  0x00007fafb8c7a93e: je      0x7fafb8c7a94e
  0x00007fafb8c7a940: orq     $0x2,0x8(%rdx)
  0x00007fafb8c7a948: jmp     0x7fafb8c7a94e
  0x00007fafb8c7a94a: mov     %r13,0x8(%rdx)
  0x00007fafb8c7a94e: add     $0x10,%rdx
  0x00007fafb8c7a952: mov     0xffffffffffffffe8(%rdx),%r13
  0x00007fafb8c7a956: sub     $0x2,%r13d
  0x00007fafb8c7a95a: cmp     $0x2,%r13d
  0x00007fafb8c7a95e: jl      0x7fafb8c7a9ed
  0x00007fafb8c7a964: mov     0x8(%rbx),%r13
  0x00007fafb8c7a968: movzwl  0x34(%r13),%r13d
  0x00007fafb8c7a96d: sub     (%rdx),%r13
  0x00007fafb8c7a970: sub     $0x1,%r13d
  0x00007fafb8c7a974: mov     0x8(%rsp,%r13,8),%r13
  0x00007fafb8c7a979: test    %r13,%r13
  0x00007fafb8c7a97c: jne     0x7fafb8c7a988
  0x00007fafb8c7a97e: orq     $0x1,0x8(%rdx)
  0x00007fafb8c7a986: jmp     0x7fafb8c7a9e1
  0x00007fafb8c7a988: mov     0x8(%r13),%r13d
  0x00007fafb8c7a98c: movabs  $0x800000000,%r12
  0x00007fafb8c7a996: add     %r12,%r13
  0x00007fafb8c7a999: xor     %r12,%r12
  0x00007fafb8c7a99c: xor     0x8(%rdx),%r13
  0x00007fafb8c7a9a0: test    $0xfffffffffffffffc,%r13
  0x00007fafb8c7a9a7: je      0x7fafb8c7a9e1
  0x00007fafb8c7a9a9: test    $0x2,%r13
  0x00007fafb8c7a9b0: jne     0x7fafb8c7a9e1
  0x00007fafb8c7a9b2: cmpq    $0x0,0x8(%rdx)
  0x00007fafb8c7a9ba: je      0x7fafb8c7a9dd
  0x00007fafb8c7a9bc: cmpq    $0x1,0x8(%rdx)
  0x00007fafb8c7a9c4: je      0x7fafb8c7a9dd
  0x00007fafb8c7a9c6: xor     0x8(%rdx),%r13
  0x00007fafb8c7a9ca: test    $0xfffffffffffffffc,%r13
  0x00007fafb8c7a9d1: je      0x7fafb8c7a9e1
  0x00007fafb8c7a9d3: orq     $0x2,0x8(%rdx)
  0x00007fafb8c7a9db: jmp     0x7fafb8c7a9e1
  0x00007fafb8c7a9dd: mov     %r13,0x8(%rdx)
  0x00007fafb8c7a9e1: add     $0x10,%rdx
  0x00007fafb8c7a9e5: mov     0xffffffffffffffd8(%rdx),%r13
  0x00007fafb8c7a9e9: sub     $0x4,%r13d
  0x00007fafb8c7a9ed: shl     $0x3,%r13d
  0x00007fafb8c7a9f1: add     %r13,%rdx
  0x00007fafb8c7a9f4: mov     %rdx,0xffffffffffffffd8(%rbp)
  0x00007fafb8c7a9f8: lea     0x8(%rsp),%r13
  0x00007fafb8c7a9fd: mov     %r13,0xfffffffffffffff0(%rbp)
  0x00007fafb8c7aa01: jmpq    *0x48(%rbx)
  0x00007fafb8c7aa04: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c7aa09: sub     $0x80,%rsp
  0x00007fafb8c7aa10: mov     %rax,0x78(%rsp)
  0x00007fafb8c7aa15: mov     %rcx,0x70(%rsp)
  0x00007fafb8c7aa1a: mov     %rdx,0x68(%rsp)
  0x00007fafb8c7aa1f: mov     %rbx,0x60(%rsp)
  0x00007fafb8c7aa24: mov     %rbp,0x50(%rsp)
  0x00007fafb8c7aa29: mov     %rsi,0x48(%rsp)
  0x00007fafb8c7aa2e: mov     %rdi,0x40(%rsp)
  0x00007fafb8c7aa33: mov     %r8,0x38(%rsp)
  0x00007fafb8c7aa38: mov     %r9,0x30(%rsp)
  0x00007fafb8c7aa3d: mov     %r10,0x28(%rsp)
  0x00007fafb8c7aa42: mov     %r11,0x20(%rsp)
  0x00007fafb8c7aa47: mov     %r12,0x18(%rsp)
  0x00007fafb8c7aa4c: mov     %r13,0x10(%rsp)
  0x00007fafb8c7aa51: mov     %r14,0x8(%rsp)
  0x00007fafb8c7aa56: mov     %r15,(%rsp)
  0x00007fafb8c7aa5a: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c7aa64: movabs  $0x7fafb8c7aa04,%rsi
  0x00007fafb8c7aa6e: mov     %rsp,%rdx
  0x00007fafb8c7aa71: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c7aa75: callq   0x7fafd7fdd230
  0x00007fafb8c7aa7a: hlt
  0x00007fafb8c7aa7b: pop     %rbx
  0x00007fafb8c7aa7c: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7aa80: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7aa84: mov     %rdx,%rsi
  0x00007fafb8c7aa87: mov     %rcx,%rdx
  0x00007fafb8c7aa8a: callq   0x7fafb8c7aa94
  0x00007fafb8c7aa8f: jmpq    0x7fafb8c7ab26
  0x00007fafb8c7aa94: lea     0x8(%rsp),%rax
  0x00007fafb8c7aa99: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7aa9d: mov     %r15,%rdi
  0x00007fafb8c7aaa0: vzeroupper
  0x00007fafb8c7aaa3: mov     %rbp,0x330(%r15)
  0x00007fafb8c7aaaa: mov     %rax,0x320(%r15)
  0x00007fafb8c7aab1: test    $0xf,%esp
  0x00007fafb8c7aab7: je      0x7fafb8c7aacf
  0x00007fafb8c7aabd: sub     $0x8,%rsp
  0x00007fafb8c7aac1: callq   0x7fafd7d810b0
  0x00007fafb8c7aac6: add     $0x8,%rsp
  0x00007fafb8c7aaca: jmpq    0x7fafb8c7aad4
  0x00007fafb8c7aacf: callq   0x7fafd7d810b0
  0x00007fafb8c7aad4: movabs  $0x0,%r10
  0x00007fafb8c7aade: mov     %r10,0x320(%r15)
  0x00007fafb8c7aae5: movabs  $0x0,%r10
  0x00007fafb8c7aaef: mov     %r10,0x330(%r15)
  0x00007fafb8c7aaf6: movabs  $0x0,%r10
  0x00007fafb8c7ab00: mov     %r10,0x328(%r15)
  0x00007fafb8c7ab07: vzeroupper
  0x00007fafb8c7ab0a: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7ab12: je      0x7fafb8c7ab1d
  0x00007fafb8c7ab18: jmpq    0x7fafb8c5c780
  0x00007fafb8c7ab1d: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7ab21: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7ab25: retq
  0x00007fafb8c7ab26: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c7ab2b: sub     $0x80,%rsp
  0x00007fafb8c7ab32: mov     %rax,0x78(%rsp)
  0x00007fafb8c7ab37: mov     %rcx,0x70(%rsp)
  0x00007fafb8c7ab3c: mov     %rdx,0x68(%rsp)
  0x00007fafb8c7ab41: mov     %rbx,0x60(%rsp)
  0x00007fafb8c7ab46: mov     %rbp,0x50(%rsp)
  0x00007fafb8c7ab4b: mov     %rsi,0x48(%rsp)
  0x00007fafb8c7ab50: mov     %rdi,0x40(%rsp)
  0x00007fafb8c7ab55: mov     %r8,0x38(%rsp)
  0x00007fafb8c7ab5a: mov     %r9,0x30(%rsp)
  0x00007fafb8c7ab5f: mov     %r10,0x28(%rsp)
  0x00007fafb8c7ab64: mov     %r11,0x20(%rsp)
  0x00007fafb8c7ab69: mov     %r12,0x18(%rsp)
  0x00007fafb8c7ab6e: mov     %r13,0x10(%rsp)
  0x00007fafb8c7ab73: mov     %r14,0x8(%rsp)
  0x00007fafb8c7ab78: mov     %r15,(%rsp)
  0x00007fafb8c7ab7c: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c7ab86: movabs  $0x7fafb8c7ab26,%rsi
  0x00007fafb8c7ab90: mov     %rsp,%rdx
  0x00007fafb8c7ab93: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c7ab97: callq   0x7fafd7fdd230
  0x00007fafb8c7ab9c: hlt
  0x00007fafb8c7ab9d: pop     %rbx
  0x00007fafb8c7ab9e: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7aba2: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7aba6: mov     %rdx,%rsi
  0x00007fafb8c7aba9: callq   0x7fafb8c7abb3
  0x00007fafb8c7abae: jmpq    0x7fafb8c7ac48
  0x00007fafb8c7abb3: mov     %rax,%rdx
  0x00007fafb8c7abb6: lea     0x8(%rsp),%rax
  0x00007fafb8c7abbb: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7abbf: mov     %r15,%rdi
  0x00007fafb8c7abc2: vzeroupper
  0x00007fafb8c7abc5: mov     %rbp,0x330(%r15)
  0x00007fafb8c7abcc: mov     %rax,0x320(%r15)
  0x00007fafb8c7abd3: test    $0xf,%esp
  0x00007fafb8c7abd9: je      0x7fafb8c7abf1
  0x00007fafb8c7abdf: sub     $0x8,%rsp
  0x00007fafb8c7abe3: callq   0x7fafd7d81650
  0x00007fafb8c7abe8: add     $0x8,%rsp
  0x00007fafb8c7abec: jmpq    0x7fafb8c7abf6
  0x00007fafb8c7abf1: callq   0x7fafd7d81650
  0x00007fafb8c7abf6: movabs  $0x0,%r10
  0x00007fafb8c7ac00: mov     %r10,0x320(%r15)
  0x00007fafb8c7ac07: movabs  $0x0,%r10
  0x00007fafb8c7ac11: mov     %r10,0x330(%r15)
  0x00007fafb8c7ac18: movabs  $0x0,%r10
  0x00007fafb8c7ac22: mov     %r10,0x328(%r15)
  0x00007fafb8c7ac29: vzeroupper
  0x00007fafb8c7ac2c: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7ac34: je      0x7fafb8c7ac3f
  0x00007fafb8c7ac3a: jmpq    0x7fafb8c5c780
  0x00007fafb8c7ac3f: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7ac43: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7ac47: retq
  0x00007fafb8c7ac48: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c7ac4d: sub     $0x80,%rsp
  0x00007fafb8c7ac54: mov     %rax,0x78(%rsp)
  0x00007fafb8c7ac59: mov     %rcx,0x70(%rsp)
  0x00007fafb8c7ac5e: mov     %rdx,0x68(%rsp)
  0x00007fafb8c7ac63: mov     %rbx,0x60(%rsp)
  0x00007fafb8c7ac68: mov     %rbp,0x50(%rsp)
  0x00007fafb8c7ac6d: mov     %rsi,0x48(%rsp)
  0x00007fafb8c7ac72: mov     %rdi,0x40(%rsp)
  0x00007fafb8c7ac77: mov     %r8,0x38(%rsp)
  0x00007fafb8c7ac7c: mov     %r9,0x30(%rsp)
  0x00007fafb8c7ac81: mov     %r10,0x28(%rsp)
  0x00007fafb8c7ac86: mov     %r11,0x20(%rsp)
  0x00007fafb8c7ac8b: mov     %r12,0x18(%rsp)
  0x00007fafb8c7ac90: mov     %r13,0x10(%rsp)
  0x00007fafb8c7ac95: mov     %r14,0x8(%rsp)
  0x00007fafb8c7ac9a: mov     %r15,(%rsp)
  0x00007fafb8c7ac9e: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c7aca8: movabs  $0x7fafb8c7ac48,%rsi
  0x00007fafb8c7acb2: mov     %rsp,%rdx
  0x00007fafb8c7acb5: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c7acb9: callq   0x7fafd7fdd230
  0x00007fafb8c7acbe: hlt
  0x00007fafb8c7acbf: nop

----------------------------------------------------------------------
invokedynamic  186 invokedynamic  [0x00007fafb8c7ace0, 0x00007fafb8c7afe0]  768 bytes

Argument 0 is unknown.RIP: 0x7fafb8c7ace0 Code size: 0x00000300
  0x00007fafb8c7ace0: push    %rax
  0x00007fafb8c7ace1: jmpq    0x7fafb8c7ad1f
  0x00007fafb8c7ace6: sub     $0x8,%rsp
  0x00007fafb8c7acea: vmovss  %xmm0,(%rsp)
  0x00007fafb8c7acef: jmpq    0x7fafb8c7ad1f
  0x00007fafb8c7acf4: sub     $0x10,%rsp
  0x00007fafb8c7acf8: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c7acfd: jmpq    0x7fafb8c7ad1f
  0x00007fafb8c7ad02: sub     $0x10,%rsp
  0x00007fafb8c7ad06: mov     %rax,(%rsp)
  0x00007fafb8c7ad0a: movabs  $0x0,%r10
  0x00007fafb8c7ad14: mov     %r10,0x8(%rsp)
  0x00007fafb8c7ad19: jmpq    0x7fafb8c7ad1f
  0x00007fafb8c7ad1e: push    %rax
  0x00007fafb8c7ad1f: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7ad23: mov     0x1(%r13),%edx
  0x00007fafb8c7ad27: not     %edx
  0x00007fafb8c7ad29: mov     0xffffffffffffffd0(%rbp),%rcx
  0x00007fafb8c7ad2d: shl     $0x2,%edx
  0x00007fafb8c7ad30: mov     0x28(%rcx,%rdx,8),%ebx
  0x00007fafb8c7ad34: shr     $0x10,%ebx
  0x00007fafb8c7ad37: and     $0xff,%ebx
  0x00007fafb8c7ad3d: cmp     $0xba,%ebx
  0x00007fafb8c7ad43: je      0x7fafb8c7adfa
  0x00007fafb8c7ad49: mov     $0xba,%ebx
  0x00007fafb8c7ad4e: callq   0x7fafb8c7ad58
  0x00007fafb8c7ad53: jmpq    0x7fafb8c7aded
  0x00007fafb8c7ad58: mov     %rbx,%rsi
  0x00007fafb8c7ad5b: lea     0x8(%rsp),%rax
  0x00007fafb8c7ad60: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7ad64: mov     %r15,%rdi
  0x00007fafb8c7ad67: vzeroupper
  0x00007fafb8c7ad6a: mov     %rbp,0x330(%r15)
  0x00007fafb8c7ad71: mov     %rax,0x320(%r15)
  0x00007fafb8c7ad78: test    $0xf,%esp
  0x00007fafb8c7ad7e: je      0x7fafb8c7ad96
  0x00007fafb8c7ad84: sub     $0x8,%rsp
  0x00007fafb8c7ad88: callq   0x7fafd7d841d0
  0x00007fafb8c7ad8d: add     $0x8,%rsp
  0x00007fafb8c7ad91: jmpq    0x7fafb8c7ad9b
  0x00007fafb8c7ad96: callq   0x7fafd7d841d0
  0x00007fafb8c7ad9b: movabs  $0x0,%r10
  0x00007fafb8c7ada5: mov     %r10,0x320(%r15)
  0x00007fafb8c7adac: movabs  $0x0,%r10
  0x00007fafb8c7adb6: mov     %r10,0x330(%r15)
  0x00007fafb8c7adbd: movabs  $0x0,%r10
  0x00007fafb8c7adc7: mov     %r10,0x328(%r15)
  0x00007fafb8c7adce: vzeroupper
  0x00007fafb8c7add1: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7add9: je      0x7fafb8c7ade4
  0x00007fafb8c7addf: jmpq    0x7fafb8c5c780
  0x00007fafb8c7ade4: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7ade8: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7adec: retq
  0x00007fafb8c7aded: mov     0x1(%r13),%edx
  0x00007fafb8c7adf1: not     %edx
  0x00007fafb8c7adf3: mov     0xffffffffffffffd0(%rbp),%rcx
  0x00007fafb8c7adf7: shl     $0x2,%edx
  0x00007fafb8c7adfa: mov     0x30(%rcx,%rdx,8),%rbx
  0x00007fafb8c7adff: mov     0x38(%rcx,%rdx,8),%rax
  0x00007fafb8c7ae04: mov     0x40(%rcx,%rdx,8),%edx
  0x00007fafb8c7ae08: test    $0x1000000,%edx
  0x00007fafb8c7ae0e: je      0x7fafb8c7ae39
  0x00007fafb8c7ae14: push    %rbx
  0x00007fafb8c7ae15: mov     %rax,%rbx
  0x00007fafb8c7ae18: mov     0xffffffffffffffe8(%rbp),%rax
  0x00007fafb8c7ae1c: mov     0x8(%rax),%rax
  0x00007fafb8c7ae20: mov     0x8(%rax),%rax
  0x00007fafb8c7ae24: mov     0x10(%rax),%rax
  0x00007fafb8c7ae28: mov     0x10(%rax),%rax
  0x00007fafb8c7ae2c: mov     (%rax),%rax
  0x00007fafb8c7ae2f: mov     0x10(%rax,%rbx,4),%eax
  0x00007fafb8c7ae33: shl     $0x3,%rax
  0x00007fafb8c7ae37: pop     %rbx
  0x00007fafb8c7ae38: push    %rax
  0x00007fafb8c7ae39: shr     $0x1c,%edx
  0x00007fafb8c7ae3c: movabs  $0x7fafd89a8880,%r10
  0x00007fafb8c7ae46: mov     (%r10,%rdx,8),%rdx
  0x00007fafb8c7ae4a: push    %rdx
  0x00007fafb8c7ae4b: mov     0xffffffffffffffd8(%rbp),%r13
  0x00007fafb8c7ae4f: test    %r13,%r13
  0x00007fafb8c7ae52: je      0x7fafb8c7ae6a
  0x00007fafb8c7ae58: addq    $0x1,0x8(%r13)
  0x00007fafb8c7ae5d: sbbq    $0x0,0x8(%r13)
  0x00007fafb8c7ae62: add     $0x10,%r13
  0x00007fafb8c7ae66: mov     %r13,0xffffffffffffffd8(%rbp)
  0x00007fafb8c7ae6a: mov     0xffffffffffffffd8(%rbp),%rdx
  0x00007fafb8c7ae6e: test    %rdx,%rdx
  0x00007fafb8c7ae71: je      0x7fafb8c7afbe
  0x00007fafb8c7ae77: cmpb    $0xa,0xfffffffffffffff0(%rdx)
  0x00007fafb8c7ae7b: jne     0x7fafb8c7afbe
  0x00007fafb8c7ae81: add     $0x8,%rdx
  0x00007fafb8c7ae85: mov     0xfffffffffffffff8(%rdx),%r13
  0x00007fafb8c7ae89: sub     $0x0,%r13d
  0x00007fafb8c7ae8d: cmp     $0x2,%r13d
  0x00007fafb8c7ae91: jl      0x7fafb8c7afb3
  0x00007fafb8c7ae97: mov     0x8(%rbx),%r13
  0x00007fafb8c7ae9b: movzwl  0x34(%r13),%r13d
  0x00007fafb8c7aea0: sub     (%rdx),%r13
  0x00007fafb8c7aea3: sub     $0x1,%r13d
  0x00007fafb8c7aea7: mov     0x8(%rsp,%r13,8),%r13
  0x00007fafb8c7aeac: test    %r13,%r13
  0x00007fafb8c7aeaf: jne     0x7fafb8c7aebb
  0x00007fafb8c7aeb1: orq     $0x1,0x8(%rdx)
  0x00007fafb8c7aeb9: jmp     0x7fafb8c7af14
  0x00007fafb8c7aebb: mov     0x8(%r13),%r13d
  0x00007fafb8c7aebf: movabs  $0x800000000,%r12
  0x00007fafb8c7aec9: add     %r12,%r13
  0x00007fafb8c7aecc: xor     %r12,%r12
  0x00007fafb8c7aecf: xor     0x8(%rdx),%r13
  0x00007fafb8c7aed3: test    $0xfffffffffffffffc,%r13
  0x00007fafb8c7aeda: je      0x7fafb8c7af14
  0x00007fafb8c7aedc: test    $0x2,%r13
  0x00007fafb8c7aee3: jne     0x7fafb8c7af14
  0x00007fafb8c7aee5: cmpq    $0x0,0x8(%rdx)
  0x00007fafb8c7aeed: je      0x7fafb8c7af10
  0x00007fafb8c7aeef: cmpq    $0x1,0x8(%rdx)
  0x00007fafb8c7aef7: je      0x7fafb8c7af10
  0x00007fafb8c7aef9: xor     0x8(%rdx),%r13
  0x00007fafb8c7aefd: test    $0xfffffffffffffffc,%r13
  0x00007fafb8c7af04: je      0x7fafb8c7af14
  0x00007fafb8c7af06: orq     $0x2,0x8(%rdx)
  0x00007fafb8c7af0e: jmp     0x7fafb8c7af14
  0x00007fafb8c7af10: mov     %r13,0x8(%rdx)
  0x00007fafb8c7af14: add     $0x10,%rdx
  0x00007fafb8c7af18: mov     0xffffffffffffffe8(%rdx),%r13
  0x00007fafb8c7af1c: sub     $0x2,%r13d
  0x00007fafb8c7af20: cmp     $0x2,%r13d
  0x00007fafb8c7af24: jl      0x7fafb8c7afb3
  0x00007fafb8c7af2a: mov     0x8(%rbx),%r13
  0x00007fafb8c7af2e: movzwl  0x34(%r13),%r13d
  0x00007fafb8c7af33: sub     (%rdx),%r13
  0x00007fafb8c7af36: sub     $0x1,%r13d
  0x00007fafb8c7af3a: mov     0x8(%rsp,%r13,8),%r13
  0x00007fafb8c7af3f: test    %r13,%r13
  0x00007fafb8c7af42: jne     0x7fafb8c7af4e
  0x00007fafb8c7af44: orq     $0x1,0x8(%rdx)
  0x00007fafb8c7af4c: jmp     0x7fafb8c7afa7
  0x00007fafb8c7af4e: mov     0x8(%r13),%r13d
  0x00007fafb8c7af52: movabs  $0x800000000,%r12
  0x00007fafb8c7af5c: add     %r12,%r13
  0x00007fafb8c7af5f: xor     %r12,%r12
  0x00007fafb8c7af62: xor     0x8(%rdx),%r13
  0x00007fafb8c7af66: test    $0xfffffffffffffffc,%r13
  0x00007fafb8c7af6d: je      0x7fafb8c7afa7
  0x00007fafb8c7af6f: test    $0x2,%r13
  0x00007fafb8c7af76: jne     0x7fafb8c7afa7
  0x00007fafb8c7af78: cmpq    $0x0,0x8(%rdx)
  0x00007fafb8c7af80: je      0x7fafb8c7afa3
  0x00007fafb8c7af82: cmpq    $0x1,0x8(%rdx)
  0x00007fafb8c7af8a: je      0x7fafb8c7afa3
  0x00007fafb8c7af8c: xor     0x8(%rdx),%r13
  0x00007fafb8c7af90: test    $0xfffffffffffffffc,%r13
  0x00007fafb8c7af97: je      0x7fafb8c7afa7
  0x00007fafb8c7af99: orq     $0x2,0x8(%rdx)
  0x00007fafb8c7afa1: jmp     0x7fafb8c7afa7
  0x00007fafb8c7afa3: mov     %r13,0x8(%rdx)
  0x00007fafb8c7afa7: add     $0x10,%rdx
  0x00007fafb8c7afab: mov     0xffffffffffffffd8(%rdx),%r13
  0x00007fafb8c7afaf: sub     $0x4,%r13d
  0x00007fafb8c7afb3: shl     $0x3,%r13d
  0x00007fafb8c7afb7: add     %r13,%rdx
  0x00007fafb8c7afba: mov     %rdx,0xffffffffffffffd8(%rbp)
  0x00007fafb8c7afbe: lea     0x8(%rsp),%r13
  0x00007fafb8c7afc3: mov     %r13,0xfffffffffffffff0(%rbp)
  0x00007fafb8c7afc7: jmpq    *0x48(%rbx)
  0x00007fafb8c7afca: nopw    0x0(%rax,%rax)
  0x00007fafb8c7afd0: add     %al,(%rax)
  0x00007fafb8c7afd2: add     %al,(%rax)
  0x00007fafb8c7afd4: add     %al,(%rax)
  0x00007fafb8c7afd6: add     %al,(%rax)
  0x00007fafb8c7afd8: add     %al,(%rax)
  0x00007fafb8c7afda: add     %al,(%rax)
  0x00007fafb8c7afdc: add     %al,(%rax)
  0x00007fafb8c7afde: add     %al,(%rax)

----------------------------------------------------------------------
new  187 new  [0x00007fafb8c7b000, 0x00007fafb8c7b220]  544 bytes

Argument 0 is unknown.RIP: 0x7fafb8c7b000 Code size: 0x00000220
  0x00007fafb8c7b000: push    %rax
  0x00007fafb8c7b001: jmpq    0x7fafb8c7b03f
  0x00007fafb8c7b006: sub     $0x8,%rsp
  0x00007fafb8c7b00a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c7b00f: jmpq    0x7fafb8c7b03f
  0x00007fafb8c7b014: sub     $0x10,%rsp
  0x00007fafb8c7b018: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c7b01d: jmpq    0x7fafb8c7b03f
  0x00007fafb8c7b022: sub     $0x10,%rsp
  0x00007fafb8c7b026: mov     %rax,(%rsp)
  0x00007fafb8c7b02a: movabs  $0x0,%r10
  0x00007fafb8c7b034: mov     %r10,0x8(%rsp)
  0x00007fafb8c7b039: jmpq    0x7fafb8c7b03f
  0x00007fafb8c7b03e: push    %rax
  0x00007fafb8c7b03f: movzwl  0x1(%r13),%edx
  0x00007fafb8c7b044: bswap   %edx
  0x00007fafb8c7b046: shr     $0x10,%edx
  0x00007fafb8c7b049: mov     0xffffffffffffffe8(%rbp),%rcx
  0x00007fafb8c7b04d: mov     0x8(%rcx),%rcx
  0x00007fafb8c7b051: mov     0x8(%rcx),%rcx
  0x00007fafb8c7b055: mov     0x8(%rcx),%rax
  0x00007fafb8c7b059: cmpb    $0x7,0x4(%rax,%rdx)
  0x00007fafb8c7b05e: jne     0x7fafb8c7b12a
  0x00007fafb8c7b064: mov     0x40(%rcx,%rdx,8),%dx
  0x00007fafb8c7b069: mov     0x28(%rcx),%rcx
  0x00007fafb8c7b06d: mov     0x8(%rcx,%rdx,8),%rcx
  0x00007fafb8c7b072: push    %rcx
  0x00007fafb8c7b073: cmpb    $0x4,0x18a(%rcx)
  0x00007fafb8c7b07a: jne     0x7fafb8c7b129
  0x00007fafb8c7b080: mov     0x8(%rcx),%edx
  0x00007fafb8c7b083: test    $0x1,%edx
  0x00007fafb8c7b089: jne     0x7fafb8c7b129
  0x00007fafb8c7b08f: mov     0x118(%r15),%rax
  0x00007fafb8c7b096: lea     (%rax,%rdx),%rbx
  0x00007fafb8c7b09a: cmp     0x128(%r15),%rbx
  0x00007fafb8c7b0a1: jnbe    0x7fafb8c7b129
  0x00007fafb8c7b0a7: mov     %rbx,0x118(%r15)
  0x00007fafb8c7b0ae: jmpq    0x7fafb8c7b0b3
  0x00007fafb8c7b0b3: sub     $0x10,%rdx
  0x00007fafb8c7b0b7: je      0x7fafb8c7b0cc
  0x00007fafb8c7b0bd: xor     %ecx,%ecx
  0x00007fafb8c7b0bf: shr     $0x3,%edx
  0x00007fafb8c7b0c2: mov     %rcx,0x8(%rax,%rdx,8)
  0x00007fafb8c7b0c7: decq    %rdx
  0x00007fafb8c7b0ca: jne     0x7fafb8c7b0c2
  0x00007fafb8c7b0cc: pop     %rcx
  0x00007fafb8c7b0cd: mov     0xb8(%rcx),%rbx
  0x00007fafb8c7b0d4: mov     %rbx,(%rax)
  0x00007fafb8c7b0d7: xor     %esi,%esi
  0x00007fafb8c7b0d9: mov     %esi,0xc(%rax)
  0x00007fafb8c7b0dc: movabs  $0x800000000,%r12
  0x00007fafb8c7b0e6: sub     %r12,%rcx
  0x00007fafb8c7b0e9: xor     %r12,%r12
  0x00007fafb8c7b0ec: mov     %ecx,0x8(%rax)
  0x00007fafb8c7b0ef: cmpb    $0x0,0x1fcfcba0(%rip)
  0x00007fafb8c7b0f6: je      0x7fafb8c7b124
  0x00007fafb8c7b0fc: push    %rax
  0x00007fafb8c7b0fd: mov     %rax,%rdi
  0x00007fafb8c7b100: test    $0xf,%esp
  0x00007fafb8c7b106: je      0x7fafb8c7b11e
  0x00007fafb8c7b10c: sub     $0x8,%rsp
  0x00007fafb8c7b110: callq   0x7fafd81e6f60
  0x00007fafb8c7b115: add     $0x8,%rsp
  0x00007fafb8c7b119: jmpq    0x7fafb8c7b123
  0x00007fafb8c7b11e: callq   0x7fafd81e6f60
  0x00007fafb8c7b123: pop     %rax
  0x00007fafb8c7b124: jmpq    0x7fafb8c7b1f4
  0x00007fafb8c7b129: pop     %rcx
  0x00007fafb8c7b12a: mov     0xffffffffffffffe8(%rbp),%rsi
  0x00007fafb8c7b12e: mov     0x8(%rsi),%rsi
  0x00007fafb8c7b132: mov     0x8(%rsi),%rsi
  0x00007fafb8c7b136: movzwl  0x1(%r13),%edx
  0x00007fafb8c7b13b: bswap   %edx
  0x00007fafb8c7b13d: shr     $0x10,%edx
  0x00007fafb8c7b140: callq   0x7fafb8c7b14a
  0x00007fafb8c7b145: jmpq    0x7fafb8c7b1f4
  0x00007fafb8c7b14a: lea     0x8(%rsp),%rax
  0x00007fafb8c7b14f: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7b153: mov     %r15,%rdi
  0x00007fafb8c7b156: vzeroupper
  0x00007fafb8c7b159: mov     %rbp,0x330(%r15)
  0x00007fafb8c7b160: mov     %rax,0x320(%r15)
  0x00007fafb8c7b167: test    $0xf,%esp
  0x00007fafb8c7b16d: je      0x7fafb8c7b185
  0x00007fafb8c7b173: sub     $0x8,%rsp
  0x00007fafb8c7b177: callq   0x7fafd7d7d570
  0x00007fafb8c7b17c: add     $0x8,%rsp
  0x00007fafb8c7b180: jmpq    0x7fafb8c7b18a
  0x00007fafb8c7b185: callq   0x7fafd7d7d570
  0x00007fafb8c7b18a: movabs  $0x0,%r10
  0x00007fafb8c7b194: mov     %r10,0x320(%r15)
  0x00007fafb8c7b19b: movabs  $0x0,%r10
  0x00007fafb8c7b1a5: mov     %r10,0x330(%r15)
  0x00007fafb8c7b1ac: movabs  $0x0,%r10
  0x00007fafb8c7b1b6: mov     %r10,0x328(%r15)
  0x00007fafb8c7b1bd: vzeroupper
  0x00007fafb8c7b1c0: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7b1c8: je      0x7fafb8c7b1d3
  0x00007fafb8c7b1ce: jmpq    0x7fafb8c5c780
  0x00007fafb8c7b1d3: mov     0x380(%r15),%rax
  0x00007fafb8c7b1da: movabs  $0x0,%r10
  0x00007fafb8c7b1e4: mov     %r10,0x380(%r15)
  0x00007fafb8c7b1eb: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7b1ef: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7b1f3: retq
  0x00007fafb8c7b1f4: movzbl  0x3(%r13),%ebx
  0x00007fafb8c7b1f9: add     $0x3,%r13
  0x00007fafb8c7b1fd: movabs  $0x7fafd89a7880,%r10
  0x00007fafb8c7b207: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7b20b: nopl    0x0(%rax,%rax)
  0x00007fafb8c7b210: add     %al,(%rax)
  0x00007fafb8c7b212: add     %al,(%rax)
  0x00007fafb8c7b214: add     %al,(%rax)
  0x00007fafb8c7b216: add     %al,(%rax)
  0x00007fafb8c7b218: add     %al,(%rax)
  0x00007fafb8c7b21a: add     %al,(%rax)
  0x00007fafb8c7b21c: add     %al,(%rax)
  0x00007fafb8c7b21e: add     %al,(%rax)

----------------------------------------------------------------------
newarray  188 newarray  [0x00007fafb8c7b240, 0x00007fafb8c7b320]  224 bytes

Argument 0 is unknown.RIP: 0x7fafb8c7b240 Code size: 0x000000e0
  0x00007fafb8c7b240: mov     (%rsp),%eax
  0x00007fafb8c7b243: add     $0x8,%rsp
  0x00007fafb8c7b247: movzbl  0x1(%r13),%esi
  0x00007fafb8c7b24c: callq   0x7fafb8c7b256
  0x00007fafb8c7b251: jmpq    0x7fafb8c7b303
  0x00007fafb8c7b256: mov     %rax,%rdx
  0x00007fafb8c7b259: lea     0x8(%rsp),%rax
  0x00007fafb8c7b25e: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7b262: mov     %r15,%rdi
  0x00007fafb8c7b265: vzeroupper
  0x00007fafb8c7b268: mov     %rbp,0x330(%r15)
  0x00007fafb8c7b26f: mov     %rax,0x320(%r15)
  0x00007fafb8c7b276: test    $0xf,%esp
  0x00007fafb8c7b27c: je      0x7fafb8c7b294
  0x00007fafb8c7b282: sub     $0x8,%rsp
  0x00007fafb8c7b286: callq   0x7fafd7d7d900
  0x00007fafb8c7b28b: add     $0x8,%rsp
  0x00007fafb8c7b28f: jmpq    0x7fafb8c7b299
  0x00007fafb8c7b294: callq   0x7fafd7d7d900
  0x00007fafb8c7b299: movabs  $0x0,%r10
  0x00007fafb8c7b2a3: mov     %r10,0x320(%r15)
  0x00007fafb8c7b2aa: movabs  $0x0,%r10
  0x00007fafb8c7b2b4: mov     %r10,0x330(%r15)
  0x00007fafb8c7b2bb: movabs  $0x0,%r10
  0x00007fafb8c7b2c5: mov     %r10,0x328(%r15)
  0x00007fafb8c7b2cc: vzeroupper
  0x00007fafb8c7b2cf: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7b2d7: je      0x7fafb8c7b2e2
  0x00007fafb8c7b2dd: jmpq    0x7fafb8c5c780
  0x00007fafb8c7b2e2: mov     0x380(%r15),%rax
  0x00007fafb8c7b2e9: movabs  $0x0,%r10
  0x00007fafb8c7b2f3: mov     %r10,0x380(%r15)
  0x00007fafb8c7b2fa: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7b2fe: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7b302: retq
  0x00007fafb8c7b303: movzbl  0x2(%r13),%ebx
  0x00007fafb8c7b308: add     $0x2,%r13
  0x00007fafb8c7b30c: movabs  $0x7fafd89a7880,%r10
  0x00007fafb8c7b316: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7b31a: nopw    0x0(%rax,%rax)

----------------------------------------------------------------------
anewarray  189 anewarray  [0x00007fafb8c7b340, 0x00007fafb8c7b440]  256 bytes

Argument 0 is unknown.RIP: 0x7fafb8c7b340 Code size: 0x00000100
  0x00007fafb8c7b340: mov     (%rsp),%eax
  0x00007fafb8c7b343: add     $0x8,%rsp
  0x00007fafb8c7b347: movzwl  0x1(%r13),%edx
  0x00007fafb8c7b34c: bswap   %edx
  0x00007fafb8c7b34e: shr     $0x10,%edx
  0x00007fafb8c7b351: mov     0xffffffffffffffe8(%rbp),%rsi
  0x00007fafb8c7b355: mov     0x8(%rsi),%rsi
  0x00007fafb8c7b359: mov     0x8(%rsi),%rsi
  0x00007fafb8c7b35d: callq   0x7fafb8c7b367
  0x00007fafb8c7b362: jmpq    0x7fafb8c7b414
  0x00007fafb8c7b367: mov     %rax,%rcx
  0x00007fafb8c7b36a: lea     0x8(%rsp),%rax
  0x00007fafb8c7b36f: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7b373: mov     %r15,%rdi
  0x00007fafb8c7b376: vzeroupper
  0x00007fafb8c7b379: mov     %rbp,0x330(%r15)
  0x00007fafb8c7b380: mov     %rax,0x320(%r15)
  0x00007fafb8c7b387: test    $0xf,%esp
  0x00007fafb8c7b38d: je      0x7fafb8c7b3a5
  0x00007fafb8c7b393: sub     $0x8,%rsp
  0x00007fafb8c7b397: callq   0x7fafd7d7daf0
  0x00007fafb8c7b39c: add     $0x8,%rsp
  0x00007fafb8c7b3a0: jmpq    0x7fafb8c7b3aa
  0x00007fafb8c7b3a5: callq   0x7fafd7d7daf0
  0x00007fafb8c7b3aa: movabs  $0x0,%r10
  0x00007fafb8c7b3b4: mov     %r10,0x320(%r15)
  0x00007fafb8c7b3bb: movabs  $0x0,%r10
  0x00007fafb8c7b3c5: mov     %r10,0x330(%r15)
  0x00007fafb8c7b3cc: movabs  $0x0,%r10
  0x00007fafb8c7b3d6: mov     %r10,0x328(%r15)
  0x00007fafb8c7b3dd: vzeroupper
  0x00007fafb8c7b3e0: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7b3e8: je      0x7fafb8c7b3f3
  0x00007fafb8c7b3ee: jmpq    0x7fafb8c5c780
  0x00007fafb8c7b3f3: mov     0x380(%r15),%rax
  0x00007fafb8c7b3fa: movabs  $0x0,%r10
  0x00007fafb8c7b404: mov     %r10,0x380(%r15)
  0x00007fafb8c7b40b: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7b40f: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7b413: retq
  0x00007fafb8c7b414: movzbl  0x3(%r13),%ebx
  0x00007fafb8c7b419: add     $0x3,%r13
  0x00007fafb8c7b41d: movabs  $0x7fafd89a7880,%r10
  0x00007fafb8c7b427: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7b42b: nopl    0x0(%rax,%rax)
  0x00007fafb8c7b430: add     %al,(%rax)
  0x00007fafb8c7b432: add     %al,(%rax)
  0x00007fafb8c7b434: add     %al,(%rax)
  0x00007fafb8c7b436: add     %al,(%rax)
  0x00007fafb8c7b438: add     %al,(%rax)
  0x00007fafb8c7b43a: add     %al,(%rax)
  0x00007fafb8c7b43c: add     %al,(%rax)
  0x00007fafb8c7b43e: add     %al,(%rax)

----------------------------------------------------------------------
arraylength  190 arraylength  [0x00007fafb8c7b460, 0x00007fafb8c7b480]  32 bytes

Argument 0 is unknown.RIP: 0x7fafb8c7b460 Code size: 0x00000020
  0x00007fafb8c7b460: pop     %rax
  0x00007fafb8c7b461: mov     0xc(%rax),%eax
  0x00007fafb8c7b464: movzbl  0x1(%r13),%ebx
  0x00007fafb8c7b469: incq    %r13
  0x00007fafb8c7b46c: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c7b476: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7b47a: nopw    0x0(%rax,%rax)

----------------------------------------------------------------------
athrow  191 athrow  [0x00007fafb8c7b4a0, 0x00007fafb8c7b4c0]  32 bytes

Argument 0 is unknown.RIP: 0x7fafb8c7b4a0 Code size: 0x00000020
  0x00007fafb8c7b4a0: pop     %rax
  0x00007fafb8c7b4a1: cmp     (%rax),%rax
  0x00007fafb8c7b4a4: jmpq    0x7fafb8c69013
  0x00007fafb8c7b4a9: nopl    0x0(%rax)
  0x00007fafb8c7b4b0: add     %al,(%rax)
  0x00007fafb8c7b4b2: add     %al,(%rax)
  0x00007fafb8c7b4b4: add     %al,(%rax)
  0x00007fafb8c7b4b6: add     %al,(%rax)
  0x00007fafb8c7b4b8: add     %al,(%rax)
  0x00007fafb8c7b4ba: add     %al,(%rax)
  0x00007fafb8c7b4bc: add     %al,(%rax)
  0x00007fafb8c7b4be: add     %al,(%rax)

----------------------------------------------------------------------
checkcast  192 checkcast  [0x00007fafb8c7b4e0, 0x00007fafb8c7b720]  576 bytes

Argument 0 is unknown.RIP: 0x7fafb8c7b4e0 Code size: 0x00000240
  0x00007fafb8c7b4e0: pop     %rax
  0x00007fafb8c7b4e1: test    %rax,%rax
  0x00007fafb8c7b4e4: je      0x7fafb8c7b6ee
  0x00007fafb8c7b4ea: mov     0xffffffffffffffe8(%rbp),%rcx
  0x00007fafb8c7b4ee: mov     0x8(%rcx),%rcx
  0x00007fafb8c7b4f2: mov     0x8(%rcx),%rcx
  0x00007fafb8c7b4f6: mov     0x8(%rcx),%rdx
  0x00007fafb8c7b4fa: movzwl  0x1(%r13),%ebx
  0x00007fafb8c7b4ff: bswap   %ebx
  0x00007fafb8c7b501: shr     $0x10,%ebx
  0x00007fafb8c7b504: cmpb    $0x7,0x4(%rdx,%rbx)
  0x00007fafb8c7b509: je      0x7fafb8c7b5c7
  0x00007fafb8c7b50f: push    %rax
  0x00007fafb8c7b510: callq   0x7fafb8c7b51a
  0x00007fafb8c7b515: jmpq    0x7fafb8c7b5ac
  0x00007fafb8c7b51a: lea     0x8(%rsp),%rax
  0x00007fafb8c7b51f: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7b523: mov     %r15,%rdi
  0x00007fafb8c7b526: vzeroupper
  0x00007fafb8c7b529: mov     %rbp,0x330(%r15)
  0x00007fafb8c7b530: mov     %rax,0x320(%r15)
  0x00007fafb8c7b537: test    $0xf,%esp
  0x00007fafb8c7b53d: je      0x7fafb8c7b555
  0x00007fafb8c7b543: sub     $0x8,%rsp
  0x00007fafb8c7b547: callq   0x7fafd7d7e5a0
  0x00007fafb8c7b54c: add     $0x8,%rsp
  0x00007fafb8c7b550: jmpq    0x7fafb8c7b55a
  0x00007fafb8c7b555: callq   0x7fafd7d7e5a0
  0x00007fafb8c7b55a: movabs  $0x0,%r10
  0x00007fafb8c7b564: mov     %r10,0x320(%r15)
  0x00007fafb8c7b56b: movabs  $0x0,%r10
  0x00007fafb8c7b575: mov     %r10,0x330(%r15)
  0x00007fafb8c7b57c: movabs  $0x0,%r10
  0x00007fafb8c7b586: mov     %r10,0x328(%r15)
  0x00007fafb8c7b58d: vzeroupper
  0x00007fafb8c7b590: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7b598: je      0x7fafb8c7b5a3
  0x00007fafb8c7b59e: jmpq    0x7fafb8c5c780
  0x00007fafb8c7b5a3: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7b5a7: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7b5ab: retq
  0x00007fafb8c7b5ac: mov     0x388(%r15),%rax
  0x00007fafb8c7b5b3: movabs  $0x0,%r10
  0x00007fafb8c7b5bd: mov     %r10,0x388(%r15)
  0x00007fafb8c7b5c4: pop     %rdx
  0x00007fafb8c7b5c5: jmp     0x7fafb8c7b5d8
  0x00007fafb8c7b5c7: mov     %rax,%rdx
  0x00007fafb8c7b5ca: mov     0x40(%rcx,%rbx,8),%bx
  0x00007fafb8c7b5cf: mov     0x28(%rcx),%rcx
  0x00007fafb8c7b5d3: mov     0x8(%rcx,%rbx,8),%rax
  0x00007fafb8c7b5d8: mov     0x8(%rdx),%ebx
  0x00007fafb8c7b5db: movabs  $0x800000000,%r12
  0x00007fafb8c7b5e5: add     %r12,%rbx
  0x00007fafb8c7b5e8: xor     %r12,%r12
  0x00007fafb8c7b5eb: mov     0xffffffffffffffd8(%rbp),%rcx
  0x00007fafb8c7b5ef: test    %rcx,%rcx
  0x00007fafb8c7b5f2: je      0x7fafb8c7b682
  0x00007fafb8c7b5f8: mov     0x18(%rcx),%rdi
  0x00007fafb8c7b5fc: cmp     %rbx,%rdi
  0x00007fafb8c7b5ff: jne     0x7fafb8c7b614
  0x00007fafb8c7b605: addq    $0x1,0x20(%rcx)
  0x00007fafb8c7b60a: sbbq    $0x0,0x20(%rcx)
  0x00007fafb8c7b60f: jmpq    0x7fafb8c7b67a
  0x00007fafb8c7b614: test    %rdi,%rdi
  0x00007fafb8c7b617: je      0x7fafb8c7b654
  0x00007fafb8c7b61d: mov     0x28(%rcx),%rdi
  0x00007fafb8c7b621: cmp     %rbx,%rdi
  0x00007fafb8c7b624: jne     0x7fafb8c7b639
  0x00007fafb8c7b62a: addq    $0x1,0x30(%rcx)
  0x00007fafb8c7b62f: sbbq    $0x0,0x30(%rcx)
  0x00007fafb8c7b634: jmpq    0x7fafb8c7b67a
  0x00007fafb8c7b639: test    %rdi,%rdi
  0x00007fafb8c7b63c: jne     0x7fafb8c7b67a
  0x00007fafb8c7b642: mov     %rbx,0x28(%rcx)
  0x00007fafb8c7b646: mov     $0x1,%edi
  0x00007fafb8c7b64b: mov     %rdi,0x30(%rcx)
  0x00007fafb8c7b64f: jmpq    0x7fafb8c7b67a
  0x00007fafb8c7b654: cmp     0x28(%rcx),%rbx
  0x00007fafb8c7b658: jne     0x7fafb8c7b66d
  0x00007fafb8c7b65e: addq    $0x1,0x30(%rcx)
  0x00007fafb8c7b663: sbbq    $0x0,0x30(%rcx)
  0x00007fafb8c7b668: jmpq    0x7fafb8c7b67a
  0x00007fafb8c7b66d: mov     %rbx,0x18(%rcx)
  0x00007fafb8c7b671: mov     $0x1,%edi
  0x00007fafb8c7b676: mov     %rdi,0x20(%rcx)
  0x00007fafb8c7b67a: add     $0x38,%rcx
  0x00007fafb8c7b67e: mov     %rcx,0xffffffffffffffd8(%rbp)
  0x00007fafb8c7b682: cmp     %rax,%rbx
  0x00007fafb8c7b685: je      0x7fafb8c7b6e6
  0x00007fafb8c7b68b: mov     0x10(%rax),%ecx
  0x00007fafb8c7b68e: cmp     (%rbx,%rcx),%rax
  0x00007fafb8c7b692: je      0x7fafb8c7b6e6
  0x00007fafb8c7b698: cmp     $0x20,%ecx
  0x00007fafb8c7b69b: jne     0x7fafb8c7b6c3
  0x00007fafb8c7b6a1: push    %rax
  0x00007fafb8c7b6a2: mov     %rax,%rax
  0x00007fafb8c7b6a5: push    %rdi
  0x00007fafb8c7b6a6: mov     0x28(%rbx),%rdi
  0x00007fafb8c7b6aa: mov     (%rdi),%ecx
  0x00007fafb8c7b6ac: add     $0x8,%rdi
  0x00007fafb8c7b6b0: test    %rax,%rax
  0x00007fafb8c7b6b3: repne scasq (%rdi)
  0x00007fafb8c7b6b6: pop     %rdi
  0x00007fafb8c7b6b7: pop     %rax
  0x00007fafb8c7b6b8: jne     0x7fafb8c7b6c3
  0x00007fafb8c7b6ba: mov     %rax,0x20(%rbx)
  0x00007fafb8c7b6be: jmpq    0x7fafb8c7b6e6
  0x00007fafb8c7b6c3: mov     0xffffffffffffffd8(%rbp),%rcx
  0x00007fafb8c7b6c7: test    %rcx,%rcx
  0x00007fafb8c7b6ca: je      0x7fafb8c7b6e0
  0x00007fafb8c7b6d0: addq    $0xffffffffffffffff,0xffffffffffffffd0(%rcx)
  0x00007fafb8c7b6d5: js      0x7fafb8c7b6e0
  0x00007fafb8c7b6db: addq    $0x1,0xffffffffffffffd0(%rcx)
  0x00007fafb8c7b6e0: push    %rdx
  0x00007fafb8c7b6e1: jmpq    0x7fafb8c6a2b4
  0x00007fafb8c7b6e6: mov     %rdx,%rax
  0x00007fafb8c7b6e9: jmpq    0x7fafb8c7b707
  0x00007fafb8c7b6ee: mov     0xffffffffffffffd8(%rbp),%rcx
  0x00007fafb8c7b6f2: test    %rcx,%rcx
  0x00007fafb8c7b6f5: je      0x7fafb8c7b707
  0x00007fafb8c7b6fb: orb     $0x1,0x1(%rcx)
  0x00007fafb8c7b6ff: add     $0x38,%rcx
  0x00007fafb8c7b703: mov     %rcx,0xffffffffffffffd8(%rbp)
  0x00007fafb8c7b707: movzbl  0x3(%r13),%ebx
  0x00007fafb8c7b70c: add     $0x3,%r13
  0x00007fafb8c7b710: movabs  $0x7fafd89a7880,%r10
  0x00007fafb8c7b71a: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7b71e: nop

----------------------------------------------------------------------
instanceof  193 instanceof  [0x00007fafb8c7b740, 0x00007fafb8c7b9a0]  608 bytes

Argument 0 is unknown.RIP: 0x7fafb8c7b740 Code size: 0x00000260
  0x00007fafb8c7b740: pop     %rax
  0x00007fafb8c7b741: test    %rax,%rax
  0x00007fafb8c7b744: je      0x7fafb8c7b95e
  0x00007fafb8c7b74a: mov     0xffffffffffffffe8(%rbp),%rcx
  0x00007fafb8c7b74e: mov     0x8(%rcx),%rcx
  0x00007fafb8c7b752: mov     0x8(%rcx),%rcx
  0x00007fafb8c7b756: mov     0x8(%rcx),%rdx
  0x00007fafb8c7b75a: movzwl  0x1(%r13),%ebx
  0x00007fafb8c7b75f: bswap   %ebx
  0x00007fafb8c7b761: shr     $0x10,%ebx
  0x00007fafb8c7b764: cmpb    $0x7,0x4(%rdx,%rbx)
  0x00007fafb8c7b769: je      0x7fafb8c7b83a
  0x00007fafb8c7b76f: push    %rax
  0x00007fafb8c7b770: callq   0x7fafb8c7b77a
  0x00007fafb8c7b775: jmpq    0x7fafb8c7b80c
  0x00007fafb8c7b77a: lea     0x8(%rsp),%rax
  0x00007fafb8c7b77f: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7b783: mov     %r15,%rdi
  0x00007fafb8c7b786: vzeroupper
  0x00007fafb8c7b789: mov     %rbp,0x330(%r15)
  0x00007fafb8c7b790: mov     %rax,0x320(%r15)
  0x00007fafb8c7b797: test    $0xf,%esp
  0x00007fafb8c7b79d: je      0x7fafb8c7b7b5
  0x00007fafb8c7b7a3: sub     $0x8,%rsp
  0x00007fafb8c7b7a7: callq   0x7fafd7d7e5a0
  0x00007fafb8c7b7ac: add     $0x8,%rsp
  0x00007fafb8c7b7b0: jmpq    0x7fafb8c7b7ba
  0x00007fafb8c7b7b5: callq   0x7fafd7d7e5a0
  0x00007fafb8c7b7ba: movabs  $0x0,%r10
  0x00007fafb8c7b7c4: mov     %r10,0x320(%r15)
  0x00007fafb8c7b7cb: movabs  $0x0,%r10
  0x00007fafb8c7b7d5: mov     %r10,0x330(%r15)
  0x00007fafb8c7b7dc: movabs  $0x0,%r10
  0x00007fafb8c7b7e6: mov     %r10,0x328(%r15)
  0x00007fafb8c7b7ed: vzeroupper
  0x00007fafb8c7b7f0: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7b7f8: je      0x7fafb8c7b803
  0x00007fafb8c7b7fe: jmpq    0x7fafb8c5c780
  0x00007fafb8c7b803: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7b807: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7b80b: retq
  0x00007fafb8c7b80c: mov     0x388(%r15),%rax
  0x00007fafb8c7b813: movabs  $0x0,%r10
  0x00007fafb8c7b81d: mov     %r10,0x388(%r15)
  0x00007fafb8c7b824: pop     %rdx
  0x00007fafb8c7b825: mov     0x8(%rdx),%edx
  0x00007fafb8c7b828: movabs  $0x800000000,%r12
  0x00007fafb8c7b832: add     %r12,%rdx
  0x00007fafb8c7b835: xor     %r12,%r12
  0x00007fafb8c7b838: jmp     0x7fafb8c7b85b
  0x00007fafb8c7b83a: mov     0x8(%rax),%edx
  0x00007fafb8c7b83d: movabs  $0x800000000,%r12
  0x00007fafb8c7b847: add     %r12,%rdx
  0x00007fafb8c7b84a: xor     %r12,%r12
  0x00007fafb8c7b84d: mov     0x40(%rcx,%rbx,8),%bx
  0x00007fafb8c7b852: mov     0x28(%rcx),%rcx
  0x00007fafb8c7b856: mov     0x8(%rcx,%rbx,8),%rax
  0x00007fafb8c7b85b: mov     0xffffffffffffffd8(%rbp),%rcx
  0x00007fafb8c7b85f: test    %rcx,%rcx
  0x00007fafb8c7b862: je      0x7fafb8c7b8f2
  0x00007fafb8c7b868: mov     0x18(%rcx),%rdi
  0x00007fafb8c7b86c: cmp     %rdx,%rdi
  0x00007fafb8c7b86f: jne     0x7fafb8c7b884
  0x00007fafb8c7b875: addq    $0x1,0x20(%rcx)
  0x00007fafb8c7b87a: sbbq    $0x0,0x20(%rcx)
  0x00007fafb8c7b87f: jmpq    0x7fafb8c7b8ea
  0x00007fafb8c7b884: test    %rdi,%rdi
  0x00007fafb8c7b887: je      0x7fafb8c7b8c4
  0x00007fafb8c7b88d: mov     0x28(%rcx),%rdi
  0x00007fafb8c7b891: cmp     %rdx,%rdi
  0x00007fafb8c7b894: jne     0x7fafb8c7b8a9
  0x00007fafb8c7b89a: addq    $0x1,0x30(%rcx)
  0x00007fafb8c7b89f: sbbq    $0x0,0x30(%rcx)
  0x00007fafb8c7b8a4: jmpq    0x7fafb8c7b8ea
  0x00007fafb8c7b8a9: test    %rdi,%rdi
  0x00007fafb8c7b8ac: jne     0x7fafb8c7b8ea
  0x00007fafb8c7b8b2: mov     %rdx,0x28(%rcx)
  0x00007fafb8c7b8b6: mov     $0x1,%edi
  0x00007fafb8c7b8bb: mov     %rdi,0x30(%rcx)
  0x00007fafb8c7b8bf: jmpq    0x7fafb8c7b8ea
  0x00007fafb8c7b8c4: cmp     0x28(%rcx),%rdx
  0x00007fafb8c7b8c8: jne     0x7fafb8c7b8dd
  0x00007fafb8c7b8ce: addq    $0x1,0x30(%rcx)
  0x00007fafb8c7b8d3: sbbq    $0x0,0x30(%rcx)
  0x00007fafb8c7b8d8: jmpq    0x7fafb8c7b8ea
  0x00007fafb8c7b8dd: mov     %rdx,0x18(%rcx)
  0x00007fafb8c7b8e1: mov     $0x1,%edi
  0x00007fafb8c7b8e6: mov     %rdi,0x20(%rcx)
  0x00007fafb8c7b8ea: add     $0x38,%rcx
  0x00007fafb8c7b8ee: mov     %rcx,0xffffffffffffffd8(%rbp)
  0x00007fafb8c7b8f2: cmp     %rax,%rdx
  0x00007fafb8c7b8f5: je      0x7fafb8c7b954
  0x00007fafb8c7b8fb: mov     0x10(%rax),%ecx
  0x00007fafb8c7b8fe: cmp     (%rdx,%rcx),%rax
  0x00007fafb8c7b902: je      0x7fafb8c7b954
  0x00007fafb8c7b908: cmp     $0x20,%ecx
  0x00007fafb8c7b90b: jne     0x7fafb8c7b933
  0x00007fafb8c7b911: push    %rax
  0x00007fafb8c7b912: mov     %rax,%rax
  0x00007fafb8c7b915: push    %rdi
  0x00007fafb8c7b916: mov     0x28(%rdx),%rdi
  0x00007fafb8c7b91a: mov     (%rdi),%ecx
  0x00007fafb8c7b91c: add     $0x8,%rdi
  0x00007fafb8c7b920: test    %rax,%rax
  0x00007fafb8c7b923: repne scasq (%rdi)
  0x00007fafb8c7b926: pop     %rdi
  0x00007fafb8c7b927: pop     %rax
  0x00007fafb8c7b928: jne     0x7fafb8c7b933
  0x00007fafb8c7b92a: mov     %rax,0x20(%rdx)
  0x00007fafb8c7b92e: jmpq    0x7fafb8c7b954
  0x00007fafb8c7b933: mov     0xffffffffffffffd8(%rbp),%rcx
  0x00007fafb8c7b937: test    %rcx,%rcx
  0x00007fafb8c7b93a: je      0x7fafb8c7b950
  0x00007fafb8c7b940: addq    $0xffffffffffffffff,0xffffffffffffffd0(%rcx)
  0x00007fafb8c7b945: js      0x7fafb8c7b950
  0x00007fafb8c7b94b: addq    $0x1,0xffffffffffffffd0(%rcx)
  0x00007fafb8c7b950: xor     %eax,%eax
  0x00007fafb8c7b952: jmp     0x7fafb8c7b977
  0x00007fafb8c7b954: mov     $0x1,%eax
  0x00007fafb8c7b959: jmpq    0x7fafb8c7b977
  0x00007fafb8c7b95e: mov     0xffffffffffffffd8(%rbp),%rcx
  0x00007fafb8c7b962: test    %rcx,%rcx
  0x00007fafb8c7b965: je      0x7fafb8c7b977
  0x00007fafb8c7b96b: orb     $0x1,0x1(%rcx)
  0x00007fafb8c7b96f: add     $0x38,%rcx
  0x00007fafb8c7b973: mov     %rcx,0xffffffffffffffd8(%rbp)
  0x00007fafb8c7b977: movzbl  0x3(%r13),%ebx
  0x00007fafb8c7b97c: add     $0x3,%r13
  0x00007fafb8c7b980: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c7b98a: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7b98e: nop
  0x00007fafb8c7b990: add     %al,(%rax)
  0x00007fafb8c7b992: add     %al,(%rax)
  0x00007fafb8c7b994: add     %al,(%rax)
  0x00007fafb8c7b996: add     %al,(%rax)
  0x00007fafb8c7b998: add     %al,(%rax)
  0x00007fafb8c7b99a: add     %al,(%rax)
  0x00007fafb8c7b99c: add     %al,(%rax)
  0x00007fafb8c7b99e: add     %al,(%rax)

----------------------------------------------------------------------
monitorenter  194 monitorenter  [0x00007fafb8c7b9c0, 0x00007fafb8c7bbe0]  544 bytes

Argument 0 is unknown.RIP: 0x7fafb8c7b9c0 Code size: 0x00000220
  0x00007fafb8c7b9c0: pop     %rax
  0x00007fafb8c7b9c1: cmp     (%rax),%rax
  0x00007fafb8c7b9c4: xor     %esi,%esi
  0x00007fafb8c7b9c6: mov     0xffffffffffffffb8(%rbp),%rcx
  0x00007fafb8c7b9ca: lea     0xffffffffffffffb8(%rbp),%rdx
  0x00007fafb8c7b9ce: jmp     0x7fafb8c7b9e6
  0x00007fafb8c7b9d0: cmpq    $0x0,0x8(%rcx)
  0x00007fafb8c7b9d8: cmove   %rcx,%rsi
  0x00007fafb8c7b9dc: cmp     0x8(%rcx),%rax
  0x00007fafb8c7b9e0: je      0x7fafb8c7b9eb
  0x00007fafb8c7b9e2: add     $0x10,%rcx
  0x00007fafb8c7b9e6: cmp     %rdx,%rcx
  0x00007fafb8c7b9e9: jne     0x7fafb8c7b9d0
  0x00007fafb8c7b9eb: test    %rsi,%rsi
  0x00007fafb8c7b9ee: jne     0x7fafb8c7ba1c
  0x00007fafb8c7b9f4: mov     0xffffffffffffffb8(%rbp),%rsi
  0x00007fafb8c7b9f8: sub     $0x10,%rsp
  0x00007fafb8c7b9fc: sub     $0x10,%rsi
  0x00007fafb8c7ba00: mov     %rsp,%rcx
  0x00007fafb8c7ba03: mov     %rsi,0xffffffffffffffb8(%rbp)
  0x00007fafb8c7ba07: jmpq    0x7fafb8c7ba17
  0x00007fafb8c7ba0c: mov     0x10(%rcx),%rdx
  0x00007fafb8c7ba10: mov     %rdx,(%rcx)
  0x00007fafb8c7ba13: add     $0x8,%rcx
  0x00007fafb8c7ba17: cmp     %rsi,%rcx
  0x00007fafb8c7ba1a: jne     0x7fafb8c7ba0c
  0x00007fafb8c7ba1c: incq    %r13
  0x00007fafb8c7ba1f: mov     %rax,0x8(%rsi)
  0x00007fafb8c7ba23: mov     0x8(%rsi),%rcx
  0x00007fafb8c7ba27: mov     (%rcx),%rax
  0x00007fafb8c7ba2a: mov     %rax,%rbx
  0x00007fafb8c7ba2d: and     $0x7,%rbx
  0x00007fafb8c7ba31: cmp     $0x5,%rbx
  0x00007fafb8c7ba35: jne     0x7fafb8c7bae0
  0x00007fafb8c7ba3b: mov     0x8(%rcx),%ebx
  0x00007fafb8c7ba3e: movabs  $0x800000000,%r12
  0x00007fafb8c7ba48: add     %r12,%rbx
  0x00007fafb8c7ba4b: xor     %r12,%r12
  0x00007fafb8c7ba4e: mov     0xb8(%rbx),%rbx
  0x00007fafb8c7ba55: or      %r15,%rbx
  0x00007fafb8c7ba58: xor     %rax,%rbx
  0x00007fafb8c7ba5b: and     $0xffffffffffffff87,%rbx
  0x00007fafb8c7ba5f: je      0x7fafb8c7bba5
  0x00007fafb8c7ba65: test    $0x7,%rbx
  0x00007fafb8c7ba6c: jne     0x7fafb8c7bac1
  0x00007fafb8c7ba6e: test    $0x300,%rbx
  0x00007fafb8c7ba75: jne     0x7fafb8c7ba94
  0x00007fafb8c7ba77: and     $0x37f,%rax
  0x00007fafb8c7ba7e: mov     %rax,%rbx
  0x00007fafb8c7ba81: or      %r15,%rbx
  0x00007fafb8c7ba84: lock cmpxchg %rbx,(%rcx)
  0x00007fafb8c7ba89: jne     0x7fafb8c7bb09
  0x00007fafb8c7ba8f: jmpq    0x7fafb8c7bba5
  0x00007fafb8c7ba94: mov     0x8(%rcx),%ebx
  0x00007fafb8c7ba97: movabs  $0x800000000,%r12
  0x00007fafb8c7baa1: add     %r12,%rbx
  0x00007fafb8c7baa4: xor     %r12,%r12
  0x00007fafb8c7baa7: mov     0xb8(%rbx),%rbx
  0x00007fafb8c7baae: or      %r15,%rbx
  0x00007fafb8c7bab1: lock cmpxchg %rbx,(%rcx)
  0x00007fafb8c7bab6: jne     0x7fafb8c7bb09
  0x00007fafb8c7babc: jmpq    0x7fafb8c7bba5
  0x00007fafb8c7bac1: mov     0x8(%rcx),%ebx
  0x00007fafb8c7bac4: movabs  $0x800000000,%r12
  0x00007fafb8c7bace: add     %r12,%rbx
  0x00007fafb8c7bad1: xor     %r12,%r12
  0x00007fafb8c7bad4: mov     0xb8(%rbx),%rbx
  0x00007fafb8c7badb: lock cmpxchg %rbx,(%rcx)
  0x00007fafb8c7bae0: mov     $0x1,%eax
  0x00007fafb8c7bae5: or      (%rcx),%rax
  0x00007fafb8c7bae8: mov     %rax,(%rsi)
  0x00007fafb8c7baeb: lock cmpxchg %rsi,(%rcx)
  0x00007fafb8c7baf0: je      0x7fafb8c7bba5
  0x00007fafb8c7baf6: sub     %rsp,%rax
  0x00007fafb8c7baf9: and     $0xfffffffffffff007,%rax
  0x00007fafb8c7bb00: mov     %rax,(%rsi)
  0x00007fafb8c7bb03: je      0x7fafb8c7bba5
  0x00007fafb8c7bb09: callq   0x7fafb8c7bb13
  0x00007fafb8c7bb0e: jmpq    0x7fafb8c7bba5
  0x00007fafb8c7bb13: lea     0x8(%rsp),%rax
  0x00007fafb8c7bb18: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7bb1c: mov     %r15,%rdi
  0x00007fafb8c7bb1f: vzeroupper
  0x00007fafb8c7bb22: mov     %rbp,0x330(%r15)
  0x00007fafb8c7bb29: mov     %rax,0x320(%r15)
  0x00007fafb8c7bb30: test    $0xf,%esp
  0x00007fafb8c7bb36: je      0x7fafb8c7bb4e
  0x00007fafb8c7bb3c: sub     $0x8,%rsp
  0x00007fafb8c7bb40: callq   0x7fafd7d82230
  0x00007fafb8c7bb45: add     $0x8,%rsp
  0x00007fafb8c7bb49: jmpq    0x7fafb8c7bb53
  0x00007fafb8c7bb4e: callq   0x7fafd7d82230
  0x00007fafb8c7bb53: movabs  $0x0,%r10
  0x00007fafb8c7bb5d: mov     %r10,0x320(%r15)
  0x00007fafb8c7bb64: movabs  $0x0,%r10
  0x00007fafb8c7bb6e: mov     %r10,0x330(%r15)
  0x00007fafb8c7bb75: movabs  $0x0,%r10
  0x00007fafb8c7bb7f: mov     %r10,0x328(%r15)
  0x00007fafb8c7bb86: vzeroupper
  0x00007fafb8c7bb89: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7bb91: je      0x7fafb8c7bb9c
  0x00007fafb8c7bb97: jmpq    0x7fafb8c5c780
  0x00007fafb8c7bb9c: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7bba0: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7bba4: retq
  0x00007fafb8c7bba5: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7bba9: mov     %eax,0xfffffffffffec000(%rsp)
  0x00007fafb8c7bbb0: movzbl  0x0(%r13),%ebx
  0x00007fafb8c7bbb5: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c7bbbf: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7bbc3: nopl    0x0(%rax,%rax)
  0x00007fafb8c7bbc8: add     %al,(%rax)
  0x00007fafb8c7bbca: add     %al,(%rax)
  0x00007fafb8c7bbcc: add     %al,(%rax)
  0x00007fafb8c7bbce: add     %al,(%rax)
  0x00007fafb8c7bbd0: add     %al,(%rax)
  0x00007fafb8c7bbd2: add     %al,(%rax)
  0x00007fafb8c7bbd4: add     %al,(%rax)
  0x00007fafb8c7bbd6: add     %al,(%rax)
  0x00007fafb8c7bbd8: add     %al,(%rax)
  0x00007fafb8c7bbda: add     %al,(%rax)
  0x00007fafb8c7bbdc: add     %al,(%rax)
  0x00007fafb8c7bbde: add     %al,(%rax)

----------------------------------------------------------------------
monitorexit  195 monitorexit  [0x00007fafb8c7bc00, 0x00007fafb8c7be40]  576 bytes

Argument 0 is unknown.RIP: 0x7fafb8c7bc00 Code size: 0x00000240
  0x00007fafb8c7bc00: pop     %rax
  0x00007fafb8c7bc01: cmp     (%rax),%rax
  0x00007fafb8c7bc04: mov     0xffffffffffffffb8(%rbp),%rsi
  0x00007fafb8c7bc08: lea     0xffffffffffffffb8(%rbp),%rdx
  0x00007fafb8c7bc0c: jmp     0x7fafb8c7bc1c
  0x00007fafb8c7bc0e: cmp     0x8(%rsi),%rax
  0x00007fafb8c7bc12: je      0x7fafb8c7bd34
  0x00007fafb8c7bc18: add     $0x10,%rsi
  0x00007fafb8c7bc1c: cmp     %rdx,%rsi
  0x00007fafb8c7bc1f: jne     0x7fafb8c7bc0e
  0x00007fafb8c7bc21: callq   0x7fafb8c7bc2b
  0x00007fafb8c7bc26: jmpq    0x7fafb8c7bcbd
  0x00007fafb8c7bc2b: lea     0x8(%rsp),%rax
  0x00007fafb8c7bc30: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7bc34: mov     %r15,%rdi
  0x00007fafb8c7bc37: vzeroupper
  0x00007fafb8c7bc3a: mov     %rbp,0x330(%r15)
  0x00007fafb8c7bc41: mov     %rax,0x320(%r15)
  0x00007fafb8c7bc48: test    $0xf,%esp
  0x00007fafb8c7bc4e: je      0x7fafb8c7bc66
  0x00007fafb8c7bc54: sub     $0x8,%rsp
  0x00007fafb8c7bc58: callq   0x7fafd7d826a0
  0x00007fafb8c7bc5d: add     $0x8,%rsp
  0x00007fafb8c7bc61: jmpq    0x7fafb8c7bc6b
  0x00007fafb8c7bc66: callq   0x7fafd7d826a0
  0x00007fafb8c7bc6b: movabs  $0x0,%r10
  0x00007fafb8c7bc75: mov     %r10,0x320(%r15)
  0x00007fafb8c7bc7c: movabs  $0x0,%r10
  0x00007fafb8c7bc86: mov     %r10,0x330(%r15)
  0x00007fafb8c7bc8d: movabs  $0x0,%r10
  0x00007fafb8c7bc97: mov     %r10,0x328(%r15)
  0x00007fafb8c7bc9e: vzeroupper
  0x00007fafb8c7bca1: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7bca9: je      0x7fafb8c7bcb4
  0x00007fafb8c7bcaf: jmpq    0x7fafb8c5c780
  0x00007fafb8c7bcb4: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7bcb8: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7bcbc: retq
  0x00007fafb8c7bcbd: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c7bcc2: sub     $0x80,%rsp
  0x00007fafb8c7bcc9: mov     %rax,0x78(%rsp)
  0x00007fafb8c7bcce: mov     %rcx,0x70(%rsp)
  0x00007fafb8c7bcd3: mov     %rdx,0x68(%rsp)
  0x00007fafb8c7bcd8: mov     %rbx,0x60(%rsp)
  0x00007fafb8c7bcdd: mov     %rbp,0x50(%rsp)
  0x00007fafb8c7bce2: mov     %rsi,0x48(%rsp)
  0x00007fafb8c7bce7: mov     %rdi,0x40(%rsp)
  0x00007fafb8c7bcec: mov     %r8,0x38(%rsp)
  0x00007fafb8c7bcf1: mov     %r9,0x30(%rsp)
  0x00007fafb8c7bcf6: mov     %r10,0x28(%rsp)
  0x00007fafb8c7bcfb: mov     %r11,0x20(%rsp)
  0x00007fafb8c7bd00: mov     %r12,0x18(%rsp)
  0x00007fafb8c7bd05: mov     %r13,0x10(%rsp)
  0x00007fafb8c7bd0a: mov     %r14,0x8(%rsp)
  0x00007fafb8c7bd0f: mov     %r15,(%rsp)
  0x00007fafb8c7bd13: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c7bd1d: movabs  $0x7fafb8c7bcbd,%rsi
  0x00007fafb8c7bd27: mov     %rsp,%rdx
  0x00007fafb8c7bd2a: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c7bd2e: callq   0x7fafd7fdd230
  0x00007fafb8c7bd33: hlt
  0x00007fafb8c7bd34: push    %rax
  0x00007fafb8c7bd35: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7bd39: lea     (%rsi),%rax
  0x00007fafb8c7bd3c: mov     0x8(%rsi),%rcx
  0x00007fafb8c7bd40: movq    $0x0,0x8(%rsi)
  0x00007fafb8c7bd48: mov     (%rcx),%rdx
  0x00007fafb8c7bd4b: and     $0x7,%rdx
  0x00007fafb8c7bd4f: cmp     $0x5,%rdx
  0x00007fafb8c7bd53: je      0x7fafb8c7be10
  0x00007fafb8c7bd59: mov     (%rax),%rdx
  0x00007fafb8c7bd5c: test    %rdx,%rdx
  0x00007fafb8c7bd5f: je      0x7fafb8c7be10
  0x00007fafb8c7bd65: lock cmpxchg %rdx,(%rcx)
  0x00007fafb8c7bd6a: je      0x7fafb8c7be10
  0x00007fafb8c7bd70: mov     %rcx,0x8(%rsi)
  0x00007fafb8c7bd74: callq   0x7fafb8c7bd7e
  0x00007fafb8c7bd79: jmpq    0x7fafb8c7be10
  0x00007fafb8c7bd7e: lea     0x8(%rsp),%rax
  0x00007fafb8c7bd83: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7bd87: mov     %r15,%rdi
  0x00007fafb8c7bd8a: vzeroupper
  0x00007fafb8c7bd8d: mov     %rbp,0x330(%r15)
  0x00007fafb8c7bd94: mov     %rax,0x320(%r15)
  0x00007fafb8c7bd9b: test    $0xf,%esp
  0x00007fafb8c7bda1: je      0x7fafb8c7bdb9
  0x00007fafb8c7bda7: sub     $0x8,%rsp
  0x00007fafb8c7bdab: callq   0x7fafd7d82470
  0x00007fafb8c7bdb0: add     $0x8,%rsp
  0x00007fafb8c7bdb4: jmpq    0x7fafb8c7bdbe
  0x00007fafb8c7bdb9: callq   0x7fafd7d82470
  0x00007fafb8c7bdbe: movabs  $0x0,%r10
  0x00007fafb8c7bdc8: mov     %r10,0x320(%r15)
  0x00007fafb8c7bdcf: movabs  $0x0,%r10
  0x00007fafb8c7bdd9: mov     %r10,0x330(%r15)
  0x00007fafb8c7bde0: movabs  $0x0,%r10
  0x00007fafb8c7bdea: mov     %r10,0x328(%r15)
  0x00007fafb8c7bdf1: vzeroupper
  0x00007fafb8c7bdf4: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7bdfc: je      0x7fafb8c7be07
  0x00007fafb8c7be02: jmpq    0x7fafb8c5c780
  0x00007fafb8c7be07: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7be0b: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7be0f: retq
  0x00007fafb8c7be10: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7be14: pop     %rax
  0x00007fafb8c7be15: movzbl  0x1(%r13),%ebx
  0x00007fafb8c7be1a: incq    %r13
  0x00007fafb8c7be1d: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c7be27: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7be2b: nopl    0x0(%rax,%rax)
  0x00007fafb8c7be30: add     %al,(%rax)
  0x00007fafb8c7be32: add     %al,(%rax)
  0x00007fafb8c7be34: add     %al,(%rax)
  0x00007fafb8c7be36: add     %al,(%rax)
  0x00007fafb8c7be38: add     %al,(%rax)
  0x00007fafb8c7be3a: add     %al,(%rax)
  0x00007fafb8c7be3c: add     %al,(%rax)
  0x00007fafb8c7be3e: add     %al,(%rax)

----------------------------------------------------------------------
wide  196 wide  [0x00007fafb8c7be60, 0x00007fafb8c7bec0]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c7be60 Code size: 0x00000060
  0x00007fafb8c7be60: push    %rax
  0x00007fafb8c7be61: jmpq    0x7fafb8c7be9f
  0x00007fafb8c7be66: sub     $0x8,%rsp
  0x00007fafb8c7be6a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c7be6f: jmpq    0x7fafb8c7be9f
  0x00007fafb8c7be74: sub     $0x10,%rsp
  0x00007fafb8c7be78: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c7be7d: jmpq    0x7fafb8c7be9f
  0x00007fafb8c7be82: sub     $0x10,%rsp
  0x00007fafb8c7be86: mov     %rax,(%rsp)
  0x00007fafb8c7be8a: movabs  $0x0,%r10
  0x00007fafb8c7be94: mov     %r10,0x8(%rsp)
  0x00007fafb8c7be99: jmpq    0x7fafb8c7be9f
  0x00007fafb8c7be9e: push    %rax
  0x00007fafb8c7be9f: movzbl  0x1(%r13),%ebx
  0x00007fafb8c7bea4: movabs  $0x7fafd8999080,%r10
  0x00007fafb8c7beae: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7beb2: nopw    0x0(%rax,%rax)
  0x00007fafb8c7beb8: add     %al,(%rax)
  0x00007fafb8c7beba: add     %al,(%rax)
  0x00007fafb8c7bebc: add     %al,(%rax)
  0x00007fafb8c7bebe: add     %al,(%rax)

----------------------------------------------------------------------
multianewarray  197 multianewarray  [0x00007fafb8c7bee0, 0x00007fafb8c7c000]  288 bytes

Argument 0 is unknown.RIP: 0x7fafb8c7bee0 Code size: 0x00000120
  0x00007fafb8c7bee0: push    %rax
  0x00007fafb8c7bee1: jmpq    0x7fafb8c7bf1f
  0x00007fafb8c7bee6: sub     $0x8,%rsp
  0x00007fafb8c7beea: vmovss  %xmm0,(%rsp)
  0x00007fafb8c7beef: jmpq    0x7fafb8c7bf1f
  0x00007fafb8c7bef4: sub     $0x10,%rsp
  0x00007fafb8c7bef8: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c7befd: jmpq    0x7fafb8c7bf1f
  0x00007fafb8c7bf02: sub     $0x10,%rsp
  0x00007fafb8c7bf06: mov     %rax,(%rsp)
  0x00007fafb8c7bf0a: movabs  $0x0,%r10
  0x00007fafb8c7bf14: mov     %r10,0x8(%rsp)
  0x00007fafb8c7bf19: jmpq    0x7fafb8c7bf1f
  0x00007fafb8c7bf1e: push    %rax
  0x00007fafb8c7bf1f: movzbl  0x3(%r13),%eax
  0x00007fafb8c7bf24: lea     0xfffffffffffffff8(%rsp,%rax,8),%rsi
  0x00007fafb8c7bf29: callq   0x7fafb8c7bf33
  0x00007fafb8c7bf2e: jmpq    0x7fafb8c7bfdd
  0x00007fafb8c7bf33: lea     0x8(%rsp),%rax
  0x00007fafb8c7bf38: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7bf3c: mov     %r15,%rdi
  0x00007fafb8c7bf3f: vzeroupper
  0x00007fafb8c7bf42: mov     %rbp,0x330(%r15)
  0x00007fafb8c7bf49: mov     %rax,0x320(%r15)
  0x00007fafb8c7bf50: test    $0xf,%esp
  0x00007fafb8c7bf56: je      0x7fafb8c7bf6e
  0x00007fafb8c7bf5c: sub     $0x8,%rsp
  0x00007fafb8c7bf60: callq   0x7fafd7d7de50
  0x00007fafb8c7bf65: add     $0x8,%rsp
  0x00007fafb8c7bf69: jmpq    0x7fafb8c7bf73
  0x00007fafb8c7bf6e: callq   0x7fafd7d7de50
  0x00007fafb8c7bf73: movabs  $0x0,%r10
  0x00007fafb8c7bf7d: mov     %r10,0x320(%r15)
  0x00007fafb8c7bf84: movabs  $0x0,%r10
  0x00007fafb8c7bf8e: mov     %r10,0x330(%r15)
  0x00007fafb8c7bf95: movabs  $0x0,%r10
  0x00007fafb8c7bf9f: mov     %r10,0x328(%r15)
  0x00007fafb8c7bfa6: vzeroupper
  0x00007fafb8c7bfa9: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7bfb1: je      0x7fafb8c7bfbc
  0x00007fafb8c7bfb7: jmpq    0x7fafb8c5c780
  0x00007fafb8c7bfbc: mov     0x380(%r15),%rax
  0x00007fafb8c7bfc3: movabs  $0x0,%r10
  0x00007fafb8c7bfcd: mov     %r10,0x380(%r15)
  0x00007fafb8c7bfd4: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7bfd8: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7bfdc: retq
  0x00007fafb8c7bfdd: movzbl  0x3(%r13),%ebx
  0x00007fafb8c7bfe2: lea     (%rsp,%rbx,8),%rsp
  0x00007fafb8c7bfe6: movzbl  0x4(%r13),%ebx
  0x00007fafb8c7bfeb: add     $0x4,%r13
  0x00007fafb8c7bfef: movabs  $0x7fafd89a7880,%r10
  0x00007fafb8c7bff9: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7bffd: nop

----------------------------------------------------------------------
ifnull  198 ifnull  [0x00007fafb8c7c020, 0x00007fafb8c7c440]  1056 bytes

Argument 0 is unknown.RIP: 0x7fafb8c7c020 Code size: 0x00000420
  0x00007fafb8c7c020: pop     %rax
  0x00007fafb8c7c021: test    %rax,%rax
  0x00007fafb8c7c024: jne     0x7fafb8c7c3f2
  0x00007fafb8c7c02a: mov     0xffffffffffffffe8(%rbp),%rcx
  0x00007fafb8c7c02e: mov     0xffffffffffffffd8(%rbp),%rax
  0x00007fafb8c7c032: test    %rax,%rax
  0x00007fafb8c7c035: je      0x7fafb8c7c053
  0x00007fafb8c7c03b: mov     0x8(%rax),%rbx
  0x00007fafb8c7c03f: add     $0x1,%rbx
  0x00007fafb8c7c043: sbb     $0x0,%rbx
  0x00007fafb8c7c047: mov     %rbx,0x8(%rax)
  0x00007fafb8c7c04b: add     0x10(%rax),%rax
  0x00007fafb8c7c04f: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c7c053: movswl  0x1(%r13),%edx
  0x00007fafb8c7c058: bswap   %edx
  0x00007fafb8c7c05a: sar     $0x10,%edx
  0x00007fafb8c7c05d: movsxd  %edx,%rdx
  0x00007fafb8c7c060: add     %rdx,%r13
  0x00007fafb8c7c063: test    %edx,%edx
  0x00007fafb8c7c065: jns     0x7fafb8c7c167
  0x00007fafb8c7c06b: mov     0x18(%rcx),%rax
  0x00007fafb8c7c06f: test    %rax,%rax
  0x00007fafb8c7c072: jne     0x7fafb8c7c128
  0x00007fafb8c7c078: push    %rdx
  0x00007fafb8c7c079: push    %rcx
  0x00007fafb8c7c07a: callq   0x7fafb8c7c084
  0x00007fafb8c7c07f: jmpq    0x7fafb8c7c119
  0x00007fafb8c7c084: mov     %rcx,%rsi
  0x00007fafb8c7c087: lea     0x8(%rsp),%rax
  0x00007fafb8c7c08c: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7c090: mov     %r15,%rdi
  0x00007fafb8c7c093: vzeroupper
  0x00007fafb8c7c096: mov     %rbp,0x330(%r15)
  0x00007fafb8c7c09d: mov     %rax,0x320(%r15)
  0x00007fafb8c7c0a4: test    $0xf,%esp
  0x00007fafb8c7c0aa: je      0x7fafb8c7c0c2
  0x00007fafb8c7c0b0: sub     $0x8,%rsp
  0x00007fafb8c7c0b4: callq   0x7fafd7d85400
  0x00007fafb8c7c0b9: add     $0x8,%rsp
  0x00007fafb8c7c0bd: jmpq    0x7fafb8c7c0c7
  0x00007fafb8c7c0c2: callq   0x7fafd7d85400
  0x00007fafb8c7c0c7: movabs  $0x0,%r10
  0x00007fafb8c7c0d1: mov     %r10,0x320(%r15)
  0x00007fafb8c7c0d8: movabs  $0x0,%r10
  0x00007fafb8c7c0e2: mov     %r10,0x330(%r15)
  0x00007fafb8c7c0e9: movabs  $0x0,%r10
  0x00007fafb8c7c0f3: mov     %r10,0x328(%r15)
  0x00007fafb8c7c0fa: vzeroupper
  0x00007fafb8c7c0fd: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7c105: je      0x7fafb8c7c110
  0x00007fafb8c7c10b: jmpq    0x7fafb8c5c780
  0x00007fafb8c7c110: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7c114: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7c118: retq
  0x00007fafb8c7c119: pop     %rcx
  0x00007fafb8c7c11a: pop     %rdx
  0x00007fafb8c7c11b: mov     0x18(%rcx),%rax
  0x00007fafb8c7c11f: test    %rax,%rax
  0x00007fafb8c7c122: je      0x7fafb8c7c167
  0x00007fafb8c7c128: mov     0x10(%rcx),%rbx
  0x00007fafb8c7c12c: test    %rbx,%rbx
  0x00007fafb8c7c12f: je      0x7fafb8c7c151
  0x00007fafb8c7c131: mov     0x108(%rbx),%eax
  0x00007fafb8c7c137: add     $0x8,%eax
  0x00007fafb8c7c13a: mov     %eax,0x108(%rbx)
  0x00007fafb8c7c140: and     0x11c(%rbx),%eax
  0x00007fafb8c7c146: je      0x7fafb8c7c281
  0x00007fafb8c7c14c: jmpq    0x7fafb8c7c167
  0x00007fafb8c7c151: mov     0x18(%rcx),%rcx
  0x00007fafb8c7c155: mov     0x1c(%rcx),%eax
  0x00007fafb8c7c158: add     $0x8,%eax
  0x00007fafb8c7c15b: mov     %eax,0x1c(%rcx)
  0x00007fafb8c7c15e: and     0x34(%rcx),%eax
  0x00007fafb8c7c161: je      0x7fafb8c7c281
  0x00007fafb8c7c167: movzbl  0x0(%r13),%ebx
  0x00007fafb8c7c16c: testb   $0x8,0x108(%r15)
  0x00007fafb8c7c174: je      0x7fafb8c7c182
  0x00007fafb8c7c176: movabs  $0x7fafd899e080,%r10
  0x00007fafb8c7c180: jmp     0x7fafb8c7c18c
  0x00007fafb8c7c182: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c7c18c: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7c190: callq   0x7fafb8c7c19a
  0x00007fafb8c7c195: jmpq    0x7fafb8c7c22c
  0x00007fafb8c7c19a: lea     0x8(%rsp),%rax
  0x00007fafb8c7c19f: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7c1a3: mov     %r15,%rdi
  0x00007fafb8c7c1a6: vzeroupper
  0x00007fafb8c7c1a9: mov     %rbp,0x330(%r15)
  0x00007fafb8c7c1b0: mov     %rax,0x320(%r15)
  0x00007fafb8c7c1b7: test    $0xf,%esp
  0x00007fafb8c7c1bd: je      0x7fafb8c7c1d5
  0x00007fafb8c7c1c3: sub     $0x8,%rsp
  0x00007fafb8c7c1c7: callq   0x7fafd7d84c70
  0x00007fafb8c7c1cc: add     $0x8,%rsp
  0x00007fafb8c7c1d0: jmpq    0x7fafb8c7c1da
  0x00007fafb8c7c1d5: callq   0x7fafd7d84c70
  0x00007fafb8c7c1da: movabs  $0x0,%r10
  0x00007fafb8c7c1e4: mov     %r10,0x320(%r15)
  0x00007fafb8c7c1eb: movabs  $0x0,%r10
  0x00007fafb8c7c1f5: mov     %r10,0x330(%r15)
  0x00007fafb8c7c1fc: movabs  $0x0,%r10
  0x00007fafb8c7c206: mov     %r10,0x328(%r15)
  0x00007fafb8c7c20d: vzeroupper
  0x00007fafb8c7c210: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7c218: je      0x7fafb8c7c223
  0x00007fafb8c7c21e: jmpq    0x7fafb8c5c780
  0x00007fafb8c7c223: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7c227: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7c22b: retq
  0x00007fafb8c7c22c: push    %rax
  0x00007fafb8c7c22d: push    %rbx
  0x00007fafb8c7c22e: mov     0xffffffffffffffe8(%rbp),%rbx
  0x00007fafb8c7c232: mov     0x10(%rbx),%rax
  0x00007fafb8c7c236: test    %rax,%rax
  0x00007fafb8c7c239: je      0x7fafb8c7c276
  0x00007fafb8c7c23f: mov     %r13,%rsi
  0x00007fafb8c7c242: mov     %rbx,%rdi
  0x00007fafb8c7c245: test    $0xf,%esp
  0x00007fafb8c7c24b: je      0x7fafb8c7c263
  0x00007fafb8c7c251: sub     $0x8,%rsp
  0x00007fafb8c7c255: callq   0x7fafd7d84c20
  0x00007fafb8c7c25a: add     $0x8,%rsp
  0x00007fafb8c7c25e: jmpq    0x7fafb8c7c268
  0x00007fafb8c7c263: callq   0x7fafd7d84c20
  0x00007fafb8c7c268: mov     0x10(%rbx),%rbx
  0x00007fafb8c7c26c: add     $0x138,%rbx
  0x00007fafb8c7c273: add     %rbx,%rax
  0x00007fafb8c7c276: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c7c27a: pop     %rbx
  0x00007fafb8c7c27b: pop     %rax
  0x00007fafb8c7c27c: jmpq    0x7fafb8c7c167
  0x00007fafb8c7c281: neg     %rdx
  0x00007fafb8c7c284: add     %r13,%rdx
  0x00007fafb8c7c287: callq   0x7fafb8c7c291
  0x00007fafb8c7c28c: jmpq    0x7fafb8c7c326
  0x00007fafb8c7c291: mov     %rdx,%rsi
  0x00007fafb8c7c294: lea     0x8(%rsp),%rax
  0x00007fafb8c7c299: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7c29d: mov     %r15,%rdi
  0x00007fafb8c7c2a0: vzeroupper
  0x00007fafb8c7c2a3: mov     %rbp,0x330(%r15)
  0x00007fafb8c7c2aa: mov     %rax,0x320(%r15)
  0x00007fafb8c7c2b1: test    $0xf,%esp
  0x00007fafb8c7c2b7: je      0x7fafb8c7c2cf
  0x00007fafb8c7c2bd: sub     $0x8,%rsp
  0x00007fafb8c7c2c1: callq   0x7fafd7d84b40
  0x00007fafb8c7c2c6: add     $0x8,%rsp
  0x00007fafb8c7c2ca: jmpq    0x7fafb8c7c2d4
  0x00007fafb8c7c2cf: callq   0x7fafd7d84b40
  0x00007fafb8c7c2d4: movabs  $0x0,%r10
  0x00007fafb8c7c2de: mov     %r10,0x320(%r15)
  0x00007fafb8c7c2e5: movabs  $0x0,%r10
  0x00007fafb8c7c2ef: mov     %r10,0x330(%r15)
  0x00007fafb8c7c2f6: movabs  $0x0,%r10
  0x00007fafb8c7c300: mov     %r10,0x328(%r15)
  0x00007fafb8c7c307: vzeroupper
  0x00007fafb8c7c30a: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7c312: je      0x7fafb8c7c31d
  0x00007fafb8c7c318: jmpq    0x7fafb8c5c780
  0x00007fafb8c7c31d: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7c321: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7c325: retq
  0x00007fafb8c7c326: test    %rax,%rax
  0x00007fafb8c7c329: je      0x7fafb8c7c167
  0x00007fafb8c7c32f: cmpb    $0x0,0x156(%rax)
  0x00007fafb8c7c336: jne     0x7fafb8c7c167
  0x00007fafb8c7c33c: mov     %rax,%rbx
  0x00007fafb8c7c33f: callq   0x7fafb8c7c349
  0x00007fafb8c7c344: jmpq    0x7fafb8c7c3db
  0x00007fafb8c7c349: lea     0x8(%rsp),%rax
  0x00007fafb8c7c34e: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7c352: mov     %r15,%rdi
  0x00007fafb8c7c355: vzeroupper
  0x00007fafb8c7c358: mov     %rbp,0x330(%r15)
  0x00007fafb8c7c35f: mov     %rax,0x320(%r15)
  0x00007fafb8c7c366: test    $0xf,%esp
  0x00007fafb8c7c36c: je      0x7fafb8c7c384
  0x00007fafb8c7c372: sub     $0x8,%rsp
  0x00007fafb8c7c376: callq   0x7fafd81ee030
  0x00007fafb8c7c37b: add     $0x8,%rsp
  0x00007fafb8c7c37f: jmpq    0x7fafb8c7c389
  0x00007fafb8c7c384: callq   0x7fafd81ee030
  0x00007fafb8c7c389: movabs  $0x0,%r10
  0x00007fafb8c7c393: mov     %r10,0x320(%r15)
  0x00007fafb8c7c39a: movabs  $0x0,%r10
  0x00007fafb8c7c3a4: mov     %r10,0x330(%r15)
  0x00007fafb8c7c3ab: movabs  $0x0,%r10
  0x00007fafb8c7c3b5: mov     %r10,0x328(%r15)
  0x00007fafb8c7c3bc: vzeroupper
  0x00007fafb8c7c3bf: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7c3c7: je      0x7fafb8c7c3d2
  0x00007fafb8c7c3cd: jmpq    0x7fafb8c5c780
  0x00007fafb8c7c3d2: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7c3d6: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7c3da: retq
  0x00007fafb8c7c3db: mov     %rax,%rsi
  0x00007fafb8c7c3de: mov     0xfffffffffffffff8(%rbp),%rdx
  0x00007fafb8c7c3e2: leave
  0x00007fafb8c7c3e3: pop     %rcx
  0x00007fafb8c7c3e4: mov     %rdx,%rsp
  0x00007fafb8c7c3e7: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c7c3eb: push    %rcx
  0x00007fafb8c7c3ec: jmpq    *0x110(%rbx)
  0x00007fafb8c7c3f2: mov     0xffffffffffffffd8(%rbp),%rax
  0x00007fafb8c7c3f6: test    %rax,%rax
  0x00007fafb8c7c3f9: je      0x7fafb8c7c411
  0x00007fafb8c7c3ff: addq    $0x1,0x18(%rax)
  0x00007fafb8c7c404: sbbq    $0x0,0x18(%rax)
  0x00007fafb8c7c409: add     $0x20,%rax
  0x00007fafb8c7c40d: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c7c411: movzbl  0x3(%r13),%ebx
  0x00007fafb8c7c416: add     $0x3,%r13
  0x00007fafb8c7c41a: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c7c424: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7c428: add     %al,(%rax)
  0x00007fafb8c7c42a: add     %al,(%rax)
  0x00007fafb8c7c42c: add     %al,(%rax)
  0x00007fafb8c7c42e: add     %al,(%rax)
  0x00007fafb8c7c430: add     %al,(%rax)
  0x00007fafb8c7c432: add     %al,(%rax)
  0x00007fafb8c7c434: add     %al,(%rax)
  0x00007fafb8c7c436: add     %al,(%rax)
  0x00007fafb8c7c438: add     %al,(%rax)
  0x00007fafb8c7c43a: add     %al,(%rax)
  0x00007fafb8c7c43c: add     %al,(%rax)
  0x00007fafb8c7c43e: add     %al,(%rax)

----------------------------------------------------------------------
ifnonnull  199 ifnonnull  [0x00007fafb8c7c460, 0x00007fafb8c7c880]  1056 bytes

Argument 0 is unknown.RIP: 0x7fafb8c7c460 Code size: 0x00000420
  0x00007fafb8c7c460: pop     %rax
  0x00007fafb8c7c461: test    %rax,%rax
  0x00007fafb8c7c464: je      0x7fafb8c7c832
  0x00007fafb8c7c46a: mov     0xffffffffffffffe8(%rbp),%rcx
  0x00007fafb8c7c46e: mov     0xffffffffffffffd8(%rbp),%rax
  0x00007fafb8c7c472: test    %rax,%rax
  0x00007fafb8c7c475: je      0x7fafb8c7c493
  0x00007fafb8c7c47b: mov     0x8(%rax),%rbx
  0x00007fafb8c7c47f: add     $0x1,%rbx
  0x00007fafb8c7c483: sbb     $0x0,%rbx
  0x00007fafb8c7c487: mov     %rbx,0x8(%rax)
  0x00007fafb8c7c48b: add     0x10(%rax),%rax
  0x00007fafb8c7c48f: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c7c493: movswl  0x1(%r13),%edx
  0x00007fafb8c7c498: bswap   %edx
  0x00007fafb8c7c49a: sar     $0x10,%edx
  0x00007fafb8c7c49d: movsxd  %edx,%rdx
  0x00007fafb8c7c4a0: add     %rdx,%r13
  0x00007fafb8c7c4a3: test    %edx,%edx
  0x00007fafb8c7c4a5: jns     0x7fafb8c7c5a7
  0x00007fafb8c7c4ab: mov     0x18(%rcx),%rax
  0x00007fafb8c7c4af: test    %rax,%rax
  0x00007fafb8c7c4b2: jne     0x7fafb8c7c568
  0x00007fafb8c7c4b8: push    %rdx
  0x00007fafb8c7c4b9: push    %rcx
  0x00007fafb8c7c4ba: callq   0x7fafb8c7c4c4
  0x00007fafb8c7c4bf: jmpq    0x7fafb8c7c559
  0x00007fafb8c7c4c4: mov     %rcx,%rsi
  0x00007fafb8c7c4c7: lea     0x8(%rsp),%rax
  0x00007fafb8c7c4cc: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7c4d0: mov     %r15,%rdi
  0x00007fafb8c7c4d3: vzeroupper
  0x00007fafb8c7c4d6: mov     %rbp,0x330(%r15)
  0x00007fafb8c7c4dd: mov     %rax,0x320(%r15)
  0x00007fafb8c7c4e4: test    $0xf,%esp
  0x00007fafb8c7c4ea: je      0x7fafb8c7c502
  0x00007fafb8c7c4f0: sub     $0x8,%rsp
  0x00007fafb8c7c4f4: callq   0x7fafd7d85400
  0x00007fafb8c7c4f9: add     $0x8,%rsp
  0x00007fafb8c7c4fd: jmpq    0x7fafb8c7c507
  0x00007fafb8c7c502: callq   0x7fafd7d85400
  0x00007fafb8c7c507: movabs  $0x0,%r10
  0x00007fafb8c7c511: mov     %r10,0x320(%r15)
  0x00007fafb8c7c518: movabs  $0x0,%r10
  0x00007fafb8c7c522: mov     %r10,0x330(%r15)
  0x00007fafb8c7c529: movabs  $0x0,%r10
  0x00007fafb8c7c533: mov     %r10,0x328(%r15)
  0x00007fafb8c7c53a: vzeroupper
  0x00007fafb8c7c53d: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7c545: je      0x7fafb8c7c550
  0x00007fafb8c7c54b: jmpq    0x7fafb8c5c780
  0x00007fafb8c7c550: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7c554: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7c558: retq
  0x00007fafb8c7c559: pop     %rcx
  0x00007fafb8c7c55a: pop     %rdx
  0x00007fafb8c7c55b: mov     0x18(%rcx),%rax
  0x00007fafb8c7c55f: test    %rax,%rax
  0x00007fafb8c7c562: je      0x7fafb8c7c5a7
  0x00007fafb8c7c568: mov     0x10(%rcx),%rbx
  0x00007fafb8c7c56c: test    %rbx,%rbx
  0x00007fafb8c7c56f: je      0x7fafb8c7c591
  0x00007fafb8c7c571: mov     0x108(%rbx),%eax
  0x00007fafb8c7c577: add     $0x8,%eax
  0x00007fafb8c7c57a: mov     %eax,0x108(%rbx)
  0x00007fafb8c7c580: and     0x11c(%rbx),%eax
  0x00007fafb8c7c586: je      0x7fafb8c7c6c1
  0x00007fafb8c7c58c: jmpq    0x7fafb8c7c5a7
  0x00007fafb8c7c591: mov     0x18(%rcx),%rcx
  0x00007fafb8c7c595: mov     0x1c(%rcx),%eax
  0x00007fafb8c7c598: add     $0x8,%eax
  0x00007fafb8c7c59b: mov     %eax,0x1c(%rcx)
  0x00007fafb8c7c59e: and     0x34(%rcx),%eax
  0x00007fafb8c7c5a1: je      0x7fafb8c7c6c1
  0x00007fafb8c7c5a7: movzbl  0x0(%r13),%ebx
  0x00007fafb8c7c5ac: testb   $0x8,0x108(%r15)
  0x00007fafb8c7c5b4: je      0x7fafb8c7c5c2
  0x00007fafb8c7c5b6: movabs  $0x7fafd899e080,%r10
  0x00007fafb8c7c5c0: jmp     0x7fafb8c7c5cc
  0x00007fafb8c7c5c2: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c7c5cc: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7c5d0: callq   0x7fafb8c7c5da
  0x00007fafb8c7c5d5: jmpq    0x7fafb8c7c66c
  0x00007fafb8c7c5da: lea     0x8(%rsp),%rax
  0x00007fafb8c7c5df: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7c5e3: mov     %r15,%rdi
  0x00007fafb8c7c5e6: vzeroupper
  0x00007fafb8c7c5e9: mov     %rbp,0x330(%r15)
  0x00007fafb8c7c5f0: mov     %rax,0x320(%r15)
  0x00007fafb8c7c5f7: test    $0xf,%esp
  0x00007fafb8c7c5fd: je      0x7fafb8c7c615
  0x00007fafb8c7c603: sub     $0x8,%rsp
  0x00007fafb8c7c607: callq   0x7fafd7d84c70
  0x00007fafb8c7c60c: add     $0x8,%rsp
  0x00007fafb8c7c610: jmpq    0x7fafb8c7c61a
  0x00007fafb8c7c615: callq   0x7fafd7d84c70
  0x00007fafb8c7c61a: movabs  $0x0,%r10
  0x00007fafb8c7c624: mov     %r10,0x320(%r15)
  0x00007fafb8c7c62b: movabs  $0x0,%r10
  0x00007fafb8c7c635: mov     %r10,0x330(%r15)
  0x00007fafb8c7c63c: movabs  $0x0,%r10
  0x00007fafb8c7c646: mov     %r10,0x328(%r15)
  0x00007fafb8c7c64d: vzeroupper
  0x00007fafb8c7c650: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7c658: je      0x7fafb8c7c663
  0x00007fafb8c7c65e: jmpq    0x7fafb8c5c780
  0x00007fafb8c7c663: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7c667: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7c66b: retq
  0x00007fafb8c7c66c: push    %rax
  0x00007fafb8c7c66d: push    %rbx
  0x00007fafb8c7c66e: mov     0xffffffffffffffe8(%rbp),%rbx
  0x00007fafb8c7c672: mov     0x10(%rbx),%rax
  0x00007fafb8c7c676: test    %rax,%rax
  0x00007fafb8c7c679: je      0x7fafb8c7c6b6
  0x00007fafb8c7c67f: mov     %r13,%rsi
  0x00007fafb8c7c682: mov     %rbx,%rdi
  0x00007fafb8c7c685: test    $0xf,%esp
  0x00007fafb8c7c68b: je      0x7fafb8c7c6a3
  0x00007fafb8c7c691: sub     $0x8,%rsp
  0x00007fafb8c7c695: callq   0x7fafd7d84c20
  0x00007fafb8c7c69a: add     $0x8,%rsp
  0x00007fafb8c7c69e: jmpq    0x7fafb8c7c6a8
  0x00007fafb8c7c6a3: callq   0x7fafd7d84c20
  0x00007fafb8c7c6a8: mov     0x10(%rbx),%rbx
  0x00007fafb8c7c6ac: add     $0x138,%rbx
  0x00007fafb8c7c6b3: add     %rbx,%rax
  0x00007fafb8c7c6b6: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c7c6ba: pop     %rbx
  0x00007fafb8c7c6bb: pop     %rax
  0x00007fafb8c7c6bc: jmpq    0x7fafb8c7c5a7
  0x00007fafb8c7c6c1: neg     %rdx
  0x00007fafb8c7c6c4: add     %r13,%rdx
  0x00007fafb8c7c6c7: callq   0x7fafb8c7c6d1
  0x00007fafb8c7c6cc: jmpq    0x7fafb8c7c766
  0x00007fafb8c7c6d1: mov     %rdx,%rsi
  0x00007fafb8c7c6d4: lea     0x8(%rsp),%rax
  0x00007fafb8c7c6d9: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7c6dd: mov     %r15,%rdi
  0x00007fafb8c7c6e0: vzeroupper
  0x00007fafb8c7c6e3: mov     %rbp,0x330(%r15)
  0x00007fafb8c7c6ea: mov     %rax,0x320(%r15)
  0x00007fafb8c7c6f1: test    $0xf,%esp
  0x00007fafb8c7c6f7: je      0x7fafb8c7c70f
  0x00007fafb8c7c6fd: sub     $0x8,%rsp
  0x00007fafb8c7c701: callq   0x7fafd7d84b40
  0x00007fafb8c7c706: add     $0x8,%rsp
  0x00007fafb8c7c70a: jmpq    0x7fafb8c7c714
  0x00007fafb8c7c70f: callq   0x7fafd7d84b40
  0x00007fafb8c7c714: movabs  $0x0,%r10
  0x00007fafb8c7c71e: mov     %r10,0x320(%r15)
  0x00007fafb8c7c725: movabs  $0x0,%r10
  0x00007fafb8c7c72f: mov     %r10,0x330(%r15)
  0x00007fafb8c7c736: movabs  $0x0,%r10
  0x00007fafb8c7c740: mov     %r10,0x328(%r15)
  0x00007fafb8c7c747: vzeroupper
  0x00007fafb8c7c74a: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7c752: je      0x7fafb8c7c75d
  0x00007fafb8c7c758: jmpq    0x7fafb8c5c780
  0x00007fafb8c7c75d: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7c761: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7c765: retq
  0x00007fafb8c7c766: test    %rax,%rax
  0x00007fafb8c7c769: je      0x7fafb8c7c5a7
  0x00007fafb8c7c76f: cmpb    $0x0,0x156(%rax)
  0x00007fafb8c7c776: jne     0x7fafb8c7c5a7
  0x00007fafb8c7c77c: mov     %rax,%rbx
  0x00007fafb8c7c77f: callq   0x7fafb8c7c789
  0x00007fafb8c7c784: jmpq    0x7fafb8c7c81b
  0x00007fafb8c7c789: lea     0x8(%rsp),%rax
  0x00007fafb8c7c78e: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7c792: mov     %r15,%rdi
  0x00007fafb8c7c795: vzeroupper
  0x00007fafb8c7c798: mov     %rbp,0x330(%r15)
  0x00007fafb8c7c79f: mov     %rax,0x320(%r15)
  0x00007fafb8c7c7a6: test    $0xf,%esp
  0x00007fafb8c7c7ac: je      0x7fafb8c7c7c4
  0x00007fafb8c7c7b2: sub     $0x8,%rsp
  0x00007fafb8c7c7b6: callq   0x7fafd81ee030
  0x00007fafb8c7c7bb: add     $0x8,%rsp
  0x00007fafb8c7c7bf: jmpq    0x7fafb8c7c7c9
  0x00007fafb8c7c7c4: callq   0x7fafd81ee030
  0x00007fafb8c7c7c9: movabs  $0x0,%r10
  0x00007fafb8c7c7d3: mov     %r10,0x320(%r15)
  0x00007fafb8c7c7da: movabs  $0x0,%r10
  0x00007fafb8c7c7e4: mov     %r10,0x330(%r15)
  0x00007fafb8c7c7eb: movabs  $0x0,%r10
  0x00007fafb8c7c7f5: mov     %r10,0x328(%r15)
  0x00007fafb8c7c7fc: vzeroupper
  0x00007fafb8c7c7ff: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7c807: je      0x7fafb8c7c812
  0x00007fafb8c7c80d: jmpq    0x7fafb8c5c780
  0x00007fafb8c7c812: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7c816: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7c81a: retq
  0x00007fafb8c7c81b: mov     %rax,%rsi
  0x00007fafb8c7c81e: mov     0xfffffffffffffff8(%rbp),%rdx
  0x00007fafb8c7c822: leave
  0x00007fafb8c7c823: pop     %rcx
  0x00007fafb8c7c824: mov     %rdx,%rsp
  0x00007fafb8c7c827: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c7c82b: push    %rcx
  0x00007fafb8c7c82c: jmpq    *0x110(%rbx)
  0x00007fafb8c7c832: mov     0xffffffffffffffd8(%rbp),%rax
  0x00007fafb8c7c836: test    %rax,%rax
  0x00007fafb8c7c839: je      0x7fafb8c7c851
  0x00007fafb8c7c83f: addq    $0x1,0x18(%rax)
  0x00007fafb8c7c844: sbbq    $0x0,0x18(%rax)
  0x00007fafb8c7c849: add     $0x20,%rax
  0x00007fafb8c7c84d: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c7c851: movzbl  0x3(%r13),%ebx
  0x00007fafb8c7c856: add     $0x3,%r13
  0x00007fafb8c7c85a: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c7c864: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7c868: add     %al,(%rax)
  0x00007fafb8c7c86a: add     %al,(%rax)
  0x00007fafb8c7c86c: add     %al,(%rax)
  0x00007fafb8c7c86e: add     %al,(%rax)
  0x00007fafb8c7c870: add     %al,(%rax)
  0x00007fafb8c7c872: add     %al,(%rax)
  0x00007fafb8c7c874: add     %al,(%rax)
  0x00007fafb8c7c876: add     %al,(%rax)
  0x00007fafb8c7c878: add     %al,(%rax)
  0x00007fafb8c7c87a: add     %al,(%rax)
  0x00007fafb8c7c87c: add     %al,(%rax)
  0x00007fafb8c7c87e: add     %al,(%rax)

----------------------------------------------------------------------
goto_w  200 goto_w  [0x00007fafb8c7c8a0, 0x00007fafb8c7ccc0]  1056 bytes

Argument 0 is unknown.RIP: 0x7fafb8c7c8a0 Code size: 0x00000420
  0x00007fafb8c7c8a0: push    %rax
  0x00007fafb8c7c8a1: jmpq    0x7fafb8c7c8df
  0x00007fafb8c7c8a6: sub     $0x8,%rsp
  0x00007fafb8c7c8aa: vmovss  %xmm0,(%rsp)
  0x00007fafb8c7c8af: jmpq    0x7fafb8c7c8df
  0x00007fafb8c7c8b4: sub     $0x10,%rsp
  0x00007fafb8c7c8b8: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c7c8bd: jmpq    0x7fafb8c7c8df
  0x00007fafb8c7c8c2: sub     $0x10,%rsp
  0x00007fafb8c7c8c6: mov     %rax,(%rsp)
  0x00007fafb8c7c8ca: movabs  $0x0,%r10
  0x00007fafb8c7c8d4: mov     %r10,0x8(%rsp)
  0x00007fafb8c7c8d9: jmpq    0x7fafb8c7c8df
  0x00007fafb8c7c8de: push    %rax
  0x00007fafb8c7c8df: mov     0xffffffffffffffe8(%rbp),%rcx
  0x00007fafb8c7c8e3: mov     0xffffffffffffffd8(%rbp),%rax
  0x00007fafb8c7c8e7: test    %rax,%rax
  0x00007fafb8c7c8ea: je      0x7fafb8c7c908
  0x00007fafb8c7c8f0: mov     0x8(%rax),%rbx
  0x00007fafb8c7c8f4: add     $0x1,%rbx
  0x00007fafb8c7c8f8: sbb     $0x0,%rbx
  0x00007fafb8c7c8fc: mov     %rbx,0x8(%rax)
  0x00007fafb8c7c900: add     0x10(%rax),%rax
  0x00007fafb8c7c904: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c7c908: mov     0x1(%r13),%edx
  0x00007fafb8c7c90c: bswap   %edx
  0x00007fafb8c7c90e: movsxd  %edx,%rdx
  0x00007fafb8c7c911: add     %rdx,%r13
  0x00007fafb8c7c914: test    %edx,%edx
  0x00007fafb8c7c916: jns     0x7fafb8c7ca18
  0x00007fafb8c7c91c: mov     0x18(%rcx),%rax
  0x00007fafb8c7c920: test    %rax,%rax
  0x00007fafb8c7c923: jne     0x7fafb8c7c9d9
  0x00007fafb8c7c929: push    %rdx
  0x00007fafb8c7c92a: push    %rcx
  0x00007fafb8c7c92b: callq   0x7fafb8c7c935
  0x00007fafb8c7c930: jmpq    0x7fafb8c7c9ca
  0x00007fafb8c7c935: mov     %rcx,%rsi
  0x00007fafb8c7c938: lea     0x8(%rsp),%rax
  0x00007fafb8c7c93d: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7c941: mov     %r15,%rdi
  0x00007fafb8c7c944: vzeroupper
  0x00007fafb8c7c947: mov     %rbp,0x330(%r15)
  0x00007fafb8c7c94e: mov     %rax,0x320(%r15)
  0x00007fafb8c7c955: test    $0xf,%esp
  0x00007fafb8c7c95b: je      0x7fafb8c7c973
  0x00007fafb8c7c961: sub     $0x8,%rsp
  0x00007fafb8c7c965: callq   0x7fafd7d85400
  0x00007fafb8c7c96a: add     $0x8,%rsp
  0x00007fafb8c7c96e: jmpq    0x7fafb8c7c978
  0x00007fafb8c7c973: callq   0x7fafd7d85400
  0x00007fafb8c7c978: movabs  $0x0,%r10
  0x00007fafb8c7c982: mov     %r10,0x320(%r15)
  0x00007fafb8c7c989: movabs  $0x0,%r10
  0x00007fafb8c7c993: mov     %r10,0x330(%r15)
  0x00007fafb8c7c99a: movabs  $0x0,%r10
  0x00007fafb8c7c9a4: mov     %r10,0x328(%r15)
  0x00007fafb8c7c9ab: vzeroupper
  0x00007fafb8c7c9ae: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7c9b6: je      0x7fafb8c7c9c1
  0x00007fafb8c7c9bc: jmpq    0x7fafb8c5c780
  0x00007fafb8c7c9c1: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7c9c5: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7c9c9: retq
  0x00007fafb8c7c9ca: pop     %rcx
  0x00007fafb8c7c9cb: pop     %rdx
  0x00007fafb8c7c9cc: mov     0x18(%rcx),%rax
  0x00007fafb8c7c9d0: test    %rax,%rax
  0x00007fafb8c7c9d3: je      0x7fafb8c7ca18
  0x00007fafb8c7c9d9: mov     0x10(%rcx),%rbx
  0x00007fafb8c7c9dd: test    %rbx,%rbx
  0x00007fafb8c7c9e0: je      0x7fafb8c7ca02
  0x00007fafb8c7c9e2: mov     0x108(%rbx),%eax
  0x00007fafb8c7c9e8: add     $0x8,%eax
  0x00007fafb8c7c9eb: mov     %eax,0x108(%rbx)
  0x00007fafb8c7c9f1: and     0x11c(%rbx),%eax
  0x00007fafb8c7c9f7: je      0x7fafb8c7cb32
  0x00007fafb8c7c9fd: jmpq    0x7fafb8c7ca18
  0x00007fafb8c7ca02: mov     0x18(%rcx),%rcx
  0x00007fafb8c7ca06: mov     0x1c(%rcx),%eax
  0x00007fafb8c7ca09: add     $0x8,%eax
  0x00007fafb8c7ca0c: mov     %eax,0x1c(%rcx)
  0x00007fafb8c7ca0f: and     0x34(%rcx),%eax
  0x00007fafb8c7ca12: je      0x7fafb8c7cb32
  0x00007fafb8c7ca18: movzbl  0x0(%r13),%ebx
  0x00007fafb8c7ca1d: testb   $0x8,0x108(%r15)
  0x00007fafb8c7ca25: je      0x7fafb8c7ca33
  0x00007fafb8c7ca27: movabs  $0x7fafd899e080,%r10
  0x00007fafb8c7ca31: jmp     0x7fafb8c7ca3d
  0x00007fafb8c7ca33: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c7ca3d: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7ca41: callq   0x7fafb8c7ca4b
  0x00007fafb8c7ca46: jmpq    0x7fafb8c7cadd
  0x00007fafb8c7ca4b: lea     0x8(%rsp),%rax
  0x00007fafb8c7ca50: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7ca54: mov     %r15,%rdi
  0x00007fafb8c7ca57: vzeroupper
  0x00007fafb8c7ca5a: mov     %rbp,0x330(%r15)
  0x00007fafb8c7ca61: mov     %rax,0x320(%r15)
  0x00007fafb8c7ca68: test    $0xf,%esp
  0x00007fafb8c7ca6e: je      0x7fafb8c7ca86
  0x00007fafb8c7ca74: sub     $0x8,%rsp
  0x00007fafb8c7ca78: callq   0x7fafd7d84c70
  0x00007fafb8c7ca7d: add     $0x8,%rsp
  0x00007fafb8c7ca81: jmpq    0x7fafb8c7ca8b
  0x00007fafb8c7ca86: callq   0x7fafd7d84c70
  0x00007fafb8c7ca8b: movabs  $0x0,%r10
  0x00007fafb8c7ca95: mov     %r10,0x320(%r15)
  0x00007fafb8c7ca9c: movabs  $0x0,%r10
  0x00007fafb8c7caa6: mov     %r10,0x330(%r15)
  0x00007fafb8c7caad: movabs  $0x0,%r10
  0x00007fafb8c7cab7: mov     %r10,0x328(%r15)
  0x00007fafb8c7cabe: vzeroupper
  0x00007fafb8c7cac1: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7cac9: je      0x7fafb8c7cad4
  0x00007fafb8c7cacf: jmpq    0x7fafb8c5c780
  0x00007fafb8c7cad4: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7cad8: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7cadc: retq
  0x00007fafb8c7cadd: push    %rax
  0x00007fafb8c7cade: push    %rbx
  0x00007fafb8c7cadf: mov     0xffffffffffffffe8(%rbp),%rbx
  0x00007fafb8c7cae3: mov     0x10(%rbx),%rax
  0x00007fafb8c7cae7: test    %rax,%rax
  0x00007fafb8c7caea: je      0x7fafb8c7cb27
  0x00007fafb8c7caf0: mov     %r13,%rsi
  0x00007fafb8c7caf3: mov     %rbx,%rdi
  0x00007fafb8c7caf6: test    $0xf,%esp
  0x00007fafb8c7cafc: je      0x7fafb8c7cb14
  0x00007fafb8c7cb02: sub     $0x8,%rsp
  0x00007fafb8c7cb06: callq   0x7fafd7d84c20
  0x00007fafb8c7cb0b: add     $0x8,%rsp
  0x00007fafb8c7cb0f: jmpq    0x7fafb8c7cb19
  0x00007fafb8c7cb14: callq   0x7fafd7d84c20
  0x00007fafb8c7cb19: mov     0x10(%rbx),%rbx
  0x00007fafb8c7cb1d: add     $0x138,%rbx
  0x00007fafb8c7cb24: add     %rbx,%rax
  0x00007fafb8c7cb27: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c7cb2b: pop     %rbx
  0x00007fafb8c7cb2c: pop     %rax
  0x00007fafb8c7cb2d: jmpq    0x7fafb8c7ca18
  0x00007fafb8c7cb32: neg     %rdx
  0x00007fafb8c7cb35: add     %r13,%rdx
  0x00007fafb8c7cb38: callq   0x7fafb8c7cb42
  0x00007fafb8c7cb3d: jmpq    0x7fafb8c7cbd7
  0x00007fafb8c7cb42: mov     %rdx,%rsi
  0x00007fafb8c7cb45: lea     0x8(%rsp),%rax
  0x00007fafb8c7cb4a: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7cb4e: mov     %r15,%rdi
  0x00007fafb8c7cb51: vzeroupper
  0x00007fafb8c7cb54: mov     %rbp,0x330(%r15)
  0x00007fafb8c7cb5b: mov     %rax,0x320(%r15)
  0x00007fafb8c7cb62: test    $0xf,%esp
  0x00007fafb8c7cb68: je      0x7fafb8c7cb80
  0x00007fafb8c7cb6e: sub     $0x8,%rsp
  0x00007fafb8c7cb72: callq   0x7fafd7d84b40
  0x00007fafb8c7cb77: add     $0x8,%rsp
  0x00007fafb8c7cb7b: jmpq    0x7fafb8c7cb85
  0x00007fafb8c7cb80: callq   0x7fafd7d84b40
  0x00007fafb8c7cb85: movabs  $0x0,%r10
  0x00007fafb8c7cb8f: mov     %r10,0x320(%r15)
  0x00007fafb8c7cb96: movabs  $0x0,%r10
  0x00007fafb8c7cba0: mov     %r10,0x330(%r15)
  0x00007fafb8c7cba7: movabs  $0x0,%r10
  0x00007fafb8c7cbb1: mov     %r10,0x328(%r15)
  0x00007fafb8c7cbb8: vzeroupper
  0x00007fafb8c7cbbb: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7cbc3: je      0x7fafb8c7cbce
  0x00007fafb8c7cbc9: jmpq    0x7fafb8c5c780
  0x00007fafb8c7cbce: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7cbd2: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7cbd6: retq
  0x00007fafb8c7cbd7: test    %rax,%rax
  0x00007fafb8c7cbda: je      0x7fafb8c7ca18
  0x00007fafb8c7cbe0: cmpb    $0x0,0x156(%rax)
  0x00007fafb8c7cbe7: jne     0x7fafb8c7ca18
  0x00007fafb8c7cbed: mov     %rax,%rbx
  0x00007fafb8c7cbf0: callq   0x7fafb8c7cbfa
  0x00007fafb8c7cbf5: jmpq    0x7fafb8c7cc8c
  0x00007fafb8c7cbfa: lea     0x8(%rsp),%rax
  0x00007fafb8c7cbff: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7cc03: mov     %r15,%rdi
  0x00007fafb8c7cc06: vzeroupper
  0x00007fafb8c7cc09: mov     %rbp,0x330(%r15)
  0x00007fafb8c7cc10: mov     %rax,0x320(%r15)
  0x00007fafb8c7cc17: test    $0xf,%esp
  0x00007fafb8c7cc1d: je      0x7fafb8c7cc35
  0x00007fafb8c7cc23: sub     $0x8,%rsp
  0x00007fafb8c7cc27: callq   0x7fafd81ee030
  0x00007fafb8c7cc2c: add     $0x8,%rsp
  0x00007fafb8c7cc30: jmpq    0x7fafb8c7cc3a
  0x00007fafb8c7cc35: callq   0x7fafd81ee030
  0x00007fafb8c7cc3a: movabs  $0x0,%r10
  0x00007fafb8c7cc44: mov     %r10,0x320(%r15)
  0x00007fafb8c7cc4b: movabs  $0x0,%r10
  0x00007fafb8c7cc55: mov     %r10,0x330(%r15)
  0x00007fafb8c7cc5c: movabs  $0x0,%r10
  0x00007fafb8c7cc66: mov     %r10,0x328(%r15)
  0x00007fafb8c7cc6d: vzeroupper
  0x00007fafb8c7cc70: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7cc78: je      0x7fafb8c7cc83
  0x00007fafb8c7cc7e: jmpq    0x7fafb8c5c780
  0x00007fafb8c7cc83: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7cc87: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7cc8b: retq
  0x00007fafb8c7cc8c: mov     %rax,%rsi
  0x00007fafb8c7cc8f: mov     0xfffffffffffffff8(%rbp),%rdx
  0x00007fafb8c7cc93: leave
  0x00007fafb8c7cc94: pop     %rcx
  0x00007fafb8c7cc95: mov     %rdx,%rsp
  0x00007fafb8c7cc98: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c7cc9c: push    %rcx
  0x00007fafb8c7cc9d: jmpq    *0x110(%rbx)
  0x00007fafb8c7cca3: movzbl  0x5(%r13),%ebx
  0x00007fafb8c7cca8: add     $0x5,%r13
  0x00007fafb8c7ccac: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c7ccb6: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7ccba: nopw    0x0(%rax,%rax)

----------------------------------------------------------------------
jsr_w  201 jsr_w  [0x00007fafb8c7cce0, 0x00007fafb8c7cda0]  192 bytes

Argument 0 is unknown.RIP: 0x7fafb8c7cce0 Code size: 0x000000c0
  0x00007fafb8c7cce0: push    %rax
  0x00007fafb8c7cce1: jmpq    0x7fafb8c7cd1f
  0x00007fafb8c7cce6: sub     $0x8,%rsp
  0x00007fafb8c7ccea: vmovss  %xmm0,(%rsp)
  0x00007fafb8c7ccef: jmpq    0x7fafb8c7cd1f
  0x00007fafb8c7ccf4: sub     $0x10,%rsp
  0x00007fafb8c7ccf8: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c7ccfd: jmpq    0x7fafb8c7cd1f
  0x00007fafb8c7cd02: sub     $0x10,%rsp
  0x00007fafb8c7cd06: mov     %rax,(%rsp)
  0x00007fafb8c7cd0a: movabs  $0x0,%r10
  0x00007fafb8c7cd14: mov     %r10,0x8(%rsp)
  0x00007fafb8c7cd19: jmpq    0x7fafb8c7cd1f
  0x00007fafb8c7cd1e: push    %rax
  0x00007fafb8c7cd1f: mov     0xffffffffffffffe8(%rbp),%rcx
  0x00007fafb8c7cd23: mov     0xffffffffffffffd8(%rbp),%rax
  0x00007fafb8c7cd27: test    %rax,%rax
  0x00007fafb8c7cd2a: je      0x7fafb8c7cd48
  0x00007fafb8c7cd30: mov     0x8(%rax),%rbx
  0x00007fafb8c7cd34: add     $0x1,%rbx
  0x00007fafb8c7cd38: sbb     $0x0,%rbx
  0x00007fafb8c7cd3c: mov     %rbx,0x8(%rax)
  0x00007fafb8c7cd40: add     0x10(%rax),%rax
  0x00007fafb8c7cd44: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c7cd48: mov     0x1(%r13),%edx
  0x00007fafb8c7cd4c: bswap   %edx
  0x00007fafb8c7cd4e: movsxd  %edx,%rdx
  0x00007fafb8c7cd51: movzbl  0x0(%r13,%rdx),%ebx
  0x00007fafb8c7cd57: lea     0xffffffffffffffcd(%r13),%rax
  0x00007fafb8c7cd5b: sub     0x8(%rcx),%rax
  0x00007fafb8c7cd5f: add     %rdx,%r13
  0x00007fafb8c7cd62: push    %rax
  0x00007fafb8c7cd63: testb   $0x8,0x108(%r15)
  0x00007fafb8c7cd6b: je      0x7fafb8c7cd79
  0x00007fafb8c7cd6d: movabs  $0x7fafd899e080,%r10
  0x00007fafb8c7cd77: jmp     0x7fafb8c7cd83
  0x00007fafb8c7cd79: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c7cd83: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7cd87: movzbl  0x5(%r13),%ebx
  0x00007fafb8c7cd8c: add     $0x5,%r13
  0x00007fafb8c7cd90: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c7cd9a: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7cd9e: nop

----------------------------------------------------------------------
breakpoint  202 breakpoint  [0x00007fafb8c7cdc0, 0x00007fafb8c7cf60]  416 bytes

Argument 0 is unknown.RIP: 0x7fafb8c7cdc0 Code size: 0x000001a0
  0x00007fafb8c7cdc0: push    %rax
  0x00007fafb8c7cdc1: jmpq    0x7fafb8c7cdff
  0x00007fafb8c7cdc6: sub     $0x8,%rsp
  0x00007fafb8c7cdca: vmovss  %xmm0,(%rsp)
  0x00007fafb8c7cdcf: jmpq    0x7fafb8c7cdff
  0x00007fafb8c7cdd4: sub     $0x10,%rsp
  0x00007fafb8c7cdd8: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c7cddd: jmpq    0x7fafb8c7cdff
  0x00007fafb8c7cde2: sub     $0x10,%rsp
  0x00007fafb8c7cde6: mov     %rax,(%rsp)
  0x00007fafb8c7cdea: movabs  $0x0,%r10
  0x00007fafb8c7cdf4: mov     %r10,0x8(%rsp)
  0x00007fafb8c7cdf9: jmpq    0x7fafb8c7cdff
  0x00007fafb8c7cdfe: push    %rax
  0x00007fafb8c7cdff: mov     0xffffffffffffffe8(%rbp),%rsi
  0x00007fafb8c7ce03: callq   0x7fafb8c7ce0d
  0x00007fafb8c7ce08: jmpq    0x7fafb8c7cea2
  0x00007fafb8c7ce0d: mov     %r13,%rdx
  0x00007fafb8c7ce10: lea     0x8(%rsp),%rax
  0x00007fafb8c7ce15: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7ce19: mov     %r15,%rdi
  0x00007fafb8c7ce1c: vzeroupper
  0x00007fafb8c7ce1f: mov     %rbp,0x330(%r15)
  0x00007fafb8c7ce26: mov     %rax,0x320(%r15)
  0x00007fafb8c7ce2d: test    $0xf,%esp
  0x00007fafb8c7ce33: je      0x7fafb8c7ce4b
  0x00007fafb8c7ce39: sub     $0x8,%rsp
  0x00007fafb8c7ce3d: callq   0x7fafd7d82bc0
  0x00007fafb8c7ce42: add     $0x8,%rsp
  0x00007fafb8c7ce46: jmpq    0x7fafb8c7ce50
  0x00007fafb8c7ce4b: callq   0x7fafd7d82bc0
  0x00007fafb8c7ce50: movabs  $0x0,%r10
  0x00007fafb8c7ce5a: mov     %r10,0x320(%r15)
  0x00007fafb8c7ce61: movabs  $0x0,%r10
  0x00007fafb8c7ce6b: mov     %r10,0x330(%r15)
  0x00007fafb8c7ce72: movabs  $0x0,%r10
  0x00007fafb8c7ce7c: mov     %r10,0x328(%r15)
  0x00007fafb8c7ce83: vzeroupper
  0x00007fafb8c7ce86: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7ce8e: je      0x7fafb8c7ce99
  0x00007fafb8c7ce94: jmpq    0x7fafb8c5c780
  0x00007fafb8c7ce99: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7ce9d: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7cea1: retq
  0x00007fafb8c7cea2: mov     %rax,%rbx
  0x00007fafb8c7cea5: mov     0xffffffffffffffe8(%rbp),%rsi
  0x00007fafb8c7cea9: callq   0x7fafb8c7ceb3
  0x00007fafb8c7ceae: jmpq    0x7fafb8c7cf48
  0x00007fafb8c7ceb3: mov     %r13,%rdx
  0x00007fafb8c7ceb6: lea     0x8(%rsp),%rax
  0x00007fafb8c7cebb: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7cebf: mov     %r15,%rdi
  0x00007fafb8c7cec2: vzeroupper
  0x00007fafb8c7cec5: mov     %rbp,0x330(%r15)
  0x00007fafb8c7cecc: mov     %rax,0x320(%r15)
  0x00007fafb8c7ced3: test    $0xf,%esp
  0x00007fafb8c7ced9: je      0x7fafb8c7cef1
  0x00007fafb8c7cedf: sub     $0x8,%rsp
  0x00007fafb8c7cee3: callq   0x7fafd7d82f90
  0x00007fafb8c7cee8: add     $0x8,%rsp
  0x00007fafb8c7ceec: jmpq    0x7fafb8c7cef6
  0x00007fafb8c7cef1: callq   0x7fafd7d82f90
  0x00007fafb8c7cef6: movabs  $0x0,%r10
  0x00007fafb8c7cf00: mov     %r10,0x320(%r15)
  0x00007fafb8c7cf07: movabs  $0x0,%r10
  0x00007fafb8c7cf11: mov     %r10,0x330(%r15)
  0x00007fafb8c7cf18: movabs  $0x0,%r10
  0x00007fafb8c7cf22: mov     %r10,0x328(%r15)
  0x00007fafb8c7cf29: vzeroupper
  0x00007fafb8c7cf2c: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7cf34: je      0x7fafb8c7cf3f
  0x00007fafb8c7cf3a: jmpq    0x7fafb8c5c780
  0x00007fafb8c7cf3f: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7cf43: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7cf47: retq
  0x00007fafb8c7cf48: movabs  $0x7fafd89a3080,%r10
  0x00007fafb8c7cf52: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7cf56: nop
  0x00007fafb8c7cf58: add     %al,(%rax)
  0x00007fafb8c7cf5a: add     %al,(%rax)
  0x00007fafb8c7cf5c: add     %al,(%rax)
  0x00007fafb8c7cf5e: add     %al,(%rax)

----------------------------------------------------------------------
fast_agetfield  203 fast_agetfield  [0x00007fafb8c7cf80, 0x00007fafb8c7cfc0]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c7cf80 Code size: 0x00000040
  0x00007fafb8c7cf80: pop     %rax
  0x00007fafb8c7cf81: movzwl  0x1(%r13),%ebx
  0x00007fafb8c7cf86: mov     0xffffffffffffffd0(%rbp),%rcx
  0x00007fafb8c7cf8a: shl     $0x2,%ebx
  0x00007fafb8c7cf8d: mov     0x38(%rcx,%rbx,8),%rbx
  0x00007fafb8c7cf92: cmp     (%rax),%rax
  0x00007fafb8c7cf95: mov     (%rax,%rbx),%eax
  0x00007fafb8c7cf98: shl     $0x3,%rax
  0x00007fafb8c7cf9c: movzbl  0x3(%r13),%ebx
  0x00007fafb8c7cfa1: add     $0x3,%r13
  0x00007fafb8c7cfa5: movabs  $0x7fafd89a7880,%r10
  0x00007fafb8c7cfaf: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7cfb3: nopl    0x0(%rax,%rax)
  0x00007fafb8c7cfb8: add     %al,(%rax)
  0x00007fafb8c7cfba: add     %al,(%rax)
  0x00007fafb8c7cfbc: add     %al,(%rax)
  0x00007fafb8c7cfbe: add     %al,(%rax)

----------------------------------------------------------------------
fast_bgetfield  204 fast_bgetfield  [0x00007fafb8c7cfe0, 0x00007fafb8c7d020]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c7cfe0 Code size: 0x00000040
  0x00007fafb8c7cfe0: pop     %rax
  0x00007fafb8c7cfe1: movzwl  0x1(%r13),%ebx
  0x00007fafb8c7cfe6: mov     0xffffffffffffffd0(%rbp),%rcx
  0x00007fafb8c7cfea: shl     $0x2,%ebx
  0x00007fafb8c7cfed: mov     0x38(%rcx,%rbx,8),%rbx
  0x00007fafb8c7cff2: cmp     (%rax),%rax
  0x00007fafb8c7cff5: movsbl  (%rax,%rbx),%eax
  0x00007fafb8c7cff9: movzbl  0x3(%r13),%ebx
  0x00007fafb8c7cffe: add     $0x3,%r13
  0x00007fafb8c7d002: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c7d00c: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7d010: add     %al,(%rax)
  0x00007fafb8c7d012: add     %al,(%rax)
  0x00007fafb8c7d014: add     %al,(%rax)
  0x00007fafb8c7d016: add     %al,(%rax)
  0x00007fafb8c7d018: add     %al,(%rax)
  0x00007fafb8c7d01a: add     %al,(%rax)
  0x00007fafb8c7d01c: add     %al,(%rax)
  0x00007fafb8c7d01e: add     %al,(%rax)

----------------------------------------------------------------------
fast_cgetfield  205 fast_cgetfield  [0x00007fafb8c7d040, 0x00007fafb8c7d080]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c7d040 Code size: 0x00000040
  0x00007fafb8c7d040: pop     %rax
  0x00007fafb8c7d041: movzwl  0x1(%r13),%ebx
  0x00007fafb8c7d046: mov     0xffffffffffffffd0(%rbp),%rcx
  0x00007fafb8c7d04a: shl     $0x2,%ebx
  0x00007fafb8c7d04d: mov     0x38(%rcx,%rbx,8),%rbx
  0x00007fafb8c7d052: cmp     (%rax),%rax
  0x00007fafb8c7d055: movzwl  (%rax,%rbx),%eax
  0x00007fafb8c7d059: movzbl  0x3(%r13),%ebx
  0x00007fafb8c7d05e: add     $0x3,%r13
  0x00007fafb8c7d062: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c7d06c: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7d070: add     %al,(%rax)
  0x00007fafb8c7d072: add     %al,(%rax)
  0x00007fafb8c7d074: add     %al,(%rax)
  0x00007fafb8c7d076: add     %al,(%rax)
  0x00007fafb8c7d078: add     %al,(%rax)
  0x00007fafb8c7d07a: add     %al,(%rax)
  0x00007fafb8c7d07c: add     %al,(%rax)
  0x00007fafb8c7d07e: add     %al,(%rax)

----------------------------------------------------------------------
fast_dgetfield  206 fast_dgetfield  [0x00007fafb8c7d0a0, 0x00007fafb8c7d0e0]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c7d0a0 Code size: 0x00000040
  0x00007fafb8c7d0a0: pop     %rax
  0x00007fafb8c7d0a1: movzwl  0x1(%r13),%ebx
  0x00007fafb8c7d0a6: mov     0xffffffffffffffd0(%rbp),%rcx
  0x00007fafb8c7d0aa: shl     $0x2,%ebx
  0x00007fafb8c7d0ad: mov     0x38(%rcx,%rbx,8),%rbx
  0x00007fafb8c7d0b2: cmp     (%rax),%rax
  0x00007fafb8c7d0b5: vmovsd  (%rax,%rbx),%xmm0
  0x00007fafb8c7d0ba: movzbl  0x3(%r13),%ebx
  0x00007fafb8c7d0bf: add     $0x3,%r13
  0x00007fafb8c7d0c3: movabs  $0x7fafd89a7080,%r10
  0x00007fafb8c7d0cd: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7d0d1: nopl    0x0(%rax)
  0x00007fafb8c7d0d8: add     %al,(%rax)
  0x00007fafb8c7d0da: add     %al,(%rax)
  0x00007fafb8c7d0dc: add     %al,(%rax)
  0x00007fafb8c7d0de: add     %al,(%rax)

----------------------------------------------------------------------
fast_fgetfield  207 fast_fgetfield  [0x00007fafb8c7d100, 0x00007fafb8c7d140]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c7d100 Code size: 0x00000040
  0x00007fafb8c7d100: pop     %rax
  0x00007fafb8c7d101: movzwl  0x1(%r13),%ebx
  0x00007fafb8c7d106: mov     0xffffffffffffffd0(%rbp),%rcx
  0x00007fafb8c7d10a: shl     $0x2,%ebx
  0x00007fafb8c7d10d: mov     0x38(%rcx,%rbx,8),%rbx
  0x00007fafb8c7d112: cmp     (%rax),%rax
  0x00007fafb8c7d115: vmovss  (%rax,%rbx),%xmm0
  0x00007fafb8c7d11a: movzbl  0x3(%r13),%ebx
  0x00007fafb8c7d11f: add     $0x3,%r13
  0x00007fafb8c7d123: movabs  $0x7fafd89a6880,%r10
  0x00007fafb8c7d12d: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7d131: nopl    0x0(%rax)
  0x00007fafb8c7d138: add     %al,(%rax)
  0x00007fafb8c7d13a: add     %al,(%rax)
  0x00007fafb8c7d13c: add     %al,(%rax)
  0x00007fafb8c7d13e: add     %al,(%rax)

----------------------------------------------------------------------
fast_igetfield  208 fast_igetfield  [0x00007fafb8c7d160, 0x00007fafb8c7d1a0]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c7d160 Code size: 0x00000040
  0x00007fafb8c7d160: pop     %rax
  0x00007fafb8c7d161: movzwl  0x1(%r13),%ebx
  0x00007fafb8c7d166: mov     0xffffffffffffffd0(%rbp),%rcx
  0x00007fafb8c7d16a: shl     $0x2,%ebx
  0x00007fafb8c7d16d: mov     0x38(%rcx,%rbx,8),%rbx
  0x00007fafb8c7d172: cmp     (%rax),%rax
  0x00007fafb8c7d175: mov     (%rax,%rbx),%eax
  0x00007fafb8c7d178: movzbl  0x3(%r13),%ebx
  0x00007fafb8c7d17d: add     $0x3,%r13
  0x00007fafb8c7d181: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c7d18b: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7d18f: nop
  0x00007fafb8c7d190: add     %al,(%rax)
  0x00007fafb8c7d192: add     %al,(%rax)
  0x00007fafb8c7d194: add     %al,(%rax)
  0x00007fafb8c7d196: add     %al,(%rax)
  0x00007fafb8c7d198: add     %al,(%rax)
  0x00007fafb8c7d19a: add     %al,(%rax)
  0x00007fafb8c7d19c: add     %al,(%rax)
  0x00007fafb8c7d19e: add     %al,(%rax)

----------------------------------------------------------------------
fast_lgetfield  209 fast_lgetfield  [0x00007fafb8c7d1c0, 0x00007fafb8c7d200]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c7d1c0 Code size: 0x00000040
  0x00007fafb8c7d1c0: pop     %rax
  0x00007fafb8c7d1c1: movzwl  0x1(%r13),%ebx
  0x00007fafb8c7d1c6: mov     0xffffffffffffffd0(%rbp),%rcx
  0x00007fafb8c7d1ca: shl     $0x2,%ebx
  0x00007fafb8c7d1cd: mov     0x38(%rcx,%rbx,8),%rbx
  0x00007fafb8c7d1d2: cmp     (%rax),%rax
  0x00007fafb8c7d1d5: mov     (%rax,%rbx),%rax
  0x00007fafb8c7d1d9: movzbl  0x3(%r13),%ebx
  0x00007fafb8c7d1de: add     $0x3,%r13
  0x00007fafb8c7d1e2: movabs  $0x7fafd89a6080,%r10
  0x00007fafb8c7d1ec: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7d1f0: add     %al,(%rax)
  0x00007fafb8c7d1f2: add     %al,(%rax)
  0x00007fafb8c7d1f4: add     %al,(%rax)
  0x00007fafb8c7d1f6: add     %al,(%rax)
  0x00007fafb8c7d1f8: add     %al,(%rax)
  0x00007fafb8c7d1fa: add     %al,(%rax)
  0x00007fafb8c7d1fc: add     %al,(%rax)
  0x00007fafb8c7d1fe: add     %al,(%rax)

----------------------------------------------------------------------
fast_sgetfield  210 fast_sgetfield  [0x00007fafb8c7d220, 0x00007fafb8c7d260]  64 bytes

Argument 0 is unknown.RIP: 0x7fafb8c7d220 Code size: 0x00000040
  0x00007fafb8c7d220: pop     %rax
  0x00007fafb8c7d221: movzwl  0x1(%r13),%ebx
  0x00007fafb8c7d226: mov     0xffffffffffffffd0(%rbp),%rcx
  0x00007fafb8c7d22a: shl     $0x2,%ebx
  0x00007fafb8c7d22d: mov     0x38(%rcx,%rbx,8),%rbx
  0x00007fafb8c7d232: cmp     (%rax),%rax
  0x00007fafb8c7d235: movswl  (%rax,%rbx),%eax
  0x00007fafb8c7d239: movzbl  0x3(%r13),%ebx
  0x00007fafb8c7d23e: add     $0x3,%r13
  0x00007fafb8c7d242: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c7d24c: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7d250: add     %al,(%rax)
  0x00007fafb8c7d252: add     %al,(%rax)
  0x00007fafb8c7d254: add     %al,(%rax)
  0x00007fafb8c7d256: add     %al,(%rax)
  0x00007fafb8c7d258: add     %al,(%rax)
  0x00007fafb8c7d25a: add     %al,(%rax)
  0x00007fafb8c7d25c: add     %al,(%rax)
  0x00007fafb8c7d25e: add     %al,(%rax)

----------------------------------------------------------------------
fast_aputfield  211 fast_aputfield  [0x00007fafb8c7d280, 0x00007fafb8c7d3e0]  352 bytes

Argument 0 is unknown.RIP: 0x7fafb8c7d280 Code size: 0x00000160
  0x00007fafb8c7d280: pop     %rax
  0x00007fafb8c7d281: movzwl  0x1(%r13),%ebx
  0x00007fafb8c7d286: mov     0xffffffffffffffd0(%rbp),%rcx
  0x00007fafb8c7d28a: shl     $0x2,%ebx
  0x00007fafb8c7d28d: mov     0x40(%rcx,%rbx,8),%edx
  0x00007fafb8c7d291: mov     0x38(%rcx,%rbx,8),%rbx
  0x00007fafb8c7d296: shr     $0x15,%edx
  0x00007fafb8c7d299: and     $0x1,%edx
  0x00007fafb8c7d29c: pop     %rcx
  0x00007fafb8c7d29d: cmp     (%rcx),%rax
  0x00007fafb8c7d2a0: lea     (%rcx,%rbx),%rdx
  0x00007fafb8c7d2a4: cmpb    $0x0,0x30(%r15)
  0x00007fafb8c7d2a9: je      0x7fafb8c7d310
  0x00007fafb8c7d2af: mov     (%rdx),%ebx
  0x00007fafb8c7d2b1: shl     $0x3,%rbx
  0x00007fafb8c7d2b5: cmp     $0x0,%rbx
  0x00007fafb8c7d2b9: je      0x7fafb8c7d310
  0x00007fafb8c7d2bf: mov     0x38(%r15),%r8
  0x00007fafb8c7d2c3: cmp     $0x0,%r8
  0x00007fafb8c7d2c7: je      0x7fafb8c7d2e1
  0x00007fafb8c7d2cd: sub     $0x8,%r8
  0x00007fafb8c7d2d1: mov     %r8,0x38(%r15)
  0x00007fafb8c7d2d5: add     0x48(%r15),%r8
  0x00007fafb8c7d2d9: mov     %rbx,(%r8)
  0x00007fafb8c7d2dc: jmpq    0x7fafb8c7d310
  0x00007fafb8c7d2e1: push    %rax
  0x00007fafb8c7d2e2: push    %rdx
  0x00007fafb8c7d2e3: push    %rbx
  0x00007fafb8c7d2e4: mov     %r15,%rsi
  0x00007fafb8c7d2e7: mov     %rbx,%rdi
  0x00007fafb8c7d2ea: test    $0xf,%esp
  0x00007fafb8c7d2f0: je      0x7fafb8c7d308
  0x00007fafb8c7d2f6: sub     $0x8,%rsp
  0x00007fafb8c7d2fa: callq   0x7fafd7c74620
  0x00007fafb8c7d2ff: add     $0x8,%rsp
  0x00007fafb8c7d303: jmpq    0x7fafb8c7d30d
  0x00007fafb8c7d308: callq   0x7fafd7c74620
  0x00007fafb8c7d30d: pop     %rbx
  0x00007fafb8c7d30e: pop     %rdx
  0x00007fafb8c7d30f: pop     %rax
  0x00007fafb8c7d310: mov     %rax,%rbx
  0x00007fafb8c7d313: shr     $0x3,%rax
  0x00007fafb8c7d317: mov     %eax,(%rdx)
  0x00007fafb8c7d319: mov     %rdx,%r8
  0x00007fafb8c7d31c: xor     %rbx,%r8
  0x00007fafb8c7d31f: shr     $0x14,%r8
  0x00007fafb8c7d323: je      0x7fafb8c7d3bb
  0x00007fafb8c7d329: cmp     $0x0,%rbx
  0x00007fafb8c7d32d: je      0x7fafb8c7d3bb
  0x00007fafb8c7d333: mov     %rdx,%r8
  0x00007fafb8c7d336: shr     $0x9,%r8
  0x00007fafb8c7d33a: movabs  $0x7fafb0000000,%rbx
  0x00007fafb8c7d344: add     %rbx,%r8
  0x00007fafb8c7d347: cmpb    $0x20,(%r8)
  0x00007fafb8c7d34b: je      0x7fafb8c7d3bb
  0x00007fafb8c7d351: lock addl $0x0,0xffffffffffffffc0(%rsp)
  0x00007fafb8c7d357: cmpb    $0x0,(%r8)
  0x00007fafb8c7d35b: je      0x7fafb8c7d3bb
  0x00007fafb8c7d361: movb    $0x0,(%r8)
  0x00007fafb8c7d365: cmpl    $0x0,0x70(%r15)
  0x00007fafb8c7d36d: je      0x7fafb8c7d38e
  0x00007fafb8c7d373: subl    $0x8,0x70(%r15)
  0x00007fafb8c7d378: mov     0x80(%r15),%rbx
  0x00007fafb8c7d37f: movsxd  0x70(%r15),%r10
  0x00007fafb8c7d383: add     %r10,%rbx
  0x00007fafb8c7d386: mov     %r8,(%rbx)
  0x00007fafb8c7d389: jmpq    0x7fafb8c7d3bb
  0x00007fafb8c7d38e: push    %rdx
  0x00007fafb8c7d38f: push    %rbx
  0x00007fafb8c7d390: mov     %r15,%rsi
  0x00007fafb8c7d393: mov     %r8,%rdi
  0x00007fafb8c7d396: test    $0xf,%esp
  0x00007fafb8c7d39c: je      0x7fafb8c7d3b4
  0x00007fafb8c7d3a2: sub     $0x8,%rsp
  0x00007fafb8c7d3a6: callq   0x7fafd7c74650
  0x00007fafb8c7d3ab: add     $0x8,%rsp
  0x00007fafb8c7d3af: jmpq    0x7fafb8c7d3b9
  0x00007fafb8c7d3b4: callq   0x7fafd7c74650
  0x00007fafb8c7d3b9: pop     %rbx
  0x00007fafb8c7d3ba: pop     %rdx
  0x00007fafb8c7d3bb: test    %edx,%edx
  0x00007fafb8c7d3bd: je      0x7fafb8c7d3c9
  0x00007fafb8c7d3c3: lock addl $0x0,0xffffffffffffffc0(%rsp)
  0x00007fafb8c7d3c9: movzbl  0x3(%r13),%ebx
  0x00007fafb8c7d3ce: add     $0x3,%r13
  0x00007fafb8c7d3d2: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c7d3dc: jmpq    *(%r10,%rbx,8)

----------------------------------------------------------------------
fast_bputfield  212 fast_bputfield  [0x00007fafb8c7d400, 0x00007fafb8c7d460]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c7d400 Code size: 0x00000060
  0x00007fafb8c7d400: mov     (%rsp),%eax
  0x00007fafb8c7d403: add     $0x8,%rsp
  0x00007fafb8c7d407: movzwl  0x1(%r13),%ebx
  0x00007fafb8c7d40c: mov     0xffffffffffffffd0(%rbp),%rcx
  0x00007fafb8c7d410: shl     $0x2,%ebx
  0x00007fafb8c7d413: mov     0x40(%rcx,%rbx,8),%edx
  0x00007fafb8c7d417: mov     0x38(%rcx,%rbx,8),%rbx
  0x00007fafb8c7d41c: shr     $0x15,%edx
  0x00007fafb8c7d41f: and     $0x1,%edx
  0x00007fafb8c7d422: pop     %rcx
  0x00007fafb8c7d423: cmp     (%rcx),%rax
  0x00007fafb8c7d426: mov     %al,(%rcx,%rbx)
  0x00007fafb8c7d429: test    %edx,%edx
  0x00007fafb8c7d42b: je      0x7fafb8c7d437
  0x00007fafb8c7d431: lock addl $0x0,0xffffffffffffffc0(%rsp)
  0x00007fafb8c7d437: movzbl  0x3(%r13),%ebx
  0x00007fafb8c7d43c: add     $0x3,%r13
  0x00007fafb8c7d440: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c7d44a: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7d44e: nop
  0x00007fafb8c7d450: add     %al,(%rax)
  0x00007fafb8c7d452: add     %al,(%rax)
  0x00007fafb8c7d454: add     %al,(%rax)
  0x00007fafb8c7d456: add     %al,(%rax)
  0x00007fafb8c7d458: add     %al,(%rax)
  0x00007fafb8c7d45a: add     %al,(%rax)
  0x00007fafb8c7d45c: add     %al,(%rax)
  0x00007fafb8c7d45e: add     %al,(%rax)

----------------------------------------------------------------------
fast_zputfield  213 fast_zputfield  [0x00007fafb8c7d480, 0x00007fafb8c7d4e0]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c7d480 Code size: 0x00000060
  0x00007fafb8c7d480: mov     (%rsp),%eax
  0x00007fafb8c7d483: add     $0x8,%rsp
  0x00007fafb8c7d487: movzwl  0x1(%r13),%ebx
  0x00007fafb8c7d48c: mov     0xffffffffffffffd0(%rbp),%rcx
  0x00007fafb8c7d490: shl     $0x2,%ebx
  0x00007fafb8c7d493: mov     0x40(%rcx,%rbx,8),%edx
  0x00007fafb8c7d497: mov     0x38(%rcx,%rbx,8),%rbx
  0x00007fafb8c7d49c: shr     $0x15,%edx
  0x00007fafb8c7d49f: and     $0x1,%edx
  0x00007fafb8c7d4a2: pop     %rcx
  0x00007fafb8c7d4a3: cmp     (%rcx),%rax
  0x00007fafb8c7d4a6: and     $0x1,%eax
  0x00007fafb8c7d4a9: mov     %al,(%rcx,%rbx)
  0x00007fafb8c7d4ac: test    %edx,%edx
  0x00007fafb8c7d4ae: je      0x7fafb8c7d4ba
  0x00007fafb8c7d4b4: lock addl $0x0,0xffffffffffffffc0(%rsp)
  0x00007fafb8c7d4ba: movzbl  0x3(%r13),%ebx
  0x00007fafb8c7d4bf: add     $0x3,%r13
  0x00007fafb8c7d4c3: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c7d4cd: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7d4d1: nopl    0x0(%rax)
  0x00007fafb8c7d4d8: add     %al,(%rax)
  0x00007fafb8c7d4da: add     %al,(%rax)
  0x00007fafb8c7d4dc: add     %al,(%rax)
  0x00007fafb8c7d4de: add     %al,(%rax)

----------------------------------------------------------------------
fast_cputfield  214 fast_cputfield  [0x00007fafb8c7d500, 0x00007fafb8c7d560]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c7d500 Code size: 0x00000060
  0x00007fafb8c7d500: mov     (%rsp),%eax
  0x00007fafb8c7d503: add     $0x8,%rsp
  0x00007fafb8c7d507: movzwl  0x1(%r13),%ebx
  0x00007fafb8c7d50c: mov     0xffffffffffffffd0(%rbp),%rcx
  0x00007fafb8c7d510: shl     $0x2,%ebx
  0x00007fafb8c7d513: mov     0x40(%rcx,%rbx,8),%edx
  0x00007fafb8c7d517: mov     0x38(%rcx,%rbx,8),%rbx
  0x00007fafb8c7d51c: shr     $0x15,%edx
  0x00007fafb8c7d51f: and     $0x1,%edx
  0x00007fafb8c7d522: pop     %rcx
  0x00007fafb8c7d523: cmp     (%rcx),%rax
  0x00007fafb8c7d526: mov     %ax,(%rcx,%rbx)
  0x00007fafb8c7d52a: test    %edx,%edx
  0x00007fafb8c7d52c: je      0x7fafb8c7d538
  0x00007fafb8c7d532: lock addl $0x0,0xffffffffffffffc0(%rsp)
  0x00007fafb8c7d538: movzbl  0x3(%r13),%ebx
  0x00007fafb8c7d53d: add     $0x3,%r13
  0x00007fafb8c7d541: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c7d54b: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7d54f: nop
  0x00007fafb8c7d550: add     %al,(%rax)
  0x00007fafb8c7d552: add     %al,(%rax)
  0x00007fafb8c7d554: add     %al,(%rax)
  0x00007fafb8c7d556: add     %al,(%rax)
  0x00007fafb8c7d558: add     %al,(%rax)
  0x00007fafb8c7d55a: add     %al,(%rax)
  0x00007fafb8c7d55c: add     %al,(%rax)
  0x00007fafb8c7d55e: add     %al,(%rax)

----------------------------------------------------------------------
fast_dputfield  215 fast_dputfield  [0x00007fafb8c7d580, 0x00007fafb8c7d5e0]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c7d580 Code size: 0x00000060
  0x00007fafb8c7d580: vmovsd  (%rsp),%xmm0
  0x00007fafb8c7d585: add     $0x10,%rsp
  0x00007fafb8c7d589: movzwl  0x1(%r13),%ebx
  0x00007fafb8c7d58e: mov     0xffffffffffffffd0(%rbp),%rcx
  0x00007fafb8c7d592: shl     $0x2,%ebx
  0x00007fafb8c7d595: mov     0x40(%rcx,%rbx,8),%edx
  0x00007fafb8c7d599: mov     0x38(%rcx,%rbx,8),%rbx
  0x00007fafb8c7d59e: shr     $0x15,%edx
  0x00007fafb8c7d5a1: and     $0x1,%edx
  0x00007fafb8c7d5a4: pop     %rcx
  0x00007fafb8c7d5a5: cmp     (%rcx),%rax
  0x00007fafb8c7d5a8: vmovsd  %xmm0,(%rcx,%rbx)
  0x00007fafb8c7d5ad: test    %edx,%edx
  0x00007fafb8c7d5af: je      0x7fafb8c7d5bb
  0x00007fafb8c7d5b5: lock addl $0x0,0xffffffffffffffc0(%rsp)
  0x00007fafb8c7d5bb: movzbl  0x3(%r13),%ebx
  0x00007fafb8c7d5c0: add     $0x3,%r13
  0x00007fafb8c7d5c4: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c7d5ce: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7d5d2: nopw    0x0(%rax,%rax)
  0x00007fafb8c7d5d8: add     %al,(%rax)
  0x00007fafb8c7d5da: add     %al,(%rax)
  0x00007fafb8c7d5dc: add     %al,(%rax)
  0x00007fafb8c7d5de: add     %al,(%rax)

----------------------------------------------------------------------
fast_fputfield  216 fast_fputfield  [0x00007fafb8c7d600, 0x00007fafb8c7d660]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c7d600 Code size: 0x00000060
  0x00007fafb8c7d600: vmovss  (%rsp),%xmm0
  0x00007fafb8c7d605: add     $0x8,%rsp
  0x00007fafb8c7d609: movzwl  0x1(%r13),%ebx
  0x00007fafb8c7d60e: mov     0xffffffffffffffd0(%rbp),%rcx
  0x00007fafb8c7d612: shl     $0x2,%ebx
  0x00007fafb8c7d615: mov     0x40(%rcx,%rbx,8),%edx
  0x00007fafb8c7d619: mov     0x38(%rcx,%rbx,8),%rbx
  0x00007fafb8c7d61e: shr     $0x15,%edx
  0x00007fafb8c7d621: and     $0x1,%edx
  0x00007fafb8c7d624: pop     %rcx
  0x00007fafb8c7d625: cmp     (%rcx),%rax
  0x00007fafb8c7d628: vmovss  %xmm0,(%rcx,%rbx)
  0x00007fafb8c7d62d: test    %edx,%edx
  0x00007fafb8c7d62f: je      0x7fafb8c7d63b
  0x00007fafb8c7d635: lock addl $0x0,0xffffffffffffffc0(%rsp)
  0x00007fafb8c7d63b: movzbl  0x3(%r13),%ebx
  0x00007fafb8c7d640: add     $0x3,%r13
  0x00007fafb8c7d644: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c7d64e: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7d652: nopw    0x0(%rax,%rax)
  0x00007fafb8c7d658: add     %al,(%rax)
  0x00007fafb8c7d65a: add     %al,(%rax)
  0x00007fafb8c7d65c: add     %al,(%rax)
  0x00007fafb8c7d65e: add     %al,(%rax)

----------------------------------------------------------------------
fast_iputfield  217 fast_iputfield  [0x00007fafb8c7d680, 0x00007fafb8c7d6e0]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c7d680 Code size: 0x00000060
  0x00007fafb8c7d680: mov     (%rsp),%eax
  0x00007fafb8c7d683: add     $0x8,%rsp
  0x00007fafb8c7d687: movzwl  0x1(%r13),%ebx
  0x00007fafb8c7d68c: mov     0xffffffffffffffd0(%rbp),%rcx
  0x00007fafb8c7d690: shl     $0x2,%ebx
  0x00007fafb8c7d693: mov     0x40(%rcx,%rbx,8),%edx
  0x00007fafb8c7d697: mov     0x38(%rcx,%rbx,8),%rbx
  0x00007fafb8c7d69c: shr     $0x15,%edx
  0x00007fafb8c7d69f: and     $0x1,%edx
  0x00007fafb8c7d6a2: pop     %rcx
  0x00007fafb8c7d6a3: cmp     (%rcx),%rax
  0x00007fafb8c7d6a6: mov     %eax,(%rcx,%rbx)
  0x00007fafb8c7d6a9: test    %edx,%edx
  0x00007fafb8c7d6ab: je      0x7fafb8c7d6b7
  0x00007fafb8c7d6b1: lock addl $0x0,0xffffffffffffffc0(%rsp)
  0x00007fafb8c7d6b7: movzbl  0x3(%r13),%ebx
  0x00007fafb8c7d6bc: add     $0x3,%r13
  0x00007fafb8c7d6c0: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c7d6ca: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7d6ce: nop
  0x00007fafb8c7d6d0: add     %al,(%rax)
  0x00007fafb8c7d6d2: add     %al,(%rax)
  0x00007fafb8c7d6d4: add     %al,(%rax)
  0x00007fafb8c7d6d6: add     %al,(%rax)
  0x00007fafb8c7d6d8: add     %al,(%rax)
  0x00007fafb8c7d6da: add     %al,(%rax)
  0x00007fafb8c7d6dc: add     %al,(%rax)
  0x00007fafb8c7d6de: add     %al,(%rax)

----------------------------------------------------------------------
fast_lputfield  218 fast_lputfield  [0x00007fafb8c7d700, 0x00007fafb8c7d760]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c7d700 Code size: 0x00000060
  0x00007fafb8c7d700: mov     (%rsp),%rax
  0x00007fafb8c7d704: add     $0x10,%rsp
  0x00007fafb8c7d708: movzwl  0x1(%r13),%ebx
  0x00007fafb8c7d70d: mov     0xffffffffffffffd0(%rbp),%rcx
  0x00007fafb8c7d711: shl     $0x2,%ebx
  0x00007fafb8c7d714: mov     0x40(%rcx,%rbx,8),%edx
  0x00007fafb8c7d718: mov     0x38(%rcx,%rbx,8),%rbx
  0x00007fafb8c7d71d: shr     $0x15,%edx
  0x00007fafb8c7d720: and     $0x1,%edx
  0x00007fafb8c7d723: pop     %rcx
  0x00007fafb8c7d724: cmp     (%rcx),%rax
  0x00007fafb8c7d727: mov     %rax,(%rcx,%rbx)
  0x00007fafb8c7d72b: test    %edx,%edx
  0x00007fafb8c7d72d: je      0x7fafb8c7d739
  0x00007fafb8c7d733: lock addl $0x0,0xffffffffffffffc0(%rsp)
  0x00007fafb8c7d739: movzbl  0x3(%r13),%ebx
  0x00007fafb8c7d73e: add     $0x3,%r13
  0x00007fafb8c7d742: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c7d74c: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7d750: add     %al,(%rax)
  0x00007fafb8c7d752: add     %al,(%rax)
  0x00007fafb8c7d754: add     %al,(%rax)
  0x00007fafb8c7d756: add     %al,(%rax)
  0x00007fafb8c7d758: add     %al,(%rax)
  0x00007fafb8c7d75a: add     %al,(%rax)
  0x00007fafb8c7d75c: add     %al,(%rax)
  0x00007fafb8c7d75e: add     %al,(%rax)

----------------------------------------------------------------------
fast_sputfield  219 fast_sputfield  [0x00007fafb8c7d780, 0x00007fafb8c7d7e0]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c7d780 Code size: 0x00000060
  0x00007fafb8c7d780: mov     (%rsp),%eax
  0x00007fafb8c7d783: add     $0x8,%rsp
  0x00007fafb8c7d787: movzwl  0x1(%r13),%ebx
  0x00007fafb8c7d78c: mov     0xffffffffffffffd0(%rbp),%rcx
  0x00007fafb8c7d790: shl     $0x2,%ebx
  0x00007fafb8c7d793: mov     0x40(%rcx,%rbx,8),%edx
  0x00007fafb8c7d797: mov     0x38(%rcx,%rbx,8),%rbx
  0x00007fafb8c7d79c: shr     $0x15,%edx
  0x00007fafb8c7d79f: and     $0x1,%edx
  0x00007fafb8c7d7a2: pop     %rcx
  0x00007fafb8c7d7a3: cmp     (%rcx),%rax
  0x00007fafb8c7d7a6: mov     %ax,(%rcx,%rbx)
  0x00007fafb8c7d7aa: test    %edx,%edx
  0x00007fafb8c7d7ac: je      0x7fafb8c7d7b8
  0x00007fafb8c7d7b2: lock addl $0x0,0xffffffffffffffc0(%rsp)
  0x00007fafb8c7d7b8: movzbl  0x3(%r13),%ebx
  0x00007fafb8c7d7bd: add     $0x3,%r13
  0x00007fafb8c7d7c1: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c7d7cb: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7d7cf: nop
  0x00007fafb8c7d7d0: add     %al,(%rax)
  0x00007fafb8c7d7d2: add     %al,(%rax)
  0x00007fafb8c7d7d4: add     %al,(%rax)
  0x00007fafb8c7d7d6: add     %al,(%rax)
  0x00007fafb8c7d7d8: add     %al,(%rax)
  0x00007fafb8c7d7da: add     %al,(%rax)
  0x00007fafb8c7d7dc: add     %al,(%rax)
  0x00007fafb8c7d7de: add     %al,(%rax)

----------------------------------------------------------------------
fast_aload_0  220 fast_aload_0  [0x00007fafb8c7d800, 0x00007fafb8c7d860]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c7d800 Code size: 0x00000060
  0x00007fafb8c7d800: push    %rax
  0x00007fafb8c7d801: jmpq    0x7fafb8c7d83f
  0x00007fafb8c7d806: sub     $0x8,%rsp
  0x00007fafb8c7d80a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c7d80f: jmpq    0x7fafb8c7d83f
  0x00007fafb8c7d814: sub     $0x10,%rsp
  0x00007fafb8c7d818: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c7d81d: jmpq    0x7fafb8c7d83f
  0x00007fafb8c7d822: sub     $0x10,%rsp
  0x00007fafb8c7d826: mov     %rax,(%rsp)
  0x00007fafb8c7d82a: movabs  $0x0,%r10
  0x00007fafb8c7d834: mov     %r10,0x8(%rsp)
  0x00007fafb8c7d839: jmpq    0x7fafb8c7d83f
  0x00007fafb8c7d83e: push    %rax
  0x00007fafb8c7d83f: mov     (%r14),%rax
  0x00007fafb8c7d842: movzbl  0x1(%r13),%ebx
  0x00007fafb8c7d847: incq    %r13
  0x00007fafb8c7d84a: movabs  $0x7fafd89a7880,%r10
  0x00007fafb8c7d854: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7d858: add     %al,(%rax)
  0x00007fafb8c7d85a: add     %al,(%rax)
  0x00007fafb8c7d85c: add     %al,(%rax)
  0x00007fafb8c7d85e: add     %al,(%rax)

----------------------------------------------------------------------
fast_iaccess_0  221 fast_iaccess_0  [0x00007fafb8c7d880, 0x00007fafb8c7d900]  128 bytes

Argument 0 is unknown.RIP: 0x7fafb8c7d880 Code size: 0x00000080
  0x00007fafb8c7d880: push    %rax
  0x00007fafb8c7d881: jmpq    0x7fafb8c7d8bf
  0x00007fafb8c7d886: sub     $0x8,%rsp
  0x00007fafb8c7d88a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c7d88f: jmpq    0x7fafb8c7d8bf
  0x00007fafb8c7d894: sub     $0x10,%rsp
  0x00007fafb8c7d898: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c7d89d: jmpq    0x7fafb8c7d8bf
  0x00007fafb8c7d8a2: sub     $0x10,%rsp
  0x00007fafb8c7d8a6: mov     %rax,(%rsp)
  0x00007fafb8c7d8aa: movabs  $0x0,%r10
  0x00007fafb8c7d8b4: mov     %r10,0x8(%rsp)
  0x00007fafb8c7d8b9: jmpq    0x7fafb8c7d8bf
  0x00007fafb8c7d8be: push    %rax
  0x00007fafb8c7d8bf: mov     (%r14),%rax
  0x00007fafb8c7d8c2: movzwl  0x2(%r13),%edx
  0x00007fafb8c7d8c7: mov     0xffffffffffffffd0(%rbp),%rcx
  0x00007fafb8c7d8cb: shl     $0x2,%edx
  0x00007fafb8c7d8ce: mov     0x38(%rcx,%rdx,8),%rbx
  0x00007fafb8c7d8d3: incq    %r13
  0x00007fafb8c7d8d6: cmp     (%rax),%rax
  0x00007fafb8c7d8d9: mov     (%rax,%rbx),%eax
  0x00007fafb8c7d8dc: decq    %r13
  0x00007fafb8c7d8df: movzbl  0x4(%r13),%ebx
  0x00007fafb8c7d8e4: add     $0x4,%r13
  0x00007fafb8c7d8e8: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c7d8f2: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7d8f6: nop
  0x00007fafb8c7d8f8: add     %al,(%rax)
  0x00007fafb8c7d8fa: add     %al,(%rax)
  0x00007fafb8c7d8fc: add     %al,(%rax)
  0x00007fafb8c7d8fe: add     %al,(%rax)

----------------------------------------------------------------------
fast_aaccess_0  222 fast_aaccess_0  [0x00007fafb8c7d920, 0x00007fafb8c7d9a0]  128 bytes

Argument 0 is unknown.RIP: 0x7fafb8c7d920 Code size: 0x00000080
  0x00007fafb8c7d920: push    %rax
  0x00007fafb8c7d921: jmpq    0x7fafb8c7d95f
  0x00007fafb8c7d926: sub     $0x8,%rsp
  0x00007fafb8c7d92a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c7d92f: jmpq    0x7fafb8c7d95f
  0x00007fafb8c7d934: sub     $0x10,%rsp
  0x00007fafb8c7d938: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c7d93d: jmpq    0x7fafb8c7d95f
  0x00007fafb8c7d942: sub     $0x10,%rsp
  0x00007fafb8c7d946: mov     %rax,(%rsp)
  0x00007fafb8c7d94a: movabs  $0x0,%r10
  0x00007fafb8c7d954: mov     %r10,0x8(%rsp)
  0x00007fafb8c7d959: jmpq    0x7fafb8c7d95f
  0x00007fafb8c7d95e: push    %rax
  0x00007fafb8c7d95f: mov     (%r14),%rax
  0x00007fafb8c7d962: movzwl  0x2(%r13),%edx
  0x00007fafb8c7d967: mov     0xffffffffffffffd0(%rbp),%rcx
  0x00007fafb8c7d96b: shl     $0x2,%edx
  0x00007fafb8c7d96e: mov     0x38(%rcx,%rdx,8),%rbx
  0x00007fafb8c7d973: incq    %r13
  0x00007fafb8c7d976: cmp     (%rax),%rax
  0x00007fafb8c7d979: mov     (%rax,%rbx),%eax
  0x00007fafb8c7d97c: shl     $0x3,%rax
  0x00007fafb8c7d980: decq    %r13
  0x00007fafb8c7d983: movzbl  0x4(%r13),%ebx
  0x00007fafb8c7d988: add     $0x4,%r13
  0x00007fafb8c7d98c: movabs  $0x7fafd89a7880,%r10
  0x00007fafb8c7d996: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7d99a: nopw    0x0(%rax,%rax)

----------------------------------------------------------------------
fast_faccess_0  223 fast_faccess_0  [0x00007fafb8c7d9c0, 0x00007fafb8c7da40]  128 bytes

Argument 0 is unknown.RIP: 0x7fafb8c7d9c0 Code size: 0x00000080
  0x00007fafb8c7d9c0: push    %rax
  0x00007fafb8c7d9c1: jmpq    0x7fafb8c7d9ff
  0x00007fafb8c7d9c6: sub     $0x8,%rsp
  0x00007fafb8c7d9ca: vmovss  %xmm0,(%rsp)
  0x00007fafb8c7d9cf: jmpq    0x7fafb8c7d9ff
  0x00007fafb8c7d9d4: sub     $0x10,%rsp
  0x00007fafb8c7d9d8: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c7d9dd: jmpq    0x7fafb8c7d9ff
  0x00007fafb8c7d9e2: sub     $0x10,%rsp
  0x00007fafb8c7d9e6: mov     %rax,(%rsp)
  0x00007fafb8c7d9ea: movabs  $0x0,%r10
  0x00007fafb8c7d9f4: mov     %r10,0x8(%rsp)
  0x00007fafb8c7d9f9: jmpq    0x7fafb8c7d9ff
  0x00007fafb8c7d9fe: push    %rax
  0x00007fafb8c7d9ff: mov     (%r14),%rax
  0x00007fafb8c7da02: movzwl  0x2(%r13),%edx
  0x00007fafb8c7da07: mov     0xffffffffffffffd0(%rbp),%rcx
  0x00007fafb8c7da0b: shl     $0x2,%edx
  0x00007fafb8c7da0e: mov     0x38(%rcx,%rdx,8),%rbx
  0x00007fafb8c7da13: incq    %r13
  0x00007fafb8c7da16: cmp     (%rax),%rax
  0x00007fafb8c7da19: vmovss  (%rax,%rbx),%xmm0
  0x00007fafb8c7da1e: decq    %r13
  0x00007fafb8c7da21: movzbl  0x4(%r13),%ebx
  0x00007fafb8c7da26: add     $0x4,%r13
  0x00007fafb8c7da2a: movabs  $0x7fafd89a6880,%r10
  0x00007fafb8c7da34: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7da38: add     %al,(%rax)
  0x00007fafb8c7da3a: add     %al,(%rax)
  0x00007fafb8c7da3c: add     %al,(%rax)
  0x00007fafb8c7da3e: add     %al,(%rax)

----------------------------------------------------------------------
fast_iload  224 fast_iload  [0x00007fafb8c7da60, 0x00007fafb8c7dae0]  128 bytes

Argument 0 is unknown.RIP: 0x7fafb8c7da60 Code size: 0x00000080
  0x00007fafb8c7da60: push    %rax
  0x00007fafb8c7da61: jmpq    0x7fafb8c7da9f
  0x00007fafb8c7da66: sub     $0x8,%rsp
  0x00007fafb8c7da6a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c7da6f: jmpq    0x7fafb8c7da9f
  0x00007fafb8c7da74: sub     $0x10,%rsp
  0x00007fafb8c7da78: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c7da7d: jmpq    0x7fafb8c7da9f
  0x00007fafb8c7da82: sub     $0x10,%rsp
  0x00007fafb8c7da86: mov     %rax,(%rsp)
  0x00007fafb8c7da8a: movabs  $0x0,%r10
  0x00007fafb8c7da94: mov     %r10,0x8(%rsp)
  0x00007fafb8c7da99: jmpq    0x7fafb8c7da9f
  0x00007fafb8c7da9e: push    %rax
  0x00007fafb8c7da9f: movzbl  0x1(%r13),%ebx
  0x00007fafb8c7daa4: neg     %rbx
  0x00007fafb8c7daa7: mov     (%r14,%rbx,8),%eax
  0x00007fafb8c7daab: movzbl  0x2(%r13),%ebx
  0x00007fafb8c7dab0: add     $0x2,%r13
  0x00007fafb8c7dab4: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c7dabe: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7dac2: nopw    0x0(%rax,%rax)
  0x00007fafb8c7dac8: add     %al,(%rax)
  0x00007fafb8c7daca: add     %al,(%rax)
  0x00007fafb8c7dacc: add     %al,(%rax)
  0x00007fafb8c7dace: add     %al,(%rax)
  0x00007fafb8c7dad0: add     %al,(%rax)
  0x00007fafb8c7dad2: add     %al,(%rax)
  0x00007fafb8c7dad4: add     %al,(%rax)
  0x00007fafb8c7dad6: add     %al,(%rax)
  0x00007fafb8c7dad8: add     %al,(%rax)
  0x00007fafb8c7dada: add     %al,(%rax)
  0x00007fafb8c7dadc: add     %al,(%rax)
  0x00007fafb8c7dade: add     %al,(%rax)

----------------------------------------------------------------------
fast_iload2  225 fast_iload2  [0x00007fafb8c7db00, 0x00007fafb8c7db80]  128 bytes

Argument 0 is unknown.RIP: 0x7fafb8c7db00 Code size: 0x00000080
  0x00007fafb8c7db00: push    %rax
  0x00007fafb8c7db01: jmpq    0x7fafb8c7db3f
  0x00007fafb8c7db06: sub     $0x8,%rsp
  0x00007fafb8c7db0a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c7db0f: jmpq    0x7fafb8c7db3f
  0x00007fafb8c7db14: sub     $0x10,%rsp
  0x00007fafb8c7db18: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c7db1d: jmpq    0x7fafb8c7db3f
  0x00007fafb8c7db22: sub     $0x10,%rsp
  0x00007fafb8c7db26: mov     %rax,(%rsp)
  0x00007fafb8c7db2a: movabs  $0x0,%r10
  0x00007fafb8c7db34: mov     %r10,0x8(%rsp)
  0x00007fafb8c7db39: jmpq    0x7fafb8c7db3f
  0x00007fafb8c7db3e: push    %rax
  0x00007fafb8c7db3f: movzbl  0x1(%r13),%ebx
  0x00007fafb8c7db44: neg     %rbx
  0x00007fafb8c7db47: mov     (%r14,%rbx,8),%eax
  0x00007fafb8c7db4b: push    %rax
  0x00007fafb8c7db4c: movzbl  0x3(%r13),%ebx
  0x00007fafb8c7db51: neg     %rbx
  0x00007fafb8c7db54: mov     (%r14,%rbx,8),%eax
  0x00007fafb8c7db58: movzbl  0x4(%r13),%ebx
  0x00007fafb8c7db5d: add     $0x4,%r13
  0x00007fafb8c7db61: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c7db6b: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7db6f: nop
  0x00007fafb8c7db70: add     %al,(%rax)
  0x00007fafb8c7db72: add     %al,(%rax)
  0x00007fafb8c7db74: add     %al,(%rax)
  0x00007fafb8c7db76: add     %al,(%rax)
  0x00007fafb8c7db78: add     %al,(%rax)
  0x00007fafb8c7db7a: add     %al,(%rax)
  0x00007fafb8c7db7c: add     %al,(%rax)
  0x00007fafb8c7db7e: add     %al,(%rax)

----------------------------------------------------------------------
fast_icaload  226 fast_icaload  [0x00007fafb8c7dba0, 0x00007fafb8c7dc20]  128 bytes

Argument 0 is unknown.RIP: 0x7fafb8c7dba0 Code size: 0x00000080
  0x00007fafb8c7dba0: push    %rax
  0x00007fafb8c7dba1: jmpq    0x7fafb8c7dbdf
  0x00007fafb8c7dba6: sub     $0x8,%rsp
  0x00007fafb8c7dbaa: vmovss  %xmm0,(%rsp)
  0x00007fafb8c7dbaf: jmpq    0x7fafb8c7dbdf
  0x00007fafb8c7dbb4: sub     $0x10,%rsp
  0x00007fafb8c7dbb8: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c7dbbd: jmpq    0x7fafb8c7dbdf
  0x00007fafb8c7dbc2: sub     $0x10,%rsp
  0x00007fafb8c7dbc6: mov     %rax,(%rsp)
  0x00007fafb8c7dbca: movabs  $0x0,%r10
  0x00007fafb8c7dbd4: mov     %r10,0x8(%rsp)
  0x00007fafb8c7dbd9: jmpq    0x7fafb8c7dbdf
  0x00007fafb8c7dbde: push    %rax
  0x00007fafb8c7dbdf: movzbl  0x1(%r13),%ebx
  0x00007fafb8c7dbe4: neg     %rbx
  0x00007fafb8c7dbe7: mov     (%r14,%rbx,8),%eax
  0x00007fafb8c7dbeb: pop     %rdx
  0x00007fafb8c7dbec: movsxd  %eax,%rax
  0x00007fafb8c7dbef: cmp     0xc(%rdx),%eax
  0x00007fafb8c7dbf2: mov     %eax,%ebx
  0x00007fafb8c7dbf4: jb      0x7fafb8c7dbfe
  0x00007fafb8c7dbf6: mov     %rdx,%rsi
  0x00007fafb8c7dbf9: jmpq    0x7fafb8c6a060
  0x00007fafb8c7dbfe: movzwl  0x10(%rdx,%rax,2),%eax
  0x00007fafb8c7dc03: movzbl  0x3(%r13),%ebx
  0x00007fafb8c7dc08: add     $0x3,%r13
  0x00007fafb8c7dc0c: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c7dc16: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7dc1a: nopw    0x0(%rax,%rax)

----------------------------------------------------------------------
fast_invokevfinal  227 fast_invokevfinal  [0x00007fafb8c7dc40, 0x00007fafb8c7dd00]  192 bytes

Argument 0 is unknown.RIP: 0x7fafb8c7dc40 Code size: 0x000000c0
  0x00007fafb8c7dc40: push    %rax
  0x00007fafb8c7dc41: jmpq    0x7fafb8c7dc7f
  0x00007fafb8c7dc46: sub     $0x8,%rsp
  0x00007fafb8c7dc4a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c7dc4f: jmpq    0x7fafb8c7dc7f
  0x00007fafb8c7dc54: sub     $0x10,%rsp
  0x00007fafb8c7dc58: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c7dc5d: jmpq    0x7fafb8c7dc7f
  0x00007fafb8c7dc62: sub     $0x10,%rsp
  0x00007fafb8c7dc66: mov     %rax,(%rsp)
  0x00007fafb8c7dc6a: movabs  $0x0,%r10
  0x00007fafb8c7dc74: mov     %r10,0x8(%rsp)
  0x00007fafb8c7dc79: jmpq    0x7fafb8c7dc7f
  0x00007fafb8c7dc7e: push    %rax
  0x00007fafb8c7dc7f: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c7dc84: sub     $0x80,%rsp
  0x00007fafb8c7dc8b: mov     %rax,0x78(%rsp)
  0x00007fafb8c7dc90: mov     %rcx,0x70(%rsp)
  0x00007fafb8c7dc95: mov     %rdx,0x68(%rsp)
  0x00007fafb8c7dc9a: mov     %rbx,0x60(%rsp)
  0x00007fafb8c7dc9f: mov     %rbp,0x50(%rsp)
  0x00007fafb8c7dca4: mov     %rsi,0x48(%rsp)
  0x00007fafb8c7dca9: mov     %rdi,0x40(%rsp)
  0x00007fafb8c7dcae: mov     %r8,0x38(%rsp)
  0x00007fafb8c7dcb3: mov     %r9,0x30(%rsp)
  0x00007fafb8c7dcb8: mov     %r10,0x28(%rsp)
  0x00007fafb8c7dcbd: mov     %r11,0x20(%rsp)
  0x00007fafb8c7dcc2: mov     %r12,0x18(%rsp)
  0x00007fafb8c7dcc7: mov     %r13,0x10(%rsp)
  0x00007fafb8c7dccc: mov     %r14,0x8(%rsp)
  0x00007fafb8c7dcd1: mov     %r15,(%rsp)
  0x00007fafb8c7dcd5: movabs  $0x7fafd8461968,%rdi
  0x00007fafb8c7dcdf: movabs  $0x7fafb8c7dc7f,%rsi
  0x00007fafb8c7dce9: mov     %rsp,%rdx
  0x00007fafb8c7dcec: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c7dcf0: callq   0x7fafd7fdd230
  0x00007fafb8c7dcf5: hlt
  0x00007fafb8c7dcf6: nop
  0x00007fafb8c7dcf8: add     %al,(%rax)
  0x00007fafb8c7dcfa: add     %al,(%rax)
  0x00007fafb8c7dcfc: add     %al,(%rax)
  0x00007fafb8c7dcfe: add     %al,(%rax)

----------------------------------------------------------------------
fast_linearswitch  228 fast_linearswitch  [0x00007fafb8c7dd20, 0x00007fafb8c7dde0]  192 bytes

Argument 0 is unknown.RIP: 0x7fafb8c7dd20 Code size: 0x000000c0
  0x00007fafb8c7dd20: mov     (%rsp),%eax
  0x00007fafb8c7dd23: add     $0x8,%rsp
  0x00007fafb8c7dd27: bswap   %eax
  0x00007fafb8c7dd29: lea     0x4(%r13),%rbx
  0x00007fafb8c7dd2d: and     $0xfffffffffffffffc,%rbx
  0x00007fafb8c7dd31: mov     0x4(%rbx),%ecx
  0x00007fafb8c7dd34: bswap   %ecx
  0x00007fafb8c7dd36: jmp     0x7fafb8c7dd42
  0x00007fafb8c7dd38: cmp     0x8(%rbx,%rcx,8),%eax
  0x00007fafb8c7dd3c: je      0x7fafb8c7dd6c
  0x00007fafb8c7dd42: decl    %ecx
  0x00007fafb8c7dd44: jnl     0x7fafb8c7dd38
  0x00007fafb8c7dd46: mov     0xffffffffffffffd8(%rbp),%rax
  0x00007fafb8c7dd4a: test    %rax,%rax
  0x00007fafb8c7dd4d: je      0x7fafb8c7dd65
  0x00007fafb8c7dd53: addq    $0x1,0x10(%rax)
  0x00007fafb8c7dd58: sbbq    $0x0,0x10(%rax)
  0x00007fafb8c7dd5d: add     0x18(%rax),%rax
  0x00007fafb8c7dd61: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c7dd65: mov     (%rbx),%edx
  0x00007fafb8c7dd67: jmpq    0x7fafb8c7dd9d
  0x00007fafb8c7dd6c: mov     0xc(%rbx,%rcx,8),%edx
  0x00007fafb8c7dd70: mov     0xffffffffffffffd8(%rbp),%rax
  0x00007fafb8c7dd74: test    %rax,%rax
  0x00007fafb8c7dd77: je      0x7fafb8c7dd9d
  0x00007fafb8c7dd7d: mov     $0x10,%ebx
  0x00007fafb8c7dd82: imulq   %rbx,%rcx
  0x00007fafb8c7dd86: add     $0x20,%rcx
  0x00007fafb8c7dd8a: addq    $0x1,(%rax,%rcx)
  0x00007fafb8c7dd8f: sbbq    $0x0,(%rax,%rcx)
  0x00007fafb8c7dd94: add     0x8(%rax,%rcx),%rax
  0x00007fafb8c7dd99: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c7dd9d: bswap   %edx
  0x00007fafb8c7dd9f: movsxd  %edx,%rdx
  0x00007fafb8c7dda2: movzbl  0x0(%r13,%rdx),%ebx
  0x00007fafb8c7dda8: add     %rdx,%r13
  0x00007fafb8c7ddab: testb   $0x8,0x108(%r15)
  0x00007fafb8c7ddb3: je      0x7fafb8c7ddc1
  0x00007fafb8c7ddb5: movabs  $0x7fafd899e080,%r10
  0x00007fafb8c7ddbf: jmp     0x7fafb8c7ddcb
  0x00007fafb8c7ddc1: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c7ddcb: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7ddcf: nop
  0x00007fafb8c7ddd0: add     %al,(%rax)
  0x00007fafb8c7ddd2: add     %al,(%rax)
  0x00007fafb8c7ddd4: add     %al,(%rax)
  0x00007fafb8c7ddd6: add     %al,(%rax)
  0x00007fafb8c7ddd8: add     %al,(%rax)
  0x00007fafb8c7ddda: add     %al,(%rax)
  0x00007fafb8c7dddc: add     %al,(%rax)
  0x00007fafb8c7ddde: add     %al,(%rax)

----------------------------------------------------------------------
fast_binaryswitch  229 fast_binaryswitch  [0x00007fafb8c7de00, 0x00007fafb8c7df00]  256 bytes

Argument 0 is unknown.RIP: 0x7fafb8c7de00 Code size: 0x00000100
  0x00007fafb8c7de00: mov     (%rsp),%eax
  0x00007fafb8c7de03: add     $0x8,%rsp
  0x00007fafb8c7de07: lea     0xc(%r13),%rbx
  0x00007fafb8c7de0b: and     $0xfffffffffffffffc,%rbx
  0x00007fafb8c7de0f: xor     %ecx,%ecx
  0x00007fafb8c7de11: mov     0xfffffffffffffffc(%rbx),%edx
  0x00007fafb8c7de14: bswap   %edx
  0x00007fafb8c7de16: jmpq    0x7fafb8c7de2e
  0x00007fafb8c7de1b: lea     (%ecx,%edx),%edi
  0x00007fafb8c7de1f: sar     $0x1,%edi
  0x00007fafb8c7de21: mov     (%rbx,%rdi,8),%esi
  0x00007fafb8c7de24: bswap   %esi
  0x00007fafb8c7de26: cmp     %esi,%eax
  0x00007fafb8c7de28: cmovl   %edi,%edx
  0x00007fafb8c7de2b: cmovnl  %edi,%ecx
  0x00007fafb8c7de2e: lea     0x1(%ecx),%edi
  0x00007fafb8c7de32: cmp     %edx,%edi
  0x00007fafb8c7de34: jl      0x7fafb8c7de1b
  0x00007fafb8c7de36: mov     (%rbx,%rcx,8),%esi
  0x00007fafb8c7de39: bswap   %esi
  0x00007fafb8c7de3b: cmp     %esi,%eax
  0x00007fafb8c7de3d: jne     0x7fafb8c7dea6
  0x00007fafb8c7de43: mov     0x4(%rbx,%rcx,8),%edx
  0x00007fafb8c7de47: mov     0xffffffffffffffd8(%rbp),%rax
  0x00007fafb8c7de4b: test    %rax,%rax
  0x00007fafb8c7de4e: je      0x7fafb8c7de74
  0x00007fafb8c7de54: mov     $0x10,%ebx
  0x00007fafb8c7de59: imulq   %rbx,%rcx
  0x00007fafb8c7de5d: add     $0x20,%rcx
  0x00007fafb8c7de61: addq    $0x1,(%rax,%rcx)
  0x00007fafb8c7de66: sbbq    $0x0,(%rax,%rcx)
  0x00007fafb8c7de6b: add     0x8(%rax,%rcx),%rax
  0x00007fafb8c7de70: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c7de74: bswap   %edx
  0x00007fafb8c7de76: movsxd  %edx,%rdx
  0x00007fafb8c7de79: movzbl  0x0(%r13,%rdx),%ebx
  0x00007fafb8c7de7f: add     %rdx,%r13
  0x00007fafb8c7de82: testb   $0x8,0x108(%r15)
  0x00007fafb8c7de8a: je      0x7fafb8c7de98
  0x00007fafb8c7de8c: movabs  $0x7fafd899e080,%r10
  0x00007fafb8c7de96: jmp     0x7fafb8c7dea2
  0x00007fafb8c7de98: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c7dea2: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7dea6: mov     0xffffffffffffffd8(%rbp),%rcx
  0x00007fafb8c7deaa: test    %rcx,%rcx
  0x00007fafb8c7dead: je      0x7fafb8c7dec5
  0x00007fafb8c7deb3: addq    $0x1,0x10(%rcx)
  0x00007fafb8c7deb8: sbbq    $0x0,0x10(%rcx)
  0x00007fafb8c7debd: add     0x18(%rcx),%rcx
  0x00007fafb8c7dec1: mov     %rcx,0xffffffffffffffd8(%rbp)
  0x00007fafb8c7dec5: mov     0xfffffffffffffff8(%rbx),%edx
  0x00007fafb8c7dec8: bswap   %edx
  0x00007fafb8c7deca: movsxd  %edx,%rdx
  0x00007fafb8c7decd: movzbl  0x0(%r13,%rdx),%ebx
  0x00007fafb8c7ded3: add     %rdx,%r13
  0x00007fafb8c7ded6: testb   $0x8,0x108(%r15)
  0x00007fafb8c7dede: je      0x7fafb8c7deec
  0x00007fafb8c7dee0: movabs  $0x7fafd899e080,%r10
  0x00007fafb8c7deea: jmp     0x7fafb8c7def6
  0x00007fafb8c7deec: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c7def6: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7defa: nopw    0x0(%rax,%rax)

----------------------------------------------------------------------
fast_aldc  230 fast_aldc  [0x00007fafb8c7df20, 0x00007fafb8c7e080]  352 bytes

Argument 0 is unknown.RIP: 0x7fafb8c7df20 Code size: 0x00000160
  0x00007fafb8c7df20: push    %rax
  0x00007fafb8c7df21: jmpq    0x7fafb8c7df5f
  0x00007fafb8c7df26: sub     $0x8,%rsp
  0x00007fafb8c7df2a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c7df2f: jmpq    0x7fafb8c7df5f
  0x00007fafb8c7df34: sub     $0x10,%rsp
  0x00007fafb8c7df38: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c7df3d: jmpq    0x7fafb8c7df5f
  0x00007fafb8c7df42: sub     $0x10,%rsp
  0x00007fafb8c7df46: mov     %rax,(%rsp)
  0x00007fafb8c7df4a: movabs  $0x0,%r10
  0x00007fafb8c7df54: mov     %r10,0x8(%rsp)
  0x00007fafb8c7df59: jmpq    0x7fafb8c7df5f
  0x00007fafb8c7df5e: push    %rax
  0x00007fafb8c7df5f: movzbl  0x1(%r13),%edx
  0x00007fafb8c7df64: mov     0xffffffffffffffe8(%rbp),%rax
  0x00007fafb8c7df68: mov     0x8(%rax),%rax
  0x00007fafb8c7df6c: mov     0x8(%rax),%rax
  0x00007fafb8c7df70: mov     0x10(%rax),%rax
  0x00007fafb8c7df74: mov     0x10(%rax),%rax
  0x00007fafb8c7df78: mov     (%rax),%rax
  0x00007fafb8c7df7b: mov     0x10(%rax,%rdx,4),%eax
  0x00007fafb8c7df7f: shl     $0x3,%rax
  0x00007fafb8c7df83: test    %rax,%rax
  0x00007fafb8c7df86: jne     0x7fafb8c7e045
  0x00007fafb8c7df8c: mov     $0xe6,%esi
  0x00007fafb8c7df91: callq   0x7fafb8c7df9b
  0x00007fafb8c7df96: jmpq    0x7fafb8c7e045
  0x00007fafb8c7df9b: lea     0x8(%rsp),%rax
  0x00007fafb8c7dfa0: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7dfa4: mov     %r15,%rdi
  0x00007fafb8c7dfa7: vzeroupper
  0x00007fafb8c7dfaa: mov     %rbp,0x330(%r15)
  0x00007fafb8c7dfb1: mov     %rax,0x320(%r15)
  0x00007fafb8c7dfb8: test    $0xf,%esp
  0x00007fafb8c7dfbe: je      0x7fafb8c7dfd6
  0x00007fafb8c7dfc4: sub     $0x8,%rsp
  0x00007fafb8c7dfc8: callq   0x7fafd7d7ceb0
  0x00007fafb8c7dfcd: add     $0x8,%rsp
  0x00007fafb8c7dfd1: jmpq    0x7fafb8c7dfdb
  0x00007fafb8c7dfd6: callq   0x7fafd7d7ceb0
  0x00007fafb8c7dfdb: movabs  $0x0,%r10
  0x00007fafb8c7dfe5: mov     %r10,0x320(%r15)
  0x00007fafb8c7dfec: movabs  $0x0,%r10
  0x00007fafb8c7dff6: mov     %r10,0x330(%r15)
  0x00007fafb8c7dffd: movabs  $0x0,%r10
  0x00007fafb8c7e007: mov     %r10,0x328(%r15)
  0x00007fafb8c7e00e: vzeroupper
  0x00007fafb8c7e011: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7e019: je      0x7fafb8c7e024
  0x00007fafb8c7e01f: jmpq    0x7fafb8c5c780
  0x00007fafb8c7e024: mov     0x380(%r15),%rax
  0x00007fafb8c7e02b: movabs  $0x0,%r10
  0x00007fafb8c7e035: mov     %r10,0x380(%r15)
  0x00007fafb8c7e03c: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7e040: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7e044: retq
  0x00007fafb8c7e045: mov     0x1fd315fc(%rip),%rdx
  0x00007fafb8c7e04c: cmp     %rax,%rdx
  0x00007fafb8c7e04f: jne     0x7fafb8c7e054
  0x00007fafb8c7e051: xor     %rax,%rax
  0x00007fafb8c7e054: movzbl  0x2(%r13),%ebx
  0x00007fafb8c7e059: add     $0x2,%r13
  0x00007fafb8c7e05d: movabs  $0x7fafd89a7880,%r10
  0x00007fafb8c7e067: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7e06b: nopl    0x0(%rax,%rax)
  0x00007fafb8c7e070: add     %al,(%rax)
  0x00007fafb8c7e072: add     %al,(%rax)
  0x00007fafb8c7e074: add     %al,(%rax)
  0x00007fafb8c7e076: add     %al,(%rax)
  0x00007fafb8c7e078: add     %al,(%rax)
  0x00007fafb8c7e07a: add     %al,(%rax)
  0x00007fafb8c7e07c: add     %al,(%rax)
  0x00007fafb8c7e07e: add     %al,(%rax)

----------------------------------------------------------------------
fast_aldc_w  231 fast_aldc_w  [0x00007fafb8c7e0a0, 0x00007fafb8c7e200]  352 bytes

Argument 0 is unknown.RIP: 0x7fafb8c7e0a0 Code size: 0x00000160
  0x00007fafb8c7e0a0: push    %rax
  0x00007fafb8c7e0a1: jmpq    0x7fafb8c7e0df
  0x00007fafb8c7e0a6: sub     $0x8,%rsp
  0x00007fafb8c7e0aa: vmovss  %xmm0,(%rsp)
  0x00007fafb8c7e0af: jmpq    0x7fafb8c7e0df
  0x00007fafb8c7e0b4: sub     $0x10,%rsp
  0x00007fafb8c7e0b8: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c7e0bd: jmpq    0x7fafb8c7e0df
  0x00007fafb8c7e0c2: sub     $0x10,%rsp
  0x00007fafb8c7e0c6: mov     %rax,(%rsp)
  0x00007fafb8c7e0ca: movabs  $0x0,%r10
  0x00007fafb8c7e0d4: mov     %r10,0x8(%rsp)
  0x00007fafb8c7e0d9: jmpq    0x7fafb8c7e0df
  0x00007fafb8c7e0de: push    %rax
  0x00007fafb8c7e0df: movzwl  0x1(%r13),%edx
  0x00007fafb8c7e0e4: mov     0xffffffffffffffe8(%rbp),%rax
  0x00007fafb8c7e0e8: mov     0x8(%rax),%rax
  0x00007fafb8c7e0ec: mov     0x8(%rax),%rax
  0x00007fafb8c7e0f0: mov     0x10(%rax),%rax
  0x00007fafb8c7e0f4: mov     0x10(%rax),%rax
  0x00007fafb8c7e0f8: mov     (%rax),%rax
  0x00007fafb8c7e0fb: mov     0x10(%rax,%rdx,4),%eax
  0x00007fafb8c7e0ff: shl     $0x3,%rax
  0x00007fafb8c7e103: test    %rax,%rax
  0x00007fafb8c7e106: jne     0x7fafb8c7e1c5
  0x00007fafb8c7e10c: mov     $0xe7,%esi
  0x00007fafb8c7e111: callq   0x7fafb8c7e11b
  0x00007fafb8c7e116: jmpq    0x7fafb8c7e1c5
  0x00007fafb8c7e11b: lea     0x8(%rsp),%rax
  0x00007fafb8c7e120: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7e124: mov     %r15,%rdi
  0x00007fafb8c7e127: vzeroupper
  0x00007fafb8c7e12a: mov     %rbp,0x330(%r15)
  0x00007fafb8c7e131: mov     %rax,0x320(%r15)
  0x00007fafb8c7e138: test    $0xf,%esp
  0x00007fafb8c7e13e: je      0x7fafb8c7e156
  0x00007fafb8c7e144: sub     $0x8,%rsp
  0x00007fafb8c7e148: callq   0x7fafd7d7ceb0
  0x00007fafb8c7e14d: add     $0x8,%rsp
  0x00007fafb8c7e151: jmpq    0x7fafb8c7e15b
  0x00007fafb8c7e156: callq   0x7fafd7d7ceb0
  0x00007fafb8c7e15b: movabs  $0x0,%r10
  0x00007fafb8c7e165: mov     %r10,0x320(%r15)
  0x00007fafb8c7e16c: movabs  $0x0,%r10
  0x00007fafb8c7e176: mov     %r10,0x330(%r15)
  0x00007fafb8c7e17d: movabs  $0x0,%r10
  0x00007fafb8c7e187: mov     %r10,0x328(%r15)
  0x00007fafb8c7e18e: vzeroupper
  0x00007fafb8c7e191: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7e199: je      0x7fafb8c7e1a4
  0x00007fafb8c7e19f: jmpq    0x7fafb8c5c780
  0x00007fafb8c7e1a4: mov     0x380(%r15),%rax
  0x00007fafb8c7e1ab: movabs  $0x0,%r10
  0x00007fafb8c7e1b5: mov     %r10,0x380(%r15)
  0x00007fafb8c7e1bc: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7e1c0: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7e1c4: retq
  0x00007fafb8c7e1c5: mov     0x1fd3147c(%rip),%rdx
  0x00007fafb8c7e1cc: cmp     %rax,%rdx
  0x00007fafb8c7e1cf: jne     0x7fafb8c7e1d4
  0x00007fafb8c7e1d1: xor     %rax,%rax
  0x00007fafb8c7e1d4: movzbl  0x3(%r13),%ebx
  0x00007fafb8c7e1d9: add     $0x3,%r13
  0x00007fafb8c7e1dd: movabs  $0x7fafd89a7880,%r10
  0x00007fafb8c7e1e7: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7e1eb: nopl    0x0(%rax,%rax)
  0x00007fafb8c7e1f0: add     %al,(%rax)
  0x00007fafb8c7e1f2: add     %al,(%rax)
  0x00007fafb8c7e1f4: add     %al,(%rax)
  0x00007fafb8c7e1f6: add     %al,(%rax)
  0x00007fafb8c7e1f8: add     %al,(%rax)
  0x00007fafb8c7e1fa: add     %al,(%rax)
  0x00007fafb8c7e1fc: add     %al,(%rax)
  0x00007fafb8c7e1fe: add     %al,(%rax)

----------------------------------------------------------------------
return_register_finalizer  232 return_register_finalizer  [0x00007fafb8c7e220, 0x00007fafb8c7e840]  1568 bytes

Argument 0 is unknown.RIP: 0x7fafb8c7e220 Code size: 0x00000620
  0x00007fafb8c7e220: push    %rax
  0x00007fafb8c7e221: jmpq    0x7fafb8c7e25f
  0x00007fafb8c7e226: sub     $0x8,%rsp
  0x00007fafb8c7e22a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c7e22f: jmpq    0x7fafb8c7e25f
  0x00007fafb8c7e234: sub     $0x10,%rsp
  0x00007fafb8c7e238: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c7e23d: jmpq    0x7fafb8c7e25f
  0x00007fafb8c7e242: sub     $0x10,%rsp
  0x00007fafb8c7e246: mov     %rax,(%rsp)
  0x00007fafb8c7e24a: movabs  $0x0,%r10
  0x00007fafb8c7e254: mov     %r10,0x8(%rsp)
  0x00007fafb8c7e259: jmpq    0x7fafb8c7e25f
  0x00007fafb8c7e25e: push    %rax
  0x00007fafb8c7e25f: mov     (%r14),%rsi
  0x00007fafb8c7e262: mov     0x8(%rsi),%edi
  0x00007fafb8c7e265: movabs  $0x800000000,%r12
  0x00007fafb8c7e26f: add     %r12,%rdi
  0x00007fafb8c7e272: xor     %r12,%r12
  0x00007fafb8c7e275: mov     0xa4(%rdi),%edi
  0x00007fafb8c7e27b: test    $0x40000000,%edi
  0x00007fafb8c7e281: je      0x7fafb8c7e323
  0x00007fafb8c7e287: callq   0x7fafb8c7e291
  0x00007fafb8c7e28c: jmpq    0x7fafb8c7e323
  0x00007fafb8c7e291: lea     0x8(%rsp),%rax
  0x00007fafb8c7e296: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7e29a: mov     %r15,%rdi
  0x00007fafb8c7e29d: vzeroupper
  0x00007fafb8c7e2a0: mov     %rbp,0x330(%r15)
  0x00007fafb8c7e2a7: mov     %rax,0x320(%r15)
  0x00007fafb8c7e2ae: test    $0xf,%esp
  0x00007fafb8c7e2b4: je      0x7fafb8c7e2cc
  0x00007fafb8c7e2ba: sub     $0x8,%rsp
  0x00007fafb8c7e2be: callq   0x7fafd7d7e3d0
  0x00007fafb8c7e2c3: add     $0x8,%rsp
  0x00007fafb8c7e2c7: jmpq    0x7fafb8c7e2d1
  0x00007fafb8c7e2cc: callq   0x7fafd7d7e3d0
  0x00007fafb8c7e2d1: movabs  $0x0,%r10
  0x00007fafb8c7e2db: mov     %r10,0x320(%r15)
  0x00007fafb8c7e2e2: movabs  $0x0,%r10
  0x00007fafb8c7e2ec: mov     %r10,0x330(%r15)
  0x00007fafb8c7e2f3: movabs  $0x0,%r10
  0x00007fafb8c7e2fd: mov     %r10,0x328(%r15)
  0x00007fafb8c7e304: vzeroupper
  0x00007fafb8c7e307: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7e30f: je      0x7fafb8c7e31a
  0x00007fafb8c7e315: jmpq    0x7fafb8c5c780
  0x00007fafb8c7e31a: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7e31e: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7e322: retq
  0x00007fafb8c7e323: mov     0x3dd(%r15),%bl
  0x00007fafb8c7e32a: movb    $0x0,0x3dd(%r15)
  0x00007fafb8c7e332: mov     0xffffffffffffffe8(%rbp),%rcx
  0x00007fafb8c7e336: mov     0x20(%rcx),%ecx
  0x00007fafb8c7e339: test    $0x20,%ecx
  0x00007fafb8c7e33f: je      0x7fafb8c7e551
  0x00007fafb8c7e345: testb   $0xff,%bl
  0x00007fafb8c7e348: jne     0x7fafb8c7e688
  0x00007fafb8c7e34e: lea     0xffffffffffffffa8(%rbp),%rsi
  0x00007fafb8c7e352: mov     0x8(%rsi),%rax
  0x00007fafb8c7e356: test    %rax,%rax
  0x00007fafb8c7e359: jne     0x7fafb8c7e472
  0x00007fafb8c7e35f: callq   0x7fafb8c7e369
  0x00007fafb8c7e364: jmpq    0x7fafb8c7e3fb
  0x00007fafb8c7e369: lea     0x8(%rsp),%rax
  0x00007fafb8c7e36e: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7e372: mov     %r15,%rdi
  0x00007fafb8c7e375: vzeroupper
  0x00007fafb8c7e378: mov     %rbp,0x330(%r15)
  0x00007fafb8c7e37f: mov     %rax,0x320(%r15)
  0x00007fafb8c7e386: test    $0xf,%esp
  0x00007fafb8c7e38c: je      0x7fafb8c7e3a4
  0x00007fafb8c7e392: sub     $0x8,%rsp
  0x00007fafb8c7e396: callq   0x7fafd7d826a0
  0x00007fafb8c7e39b: add     $0x8,%rsp
  0x00007fafb8c7e39f: jmpq    0x7fafb8c7e3a9
  0x00007fafb8c7e3a4: callq   0x7fafd7d826a0
  0x00007fafb8c7e3a9: movabs  $0x0,%r10
  0x00007fafb8c7e3b3: mov     %r10,0x320(%r15)
  0x00007fafb8c7e3ba: movabs  $0x0,%r10
  0x00007fafb8c7e3c4: mov     %r10,0x330(%r15)
  0x00007fafb8c7e3cb: movabs  $0x0,%r10
  0x00007fafb8c7e3d5: mov     %r10,0x328(%r15)
  0x00007fafb8c7e3dc: vzeroupper
  0x00007fafb8c7e3df: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7e3e7: je      0x7fafb8c7e3f2
  0x00007fafb8c7e3ed: jmpq    0x7fafb8c5c780
  0x00007fafb8c7e3f2: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7e3f6: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7e3fa: retq
  0x00007fafb8c7e3fb: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c7e400: sub     $0x80,%rsp
  0x00007fafb8c7e407: mov     %rax,0x78(%rsp)
  0x00007fafb8c7e40c: mov     %rcx,0x70(%rsp)
  0x00007fafb8c7e411: mov     %rdx,0x68(%rsp)
  0x00007fafb8c7e416: mov     %rbx,0x60(%rsp)
  0x00007fafb8c7e41b: mov     %rbp,0x50(%rsp)
  0x00007fafb8c7e420: mov     %rsi,0x48(%rsp)
  0x00007fafb8c7e425: mov     %rdi,0x40(%rsp)
  0x00007fafb8c7e42a: mov     %r8,0x38(%rsp)
  0x00007fafb8c7e42f: mov     %r9,0x30(%rsp)
  0x00007fafb8c7e434: mov     %r10,0x28(%rsp)
  0x00007fafb8c7e439: mov     %r11,0x20(%rsp)
  0x00007fafb8c7e43e: mov     %r12,0x18(%rsp)
  0x00007fafb8c7e443: mov     %r13,0x10(%rsp)
  0x00007fafb8c7e448: mov     %r14,0x8(%rsp)
  0x00007fafb8c7e44d: mov     %r15,(%rsp)
  0x00007fafb8c7e451: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c7e45b: movabs  $0x7fafb8c7e3fb,%rsi
  0x00007fafb8c7e465: mov     %rsp,%rdx
  0x00007fafb8c7e468: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c7e46c: callq   0x7fafd7fdd230
  0x00007fafb8c7e471: hlt
  0x00007fafb8c7e472: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7e476: lea     (%rsi),%rax
  0x00007fafb8c7e479: mov     0x8(%rsi),%rcx
  0x00007fafb8c7e47d: movq    $0x0,0x8(%rsi)
  0x00007fafb8c7e485: mov     (%rcx),%rdx
  0x00007fafb8c7e488: and     $0x7,%rdx
  0x00007fafb8c7e48c: cmp     $0x5,%rdx
  0x00007fafb8c7e490: je      0x7fafb8c7e54d
  0x00007fafb8c7e496: mov     (%rax),%rdx
  0x00007fafb8c7e499: test    %rdx,%rdx
  0x00007fafb8c7e49c: je      0x7fafb8c7e54d
  0x00007fafb8c7e4a2: lock cmpxchg %rdx,(%rcx)
  0x00007fafb8c7e4a7: je      0x7fafb8c7e54d
  0x00007fafb8c7e4ad: mov     %rcx,0x8(%rsi)
  0x00007fafb8c7e4b1: callq   0x7fafb8c7e4bb
  0x00007fafb8c7e4b6: jmpq    0x7fafb8c7e54d
  0x00007fafb8c7e4bb: lea     0x8(%rsp),%rax
  0x00007fafb8c7e4c0: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7e4c4: mov     %r15,%rdi
  0x00007fafb8c7e4c7: vzeroupper
  0x00007fafb8c7e4ca: mov     %rbp,0x330(%r15)
  0x00007fafb8c7e4d1: mov     %rax,0x320(%r15)
  0x00007fafb8c7e4d8: test    $0xf,%esp
  0x00007fafb8c7e4de: je      0x7fafb8c7e4f6
  0x00007fafb8c7e4e4: sub     $0x8,%rsp
  0x00007fafb8c7e4e8: callq   0x7fafd7d82470
  0x00007fafb8c7e4ed: add     $0x8,%rsp
  0x00007fafb8c7e4f1: jmpq    0x7fafb8c7e4fb
  0x00007fafb8c7e4f6: callq   0x7fafd7d82470
  0x00007fafb8c7e4fb: movabs  $0x0,%r10
  0x00007fafb8c7e505: mov     %r10,0x320(%r15)
  0x00007fafb8c7e50c: movabs  $0x0,%r10
  0x00007fafb8c7e516: mov     %r10,0x330(%r15)
  0x00007fafb8c7e51d: movabs  $0x0,%r10
  0x00007fafb8c7e527: mov     %r10,0x328(%r15)
  0x00007fafb8c7e52e: vzeroupper
  0x00007fafb8c7e531: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7e539: je      0x7fafb8c7e544
  0x00007fafb8c7e53f: jmpq    0x7fafb8c5c780
  0x00007fafb8c7e544: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7e548: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7e54c: retq
  0x00007fafb8c7e54d: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7e551: mov     0xffffffffffffffb8(%rbp),%rsi
  0x00007fafb8c7e555: lea     0xffffffffffffffb8(%rbp),%rbx
  0x00007fafb8c7e559: jmpq    0x7fafb8c7e683
  0x00007fafb8c7e55e: callq   0x7fafb8c7e568
  0x00007fafb8c7e563: jmpq    0x7fafb8c7e5fa
  0x00007fafb8c7e568: lea     0x8(%rsp),%rax
  0x00007fafb8c7e56d: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7e571: mov     %r15,%rdi
  0x00007fafb8c7e574: vzeroupper
  0x00007fafb8c7e577: mov     %rbp,0x330(%r15)
  0x00007fafb8c7e57e: mov     %rax,0x320(%r15)
  0x00007fafb8c7e585: test    $0xf,%esp
  0x00007fafb8c7e58b: je      0x7fafb8c7e5a3
  0x00007fafb8c7e591: sub     $0x8,%rsp
  0x00007fafb8c7e595: callq   0x7fafd7d826a0
  0x00007fafb8c7e59a: add     $0x8,%rsp
  0x00007fafb8c7e59e: jmpq    0x7fafb8c7e5a8
  0x00007fafb8c7e5a3: callq   0x7fafd7d826a0
  0x00007fafb8c7e5a8: movabs  $0x0,%r10
  0x00007fafb8c7e5b2: mov     %r10,0x320(%r15)
  0x00007fafb8c7e5b9: movabs  $0x0,%r10
  0x00007fafb8c7e5c3: mov     %r10,0x330(%r15)
  0x00007fafb8c7e5ca: movabs  $0x0,%r10
  0x00007fafb8c7e5d4: mov     %r10,0x328(%r15)
  0x00007fafb8c7e5db: vzeroupper
  0x00007fafb8c7e5de: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7e5e6: je      0x7fafb8c7e5f1
  0x00007fafb8c7e5ec: jmpq    0x7fafb8c5c780
  0x00007fafb8c7e5f1: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7e5f5: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7e5f9: retq
  0x00007fafb8c7e5fa: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c7e5ff: sub     $0x80,%rsp
  0x00007fafb8c7e606: mov     %rax,0x78(%rsp)
  0x00007fafb8c7e60b: mov     %rcx,0x70(%rsp)
  0x00007fafb8c7e610: mov     %rdx,0x68(%rsp)
  0x00007fafb8c7e615: mov     %rbx,0x60(%rsp)
  0x00007fafb8c7e61a: mov     %rbp,0x50(%rsp)
  0x00007fafb8c7e61f: mov     %rsi,0x48(%rsp)
  0x00007fafb8c7e624: mov     %rdi,0x40(%rsp)
  0x00007fafb8c7e629: mov     %r8,0x38(%rsp)
  0x00007fafb8c7e62e: mov     %r9,0x30(%rsp)
  0x00007fafb8c7e633: mov     %r10,0x28(%rsp)
  0x00007fafb8c7e638: mov     %r11,0x20(%rsp)
  0x00007fafb8c7e63d: mov     %r12,0x18(%rsp)
  0x00007fafb8c7e642: mov     %r13,0x10(%rsp)
  0x00007fafb8c7e647: mov     %r14,0x8(%rsp)
  0x00007fafb8c7e64c: mov     %r15,(%rsp)
  0x00007fafb8c7e650: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c7e65a: movabs  $0x7fafb8c7e5fa,%rsi
  0x00007fafb8c7e664: mov     %rsp,%rdx
  0x00007fafb8c7e667: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c7e66b: callq   0x7fafd7fdd230
  0x00007fafb8c7e670: hlt
  0x00007fafb8c7e671: cmpq    $0x0,0x8(%rsi)
  0x00007fafb8c7e679: jne     0x7fafb8c7e55e
  0x00007fafb8c7e67f: add     $0x10,%rsi
  0x00007fafb8c7e683: cmp     %rbx,%rsi
  0x00007fafb8c7e686: jne     0x7fafb8c7e671
  0x00007fafb8c7e688: cmpb    $0x0,0x1fcf9608(%rip)
  0x00007fafb8c7e68f: je      0x7fafb8c7e6bf
  0x00007fafb8c7e695: mov     0xffffffffffffffe8(%rbp),%rsi
  0x00007fafb8c7e699: mov     %r15,%rdi
  0x00007fafb8c7e69c: test    $0xf,%esp
  0x00007fafb8c7e6a2: je      0x7fafb8c7e6ba
  0x00007fafb8c7e6a8: sub     $0x8,%rsp
  0x00007fafb8c7e6ac: callq   0x7fafd81e7140
  0x00007fafb8c7e6b1: add     $0x8,%rsp
  0x00007fafb8c7e6b5: jmpq    0x7fafb8c7e6bf
  0x00007fafb8c7e6ba: callq   0x7fafd81e7140
  0x00007fafb8c7e6bf: mov     0xfffffffffffffff8(%rbp),%rbx
  0x00007fafb8c7e6c3: cmpl    $0x3,0x408(%r15)
  0x00007fafb8c7e6ce: je      0x7fafb8c7e81a
  0x00007fafb8c7e6d4: cmp     0x418(%r15),%rbx
  0x00007fafb8c7e6db: jle     0x7fafb8c7e81a
  0x00007fafb8c7e6e1: mov     %r15,%rdi
  0x00007fafb8c7e6e4: test    $0xf,%esp
  0x00007fafb8c7e6ea: je      0x7fafb8c7e702
  0x00007fafb8c7e6f0: sub     $0x8,%rsp
  0x00007fafb8c7e6f4: callq   0x7fafd81ee2f0
  0x00007fafb8c7e6f9: add     $0x8,%rsp
  0x00007fafb8c7e6fd: jmpq    0x7fafb8c7e707
  0x00007fafb8c7e702: callq   0x7fafd81ee2f0
  0x00007fafb8c7e707: callq   0x7fafb8c7e711
  0x00007fafb8c7e70c: jmpq    0x7fafb8c7e7a3
  0x00007fafb8c7e711: lea     0x8(%rsp),%rax
  0x00007fafb8c7e716: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7e71a: mov     %r15,%rdi
  0x00007fafb8c7e71d: vzeroupper
  0x00007fafb8c7e720: mov     %rbp,0x330(%r15)
  0x00007fafb8c7e727: mov     %rax,0x320(%r15)
  0x00007fafb8c7e72e: test    $0xf,%esp
  0x00007fafb8c7e734: je      0x7fafb8c7e74c
  0x00007fafb8c7e73a: sub     $0x8,%rsp
  0x00007fafb8c7e73e: callq   0x7fafd7d7ef30
  0x00007fafb8c7e743: add     $0x8,%rsp
  0x00007fafb8c7e747: jmpq    0x7fafb8c7e751
  0x00007fafb8c7e74c: callq   0x7fafd7d7ef30
  0x00007fafb8c7e751: movabs  $0x0,%r10
  0x00007fafb8c7e75b: mov     %r10,0x320(%r15)
  0x00007fafb8c7e762: movabs  $0x0,%r10
  0x00007fafb8c7e76c: mov     %r10,0x330(%r15)
  0x00007fafb8c7e773: movabs  $0x0,%r10
  0x00007fafb8c7e77d: mov     %r10,0x328(%r15)
  0x00007fafb8c7e784: vzeroupper
  0x00007fafb8c7e787: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7e78f: je      0x7fafb8c7e79a
  0x00007fafb8c7e795: jmpq    0x7fafb8c5c780
  0x00007fafb8c7e79a: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7e79e: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7e7a2: retq
  0x00007fafb8c7e7a3: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c7e7a8: sub     $0x80,%rsp
  0x00007fafb8c7e7af: mov     %rax,0x78(%rsp)
  0x00007fafb8c7e7b4: mov     %rcx,0x70(%rsp)
  0x00007fafb8c7e7b9: mov     %rdx,0x68(%rsp)
  0x00007fafb8c7e7be: mov     %rbx,0x60(%rsp)
  0x00007fafb8c7e7c3: mov     %rbp,0x50(%rsp)
  0x00007fafb8c7e7c8: mov     %rsi,0x48(%rsp)
  0x00007fafb8c7e7cd: mov     %rdi,0x40(%rsp)
  0x00007fafb8c7e7d2: mov     %r8,0x38(%rsp)
  0x00007fafb8c7e7d7: mov     %r9,0x30(%rsp)
  0x00007fafb8c7e7dc: mov     %r10,0x28(%rsp)
  0x00007fafb8c7e7e1: mov     %r11,0x20(%rsp)
  0x00007fafb8c7e7e6: mov     %r12,0x18(%rsp)
  0x00007fafb8c7e7eb: mov     %r13,0x10(%rsp)
  0x00007fafb8c7e7f0: mov     %r14,0x8(%rsp)
  0x00007fafb8c7e7f5: mov     %r15,(%rsp)
  0x00007fafb8c7e7f9: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c7e803: movabs  $0x7fafb8c7e7a3,%rsi
  0x00007fafb8c7e80d: mov     %rsp,%rdx
  0x00007fafb8c7e810: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c7e814: callq   0x7fafd7fdd230
  0x00007fafb8c7e819: hlt
  0x00007fafb8c7e81a: leave
  0x00007fafb8c7e81b: pop     %r13
  0x00007fafb8c7e81d: mov     %rbx,%rsp
  0x00007fafb8c7e820: jmpq    %r13
  0x00007fafb8c7e823: nopl    0x0(%rax,%rax)
  0x00007fafb8c7e828: add     %al,(%rax)
  0x00007fafb8c7e82a: add     %al,(%rax)
  0x00007fafb8c7e82c: add     %al,(%rax)
  0x00007fafb8c7e82e: add     %al,(%rax)
  0x00007fafb8c7e830: add     %al,(%rax)
  0x00007fafb8c7e832: add     %al,(%rax)
  0x00007fafb8c7e834: add     %al,(%rax)
  0x00007fafb8c7e836: add     %al,(%rax)
  0x00007fafb8c7e838: add     %al,(%rax)
  0x00007fafb8c7e83a: add     %al,(%rax)
  0x00007fafb8c7e83c: add     %al,(%rax)
  0x00007fafb8c7e83e: add     %al,(%rax)

----------------------------------------------------------------------
invokehandle  233 invokehandle  [0x00007fafb8c7e860, 0x00007fafb8c7eb60]  768 bytes

Argument 0 is unknown.RIP: 0x7fafb8c7e860 Code size: 0x00000300
  0x00007fafb8c7e860: push    %rax
  0x00007fafb8c7e861: jmpq    0x7fafb8c7e89f
  0x00007fafb8c7e866: sub     $0x8,%rsp
  0x00007fafb8c7e86a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c7e86f: jmpq    0x7fafb8c7e89f
  0x00007fafb8c7e874: sub     $0x10,%rsp
  0x00007fafb8c7e878: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c7e87d: jmpq    0x7fafb8c7e89f
  0x00007fafb8c7e882: sub     $0x10,%rsp
  0x00007fafb8c7e886: mov     %rax,(%rsp)
  0x00007fafb8c7e88a: movabs  $0x0,%r10
  0x00007fafb8c7e894: mov     %r10,0x8(%rsp)
  0x00007fafb8c7e899: jmpq    0x7fafb8c7e89f
  0x00007fafb8c7e89e: push    %rax
  0x00007fafb8c7e89f: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7e8a3: movzwl  0x1(%r13),%edx
  0x00007fafb8c7e8a8: mov     0xffffffffffffffd0(%rbp),%rcx
  0x00007fafb8c7e8ac: shl     $0x2,%edx
  0x00007fafb8c7e8af: mov     0x28(%rcx,%rdx,8),%ebx
  0x00007fafb8c7e8b3: shr     $0x10,%ebx
  0x00007fafb8c7e8b6: and     $0xff,%ebx
  0x00007fafb8c7e8bc: cmp     $0xe9,%ebx
  0x00007fafb8c7e8c2: je      0x7fafb8c7e978
  0x00007fafb8c7e8c8: mov     $0xe9,%ebx
  0x00007fafb8c7e8cd: callq   0x7fafb8c7e8d7
  0x00007fafb8c7e8d2: jmpq    0x7fafb8c7e96c
  0x00007fafb8c7e8d7: mov     %rbx,%rsi
  0x00007fafb8c7e8da: lea     0x8(%rsp),%rax
  0x00007fafb8c7e8df: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7e8e3: mov     %r15,%rdi
  0x00007fafb8c7e8e6: vzeroupper
  0x00007fafb8c7e8e9: mov     %rbp,0x330(%r15)
  0x00007fafb8c7e8f0: mov     %rax,0x320(%r15)
  0x00007fafb8c7e8f7: test    $0xf,%esp
  0x00007fafb8c7e8fd: je      0x7fafb8c7e915
  0x00007fafb8c7e903: sub     $0x8,%rsp
  0x00007fafb8c7e907: callq   0x7fafd7d841d0
  0x00007fafb8c7e90c: add     $0x8,%rsp
  0x00007fafb8c7e910: jmpq    0x7fafb8c7e91a
  0x00007fafb8c7e915: callq   0x7fafd7d841d0
  0x00007fafb8c7e91a: movabs  $0x0,%r10
  0x00007fafb8c7e924: mov     %r10,0x320(%r15)
  0x00007fafb8c7e92b: movabs  $0x0,%r10
  0x00007fafb8c7e935: mov     %r10,0x330(%r15)
  0x00007fafb8c7e93c: movabs  $0x0,%r10
  0x00007fafb8c7e946: mov     %r10,0x328(%r15)
  0x00007fafb8c7e94d: vzeroupper
  0x00007fafb8c7e950: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7e958: je      0x7fafb8c7e963
  0x00007fafb8c7e95e: jmpq    0x7fafb8c5c780
  0x00007fafb8c7e963: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7e967: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7e96b: retq
  0x00007fafb8c7e96c: movzwl  0x1(%r13),%edx
  0x00007fafb8c7e971: mov     0xffffffffffffffd0(%rbp),%rcx
  0x00007fafb8c7e975: shl     $0x2,%edx
  0x00007fafb8c7e978: mov     0x30(%rcx,%rdx,8),%rbx
  0x00007fafb8c7e97d: mov     0x38(%rcx,%rdx,8),%rax
  0x00007fafb8c7e982: mov     0x40(%rcx,%rdx,8),%edx
  0x00007fafb8c7e986: test    $0x1000000,%edx
  0x00007fafb8c7e98c: je      0x7fafb8c7e9b7
  0x00007fafb8c7e992: push    %rbx
  0x00007fafb8c7e993: mov     %rax,%rbx
  0x00007fafb8c7e996: mov     0xffffffffffffffe8(%rbp),%rax
  0x00007fafb8c7e99a: mov     0x8(%rax),%rax
  0x00007fafb8c7e99e: mov     0x8(%rax),%rax
  0x00007fafb8c7e9a2: mov     0x10(%rax),%rax
  0x00007fafb8c7e9a6: mov     0x10(%rax),%rax
  0x00007fafb8c7e9aa: mov     (%rax),%rax
  0x00007fafb8c7e9ad: mov     0x10(%rax,%rbx,4),%eax
  0x00007fafb8c7e9b1: shl     $0x3,%rax
  0x00007fafb8c7e9b5: pop     %rbx
  0x00007fafb8c7e9b6: push    %rax
  0x00007fafb8c7e9b7: mov     %edx,%ecx
  0x00007fafb8c7e9b9: and     $0xff,%ecx
  0x00007fafb8c7e9bf: mov     0xfffffffffffffff8(%rsp,%rcx,8),%rcx
  0x00007fafb8c7e9c4: shr     $0x1c,%edx
  0x00007fafb8c7e9c7: movabs  $0x7fafd89a8940,%r10
  0x00007fafb8c7e9d1: mov     (%r10,%rdx,8),%rdx
  0x00007fafb8c7e9d5: push    %rdx
  0x00007fafb8c7e9d6: cmp     (%rcx),%rax
  0x00007fafb8c7e9d9: mov     0xffffffffffffffd8(%rbp),%rax
  0x00007fafb8c7e9dd: test    %rax,%rax
  0x00007fafb8c7e9e0: je      0x7fafb8c7e9f8
  0x00007fafb8c7e9e6: addq    $0x1,0x8(%rax)
  0x00007fafb8c7e9eb: sbbq    $0x0,0x8(%rax)
  0x00007fafb8c7e9f0: add     $0x38,%rax
  0x00007fafb8c7e9f4: mov     %rax,0xffffffffffffffd8(%rbp)
  0x00007fafb8c7e9f8: mov     0xffffffffffffffd8(%rbp),%rdx
  0x00007fafb8c7e9fc: test    %rdx,%rdx
  0x00007fafb8c7e9ff: je      0x7fafb8c7eb4c
  0x00007fafb8c7ea05: cmpb    $0xb,0xffffffffffffffc8(%rdx)
  0x00007fafb8c7ea09: jne     0x7fafb8c7eb4c
  0x00007fafb8c7ea0f: add     $0x8,%rdx
  0x00007fafb8c7ea13: mov     0xfffffffffffffff8(%rdx),%r13
  0x00007fafb8c7ea17: sub     $0x0,%r13d
  0x00007fafb8c7ea1b: cmp     $0x2,%r13d
  0x00007fafb8c7ea1f: jl      0x7fafb8c7eb41
  0x00007fafb8c7ea25: mov     0x8(%rbx),%r13
  0x00007fafb8c7ea29: movzwl  0x34(%r13),%r13d
  0x00007fafb8c7ea2e: sub     (%rdx),%r13
  0x00007fafb8c7ea31: sub     $0x1,%r13d
  0x00007fafb8c7ea35: mov     0x8(%rsp,%r13,8),%r13
  0x00007fafb8c7ea3a: test    %r13,%r13
  0x00007fafb8c7ea3d: jne     0x7fafb8c7ea49
  0x00007fafb8c7ea3f: orq     $0x1,0x8(%rdx)
  0x00007fafb8c7ea47: jmp     0x7fafb8c7eaa2
  0x00007fafb8c7ea49: mov     0x8(%r13),%r13d
  0x00007fafb8c7ea4d: movabs  $0x800000000,%r12
  0x00007fafb8c7ea57: add     %r12,%r13
  0x00007fafb8c7ea5a: xor     %r12,%r12
  0x00007fafb8c7ea5d: xor     0x8(%rdx),%r13
  0x00007fafb8c7ea61: test    $0xfffffffffffffffc,%r13
  0x00007fafb8c7ea68: je      0x7fafb8c7eaa2
  0x00007fafb8c7ea6a: test    $0x2,%r13
  0x00007fafb8c7ea71: jne     0x7fafb8c7eaa2
  0x00007fafb8c7ea73: cmpq    $0x0,0x8(%rdx)
  0x00007fafb8c7ea7b: je      0x7fafb8c7ea9e
  0x00007fafb8c7ea7d: cmpq    $0x1,0x8(%rdx)
  0x00007fafb8c7ea85: je      0x7fafb8c7ea9e
  0x00007fafb8c7ea87: xor     0x8(%rdx),%r13
  0x00007fafb8c7ea8b: test    $0xfffffffffffffffc,%r13
  0x00007fafb8c7ea92: je      0x7fafb8c7eaa2
  0x00007fafb8c7ea94: orq     $0x2,0x8(%rdx)
  0x00007fafb8c7ea9c: jmp     0x7fafb8c7eaa2
  0x00007fafb8c7ea9e: mov     %r13,0x8(%rdx)
  0x00007fafb8c7eaa2: add     $0x10,%rdx
  0x00007fafb8c7eaa6: mov     0xffffffffffffffe8(%rdx),%r13
  0x00007fafb8c7eaaa: sub     $0x2,%r13d
  0x00007fafb8c7eaae: cmp     $0x2,%r13d
  0x00007fafb8c7eab2: jl      0x7fafb8c7eb41
  0x00007fafb8c7eab8: mov     0x8(%rbx),%r13
  0x00007fafb8c7eabc: movzwl  0x34(%r13),%r13d
  0x00007fafb8c7eac1: sub     (%rdx),%r13
  0x00007fafb8c7eac4: sub     $0x1,%r13d
  0x00007fafb8c7eac8: mov     0x8(%rsp,%r13,8),%r13
  0x00007fafb8c7eacd: test    %r13,%r13
  0x00007fafb8c7ead0: jne     0x7fafb8c7eadc
  0x00007fafb8c7ead2: orq     $0x1,0x8(%rdx)
  0x00007fafb8c7eada: jmp     0x7fafb8c7eb35
  0x00007fafb8c7eadc: mov     0x8(%r13),%r13d
  0x00007fafb8c7eae0: movabs  $0x800000000,%r12
  0x00007fafb8c7eaea: add     %r12,%r13
  0x00007fafb8c7eaed: xor     %r12,%r12
  0x00007fafb8c7eaf0: xor     0x8(%rdx),%r13
  0x00007fafb8c7eaf4: test    $0xfffffffffffffffc,%r13
  0x00007fafb8c7eafb: je      0x7fafb8c7eb35
  0x00007fafb8c7eafd: test    $0x2,%r13
  0x00007fafb8c7eb04: jne     0x7fafb8c7eb35
  0x00007fafb8c7eb06: cmpq    $0x0,0x8(%rdx)
  0x00007fafb8c7eb0e: je      0x7fafb8c7eb31
  0x00007fafb8c7eb10: cmpq    $0x1,0x8(%rdx)
  0x00007fafb8c7eb18: je      0x7fafb8c7eb31
  0x00007fafb8c7eb1a: xor     0x8(%rdx),%r13
  0x00007fafb8c7eb1e: test    $0xfffffffffffffffc,%r13
  0x00007fafb8c7eb25: je      0x7fafb8c7eb35
  0x00007fafb8c7eb27: orq     $0x2,0x8(%rdx)
  0x00007fafb8c7eb2f: jmp     0x7fafb8c7eb35
  0x00007fafb8c7eb31: mov     %r13,0x8(%rdx)
  0x00007fafb8c7eb35: add     $0x10,%rdx
  0x00007fafb8c7eb39: mov     0xffffffffffffffd8(%rdx),%r13
  0x00007fafb8c7eb3d: sub     $0x4,%r13d
  0x00007fafb8c7eb41: shl     $0x3,%r13d
  0x00007fafb8c7eb45: add     %r13,%rdx
  0x00007fafb8c7eb48: mov     %rdx,0xffffffffffffffd8(%rbp)
  0x00007fafb8c7eb4c: lea     0x8(%rsp),%r13
  0x00007fafb8c7eb51: mov     %r13,0xfffffffffffffff0(%rbp)
  0x00007fafb8c7eb55: jmpq    *0x48(%rbx)
  0x00007fafb8c7eb58: add     %al,(%rax)
  0x00007fafb8c7eb5a: add     %al,(%rax)
  0x00007fafb8c7eb5c: add     %al,(%rax)
  0x00007fafb8c7eb5e: add     %al,(%rax)

----------------------------------------------------------------------
nofast_getfield  234 nofast_getfield  [0x00007fafb8c7eb80, 0x00007fafb8c7eda0]  544 bytes

Argument 0 is unknown.RIP: 0x7fafb8c7eb80 Code size: 0x00000220
  0x00007fafb8c7eb80: push    %rax
  0x00007fafb8c7eb81: jmpq    0x7fafb8c7ebbf
  0x00007fafb8c7eb86: sub     $0x8,%rsp
  0x00007fafb8c7eb8a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c7eb8f: jmpq    0x7fafb8c7ebbf
  0x00007fafb8c7eb94: sub     $0x10,%rsp
  0x00007fafb8c7eb98: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c7eb9d: jmpq    0x7fafb8c7ebbf
  0x00007fafb8c7eba2: sub     $0x10,%rsp
  0x00007fafb8c7eba6: mov     %rax,(%rsp)
  0x00007fafb8c7ebaa: movabs  $0x0,%r10
  0x00007fafb8c7ebb4: mov     %r10,0x8(%rsp)
  0x00007fafb8c7ebb9: jmpq    0x7fafb8c7ebbf
  0x00007fafb8c7ebbe: push    %rax
  0x00007fafb8c7ebbf: movzwl  0x1(%r13),%edx
  0x00007fafb8c7ebc4: mov     0xffffffffffffffd0(%rbp),%rcx
  0x00007fafb8c7ebc8: shl     $0x2,%edx
  0x00007fafb8c7ebcb: mov     0x28(%rcx,%rdx,8),%ebx
  0x00007fafb8c7ebcf: shr     $0x10,%ebx
  0x00007fafb8c7ebd2: and     $0xff,%ebx
  0x00007fafb8c7ebd8: cmp     $0xb4,%ebx
  0x00007fafb8c7ebde: je      0x7fafb8c7ec94
  0x00007fafb8c7ebe4: mov     $0xb4,%ebx
  0x00007fafb8c7ebe9: callq   0x7fafb8c7ebf3
  0x00007fafb8c7ebee: jmpq    0x7fafb8c7ec88
  0x00007fafb8c7ebf3: mov     %rbx,%rsi
  0x00007fafb8c7ebf6: lea     0x8(%rsp),%rax
  0x00007fafb8c7ebfb: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7ebff: mov     %r15,%rdi
  0x00007fafb8c7ec02: vzeroupper
  0x00007fafb8c7ec05: mov     %rbp,0x330(%r15)
  0x00007fafb8c7ec0c: mov     %rax,0x320(%r15)
  0x00007fafb8c7ec13: test    $0xf,%esp
  0x00007fafb8c7ec19: je      0x7fafb8c7ec31
  0x00007fafb8c7ec1f: sub     $0x8,%rsp
  0x00007fafb8c7ec23: callq   0x7fafd7d841d0
  0x00007fafb8c7ec28: add     $0x8,%rsp
  0x00007fafb8c7ec2c: jmpq    0x7fafb8c7ec36
  0x00007fafb8c7ec31: callq   0x7fafd7d841d0
  0x00007fafb8c7ec36: movabs  $0x0,%r10
  0x00007fafb8c7ec40: mov     %r10,0x320(%r15)
  0x00007fafb8c7ec47: movabs  $0x0,%r10
  0x00007fafb8c7ec51: mov     %r10,0x330(%r15)
  0x00007fafb8c7ec58: movabs  $0x0,%r10
  0x00007fafb8c7ec62: mov     %r10,0x328(%r15)
  0x00007fafb8c7ec69: vzeroupper
  0x00007fafb8c7ec6c: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7ec74: je      0x7fafb8c7ec7f
  0x00007fafb8c7ec7a: jmpq    0x7fafb8c5c780
  0x00007fafb8c7ec7f: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7ec83: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7ec87: retq
  0x00007fafb8c7ec88: movzwl  0x1(%r13),%edx
  0x00007fafb8c7ec8d: mov     0xffffffffffffffd0(%rbp),%rcx
  0x00007fafb8c7ec91: shl     $0x2,%edx
  0x00007fafb8c7ec94: mov     0x38(%rcx,%rdx,8),%rbx
  0x00007fafb8c7ec99: mov     0x40(%rcx,%rdx,8),%eax
  0x00007fafb8c7ec9d: pop     %rcx
  0x00007fafb8c7ec9e: cmp     (%rcx),%rax
  0x00007fafb8c7eca1: shr     $0x1c,%eax
  0x00007fafb8c7eca4: and     $0xf,%eax
  0x00007fafb8c7eca7: jne     0x7fafb8c7ecb7
  0x00007fafb8c7ecad: movsbl  (%rcx,%rbx),%eax
  0x00007fafb8c7ecb1: push    %rax
  0x00007fafb8c7ecb2: jmpq    0x7fafb8c7ed6b
  0x00007fafb8c7ecb7: cmp     $0x1,%eax
  0x00007fafb8c7ecba: jne     0x7fafb8c7ecca
  0x00007fafb8c7ecc0: movzbl  (%rcx,%rbx),%eax
  0x00007fafb8c7ecc4: push    %rax
  0x00007fafb8c7ecc5: jmpq    0x7fafb8c7ed6b
  0x00007fafb8c7ecca: cmp     $0x8,%eax
  0x00007fafb8c7eccd: jne     0x7fafb8c7ece0
  0x00007fafb8c7ecd3: mov     (%rcx,%rbx),%eax
  0x00007fafb8c7ecd6: shl     $0x3,%rax
  0x00007fafb8c7ecda: push    %rax
  0x00007fafb8c7ecdb: jmpq    0x7fafb8c7ed6b
  0x00007fafb8c7ece0: cmp     $0x4,%eax
  0x00007fafb8c7ece3: jne     0x7fafb8c7ecf2
  0x00007fafb8c7ece9: mov     (%rcx,%rbx),%eax
  0x00007fafb8c7ecec: push    %rax
  0x00007fafb8c7eced: jmpq    0x7fafb8c7ed6b
  0x00007fafb8c7ecf2: cmp     $0x2,%eax
  0x00007fafb8c7ecf5: jne     0x7fafb8c7ed05
  0x00007fafb8c7ecfb: movzwl  (%rcx,%rbx),%eax
  0x00007fafb8c7ecff: push    %rax
  0x00007fafb8c7ed00: jmpq    0x7fafb8c7ed6b
  0x00007fafb8c7ed05: cmp     $0x3,%eax
  0x00007fafb8c7ed08: jne     0x7fafb8c7ed18
  0x00007fafb8c7ed0e: movswl  (%rcx,%rbx),%eax
  0x00007fafb8c7ed12: push    %rax
  0x00007fafb8c7ed13: jmpq    0x7fafb8c7ed6b
  0x00007fafb8c7ed18: cmp     $0x5,%eax
  0x00007fafb8c7ed1b: jne     0x7fafb8c7ed41
  0x00007fafb8c7ed21: mov     (%rcx,%rbx),%rax
  0x00007fafb8c7ed25: sub     $0x10,%rsp
  0x00007fafb8c7ed29: mov     %rax,(%rsp)
  0x00007fafb8c7ed2d: movabs  $0x0,%r10
  0x00007fafb8c7ed37: mov     %r10,0x8(%rsp)
  0x00007fafb8c7ed3c: jmpq    0x7fafb8c7ed6b
  0x00007fafb8c7ed41: cmp     $0x6,%eax
  0x00007fafb8c7ed44: jne     0x7fafb8c7ed5d
  0x00007fafb8c7ed4a: vmovss  (%rcx,%rbx),%xmm0
  0x00007fafb8c7ed4f: sub     $0x8,%rsp
  0x00007fafb8c7ed53: vmovss  %xmm0,(%rsp)
  0x00007fafb8c7ed58: jmpq    0x7fafb8c7ed6b
  0x00007fafb8c7ed5d: vmovsd  (%rcx,%rbx),%xmm0
  0x00007fafb8c7ed62: sub     $0x10,%rsp
  0x00007fafb8c7ed66: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c7ed6b: movzbl  0x3(%r13),%ebx
  0x00007fafb8c7ed70: add     $0x3,%r13
  0x00007fafb8c7ed74: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c7ed7e: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7ed82: nopw    0x0(%rax,%rax)
  0x00007fafb8c7ed88: add     %al,(%rax)
  0x00007fafb8c7ed8a: add     %al,(%rax)
  0x00007fafb8c7ed8c: add     %al,(%rax)
  0x00007fafb8c7ed8e: add     %al,(%rax)
  0x00007fafb8c7ed90: add     %al,(%rax)
  0x00007fafb8c7ed92: add     %al,(%rax)
  0x00007fafb8c7ed94: add     %al,(%rax)
  0x00007fafb8c7ed96: add     %al,(%rax)
  0x00007fafb8c7ed98: add     %al,(%rax)
  0x00007fafb8c7ed9a: add     %al,(%rax)
  0x00007fafb8c7ed9c: add     %al,(%rax)
  0x00007fafb8c7ed9e: add     %al,(%rax)

----------------------------------------------------------------------
nofast_putfield  235 nofast_putfield  [0x00007fafb8c7edc0, 0x00007fafb8c7f120]  864 bytes

Argument 0 is unknown.RIP: 0x7fafb8c7edc0 Code size: 0x00000360
  0x00007fafb8c7edc0: push    %rax
  0x00007fafb8c7edc1: jmpq    0x7fafb8c7edff
  0x00007fafb8c7edc6: sub     $0x8,%rsp
  0x00007fafb8c7edca: vmovss  %xmm0,(%rsp)
  0x00007fafb8c7edcf: jmpq    0x7fafb8c7edff
  0x00007fafb8c7edd4: sub     $0x10,%rsp
  0x00007fafb8c7edd8: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c7eddd: jmpq    0x7fafb8c7edff
  0x00007fafb8c7ede2: sub     $0x10,%rsp
  0x00007fafb8c7ede6: mov     %rax,(%rsp)
  0x00007fafb8c7edea: movabs  $0x0,%r10
  0x00007fafb8c7edf4: mov     %r10,0x8(%rsp)
  0x00007fafb8c7edf9: jmpq    0x7fafb8c7edff
  0x00007fafb8c7edfe: push    %rax
  0x00007fafb8c7edff: movzwl  0x1(%r13),%edx
  0x00007fafb8c7ee04: mov     0xffffffffffffffd0(%rbp),%rcx
  0x00007fafb8c7ee08: shl     $0x2,%edx
  0x00007fafb8c7ee0b: mov     0x28(%rcx,%rdx,8),%ebx
  0x00007fafb8c7ee0f: shr     $0x18,%ebx
  0x00007fafb8c7ee12: and     $0xff,%ebx
  0x00007fafb8c7ee18: cmp     $0xb5,%ebx
  0x00007fafb8c7ee1e: je      0x7fafb8c7eed4
  0x00007fafb8c7ee24: mov     $0xb5,%ebx
  0x00007fafb8c7ee29: callq   0x7fafb8c7ee33
  0x00007fafb8c7ee2e: jmpq    0x7fafb8c7eec8
  0x00007fafb8c7ee33: mov     %rbx,%rsi
  0x00007fafb8c7ee36: lea     0x8(%rsp),%rax
  0x00007fafb8c7ee3b: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7ee3f: mov     %r15,%rdi
  0x00007fafb8c7ee42: vzeroupper
  0x00007fafb8c7ee45: mov     %rbp,0x330(%r15)
  0x00007fafb8c7ee4c: mov     %rax,0x320(%r15)
  0x00007fafb8c7ee53: test    $0xf,%esp
  0x00007fafb8c7ee59: je      0x7fafb8c7ee71
  0x00007fafb8c7ee5f: sub     $0x8,%rsp
  0x00007fafb8c7ee63: callq   0x7fafd7d841d0
  0x00007fafb8c7ee68: add     $0x8,%rsp
  0x00007fafb8c7ee6c: jmpq    0x7fafb8c7ee76
  0x00007fafb8c7ee71: callq   0x7fafd7d841d0
  0x00007fafb8c7ee76: movabs  $0x0,%r10
  0x00007fafb8c7ee80: mov     %r10,0x320(%r15)
  0x00007fafb8c7ee87: movabs  $0x0,%r10
  0x00007fafb8c7ee91: mov     %r10,0x330(%r15)
  0x00007fafb8c7ee98: movabs  $0x0,%r10
  0x00007fafb8c7eea2: mov     %r10,0x328(%r15)
  0x00007fafb8c7eea9: vzeroupper
  0x00007fafb8c7eeac: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7eeb4: je      0x7fafb8c7eebf
  0x00007fafb8c7eeba: jmpq    0x7fafb8c5c780
  0x00007fafb8c7eebf: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7eec3: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7eec7: retq
  0x00007fafb8c7eec8: movzwl  0x1(%r13),%edx
  0x00007fafb8c7eecd: mov     0xffffffffffffffd0(%rbp),%rcx
  0x00007fafb8c7eed1: shl     $0x2,%edx
  0x00007fafb8c7eed4: mov     0x38(%rcx,%rdx,8),%rbx
  0x00007fafb8c7eed9: mov     0x40(%rcx,%rdx,8),%eax
  0x00007fafb8c7eedd: mov     %eax,%edx
  0x00007fafb8c7eedf: shr     $0x15,%edx
  0x00007fafb8c7eee2: and     $0x1,%edx
  0x00007fafb8c7eee5: shr     $0x1c,%eax
  0x00007fafb8c7eee8: and     $0xf,%eax
  0x00007fafb8c7eeeb: jne     0x7fafb8c7ef04
  0x00007fafb8c7eef1: mov     (%rsp),%eax
  0x00007fafb8c7eef4: add     $0x8,%rsp
  0x00007fafb8c7eef8: pop     %rcx
  0x00007fafb8c7eef9: cmp     (%rcx),%rax
  0x00007fafb8c7eefc: mov     %al,(%rcx,%rbx)
  0x00007fafb8c7eeff: jmpq    0x7fafb8c7f0f7
  0x00007fafb8c7ef04: cmp     $0x1,%eax
  0x00007fafb8c7ef07: jne     0x7fafb8c7ef23
  0x00007fafb8c7ef0d: mov     (%rsp),%eax
  0x00007fafb8c7ef10: add     $0x8,%rsp
  0x00007fafb8c7ef14: pop     %rcx
  0x00007fafb8c7ef15: cmp     (%rcx),%rax
  0x00007fafb8c7ef18: and     $0x1,%eax
  0x00007fafb8c7ef1b: mov     %al,(%rcx,%rbx)
  0x00007fafb8c7ef1e: jmpq    0x7fafb8c7f0f7
  0x00007fafb8c7ef23: cmp     $0x8,%eax
  0x00007fafb8c7ef26: jne     0x7fafb8c7f051
  0x00007fafb8c7ef2c: pop     %rax
  0x00007fafb8c7ef2d: pop     %rcx
  0x00007fafb8c7ef2e: cmp     (%rcx),%rax
  0x00007fafb8c7ef31: lea     (%rcx,%rbx),%rdx
  0x00007fafb8c7ef35: cmpb    $0x0,0x30(%r15)
  0x00007fafb8c7ef3a: je      0x7fafb8c7efa1
  0x00007fafb8c7ef40: mov     (%rdx),%ebx
  0x00007fafb8c7ef42: shl     $0x3,%rbx
  0x00007fafb8c7ef46: cmp     $0x0,%rbx
  0x00007fafb8c7ef4a: je      0x7fafb8c7efa1
  0x00007fafb8c7ef50: mov     0x38(%r15),%r8
  0x00007fafb8c7ef54: cmp     $0x0,%r8
  0x00007fafb8c7ef58: je      0x7fafb8c7ef72
  0x00007fafb8c7ef5e: sub     $0x8,%r8
  0x00007fafb8c7ef62: mov     %r8,0x38(%r15)
  0x00007fafb8c7ef66: add     0x48(%r15),%r8
  0x00007fafb8c7ef6a: mov     %rbx,(%r8)
  0x00007fafb8c7ef6d: jmpq    0x7fafb8c7efa1
  0x00007fafb8c7ef72: push    %rax
  0x00007fafb8c7ef73: push    %rdx
  0x00007fafb8c7ef74: push    %rbx
  0x00007fafb8c7ef75: mov     %r15,%rsi
  0x00007fafb8c7ef78: mov     %rbx,%rdi
  0x00007fafb8c7ef7b: test    $0xf,%esp
  0x00007fafb8c7ef81: je      0x7fafb8c7ef99
  0x00007fafb8c7ef87: sub     $0x8,%rsp
  0x00007fafb8c7ef8b: callq   0x7fafd7c74620
  0x00007fafb8c7ef90: add     $0x8,%rsp
  0x00007fafb8c7ef94: jmpq    0x7fafb8c7ef9e
  0x00007fafb8c7ef99: callq   0x7fafd7c74620
  0x00007fafb8c7ef9e: pop     %rbx
  0x00007fafb8c7ef9f: pop     %rdx
  0x00007fafb8c7efa0: pop     %rax
  0x00007fafb8c7efa1: mov     %rax,%rbx
  0x00007fafb8c7efa4: shr     $0x3,%rax
  0x00007fafb8c7efa8: mov     %eax,(%rdx)
  0x00007fafb8c7efaa: mov     %rdx,%r8
  0x00007fafb8c7efad: xor     %rbx,%r8
  0x00007fafb8c7efb0: shr     $0x14,%r8
  0x00007fafb8c7efb4: je      0x7fafb8c7f04c
  0x00007fafb8c7efba: cmp     $0x0,%rbx
  0x00007fafb8c7efbe: je      0x7fafb8c7f04c
  0x00007fafb8c7efc4: mov     %rdx,%r8
  0x00007fafb8c7efc7: shr     $0x9,%r8
  0x00007fafb8c7efcb: movabs  $0x7fafb0000000,%rbx
  0x00007fafb8c7efd5: add     %rbx,%r8
  0x00007fafb8c7efd8: cmpb    $0x20,(%r8)
  0x00007fafb8c7efdc: je      0x7fafb8c7f04c
  0x00007fafb8c7efe2: lock addl $0x0,0xffffffffffffffc0(%rsp)
  0x00007fafb8c7efe8: cmpb    $0x0,(%r8)
  0x00007fafb8c7efec: je      0x7fafb8c7f04c
  0x00007fafb8c7eff2: movb    $0x0,(%r8)
  0x00007fafb8c7eff6: cmpl    $0x0,0x70(%r15)
  0x00007fafb8c7effe: je      0x7fafb8c7f01f
  0x00007fafb8c7f004: subl    $0x8,0x70(%r15)
  0x00007fafb8c7f009: mov     0x80(%r15),%rbx
  0x00007fafb8c7f010: movsxd  0x70(%r15),%r10
  0x00007fafb8c7f014: add     %r10,%rbx
  0x00007fafb8c7f017: mov     %r8,(%rbx)
  0x00007fafb8c7f01a: jmpq    0x7fafb8c7f04c
  0x00007fafb8c7f01f: push    %rdx
  0x00007fafb8c7f020: push    %rbx
  0x00007fafb8c7f021: mov     %r15,%rsi
  0x00007fafb8c7f024: mov     %r8,%rdi
  0x00007fafb8c7f027: test    $0xf,%esp
  0x00007fafb8c7f02d: je      0x7fafb8c7f045
  0x00007fafb8c7f033: sub     $0x8,%rsp
  0x00007fafb8c7f037: callq   0x7fafd7c74650
  0x00007fafb8c7f03c: add     $0x8,%rsp
  0x00007fafb8c7f040: jmpq    0x7fafb8c7f04a
  0x00007fafb8c7f045: callq   0x7fafd7c74650
  0x00007fafb8c7f04a: pop     %rbx
  0x00007fafb8c7f04b: pop     %rdx
  0x00007fafb8c7f04c: jmpq    0x7fafb8c7f0f7
  0x00007fafb8c7f051: cmp     $0x4,%eax
  0x00007fafb8c7f054: jne     0x7fafb8c7f06d
  0x00007fafb8c7f05a: mov     (%rsp),%eax
  0x00007fafb8c7f05d: add     $0x8,%rsp
  0x00007fafb8c7f061: pop     %rcx
  0x00007fafb8c7f062: cmp     (%rcx),%rax
  0x00007fafb8c7f065: mov     %eax,(%rcx,%rbx)
  0x00007fafb8c7f068: jmpq    0x7fafb8c7f0f7
  0x00007fafb8c7f06d: cmp     $0x2,%eax
  0x00007fafb8c7f070: jne     0x7fafb8c7f08a
  0x00007fafb8c7f076: mov     (%rsp),%eax
  0x00007fafb8c7f079: add     $0x8,%rsp
  0x00007fafb8c7f07d: pop     %rcx
  0x00007fafb8c7f07e: cmp     (%rcx),%rax
  0x00007fafb8c7f081: mov     %ax,(%rcx,%rbx)
  0x00007fafb8c7f085: jmpq    0x7fafb8c7f0f7
  0x00007fafb8c7f08a: cmp     $0x3,%eax
  0x00007fafb8c7f08d: jne     0x7fafb8c7f0a7
  0x00007fafb8c7f093: mov     (%rsp),%eax
  0x00007fafb8c7f096: add     $0x8,%rsp
  0x00007fafb8c7f09a: pop     %rcx
  0x00007fafb8c7f09b: cmp     (%rcx),%rax
  0x00007fafb8c7f09e: mov     %ax,(%rcx,%rbx)
  0x00007fafb8c7f0a2: jmpq    0x7fafb8c7f0f7
  0x00007fafb8c7f0a7: cmp     $0x5,%eax
  0x00007fafb8c7f0aa: jne     0x7fafb8c7f0c5
  0x00007fafb8c7f0b0: mov     (%rsp),%rax
  0x00007fafb8c7f0b4: add     $0x10,%rsp
  0x00007fafb8c7f0b8: pop     %rcx
  0x00007fafb8c7f0b9: cmp     (%rcx),%rax
  0x00007fafb8c7f0bc: mov     %rax,(%rcx,%rbx)
  0x00007fafb8c7f0c0: jmpq    0x7fafb8c7f0f7
  0x00007fafb8c7f0c5: cmp     $0x6,%eax
  0x00007fafb8c7f0c8: jne     0x7fafb8c7f0e5
  0x00007fafb8c7f0ce: vmovss  (%rsp),%xmm0
  0x00007fafb8c7f0d3: add     $0x8,%rsp
  0x00007fafb8c7f0d7: pop     %rcx
  0x00007fafb8c7f0d8: cmp     (%rcx),%rax
  0x00007fafb8c7f0db: vmovss  %xmm0,(%rcx,%rbx)
  0x00007fafb8c7f0e0: jmpq    0x7fafb8c7f0f7
  0x00007fafb8c7f0e5: vmovsd  (%rsp),%xmm0
  0x00007fafb8c7f0ea: add     $0x10,%rsp
  0x00007fafb8c7f0ee: pop     %rcx
  0x00007fafb8c7f0ef: cmp     (%rcx),%rax
  0x00007fafb8c7f0f2: vmovsd  %xmm0,(%rcx,%rbx)
  0x00007fafb8c7f0f7: test    %edx,%edx
  0x00007fafb8c7f0f9: je      0x7fafb8c7f105
  0x00007fafb8c7f0ff: lock addl $0x0,0xffffffffffffffc0(%rsp)
  0x00007fafb8c7f105: movzbl  0x3(%r13),%ebx
  0x00007fafb8c7f10a: add     $0x3,%r13
  0x00007fafb8c7f10e: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c7f118: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7f11c: nopl    0x0(%rax)

----------------------------------------------------------------------
nofast_aload_0  236 nofast_aload_0  [0x00007fafb8c7f140, 0x00007fafb8c7f1a0]  96 bytes

Argument 0 is unknown.RIP: 0x7fafb8c7f140 Code size: 0x00000060
  0x00007fafb8c7f140: push    %rax
  0x00007fafb8c7f141: jmpq    0x7fafb8c7f17f
  0x00007fafb8c7f146: sub     $0x8,%rsp
  0x00007fafb8c7f14a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c7f14f: jmpq    0x7fafb8c7f17f
  0x00007fafb8c7f154: sub     $0x10,%rsp
  0x00007fafb8c7f158: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c7f15d: jmpq    0x7fafb8c7f17f
  0x00007fafb8c7f162: sub     $0x10,%rsp
  0x00007fafb8c7f166: mov     %rax,(%rsp)
  0x00007fafb8c7f16a: movabs  $0x0,%r10
  0x00007fafb8c7f174: mov     %r10,0x8(%rsp)
  0x00007fafb8c7f179: jmpq    0x7fafb8c7f17f
  0x00007fafb8c7f17e: push    %rax
  0x00007fafb8c7f17f: mov     (%r14),%rax
  0x00007fafb8c7f182: movzbl  0x1(%r13),%ebx
  0x00007fafb8c7f187: incq    %r13
  0x00007fafb8c7f18a: movabs  $0x7fafd89a7880,%r10
  0x00007fafb8c7f194: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7f198: add     %al,(%rax)
  0x00007fafb8c7f19a: add     %al,(%rax)
  0x00007fafb8c7f19c: add     %al,(%rax)
  0x00007fafb8c7f19e: add     %al,(%rax)

----------------------------------------------------------------------
nofast_iload  237 nofast_iload  [0x00007fafb8c7f1c0, 0x00007fafb8c7f240]  128 bytes

Argument 0 is unknown.RIP: 0x7fafb8c7f1c0 Code size: 0x00000080
  0x00007fafb8c7f1c0: push    %rax
  0x00007fafb8c7f1c1: jmpq    0x7fafb8c7f1ff
  0x00007fafb8c7f1c6: sub     $0x8,%rsp
  0x00007fafb8c7f1ca: vmovss  %xmm0,(%rsp)
  0x00007fafb8c7f1cf: jmpq    0x7fafb8c7f1ff
  0x00007fafb8c7f1d4: sub     $0x10,%rsp
  0x00007fafb8c7f1d8: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c7f1dd: jmpq    0x7fafb8c7f1ff
  0x00007fafb8c7f1e2: sub     $0x10,%rsp
  0x00007fafb8c7f1e6: mov     %rax,(%rsp)
  0x00007fafb8c7f1ea: movabs  $0x0,%r10
  0x00007fafb8c7f1f4: mov     %r10,0x8(%rsp)
  0x00007fafb8c7f1f9: jmpq    0x7fafb8c7f1ff
  0x00007fafb8c7f1fe: push    %rax
  0x00007fafb8c7f1ff: movzbl  0x1(%r13),%ebx
  0x00007fafb8c7f204: neg     %rbx
  0x00007fafb8c7f207: mov     (%r14,%rbx,8),%eax
  0x00007fafb8c7f20b: movzbl  0x2(%r13),%ebx
  0x00007fafb8c7f210: add     $0x2,%r13
  0x00007fafb8c7f214: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c7f21e: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7f222: nopw    0x0(%rax,%rax)
  0x00007fafb8c7f228: add     %al,(%rax)
  0x00007fafb8c7f22a: add     %al,(%rax)
  0x00007fafb8c7f22c: add     %al,(%rax)
  0x00007fafb8c7f22e: add     %al,(%rax)
  0x00007fafb8c7f230: add     %al,(%rax)
  0x00007fafb8c7f232: add     %al,(%rax)
  0x00007fafb8c7f234: add     %al,(%rax)
  0x00007fafb8c7f236: add     %al,(%rax)
  0x00007fafb8c7f238: add     %al,(%rax)
  0x00007fafb8c7f23a: add     %al,(%rax)
  0x00007fafb8c7f23c: add     %al,(%rax)
  0x00007fafb8c7f23e: add     %al,(%rax)

----------------------------------------------------------------------
_shouldnotreachhere  238 _shouldnotreachhere  [0x00007fafb8c7f260, 0x00007fafb8c7f340]  224 bytes

Argument 0 is unknown.RIP: 0x7fafb8c7f260 Code size: 0x000000e0
  0x00007fafb8c7f260: push    %rax
  0x00007fafb8c7f261: jmpq    0x7fafb8c7f29f
  0x00007fafb8c7f266: sub     $0x8,%rsp
  0x00007fafb8c7f26a: vmovss  %xmm0,(%rsp)
  0x00007fafb8c7f26f: jmpq    0x7fafb8c7f29f
  0x00007fafb8c7f274: sub     $0x10,%rsp
  0x00007fafb8c7f278: vmovsd  %xmm0,(%rsp)
  0x00007fafb8c7f27d: jmpq    0x7fafb8c7f29f
  0x00007fafb8c7f282: sub     $0x10,%rsp
  0x00007fafb8c7f286: mov     %rax,(%rsp)
  0x00007fafb8c7f28a: movabs  $0x0,%r10
  0x00007fafb8c7f294: mov     %r10,0x8(%rsp)
  0x00007fafb8c7f299: jmpq    0x7fafb8c7f29f
  0x00007fafb8c7f29e: push    %rax
  0x00007fafb8c7f29f: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c7f2a4: sub     $0x80,%rsp
  0x00007fafb8c7f2ab: mov     %rax,0x78(%rsp)
  0x00007fafb8c7f2b0: mov     %rcx,0x70(%rsp)
  0x00007fafb8c7f2b5: mov     %rdx,0x68(%rsp)
  0x00007fafb8c7f2ba: mov     %rbx,0x60(%rsp)
  0x00007fafb8c7f2bf: mov     %rbp,0x50(%rsp)
  0x00007fafb8c7f2c4: mov     %rsi,0x48(%rsp)
  0x00007fafb8c7f2c9: mov     %rdi,0x40(%rsp)
  0x00007fafb8c7f2ce: mov     %r8,0x38(%rsp)
  0x00007fafb8c7f2d3: mov     %r9,0x30(%rsp)
  0x00007fafb8c7f2d8: mov     %r10,0x28(%rsp)
  0x00007fafb8c7f2dd: mov     %r11,0x20(%rsp)
  0x00007fafb8c7f2e2: mov     %r12,0x18(%rsp)
  0x00007fafb8c7f2e7: mov     %r13,0x10(%rsp)
  0x00007fafb8c7f2ec: mov     %r14,0x8(%rsp)
  0x00007fafb8c7f2f1: mov     %r15,(%rsp)
  0x00007fafb8c7f2f5: movabs  $0x7fafd84617e3,%rdi
  0x00007fafb8c7f2ff: movabs  $0x7fafb8c7f29f,%rsi
  0x00007fafb8c7f309: mov     %rsp,%rdx
  0x00007fafb8c7f30c: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c7f310: callq   0x7fafd7fdd230
  0x00007fafb8c7f315: hlt
  0x00007fafb8c7f316: movzbl  0x1(%r13),%ebx
  0x00007fafb8c7f31b: incq    %r13
  0x00007fafb8c7f31e: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c7f328: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7f32c: nopl    0x0(%rax)
  0x00007fafb8c7f330: add     %al,(%rax)
  0x00007fafb8c7f332: add     %al,(%rax)
  0x00007fafb8c7f334: add     %al,(%rax)
  0x00007fafb8c7f336: add     %al,(%rax)
  0x00007fafb8c7f338: add     %al,(%rax)
  0x00007fafb8c7f33a: add     %al,(%rax)
  0x00007fafb8c7f33c: add     %al,(%rax)
  0x00007fafb8c7f33e: add     %al,(%rax)

----------------------------------------------------------------------
deoptimization entry points  [0x00007fafb8c7f360, 0x00007fafb8c82400]  12448 bytes

Argument 0 is unknown.RIP: 0x7fafb8c7f360 Code size: 0x000030a0
  0x00007fafb8c7f360: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c7f368: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7f36c: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7f370: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7f378: je      0x7fafb8c7f491
  0x00007fafb8c7f37e: callq   0x7fafb8c7f388
  0x00007fafb8c7f383: jmpq    0x7fafb8c7f41a
  0x00007fafb8c7f388: lea     0x8(%rsp),%rax
  0x00007fafb8c7f38d: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7f391: mov     %r15,%rdi
  0x00007fafb8c7f394: vzeroupper
  0x00007fafb8c7f397: mov     %rbp,0x330(%r15)
  0x00007fafb8c7f39e: mov     %rax,0x320(%r15)
  0x00007fafb8c7f3a5: test    $0xf,%esp
  0x00007fafb8c7f3ab: je      0x7fafb8c7f3c3
  0x00007fafb8c7f3b1: sub     $0x8,%rsp
  0x00007fafb8c7f3b5: callq   0x7fafd7d80970
  0x00007fafb8c7f3ba: add     $0x8,%rsp
  0x00007fafb8c7f3be: jmpq    0x7fafb8c7f3c8
  0x00007fafb8c7f3c3: callq   0x7fafd7d80970
  0x00007fafb8c7f3c8: movabs  $0x0,%r10
  0x00007fafb8c7f3d2: mov     %r10,0x320(%r15)
  0x00007fafb8c7f3d9: movabs  $0x0,%r10
  0x00007fafb8c7f3e3: mov     %r10,0x330(%r15)
  0x00007fafb8c7f3ea: movabs  $0x0,%r10
  0x00007fafb8c7f3f4: mov     %r10,0x328(%r15)
  0x00007fafb8c7f3fb: vzeroupper
  0x00007fafb8c7f3fe: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7f406: je      0x7fafb8c7f411
  0x00007fafb8c7f40c: jmpq    0x7fafb8c5c780
  0x00007fafb8c7f411: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7f415: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7f419: retq
  0x00007fafb8c7f41a: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c7f41f: sub     $0x80,%rsp
  0x00007fafb8c7f426: mov     %rax,0x78(%rsp)
  0x00007fafb8c7f42b: mov     %rcx,0x70(%rsp)
  0x00007fafb8c7f430: mov     %rdx,0x68(%rsp)
  0x00007fafb8c7f435: mov     %rbx,0x60(%rsp)
  0x00007fafb8c7f43a: mov     %rbp,0x50(%rsp)
  0x00007fafb8c7f43f: mov     %rsi,0x48(%rsp)
  0x00007fafb8c7f444: mov     %rdi,0x40(%rsp)
  0x00007fafb8c7f449: mov     %r8,0x38(%rsp)
  0x00007fafb8c7f44e: mov     %r9,0x30(%rsp)
  0x00007fafb8c7f453: mov     %r10,0x28(%rsp)
  0x00007fafb8c7f458: mov     %r11,0x20(%rsp)
  0x00007fafb8c7f45d: mov     %r12,0x18(%rsp)
  0x00007fafb8c7f462: mov     %r13,0x10(%rsp)
  0x00007fafb8c7f467: mov     %r14,0x8(%rsp)
  0x00007fafb8c7f46c: mov     %r15,(%rsp)
  0x00007fafb8c7f470: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c7f47a: movabs  $0x7fafb8c7f41a,%rsi
  0x00007fafb8c7f484: mov     %rsp,%rdx
  0x00007fafb8c7f487: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c7f48b: callq   0x7fafd7fdd230
  0x00007fafb8c7f490: hlt
  0x00007fafb8c7f491: movzbl  0x0(%r13),%ebx
  0x00007fafb8c7f496: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c7f4a0: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7f4a4: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c7f4ac: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7f4b0: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7f4b4: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7f4bc: je      0x7fafb8c7f5d5
  0x00007fafb8c7f4c2: callq   0x7fafb8c7f4cc
  0x00007fafb8c7f4c7: jmpq    0x7fafb8c7f55e
  0x00007fafb8c7f4cc: lea     0x8(%rsp),%rax
  0x00007fafb8c7f4d1: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7f4d5: mov     %r15,%rdi
  0x00007fafb8c7f4d8: vzeroupper
  0x00007fafb8c7f4db: mov     %rbp,0x330(%r15)
  0x00007fafb8c7f4e2: mov     %rax,0x320(%r15)
  0x00007fafb8c7f4e9: test    $0xf,%esp
  0x00007fafb8c7f4ef: je      0x7fafb8c7f507
  0x00007fafb8c7f4f5: sub     $0x8,%rsp
  0x00007fafb8c7f4f9: callq   0x7fafd7d80970
  0x00007fafb8c7f4fe: add     $0x8,%rsp
  0x00007fafb8c7f502: jmpq    0x7fafb8c7f50c
  0x00007fafb8c7f507: callq   0x7fafd7d80970
  0x00007fafb8c7f50c: movabs  $0x0,%r10
  0x00007fafb8c7f516: mov     %r10,0x320(%r15)
  0x00007fafb8c7f51d: movabs  $0x0,%r10
  0x00007fafb8c7f527: mov     %r10,0x330(%r15)
  0x00007fafb8c7f52e: movabs  $0x0,%r10
  0x00007fafb8c7f538: mov     %r10,0x328(%r15)
  0x00007fafb8c7f53f: vzeroupper
  0x00007fafb8c7f542: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7f54a: je      0x7fafb8c7f555
  0x00007fafb8c7f550: jmpq    0x7fafb8c5c780
  0x00007fafb8c7f555: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7f559: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7f55d: retq
  0x00007fafb8c7f55e: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c7f563: sub     $0x80,%rsp
  0x00007fafb8c7f56a: mov     %rax,0x78(%rsp)
  0x00007fafb8c7f56f: mov     %rcx,0x70(%rsp)
  0x00007fafb8c7f574: mov     %rdx,0x68(%rsp)
  0x00007fafb8c7f579: mov     %rbx,0x60(%rsp)
  0x00007fafb8c7f57e: mov     %rbp,0x50(%rsp)
  0x00007fafb8c7f583: mov     %rsi,0x48(%rsp)
  0x00007fafb8c7f588: mov     %rdi,0x40(%rsp)
  0x00007fafb8c7f58d: mov     %r8,0x38(%rsp)
  0x00007fafb8c7f592: mov     %r9,0x30(%rsp)
  0x00007fafb8c7f597: mov     %r10,0x28(%rsp)
  0x00007fafb8c7f59c: mov     %r11,0x20(%rsp)
  0x00007fafb8c7f5a1: mov     %r12,0x18(%rsp)
  0x00007fafb8c7f5a6: mov     %r13,0x10(%rsp)
  0x00007fafb8c7f5ab: mov     %r14,0x8(%rsp)
  0x00007fafb8c7f5b0: mov     %r15,(%rsp)
  0x00007fafb8c7f5b4: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c7f5be: movabs  $0x7fafb8c7f55e,%rsi
  0x00007fafb8c7f5c8: mov     %rsp,%rdx
  0x00007fafb8c7f5cb: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c7f5cf: callq   0x7fafd7fdd230
  0x00007fafb8c7f5d4: hlt
  0x00007fafb8c7f5d5: movzbl  0x1(%r13),%ebx
  0x00007fafb8c7f5da: incq    %r13
  0x00007fafb8c7f5dd: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c7f5e7: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7f5eb: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c7f5f3: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7f5f7: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7f5fb: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7f603: je      0x7fafb8c7f71c
  0x00007fafb8c7f609: callq   0x7fafb8c7f613
  0x00007fafb8c7f60e: jmpq    0x7fafb8c7f6a5
  0x00007fafb8c7f613: lea     0x8(%rsp),%rax
  0x00007fafb8c7f618: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7f61c: mov     %r15,%rdi
  0x00007fafb8c7f61f: vzeroupper
  0x00007fafb8c7f622: mov     %rbp,0x330(%r15)
  0x00007fafb8c7f629: mov     %rax,0x320(%r15)
  0x00007fafb8c7f630: test    $0xf,%esp
  0x00007fafb8c7f636: je      0x7fafb8c7f64e
  0x00007fafb8c7f63c: sub     $0x8,%rsp
  0x00007fafb8c7f640: callq   0x7fafd7d80970
  0x00007fafb8c7f645: add     $0x8,%rsp
  0x00007fafb8c7f649: jmpq    0x7fafb8c7f653
  0x00007fafb8c7f64e: callq   0x7fafd7d80970
  0x00007fafb8c7f653: movabs  $0x0,%r10
  0x00007fafb8c7f65d: mov     %r10,0x320(%r15)
  0x00007fafb8c7f664: movabs  $0x0,%r10
  0x00007fafb8c7f66e: mov     %r10,0x330(%r15)
  0x00007fafb8c7f675: movabs  $0x0,%r10
  0x00007fafb8c7f67f: mov     %r10,0x328(%r15)
  0x00007fafb8c7f686: vzeroupper
  0x00007fafb8c7f689: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7f691: je      0x7fafb8c7f69c
  0x00007fafb8c7f697: jmpq    0x7fafb8c5c780
  0x00007fafb8c7f69c: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7f6a0: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7f6a4: retq
  0x00007fafb8c7f6a5: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c7f6aa: sub     $0x80,%rsp
  0x00007fafb8c7f6b1: mov     %rax,0x78(%rsp)
  0x00007fafb8c7f6b6: mov     %rcx,0x70(%rsp)
  0x00007fafb8c7f6bb: mov     %rdx,0x68(%rsp)
  0x00007fafb8c7f6c0: mov     %rbx,0x60(%rsp)
  0x00007fafb8c7f6c5: mov     %rbp,0x50(%rsp)
  0x00007fafb8c7f6ca: mov     %rsi,0x48(%rsp)
  0x00007fafb8c7f6cf: mov     %rdi,0x40(%rsp)
  0x00007fafb8c7f6d4: mov     %r8,0x38(%rsp)
  0x00007fafb8c7f6d9: mov     %r9,0x30(%rsp)
  0x00007fafb8c7f6de: mov     %r10,0x28(%rsp)
  0x00007fafb8c7f6e3: mov     %r11,0x20(%rsp)
  0x00007fafb8c7f6e8: mov     %r12,0x18(%rsp)
  0x00007fafb8c7f6ed: mov     %r13,0x10(%rsp)
  0x00007fafb8c7f6f2: mov     %r14,0x8(%rsp)
  0x00007fafb8c7f6f7: mov     %r15,(%rsp)
  0x00007fafb8c7f6fb: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c7f705: movabs  $0x7fafb8c7f6a5,%rsi
  0x00007fafb8c7f70f: mov     %rsp,%rdx
  0x00007fafb8c7f712: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c7f716: callq   0x7fafd7fdd230
  0x00007fafb8c7f71b: hlt
  0x00007fafb8c7f71c: movzbl  0x1(%r13),%ebx
  0x00007fafb8c7f721: incq    %r13
  0x00007fafb8c7f724: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c7f72e: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7f732: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c7f73a: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7f73e: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7f742: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7f74a: je      0x7fafb8c7f863
  0x00007fafb8c7f750: callq   0x7fafb8c7f75a
  0x00007fafb8c7f755: jmpq    0x7fafb8c7f7ec
  0x00007fafb8c7f75a: lea     0x8(%rsp),%rax
  0x00007fafb8c7f75f: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7f763: mov     %r15,%rdi
  0x00007fafb8c7f766: vzeroupper
  0x00007fafb8c7f769: mov     %rbp,0x330(%r15)
  0x00007fafb8c7f770: mov     %rax,0x320(%r15)
  0x00007fafb8c7f777: test    $0xf,%esp
  0x00007fafb8c7f77d: je      0x7fafb8c7f795
  0x00007fafb8c7f783: sub     $0x8,%rsp
  0x00007fafb8c7f787: callq   0x7fafd7d80970
  0x00007fafb8c7f78c: add     $0x8,%rsp
  0x00007fafb8c7f790: jmpq    0x7fafb8c7f79a
  0x00007fafb8c7f795: callq   0x7fafd7d80970
  0x00007fafb8c7f79a: movabs  $0x0,%r10
  0x00007fafb8c7f7a4: mov     %r10,0x320(%r15)
  0x00007fafb8c7f7ab: movabs  $0x0,%r10
  0x00007fafb8c7f7b5: mov     %r10,0x330(%r15)
  0x00007fafb8c7f7bc: movabs  $0x0,%r10
  0x00007fafb8c7f7c6: mov     %r10,0x328(%r15)
  0x00007fafb8c7f7cd: vzeroupper
  0x00007fafb8c7f7d0: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7f7d8: je      0x7fafb8c7f7e3
  0x00007fafb8c7f7de: jmpq    0x7fafb8c5c780
  0x00007fafb8c7f7e3: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7f7e7: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7f7eb: retq
  0x00007fafb8c7f7ec: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c7f7f1: sub     $0x80,%rsp
  0x00007fafb8c7f7f8: mov     %rax,0x78(%rsp)
  0x00007fafb8c7f7fd: mov     %rcx,0x70(%rsp)
  0x00007fafb8c7f802: mov     %rdx,0x68(%rsp)
  0x00007fafb8c7f807: mov     %rbx,0x60(%rsp)
  0x00007fafb8c7f80c: mov     %rbp,0x50(%rsp)
  0x00007fafb8c7f811: mov     %rsi,0x48(%rsp)
  0x00007fafb8c7f816: mov     %rdi,0x40(%rsp)
  0x00007fafb8c7f81b: mov     %r8,0x38(%rsp)
  0x00007fafb8c7f820: mov     %r9,0x30(%rsp)
  0x00007fafb8c7f825: mov     %r10,0x28(%rsp)
  0x00007fafb8c7f82a: mov     %r11,0x20(%rsp)
  0x00007fafb8c7f82f: mov     %r12,0x18(%rsp)
  0x00007fafb8c7f834: mov     %r13,0x10(%rsp)
  0x00007fafb8c7f839: mov     %r14,0x8(%rsp)
  0x00007fafb8c7f83e: mov     %r15,(%rsp)
  0x00007fafb8c7f842: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c7f84c: movabs  $0x7fafb8c7f7ec,%rsi
  0x00007fafb8c7f856: mov     %rsp,%rdx
  0x00007fafb8c7f859: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c7f85d: callq   0x7fafd7fdd230
  0x00007fafb8c7f862: hlt
  0x00007fafb8c7f863: movzbl  0x1(%r13),%ebx
  0x00007fafb8c7f868: incq    %r13
  0x00007fafb8c7f86b: movabs  $0x7fafd89a7080,%r10
  0x00007fafb8c7f875: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7f879: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c7f881: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7f885: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7f889: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7f891: je      0x7fafb8c7f9aa
  0x00007fafb8c7f897: callq   0x7fafb8c7f8a1
  0x00007fafb8c7f89c: jmpq    0x7fafb8c7f933
  0x00007fafb8c7f8a1: lea     0x8(%rsp),%rax
  0x00007fafb8c7f8a6: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7f8aa: mov     %r15,%rdi
  0x00007fafb8c7f8ad: vzeroupper
  0x00007fafb8c7f8b0: mov     %rbp,0x330(%r15)
  0x00007fafb8c7f8b7: mov     %rax,0x320(%r15)
  0x00007fafb8c7f8be: test    $0xf,%esp
  0x00007fafb8c7f8c4: je      0x7fafb8c7f8dc
  0x00007fafb8c7f8ca: sub     $0x8,%rsp
  0x00007fafb8c7f8ce: callq   0x7fafd7d80970
  0x00007fafb8c7f8d3: add     $0x8,%rsp
  0x00007fafb8c7f8d7: jmpq    0x7fafb8c7f8e1
  0x00007fafb8c7f8dc: callq   0x7fafd7d80970
  0x00007fafb8c7f8e1: movabs  $0x0,%r10
  0x00007fafb8c7f8eb: mov     %r10,0x320(%r15)
  0x00007fafb8c7f8f2: movabs  $0x0,%r10
  0x00007fafb8c7f8fc: mov     %r10,0x330(%r15)
  0x00007fafb8c7f903: movabs  $0x0,%r10
  0x00007fafb8c7f90d: mov     %r10,0x328(%r15)
  0x00007fafb8c7f914: vzeroupper
  0x00007fafb8c7f917: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7f91f: je      0x7fafb8c7f92a
  0x00007fafb8c7f925: jmpq    0x7fafb8c5c780
  0x00007fafb8c7f92a: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7f92e: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7f932: retq
  0x00007fafb8c7f933: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c7f938: sub     $0x80,%rsp
  0x00007fafb8c7f93f: mov     %rax,0x78(%rsp)
  0x00007fafb8c7f944: mov     %rcx,0x70(%rsp)
  0x00007fafb8c7f949: mov     %rdx,0x68(%rsp)
  0x00007fafb8c7f94e: mov     %rbx,0x60(%rsp)
  0x00007fafb8c7f953: mov     %rbp,0x50(%rsp)
  0x00007fafb8c7f958: mov     %rsi,0x48(%rsp)
  0x00007fafb8c7f95d: mov     %rdi,0x40(%rsp)
  0x00007fafb8c7f962: mov     %r8,0x38(%rsp)
  0x00007fafb8c7f967: mov     %r9,0x30(%rsp)
  0x00007fafb8c7f96c: mov     %r10,0x28(%rsp)
  0x00007fafb8c7f971: mov     %r11,0x20(%rsp)
  0x00007fafb8c7f976: mov     %r12,0x18(%rsp)
  0x00007fafb8c7f97b: mov     %r13,0x10(%rsp)
  0x00007fafb8c7f980: mov     %r14,0x8(%rsp)
  0x00007fafb8c7f985: mov     %r15,(%rsp)
  0x00007fafb8c7f989: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c7f993: movabs  $0x7fafb8c7f933,%rsi
  0x00007fafb8c7f99d: mov     %rsp,%rdx
  0x00007fafb8c7f9a0: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c7f9a4: callq   0x7fafd7fdd230
  0x00007fafb8c7f9a9: hlt
  0x00007fafb8c7f9aa: movzbl  0x1(%r13),%ebx
  0x00007fafb8c7f9af: incq    %r13
  0x00007fafb8c7f9b2: movabs  $0x7fafd89a6880,%r10
  0x00007fafb8c7f9bc: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7f9c0: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c7f9c8: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7f9cc: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7f9d0: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7f9d8: je      0x7fafb8c7faf1
  0x00007fafb8c7f9de: callq   0x7fafb8c7f9e8
  0x00007fafb8c7f9e3: jmpq    0x7fafb8c7fa7a
  0x00007fafb8c7f9e8: lea     0x8(%rsp),%rax
  0x00007fafb8c7f9ed: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7f9f1: mov     %r15,%rdi
  0x00007fafb8c7f9f4: vzeroupper
  0x00007fafb8c7f9f7: mov     %rbp,0x330(%r15)
  0x00007fafb8c7f9fe: mov     %rax,0x320(%r15)
  0x00007fafb8c7fa05: test    $0xf,%esp
  0x00007fafb8c7fa0b: je      0x7fafb8c7fa23
  0x00007fafb8c7fa11: sub     $0x8,%rsp
  0x00007fafb8c7fa15: callq   0x7fafd7d80970
  0x00007fafb8c7fa1a: add     $0x8,%rsp
  0x00007fafb8c7fa1e: jmpq    0x7fafb8c7fa28
  0x00007fafb8c7fa23: callq   0x7fafd7d80970
  0x00007fafb8c7fa28: movabs  $0x0,%r10
  0x00007fafb8c7fa32: mov     %r10,0x320(%r15)
  0x00007fafb8c7fa39: movabs  $0x0,%r10
  0x00007fafb8c7fa43: mov     %r10,0x330(%r15)
  0x00007fafb8c7fa4a: movabs  $0x0,%r10
  0x00007fafb8c7fa54: mov     %r10,0x328(%r15)
  0x00007fafb8c7fa5b: vzeroupper
  0x00007fafb8c7fa5e: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7fa66: je      0x7fafb8c7fa71
  0x00007fafb8c7fa6c: jmpq    0x7fafb8c5c780
  0x00007fafb8c7fa71: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7fa75: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7fa79: retq
  0x00007fafb8c7fa7a: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c7fa7f: sub     $0x80,%rsp
  0x00007fafb8c7fa86: mov     %rax,0x78(%rsp)
  0x00007fafb8c7fa8b: mov     %rcx,0x70(%rsp)
  0x00007fafb8c7fa90: mov     %rdx,0x68(%rsp)
  0x00007fafb8c7fa95: mov     %rbx,0x60(%rsp)
  0x00007fafb8c7fa9a: mov     %rbp,0x50(%rsp)
  0x00007fafb8c7fa9f: mov     %rsi,0x48(%rsp)
  0x00007fafb8c7faa4: mov     %rdi,0x40(%rsp)
  0x00007fafb8c7faa9: mov     %r8,0x38(%rsp)
  0x00007fafb8c7faae: mov     %r9,0x30(%rsp)
  0x00007fafb8c7fab3: mov     %r10,0x28(%rsp)
  0x00007fafb8c7fab8: mov     %r11,0x20(%rsp)
  0x00007fafb8c7fabd: mov     %r12,0x18(%rsp)
  0x00007fafb8c7fac2: mov     %r13,0x10(%rsp)
  0x00007fafb8c7fac7: mov     %r14,0x8(%rsp)
  0x00007fafb8c7facc: mov     %r15,(%rsp)
  0x00007fafb8c7fad0: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c7fada: movabs  $0x7fafb8c7fa7a,%rsi
  0x00007fafb8c7fae4: mov     %rsp,%rdx
  0x00007fafb8c7fae7: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c7faeb: callq   0x7fafd7fdd230
  0x00007fafb8c7faf0: hlt
  0x00007fafb8c7faf1: movzbl  0x1(%r13),%ebx
  0x00007fafb8c7faf6: incq    %r13
  0x00007fafb8c7faf9: movabs  $0x7fafd89a6080,%r10
  0x00007fafb8c7fb03: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7fb07: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c7fb0f: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7fb13: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7fb17: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7fb1f: je      0x7fafb8c7fc38
  0x00007fafb8c7fb25: callq   0x7fafb8c7fb2f
  0x00007fafb8c7fb2a: jmpq    0x7fafb8c7fbc1
  0x00007fafb8c7fb2f: lea     0x8(%rsp),%rax
  0x00007fafb8c7fb34: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7fb38: mov     %r15,%rdi
  0x00007fafb8c7fb3b: vzeroupper
  0x00007fafb8c7fb3e: mov     %rbp,0x330(%r15)
  0x00007fafb8c7fb45: mov     %rax,0x320(%r15)
  0x00007fafb8c7fb4c: test    $0xf,%esp
  0x00007fafb8c7fb52: je      0x7fafb8c7fb6a
  0x00007fafb8c7fb58: sub     $0x8,%rsp
  0x00007fafb8c7fb5c: callq   0x7fafd7d80970
  0x00007fafb8c7fb61: add     $0x8,%rsp
  0x00007fafb8c7fb65: jmpq    0x7fafb8c7fb6f
  0x00007fafb8c7fb6a: callq   0x7fafd7d80970
  0x00007fafb8c7fb6f: movabs  $0x0,%r10
  0x00007fafb8c7fb79: mov     %r10,0x320(%r15)
  0x00007fafb8c7fb80: movabs  $0x0,%r10
  0x00007fafb8c7fb8a: mov     %r10,0x330(%r15)
  0x00007fafb8c7fb91: movabs  $0x0,%r10
  0x00007fafb8c7fb9b: mov     %r10,0x328(%r15)
  0x00007fafb8c7fba2: vzeroupper
  0x00007fafb8c7fba5: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7fbad: je      0x7fafb8c7fbb8
  0x00007fafb8c7fbb3: jmpq    0x7fafb8c5c780
  0x00007fafb8c7fbb8: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7fbbc: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7fbc0: retq
  0x00007fafb8c7fbc1: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c7fbc6: sub     $0x80,%rsp
  0x00007fafb8c7fbcd: mov     %rax,0x78(%rsp)
  0x00007fafb8c7fbd2: mov     %rcx,0x70(%rsp)
  0x00007fafb8c7fbd7: mov     %rdx,0x68(%rsp)
  0x00007fafb8c7fbdc: mov     %rbx,0x60(%rsp)
  0x00007fafb8c7fbe1: mov     %rbp,0x50(%rsp)
  0x00007fafb8c7fbe6: mov     %rsi,0x48(%rsp)
  0x00007fafb8c7fbeb: mov     %rdi,0x40(%rsp)
  0x00007fafb8c7fbf0: mov     %r8,0x38(%rsp)
  0x00007fafb8c7fbf5: mov     %r9,0x30(%rsp)
  0x00007fafb8c7fbfa: mov     %r10,0x28(%rsp)
  0x00007fafb8c7fbff: mov     %r11,0x20(%rsp)
  0x00007fafb8c7fc04: mov     %r12,0x18(%rsp)
  0x00007fafb8c7fc09: mov     %r13,0x10(%rsp)
  0x00007fafb8c7fc0e: mov     %r14,0x8(%rsp)
  0x00007fafb8c7fc13: mov     %r15,(%rsp)
  0x00007fafb8c7fc17: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c7fc21: movabs  $0x7fafb8c7fbc1,%rsi
  0x00007fafb8c7fc2b: mov     %rsp,%rdx
  0x00007fafb8c7fc2e: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c7fc32: callq   0x7fafd7fdd230
  0x00007fafb8c7fc37: hlt
  0x00007fafb8c7fc38: movzbl  0x1(%r13),%ebx
  0x00007fafb8c7fc3d: incq    %r13
  0x00007fafb8c7fc40: movabs  $0x7fafd89a7880,%r10
  0x00007fafb8c7fc4a: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7fc4e: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c7fc56: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7fc5a: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7fc5e: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7fc66: je      0x7fafb8c7fd7f
  0x00007fafb8c7fc6c: callq   0x7fafb8c7fc76
  0x00007fafb8c7fc71: jmpq    0x7fafb8c7fd08
  0x00007fafb8c7fc76: lea     0x8(%rsp),%rax
  0x00007fafb8c7fc7b: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7fc7f: mov     %r15,%rdi
  0x00007fafb8c7fc82: vzeroupper
  0x00007fafb8c7fc85: mov     %rbp,0x330(%r15)
  0x00007fafb8c7fc8c: mov     %rax,0x320(%r15)
  0x00007fafb8c7fc93: test    $0xf,%esp
  0x00007fafb8c7fc99: je      0x7fafb8c7fcb1
  0x00007fafb8c7fc9f: sub     $0x8,%rsp
  0x00007fafb8c7fca3: callq   0x7fafd7d80970
  0x00007fafb8c7fca8: add     $0x8,%rsp
  0x00007fafb8c7fcac: jmpq    0x7fafb8c7fcb6
  0x00007fafb8c7fcb1: callq   0x7fafd7d80970
  0x00007fafb8c7fcb6: movabs  $0x0,%r10
  0x00007fafb8c7fcc0: mov     %r10,0x320(%r15)
  0x00007fafb8c7fcc7: movabs  $0x0,%r10
  0x00007fafb8c7fcd1: mov     %r10,0x330(%r15)
  0x00007fafb8c7fcd8: movabs  $0x0,%r10
  0x00007fafb8c7fce2: mov     %r10,0x328(%r15)
  0x00007fafb8c7fce9: vzeroupper
  0x00007fafb8c7fcec: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7fcf4: je      0x7fafb8c7fcff
  0x00007fafb8c7fcfa: jmpq    0x7fafb8c5c780
  0x00007fafb8c7fcff: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7fd03: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7fd07: retq
  0x00007fafb8c7fd08: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c7fd0d: sub     $0x80,%rsp
  0x00007fafb8c7fd14: mov     %rax,0x78(%rsp)
  0x00007fafb8c7fd19: mov     %rcx,0x70(%rsp)
  0x00007fafb8c7fd1e: mov     %rdx,0x68(%rsp)
  0x00007fafb8c7fd23: mov     %rbx,0x60(%rsp)
  0x00007fafb8c7fd28: mov     %rbp,0x50(%rsp)
  0x00007fafb8c7fd2d: mov     %rsi,0x48(%rsp)
  0x00007fafb8c7fd32: mov     %rdi,0x40(%rsp)
  0x00007fafb8c7fd37: mov     %r8,0x38(%rsp)
  0x00007fafb8c7fd3c: mov     %r9,0x30(%rsp)
  0x00007fafb8c7fd41: mov     %r10,0x28(%rsp)
  0x00007fafb8c7fd46: mov     %r11,0x20(%rsp)
  0x00007fafb8c7fd4b: mov     %r12,0x18(%rsp)
  0x00007fafb8c7fd50: mov     %r13,0x10(%rsp)
  0x00007fafb8c7fd55: mov     %r14,0x8(%rsp)
  0x00007fafb8c7fd5a: mov     %r15,(%rsp)
  0x00007fafb8c7fd5e: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c7fd68: movabs  $0x7fafb8c7fd08,%rsi
  0x00007fafb8c7fd72: mov     %rsp,%rdx
  0x00007fafb8c7fd75: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c7fd79: callq   0x7fafd7fdd230
  0x00007fafb8c7fd7e: hlt
  0x00007fafb8c7fd7f: movzbl  0x2(%r13),%ebx
  0x00007fafb8c7fd84: add     $0x2,%r13
  0x00007fafb8c7fd88: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c7fd92: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7fd96: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c7fd9e: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7fda2: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7fda6: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7fdae: je      0x7fafb8c7fec7
  0x00007fafb8c7fdb4: callq   0x7fafb8c7fdbe
  0x00007fafb8c7fdb9: jmpq    0x7fafb8c7fe50
  0x00007fafb8c7fdbe: lea     0x8(%rsp),%rax
  0x00007fafb8c7fdc3: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7fdc7: mov     %r15,%rdi
  0x00007fafb8c7fdca: vzeroupper
  0x00007fafb8c7fdcd: mov     %rbp,0x330(%r15)
  0x00007fafb8c7fdd4: mov     %rax,0x320(%r15)
  0x00007fafb8c7fddb: test    $0xf,%esp
  0x00007fafb8c7fde1: je      0x7fafb8c7fdf9
  0x00007fafb8c7fde7: sub     $0x8,%rsp
  0x00007fafb8c7fdeb: callq   0x7fafd7d80970
  0x00007fafb8c7fdf0: add     $0x8,%rsp
  0x00007fafb8c7fdf4: jmpq    0x7fafb8c7fdfe
  0x00007fafb8c7fdf9: callq   0x7fafd7d80970
  0x00007fafb8c7fdfe: movabs  $0x0,%r10
  0x00007fafb8c7fe08: mov     %r10,0x320(%r15)
  0x00007fafb8c7fe0f: movabs  $0x0,%r10
  0x00007fafb8c7fe19: mov     %r10,0x330(%r15)
  0x00007fafb8c7fe20: movabs  $0x0,%r10
  0x00007fafb8c7fe2a: mov     %r10,0x328(%r15)
  0x00007fafb8c7fe31: vzeroupper
  0x00007fafb8c7fe34: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7fe3c: je      0x7fafb8c7fe47
  0x00007fafb8c7fe42: jmpq    0x7fafb8c5c780
  0x00007fafb8c7fe47: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7fe4b: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7fe4f: retq
  0x00007fafb8c7fe50: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c7fe55: sub     $0x80,%rsp
  0x00007fafb8c7fe5c: mov     %rax,0x78(%rsp)
  0x00007fafb8c7fe61: mov     %rcx,0x70(%rsp)
  0x00007fafb8c7fe66: mov     %rdx,0x68(%rsp)
  0x00007fafb8c7fe6b: mov     %rbx,0x60(%rsp)
  0x00007fafb8c7fe70: mov     %rbp,0x50(%rsp)
  0x00007fafb8c7fe75: mov     %rsi,0x48(%rsp)
  0x00007fafb8c7fe7a: mov     %rdi,0x40(%rsp)
  0x00007fafb8c7fe7f: mov     %r8,0x38(%rsp)
  0x00007fafb8c7fe84: mov     %r9,0x30(%rsp)
  0x00007fafb8c7fe89: mov     %r10,0x28(%rsp)
  0x00007fafb8c7fe8e: mov     %r11,0x20(%rsp)
  0x00007fafb8c7fe93: mov     %r12,0x18(%rsp)
  0x00007fafb8c7fe98: mov     %r13,0x10(%rsp)
  0x00007fafb8c7fe9d: mov     %r14,0x8(%rsp)
  0x00007fafb8c7fea2: mov     %r15,(%rsp)
  0x00007fafb8c7fea6: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c7feb0: movabs  $0x7fafb8c7fe50,%rsi
  0x00007fafb8c7feba: mov     %rsp,%rdx
  0x00007fafb8c7febd: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c7fec1: callq   0x7fafd7fdd230
  0x00007fafb8c7fec6: hlt
  0x00007fafb8c7fec7: movzbl  0x2(%r13),%ebx
  0x00007fafb8c7fecc: add     $0x2,%r13
  0x00007fafb8c7fed0: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c7feda: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c7fede: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c7fee6: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7feea: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7feee: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7fef6: je      0x7fafb8c8000f
  0x00007fafb8c7fefc: callq   0x7fafb8c7ff06
  0x00007fafb8c7ff01: jmpq    0x7fafb8c7ff98
  0x00007fafb8c7ff06: lea     0x8(%rsp),%rax
  0x00007fafb8c7ff0b: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c7ff0f: mov     %r15,%rdi
  0x00007fafb8c7ff12: vzeroupper
  0x00007fafb8c7ff15: mov     %rbp,0x330(%r15)
  0x00007fafb8c7ff1c: mov     %rax,0x320(%r15)
  0x00007fafb8c7ff23: test    $0xf,%esp
  0x00007fafb8c7ff29: je      0x7fafb8c7ff41
  0x00007fafb8c7ff2f: sub     $0x8,%rsp
  0x00007fafb8c7ff33: callq   0x7fafd7d80970
  0x00007fafb8c7ff38: add     $0x8,%rsp
  0x00007fafb8c7ff3c: jmpq    0x7fafb8c7ff46
  0x00007fafb8c7ff41: callq   0x7fafd7d80970
  0x00007fafb8c7ff46: movabs  $0x0,%r10
  0x00007fafb8c7ff50: mov     %r10,0x320(%r15)
  0x00007fafb8c7ff57: movabs  $0x0,%r10
  0x00007fafb8c7ff61: mov     %r10,0x330(%r15)
  0x00007fafb8c7ff68: movabs  $0x0,%r10
  0x00007fafb8c7ff72: mov     %r10,0x328(%r15)
  0x00007fafb8c7ff79: vzeroupper
  0x00007fafb8c7ff7c: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c7ff84: je      0x7fafb8c7ff8f
  0x00007fafb8c7ff8a: jmpq    0x7fafb8c5c780
  0x00007fafb8c7ff8f: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c7ff93: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c7ff97: retq
  0x00007fafb8c7ff98: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c7ff9d: sub     $0x80,%rsp
  0x00007fafb8c7ffa4: mov     %rax,0x78(%rsp)
  0x00007fafb8c7ffa9: mov     %rcx,0x70(%rsp)
  0x00007fafb8c7ffae: mov     %rdx,0x68(%rsp)
  0x00007fafb8c7ffb3: mov     %rbx,0x60(%rsp)
  0x00007fafb8c7ffb8: mov     %rbp,0x50(%rsp)
  0x00007fafb8c7ffbd: mov     %rsi,0x48(%rsp)
  0x00007fafb8c7ffc2: mov     %rdi,0x40(%rsp)
  0x00007fafb8c7ffc7: mov     %r8,0x38(%rsp)
  0x00007fafb8c7ffcc: mov     %r9,0x30(%rsp)
  0x00007fafb8c7ffd1: mov     %r10,0x28(%rsp)
  0x00007fafb8c7ffd6: mov     %r11,0x20(%rsp)
  0x00007fafb8c7ffdb: mov     %r12,0x18(%rsp)
  0x00007fafb8c7ffe0: mov     %r13,0x10(%rsp)
  0x00007fafb8c7ffe5: mov     %r14,0x8(%rsp)
  0x00007fafb8c7ffea: mov     %r15,(%rsp)
  0x00007fafb8c7ffee: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c7fff8: movabs  $0x7fafb8c7ff98,%rsi
  0x00007fafb8c80002: mov     %rsp,%rdx
  0x00007fafb8c80005: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c80009: callq   0x7fafd7fdd230
  0x00007fafb8c8000e: hlt
  0x00007fafb8c8000f: movzbl  0x2(%r13),%ebx
  0x00007fafb8c80014: add     $0x2,%r13
  0x00007fafb8c80018: movabs  $0x7fafd89a7080,%r10
  0x00007fafb8c80022: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c80026: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c8002e: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c80032: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c80036: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c8003e: je      0x7fafb8c80157
  0x00007fafb8c80044: callq   0x7fafb8c8004e
  0x00007fafb8c80049: jmpq    0x7fafb8c800e0
  0x00007fafb8c8004e: lea     0x8(%rsp),%rax
  0x00007fafb8c80053: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c80057: mov     %r15,%rdi
  0x00007fafb8c8005a: vzeroupper
  0x00007fafb8c8005d: mov     %rbp,0x330(%r15)
  0x00007fafb8c80064: mov     %rax,0x320(%r15)
  0x00007fafb8c8006b: test    $0xf,%esp
  0x00007fafb8c80071: je      0x7fafb8c80089
  0x00007fafb8c80077: sub     $0x8,%rsp
  0x00007fafb8c8007b: callq   0x7fafd7d80970
  0x00007fafb8c80080: add     $0x8,%rsp
  0x00007fafb8c80084: jmpq    0x7fafb8c8008e
  0x00007fafb8c80089: callq   0x7fafd7d80970
  0x00007fafb8c8008e: movabs  $0x0,%r10
  0x00007fafb8c80098: mov     %r10,0x320(%r15)
  0x00007fafb8c8009f: movabs  $0x0,%r10
  0x00007fafb8c800a9: mov     %r10,0x330(%r15)
  0x00007fafb8c800b0: movabs  $0x0,%r10
  0x00007fafb8c800ba: mov     %r10,0x328(%r15)
  0x00007fafb8c800c1: vzeroupper
  0x00007fafb8c800c4: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c800cc: je      0x7fafb8c800d7
  0x00007fafb8c800d2: jmpq    0x7fafb8c5c780
  0x00007fafb8c800d7: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c800db: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c800df: retq
  0x00007fafb8c800e0: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c800e5: sub     $0x80,%rsp
  0x00007fafb8c800ec: mov     %rax,0x78(%rsp)
  0x00007fafb8c800f1: mov     %rcx,0x70(%rsp)
  0x00007fafb8c800f6: mov     %rdx,0x68(%rsp)
  0x00007fafb8c800fb: mov     %rbx,0x60(%rsp)
  0x00007fafb8c80100: mov     %rbp,0x50(%rsp)
  0x00007fafb8c80105: mov     %rsi,0x48(%rsp)
  0x00007fafb8c8010a: mov     %rdi,0x40(%rsp)
  0x00007fafb8c8010f: mov     %r8,0x38(%rsp)
  0x00007fafb8c80114: mov     %r9,0x30(%rsp)
  0x00007fafb8c80119: mov     %r10,0x28(%rsp)
  0x00007fafb8c8011e: mov     %r11,0x20(%rsp)
  0x00007fafb8c80123: mov     %r12,0x18(%rsp)
  0x00007fafb8c80128: mov     %r13,0x10(%rsp)
  0x00007fafb8c8012d: mov     %r14,0x8(%rsp)
  0x00007fafb8c80132: mov     %r15,(%rsp)
  0x00007fafb8c80136: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c80140: movabs  $0x7fafb8c800e0,%rsi
  0x00007fafb8c8014a: mov     %rsp,%rdx
  0x00007fafb8c8014d: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c80151: callq   0x7fafd7fdd230
  0x00007fafb8c80156: hlt
  0x00007fafb8c80157: movzbl  0x2(%r13),%ebx
  0x00007fafb8c8015c: add     $0x2,%r13
  0x00007fafb8c80160: movabs  $0x7fafd89a6880,%r10
  0x00007fafb8c8016a: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c8016e: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c80176: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c8017a: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c8017e: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c80186: je      0x7fafb8c8029f
  0x00007fafb8c8018c: callq   0x7fafb8c80196
  0x00007fafb8c80191: jmpq    0x7fafb8c80228
  0x00007fafb8c80196: lea     0x8(%rsp),%rax
  0x00007fafb8c8019b: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c8019f: mov     %r15,%rdi
  0x00007fafb8c801a2: vzeroupper
  0x00007fafb8c801a5: mov     %rbp,0x330(%r15)
  0x00007fafb8c801ac: mov     %rax,0x320(%r15)
  0x00007fafb8c801b3: test    $0xf,%esp
  0x00007fafb8c801b9: je      0x7fafb8c801d1
  0x00007fafb8c801bf: sub     $0x8,%rsp
  0x00007fafb8c801c3: callq   0x7fafd7d80970
  0x00007fafb8c801c8: add     $0x8,%rsp
  0x00007fafb8c801cc: jmpq    0x7fafb8c801d6
  0x00007fafb8c801d1: callq   0x7fafd7d80970
  0x00007fafb8c801d6: movabs  $0x0,%r10
  0x00007fafb8c801e0: mov     %r10,0x320(%r15)
  0x00007fafb8c801e7: movabs  $0x0,%r10
  0x00007fafb8c801f1: mov     %r10,0x330(%r15)
  0x00007fafb8c801f8: movabs  $0x0,%r10
  0x00007fafb8c80202: mov     %r10,0x328(%r15)
  0x00007fafb8c80209: vzeroupper
  0x00007fafb8c8020c: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c80214: je      0x7fafb8c8021f
  0x00007fafb8c8021a: jmpq    0x7fafb8c5c780
  0x00007fafb8c8021f: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c80223: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c80227: retq
  0x00007fafb8c80228: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c8022d: sub     $0x80,%rsp
  0x00007fafb8c80234: mov     %rax,0x78(%rsp)
  0x00007fafb8c80239: mov     %rcx,0x70(%rsp)
  0x00007fafb8c8023e: mov     %rdx,0x68(%rsp)
  0x00007fafb8c80243: mov     %rbx,0x60(%rsp)
  0x00007fafb8c80248: mov     %rbp,0x50(%rsp)
  0x00007fafb8c8024d: mov     %rsi,0x48(%rsp)
  0x00007fafb8c80252: mov     %rdi,0x40(%rsp)
  0x00007fafb8c80257: mov     %r8,0x38(%rsp)
  0x00007fafb8c8025c: mov     %r9,0x30(%rsp)
  0x00007fafb8c80261: mov     %r10,0x28(%rsp)
  0x00007fafb8c80266: mov     %r11,0x20(%rsp)
  0x00007fafb8c8026b: mov     %r12,0x18(%rsp)
  0x00007fafb8c80270: mov     %r13,0x10(%rsp)
  0x00007fafb8c80275: mov     %r14,0x8(%rsp)
  0x00007fafb8c8027a: mov     %r15,(%rsp)
  0x00007fafb8c8027e: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c80288: movabs  $0x7fafb8c80228,%rsi
  0x00007fafb8c80292: mov     %rsp,%rdx
  0x00007fafb8c80295: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c80299: callq   0x7fafd7fdd230
  0x00007fafb8c8029e: hlt
  0x00007fafb8c8029f: movzbl  0x2(%r13),%ebx
  0x00007fafb8c802a4: add     $0x2,%r13
  0x00007fafb8c802a8: movabs  $0x7fafd89a6080,%r10
  0x00007fafb8c802b2: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c802b6: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c802be: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c802c2: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c802c6: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c802ce: je      0x7fafb8c803e7
  0x00007fafb8c802d4: callq   0x7fafb8c802de
  0x00007fafb8c802d9: jmpq    0x7fafb8c80370
  0x00007fafb8c802de: lea     0x8(%rsp),%rax
  0x00007fafb8c802e3: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c802e7: mov     %r15,%rdi
  0x00007fafb8c802ea: vzeroupper
  0x00007fafb8c802ed: mov     %rbp,0x330(%r15)
  0x00007fafb8c802f4: mov     %rax,0x320(%r15)
  0x00007fafb8c802fb: test    $0xf,%esp
  0x00007fafb8c80301: je      0x7fafb8c80319
  0x00007fafb8c80307: sub     $0x8,%rsp
  0x00007fafb8c8030b: callq   0x7fafd7d80970
  0x00007fafb8c80310: add     $0x8,%rsp
  0x00007fafb8c80314: jmpq    0x7fafb8c8031e
  0x00007fafb8c80319: callq   0x7fafd7d80970
  0x00007fafb8c8031e: movabs  $0x0,%r10
  0x00007fafb8c80328: mov     %r10,0x320(%r15)
  0x00007fafb8c8032f: movabs  $0x0,%r10
  0x00007fafb8c80339: mov     %r10,0x330(%r15)
  0x00007fafb8c80340: movabs  $0x0,%r10
  0x00007fafb8c8034a: mov     %r10,0x328(%r15)
  0x00007fafb8c80351: vzeroupper
  0x00007fafb8c80354: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c8035c: je      0x7fafb8c80367
  0x00007fafb8c80362: jmpq    0x7fafb8c5c780
  0x00007fafb8c80367: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c8036b: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c8036f: retq
  0x00007fafb8c80370: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c80375: sub     $0x80,%rsp
  0x00007fafb8c8037c: mov     %rax,0x78(%rsp)
  0x00007fafb8c80381: mov     %rcx,0x70(%rsp)
  0x00007fafb8c80386: mov     %rdx,0x68(%rsp)
  0x00007fafb8c8038b: mov     %rbx,0x60(%rsp)
  0x00007fafb8c80390: mov     %rbp,0x50(%rsp)
  0x00007fafb8c80395: mov     %rsi,0x48(%rsp)
  0x00007fafb8c8039a: mov     %rdi,0x40(%rsp)
  0x00007fafb8c8039f: mov     %r8,0x38(%rsp)
  0x00007fafb8c803a4: mov     %r9,0x30(%rsp)
  0x00007fafb8c803a9: mov     %r10,0x28(%rsp)
  0x00007fafb8c803ae: mov     %r11,0x20(%rsp)
  0x00007fafb8c803b3: mov     %r12,0x18(%rsp)
  0x00007fafb8c803b8: mov     %r13,0x10(%rsp)
  0x00007fafb8c803bd: mov     %r14,0x8(%rsp)
  0x00007fafb8c803c2: mov     %r15,(%rsp)
  0x00007fafb8c803c6: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c803d0: movabs  $0x7fafb8c80370,%rsi
  0x00007fafb8c803da: mov     %rsp,%rdx
  0x00007fafb8c803dd: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c803e1: callq   0x7fafd7fdd230
  0x00007fafb8c803e6: hlt
  0x00007fafb8c803e7: movzbl  0x2(%r13),%ebx
  0x00007fafb8c803ec: add     $0x2,%r13
  0x00007fafb8c803f0: movabs  $0x7fafd89a7880,%r10
  0x00007fafb8c803fa: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c803fe: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c80406: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c8040a: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c8040e: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c80416: je      0x7fafb8c8052f
  0x00007fafb8c8041c: callq   0x7fafb8c80426
  0x00007fafb8c80421: jmpq    0x7fafb8c804b8
  0x00007fafb8c80426: lea     0x8(%rsp),%rax
  0x00007fafb8c8042b: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c8042f: mov     %r15,%rdi
  0x00007fafb8c80432: vzeroupper
  0x00007fafb8c80435: mov     %rbp,0x330(%r15)
  0x00007fafb8c8043c: mov     %rax,0x320(%r15)
  0x00007fafb8c80443: test    $0xf,%esp
  0x00007fafb8c80449: je      0x7fafb8c80461
  0x00007fafb8c8044f: sub     $0x8,%rsp
  0x00007fafb8c80453: callq   0x7fafd7d80970
  0x00007fafb8c80458: add     $0x8,%rsp
  0x00007fafb8c8045c: jmpq    0x7fafb8c80466
  0x00007fafb8c80461: callq   0x7fafd7d80970
  0x00007fafb8c80466: movabs  $0x0,%r10
  0x00007fafb8c80470: mov     %r10,0x320(%r15)
  0x00007fafb8c80477: movabs  $0x0,%r10
  0x00007fafb8c80481: mov     %r10,0x330(%r15)
  0x00007fafb8c80488: movabs  $0x0,%r10
  0x00007fafb8c80492: mov     %r10,0x328(%r15)
  0x00007fafb8c80499: vzeroupper
  0x00007fafb8c8049c: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c804a4: je      0x7fafb8c804af
  0x00007fafb8c804aa: jmpq    0x7fafb8c5c780
  0x00007fafb8c804af: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c804b3: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c804b7: retq
  0x00007fafb8c804b8: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c804bd: sub     $0x80,%rsp
  0x00007fafb8c804c4: mov     %rax,0x78(%rsp)
  0x00007fafb8c804c9: mov     %rcx,0x70(%rsp)
  0x00007fafb8c804ce: mov     %rdx,0x68(%rsp)
  0x00007fafb8c804d3: mov     %rbx,0x60(%rsp)
  0x00007fafb8c804d8: mov     %rbp,0x50(%rsp)
  0x00007fafb8c804dd: mov     %rsi,0x48(%rsp)
  0x00007fafb8c804e2: mov     %rdi,0x40(%rsp)
  0x00007fafb8c804e7: mov     %r8,0x38(%rsp)
  0x00007fafb8c804ec: mov     %r9,0x30(%rsp)
  0x00007fafb8c804f1: mov     %r10,0x28(%rsp)
  0x00007fafb8c804f6: mov     %r11,0x20(%rsp)
  0x00007fafb8c804fb: mov     %r12,0x18(%rsp)
  0x00007fafb8c80500: mov     %r13,0x10(%rsp)
  0x00007fafb8c80505: mov     %r14,0x8(%rsp)
  0x00007fafb8c8050a: mov     %r15,(%rsp)
  0x00007fafb8c8050e: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c80518: movabs  $0x7fafb8c804b8,%rsi
  0x00007fafb8c80522: mov     %rsp,%rdx
  0x00007fafb8c80525: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c80529: callq   0x7fafd7fdd230
  0x00007fafb8c8052e: hlt
  0x00007fafb8c8052f: movzbl  0x3(%r13),%ebx
  0x00007fafb8c80534: add     $0x3,%r13
  0x00007fafb8c80538: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c80542: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c80546: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c8054e: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c80552: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c80556: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c8055e: je      0x7fafb8c80677
  0x00007fafb8c80564: callq   0x7fafb8c8056e
  0x00007fafb8c80569: jmpq    0x7fafb8c80600
  0x00007fafb8c8056e: lea     0x8(%rsp),%rax
  0x00007fafb8c80573: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c80577: mov     %r15,%rdi
  0x00007fafb8c8057a: vzeroupper
  0x00007fafb8c8057d: mov     %rbp,0x330(%r15)
  0x00007fafb8c80584: mov     %rax,0x320(%r15)
  0x00007fafb8c8058b: test    $0xf,%esp
  0x00007fafb8c80591: je      0x7fafb8c805a9
  0x00007fafb8c80597: sub     $0x8,%rsp
  0x00007fafb8c8059b: callq   0x7fafd7d80970
  0x00007fafb8c805a0: add     $0x8,%rsp
  0x00007fafb8c805a4: jmpq    0x7fafb8c805ae
  0x00007fafb8c805a9: callq   0x7fafd7d80970
  0x00007fafb8c805ae: movabs  $0x0,%r10
  0x00007fafb8c805b8: mov     %r10,0x320(%r15)
  0x00007fafb8c805bf: movabs  $0x0,%r10
  0x00007fafb8c805c9: mov     %r10,0x330(%r15)
  0x00007fafb8c805d0: movabs  $0x0,%r10
  0x00007fafb8c805da: mov     %r10,0x328(%r15)
  0x00007fafb8c805e1: vzeroupper
  0x00007fafb8c805e4: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c805ec: je      0x7fafb8c805f7
  0x00007fafb8c805f2: jmpq    0x7fafb8c5c780
  0x00007fafb8c805f7: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c805fb: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c805ff: retq
  0x00007fafb8c80600: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c80605: sub     $0x80,%rsp
  0x00007fafb8c8060c: mov     %rax,0x78(%rsp)
  0x00007fafb8c80611: mov     %rcx,0x70(%rsp)
  0x00007fafb8c80616: mov     %rdx,0x68(%rsp)
  0x00007fafb8c8061b: mov     %rbx,0x60(%rsp)
  0x00007fafb8c80620: mov     %rbp,0x50(%rsp)
  0x00007fafb8c80625: mov     %rsi,0x48(%rsp)
  0x00007fafb8c8062a: mov     %rdi,0x40(%rsp)
  0x00007fafb8c8062f: mov     %r8,0x38(%rsp)
  0x00007fafb8c80634: mov     %r9,0x30(%rsp)
  0x00007fafb8c80639: mov     %r10,0x28(%rsp)
  0x00007fafb8c8063e: mov     %r11,0x20(%rsp)
  0x00007fafb8c80643: mov     %r12,0x18(%rsp)
  0x00007fafb8c80648: mov     %r13,0x10(%rsp)
  0x00007fafb8c8064d: mov     %r14,0x8(%rsp)
  0x00007fafb8c80652: mov     %r15,(%rsp)
  0x00007fafb8c80656: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c80660: movabs  $0x7fafb8c80600,%rsi
  0x00007fafb8c8066a: mov     %rsp,%rdx
  0x00007fafb8c8066d: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c80671: callq   0x7fafd7fdd230
  0x00007fafb8c80676: hlt
  0x00007fafb8c80677: movzbl  0x3(%r13),%ebx
  0x00007fafb8c8067c: add     $0x3,%r13
  0x00007fafb8c80680: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c8068a: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c8068e: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c80696: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c8069a: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c8069e: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c806a6: je      0x7fafb8c807bf
  0x00007fafb8c806ac: callq   0x7fafb8c806b6
  0x00007fafb8c806b1: jmpq    0x7fafb8c80748
  0x00007fafb8c806b6: lea     0x8(%rsp),%rax
  0x00007fafb8c806bb: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c806bf: mov     %r15,%rdi
  0x00007fafb8c806c2: vzeroupper
  0x00007fafb8c806c5: mov     %rbp,0x330(%r15)
  0x00007fafb8c806cc: mov     %rax,0x320(%r15)
  0x00007fafb8c806d3: test    $0xf,%esp
  0x00007fafb8c806d9: je      0x7fafb8c806f1
  0x00007fafb8c806df: sub     $0x8,%rsp
  0x00007fafb8c806e3: callq   0x7fafd7d80970
  0x00007fafb8c806e8: add     $0x8,%rsp
  0x00007fafb8c806ec: jmpq    0x7fafb8c806f6
  0x00007fafb8c806f1: callq   0x7fafd7d80970
  0x00007fafb8c806f6: movabs  $0x0,%r10
  0x00007fafb8c80700: mov     %r10,0x320(%r15)
  0x00007fafb8c80707: movabs  $0x0,%r10
  0x00007fafb8c80711: mov     %r10,0x330(%r15)
  0x00007fafb8c80718: movabs  $0x0,%r10
  0x00007fafb8c80722: mov     %r10,0x328(%r15)
  0x00007fafb8c80729: vzeroupper
  0x00007fafb8c8072c: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c80734: je      0x7fafb8c8073f
  0x00007fafb8c8073a: jmpq    0x7fafb8c5c780
  0x00007fafb8c8073f: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c80743: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c80747: retq
  0x00007fafb8c80748: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c8074d: sub     $0x80,%rsp
  0x00007fafb8c80754: mov     %rax,0x78(%rsp)
  0x00007fafb8c80759: mov     %rcx,0x70(%rsp)
  0x00007fafb8c8075e: mov     %rdx,0x68(%rsp)
  0x00007fafb8c80763: mov     %rbx,0x60(%rsp)
  0x00007fafb8c80768: mov     %rbp,0x50(%rsp)
  0x00007fafb8c8076d: mov     %rsi,0x48(%rsp)
  0x00007fafb8c80772: mov     %rdi,0x40(%rsp)
  0x00007fafb8c80777: mov     %r8,0x38(%rsp)
  0x00007fafb8c8077c: mov     %r9,0x30(%rsp)
  0x00007fafb8c80781: mov     %r10,0x28(%rsp)
  0x00007fafb8c80786: mov     %r11,0x20(%rsp)
  0x00007fafb8c8078b: mov     %r12,0x18(%rsp)
  0x00007fafb8c80790: mov     %r13,0x10(%rsp)
  0x00007fafb8c80795: mov     %r14,0x8(%rsp)
  0x00007fafb8c8079a: mov     %r15,(%rsp)
  0x00007fafb8c8079e: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c807a8: movabs  $0x7fafb8c80748,%rsi
  0x00007fafb8c807b2: mov     %rsp,%rdx
  0x00007fafb8c807b5: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c807b9: callq   0x7fafd7fdd230
  0x00007fafb8c807be: hlt
  0x00007fafb8c807bf: movzbl  0x3(%r13),%ebx
  0x00007fafb8c807c4: add     $0x3,%r13
  0x00007fafb8c807c8: movabs  $0x7fafd89a7080,%r10
  0x00007fafb8c807d2: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c807d6: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c807de: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c807e2: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c807e6: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c807ee: je      0x7fafb8c80907
  0x00007fafb8c807f4: callq   0x7fafb8c807fe
  0x00007fafb8c807f9: jmpq    0x7fafb8c80890
  0x00007fafb8c807fe: lea     0x8(%rsp),%rax
  0x00007fafb8c80803: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c80807: mov     %r15,%rdi
  0x00007fafb8c8080a: vzeroupper
  0x00007fafb8c8080d: mov     %rbp,0x330(%r15)
  0x00007fafb8c80814: mov     %rax,0x320(%r15)
  0x00007fafb8c8081b: test    $0xf,%esp
  0x00007fafb8c80821: je      0x7fafb8c80839
  0x00007fafb8c80827: sub     $0x8,%rsp
  0x00007fafb8c8082b: callq   0x7fafd7d80970
  0x00007fafb8c80830: add     $0x8,%rsp
  0x00007fafb8c80834: jmpq    0x7fafb8c8083e
  0x00007fafb8c80839: callq   0x7fafd7d80970
  0x00007fafb8c8083e: movabs  $0x0,%r10
  0x00007fafb8c80848: mov     %r10,0x320(%r15)
  0x00007fafb8c8084f: movabs  $0x0,%r10
  0x00007fafb8c80859: mov     %r10,0x330(%r15)
  0x00007fafb8c80860: movabs  $0x0,%r10
  0x00007fafb8c8086a: mov     %r10,0x328(%r15)
  0x00007fafb8c80871: vzeroupper
  0x00007fafb8c80874: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c8087c: je      0x7fafb8c80887
  0x00007fafb8c80882: jmpq    0x7fafb8c5c780
  0x00007fafb8c80887: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c8088b: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c8088f: retq
  0x00007fafb8c80890: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c80895: sub     $0x80,%rsp
  0x00007fafb8c8089c: mov     %rax,0x78(%rsp)
  0x00007fafb8c808a1: mov     %rcx,0x70(%rsp)
  0x00007fafb8c808a6: mov     %rdx,0x68(%rsp)
  0x00007fafb8c808ab: mov     %rbx,0x60(%rsp)
  0x00007fafb8c808b0: mov     %rbp,0x50(%rsp)
  0x00007fafb8c808b5: mov     %rsi,0x48(%rsp)
  0x00007fafb8c808ba: mov     %rdi,0x40(%rsp)
  0x00007fafb8c808bf: mov     %r8,0x38(%rsp)
  0x00007fafb8c808c4: mov     %r9,0x30(%rsp)
  0x00007fafb8c808c9: mov     %r10,0x28(%rsp)
  0x00007fafb8c808ce: mov     %r11,0x20(%rsp)
  0x00007fafb8c808d3: mov     %r12,0x18(%rsp)
  0x00007fafb8c808d8: mov     %r13,0x10(%rsp)
  0x00007fafb8c808dd: mov     %r14,0x8(%rsp)
  0x00007fafb8c808e2: mov     %r15,(%rsp)
  0x00007fafb8c808e6: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c808f0: movabs  $0x7fafb8c80890,%rsi
  0x00007fafb8c808fa: mov     %rsp,%rdx
  0x00007fafb8c808fd: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c80901: callq   0x7fafd7fdd230
  0x00007fafb8c80906: hlt
  0x00007fafb8c80907: movzbl  0x3(%r13),%ebx
  0x00007fafb8c8090c: add     $0x3,%r13
  0x00007fafb8c80910: movabs  $0x7fafd89a6880,%r10
  0x00007fafb8c8091a: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c8091e: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c80926: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c8092a: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c8092e: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c80936: je      0x7fafb8c80a4f
  0x00007fafb8c8093c: callq   0x7fafb8c80946
  0x00007fafb8c80941: jmpq    0x7fafb8c809d8
  0x00007fafb8c80946: lea     0x8(%rsp),%rax
  0x00007fafb8c8094b: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c8094f: mov     %r15,%rdi
  0x00007fafb8c80952: vzeroupper
  0x00007fafb8c80955: mov     %rbp,0x330(%r15)
  0x00007fafb8c8095c: mov     %rax,0x320(%r15)
  0x00007fafb8c80963: test    $0xf,%esp
  0x00007fafb8c80969: je      0x7fafb8c80981
  0x00007fafb8c8096f: sub     $0x8,%rsp
  0x00007fafb8c80973: callq   0x7fafd7d80970
  0x00007fafb8c80978: add     $0x8,%rsp
  0x00007fafb8c8097c: jmpq    0x7fafb8c80986
  0x00007fafb8c80981: callq   0x7fafd7d80970
  0x00007fafb8c80986: movabs  $0x0,%r10
  0x00007fafb8c80990: mov     %r10,0x320(%r15)
  0x00007fafb8c80997: movabs  $0x0,%r10
  0x00007fafb8c809a1: mov     %r10,0x330(%r15)
  0x00007fafb8c809a8: movabs  $0x0,%r10
  0x00007fafb8c809b2: mov     %r10,0x328(%r15)
  0x00007fafb8c809b9: vzeroupper
  0x00007fafb8c809bc: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c809c4: je      0x7fafb8c809cf
  0x00007fafb8c809ca: jmpq    0x7fafb8c5c780
  0x00007fafb8c809cf: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c809d3: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c809d7: retq
  0x00007fafb8c809d8: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c809dd: sub     $0x80,%rsp
  0x00007fafb8c809e4: mov     %rax,0x78(%rsp)
  0x00007fafb8c809e9: mov     %rcx,0x70(%rsp)
  0x00007fafb8c809ee: mov     %rdx,0x68(%rsp)
  0x00007fafb8c809f3: mov     %rbx,0x60(%rsp)
  0x00007fafb8c809f8: mov     %rbp,0x50(%rsp)
  0x00007fafb8c809fd: mov     %rsi,0x48(%rsp)
  0x00007fafb8c80a02: mov     %rdi,0x40(%rsp)
  0x00007fafb8c80a07: mov     %r8,0x38(%rsp)
  0x00007fafb8c80a0c: mov     %r9,0x30(%rsp)
  0x00007fafb8c80a11: mov     %r10,0x28(%rsp)
  0x00007fafb8c80a16: mov     %r11,0x20(%rsp)
  0x00007fafb8c80a1b: mov     %r12,0x18(%rsp)
  0x00007fafb8c80a20: mov     %r13,0x10(%rsp)
  0x00007fafb8c80a25: mov     %r14,0x8(%rsp)
  0x00007fafb8c80a2a: mov     %r15,(%rsp)
  0x00007fafb8c80a2e: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c80a38: movabs  $0x7fafb8c809d8,%rsi
  0x00007fafb8c80a42: mov     %rsp,%rdx
  0x00007fafb8c80a45: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c80a49: callq   0x7fafd7fdd230
  0x00007fafb8c80a4e: hlt
  0x00007fafb8c80a4f: movzbl  0x3(%r13),%ebx
  0x00007fafb8c80a54: add     $0x3,%r13
  0x00007fafb8c80a58: movabs  $0x7fafd89a6080,%r10
  0x00007fafb8c80a62: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c80a66: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c80a6e: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c80a72: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c80a76: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c80a7e: je      0x7fafb8c80b97
  0x00007fafb8c80a84: callq   0x7fafb8c80a8e
  0x00007fafb8c80a89: jmpq    0x7fafb8c80b20
  0x00007fafb8c80a8e: lea     0x8(%rsp),%rax
  0x00007fafb8c80a93: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c80a97: mov     %r15,%rdi
  0x00007fafb8c80a9a: vzeroupper
  0x00007fafb8c80a9d: mov     %rbp,0x330(%r15)
  0x00007fafb8c80aa4: mov     %rax,0x320(%r15)
  0x00007fafb8c80aab: test    $0xf,%esp
  0x00007fafb8c80ab1: je      0x7fafb8c80ac9
  0x00007fafb8c80ab7: sub     $0x8,%rsp
  0x00007fafb8c80abb: callq   0x7fafd7d80970
  0x00007fafb8c80ac0: add     $0x8,%rsp
  0x00007fafb8c80ac4: jmpq    0x7fafb8c80ace
  0x00007fafb8c80ac9: callq   0x7fafd7d80970
  0x00007fafb8c80ace: movabs  $0x0,%r10
  0x00007fafb8c80ad8: mov     %r10,0x320(%r15)
  0x00007fafb8c80adf: movabs  $0x0,%r10
  0x00007fafb8c80ae9: mov     %r10,0x330(%r15)
  0x00007fafb8c80af0: movabs  $0x0,%r10
  0x00007fafb8c80afa: mov     %r10,0x328(%r15)
  0x00007fafb8c80b01: vzeroupper
  0x00007fafb8c80b04: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c80b0c: je      0x7fafb8c80b17
  0x00007fafb8c80b12: jmpq    0x7fafb8c5c780
  0x00007fafb8c80b17: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c80b1b: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c80b1f: retq
  0x00007fafb8c80b20: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c80b25: sub     $0x80,%rsp
  0x00007fafb8c80b2c: mov     %rax,0x78(%rsp)
  0x00007fafb8c80b31: mov     %rcx,0x70(%rsp)
  0x00007fafb8c80b36: mov     %rdx,0x68(%rsp)
  0x00007fafb8c80b3b: mov     %rbx,0x60(%rsp)
  0x00007fafb8c80b40: mov     %rbp,0x50(%rsp)
  0x00007fafb8c80b45: mov     %rsi,0x48(%rsp)
  0x00007fafb8c80b4a: mov     %rdi,0x40(%rsp)
  0x00007fafb8c80b4f: mov     %r8,0x38(%rsp)
  0x00007fafb8c80b54: mov     %r9,0x30(%rsp)
  0x00007fafb8c80b59: mov     %r10,0x28(%rsp)
  0x00007fafb8c80b5e: mov     %r11,0x20(%rsp)
  0x00007fafb8c80b63: mov     %r12,0x18(%rsp)
  0x00007fafb8c80b68: mov     %r13,0x10(%rsp)
  0x00007fafb8c80b6d: mov     %r14,0x8(%rsp)
  0x00007fafb8c80b72: mov     %r15,(%rsp)
  0x00007fafb8c80b76: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c80b80: movabs  $0x7fafb8c80b20,%rsi
  0x00007fafb8c80b8a: mov     %rsp,%rdx
  0x00007fafb8c80b8d: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c80b91: callq   0x7fafd7fdd230
  0x00007fafb8c80b96: hlt
  0x00007fafb8c80b97: movzbl  0x3(%r13),%ebx
  0x00007fafb8c80b9c: add     $0x3,%r13
  0x00007fafb8c80ba0: movabs  $0x7fafd89a7880,%r10
  0x00007fafb8c80baa: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c80bae: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c80bb6: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c80bba: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c80bbe: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c80bc6: je      0x7fafb8c80cdf
  0x00007fafb8c80bcc: callq   0x7fafb8c80bd6
  0x00007fafb8c80bd1: jmpq    0x7fafb8c80c68
  0x00007fafb8c80bd6: lea     0x8(%rsp),%rax
  0x00007fafb8c80bdb: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c80bdf: mov     %r15,%rdi
  0x00007fafb8c80be2: vzeroupper
  0x00007fafb8c80be5: mov     %rbp,0x330(%r15)
  0x00007fafb8c80bec: mov     %rax,0x320(%r15)
  0x00007fafb8c80bf3: test    $0xf,%esp
  0x00007fafb8c80bf9: je      0x7fafb8c80c11
  0x00007fafb8c80bff: sub     $0x8,%rsp
  0x00007fafb8c80c03: callq   0x7fafd7d80970
  0x00007fafb8c80c08: add     $0x8,%rsp
  0x00007fafb8c80c0c: jmpq    0x7fafb8c80c16
  0x00007fafb8c80c11: callq   0x7fafd7d80970
  0x00007fafb8c80c16: movabs  $0x0,%r10
  0x00007fafb8c80c20: mov     %r10,0x320(%r15)
  0x00007fafb8c80c27: movabs  $0x0,%r10
  0x00007fafb8c80c31: mov     %r10,0x330(%r15)
  0x00007fafb8c80c38: movabs  $0x0,%r10
  0x00007fafb8c80c42: mov     %r10,0x328(%r15)
  0x00007fafb8c80c49: vzeroupper
  0x00007fafb8c80c4c: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c80c54: je      0x7fafb8c80c5f
  0x00007fafb8c80c5a: jmpq    0x7fafb8c5c780
  0x00007fafb8c80c5f: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c80c63: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c80c67: retq
  0x00007fafb8c80c68: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c80c6d: sub     $0x80,%rsp
  0x00007fafb8c80c74: mov     %rax,0x78(%rsp)
  0x00007fafb8c80c79: mov     %rcx,0x70(%rsp)
  0x00007fafb8c80c7e: mov     %rdx,0x68(%rsp)
  0x00007fafb8c80c83: mov     %rbx,0x60(%rsp)
  0x00007fafb8c80c88: mov     %rbp,0x50(%rsp)
  0x00007fafb8c80c8d: mov     %rsi,0x48(%rsp)
  0x00007fafb8c80c92: mov     %rdi,0x40(%rsp)
  0x00007fafb8c80c97: mov     %r8,0x38(%rsp)
  0x00007fafb8c80c9c: mov     %r9,0x30(%rsp)
  0x00007fafb8c80ca1: mov     %r10,0x28(%rsp)
  0x00007fafb8c80ca6: mov     %r11,0x20(%rsp)
  0x00007fafb8c80cab: mov     %r12,0x18(%rsp)
  0x00007fafb8c80cb0: mov     %r13,0x10(%rsp)
  0x00007fafb8c80cb5: mov     %r14,0x8(%rsp)
  0x00007fafb8c80cba: mov     %r15,(%rsp)
  0x00007fafb8c80cbe: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c80cc8: movabs  $0x7fafb8c80c68,%rsi
  0x00007fafb8c80cd2: mov     %rsp,%rdx
  0x00007fafb8c80cd5: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c80cd9: callq   0x7fafd7fdd230
  0x00007fafb8c80cde: hlt
  0x00007fafb8c80cdf: movzbl  0x4(%r13),%ebx
  0x00007fafb8c80ce4: add     $0x4,%r13
  0x00007fafb8c80ce8: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c80cf2: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c80cf6: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c80cfe: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c80d02: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c80d06: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c80d0e: je      0x7fafb8c80e27
  0x00007fafb8c80d14: callq   0x7fafb8c80d1e
  0x00007fafb8c80d19: jmpq    0x7fafb8c80db0
  0x00007fafb8c80d1e: lea     0x8(%rsp),%rax
  0x00007fafb8c80d23: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c80d27: mov     %r15,%rdi
  0x00007fafb8c80d2a: vzeroupper
  0x00007fafb8c80d2d: mov     %rbp,0x330(%r15)
  0x00007fafb8c80d34: mov     %rax,0x320(%r15)
  0x00007fafb8c80d3b: test    $0xf,%esp
  0x00007fafb8c80d41: je      0x7fafb8c80d59
  0x00007fafb8c80d47: sub     $0x8,%rsp
  0x00007fafb8c80d4b: callq   0x7fafd7d80970
  0x00007fafb8c80d50: add     $0x8,%rsp
  0x00007fafb8c80d54: jmpq    0x7fafb8c80d5e
  0x00007fafb8c80d59: callq   0x7fafd7d80970
  0x00007fafb8c80d5e: movabs  $0x0,%r10
  0x00007fafb8c80d68: mov     %r10,0x320(%r15)
  0x00007fafb8c80d6f: movabs  $0x0,%r10
  0x00007fafb8c80d79: mov     %r10,0x330(%r15)
  0x00007fafb8c80d80: movabs  $0x0,%r10
  0x00007fafb8c80d8a: mov     %r10,0x328(%r15)
  0x00007fafb8c80d91: vzeroupper
  0x00007fafb8c80d94: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c80d9c: je      0x7fafb8c80da7
  0x00007fafb8c80da2: jmpq    0x7fafb8c5c780
  0x00007fafb8c80da7: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c80dab: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c80daf: retq
  0x00007fafb8c80db0: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c80db5: sub     $0x80,%rsp
  0x00007fafb8c80dbc: mov     %rax,0x78(%rsp)
  0x00007fafb8c80dc1: mov     %rcx,0x70(%rsp)
  0x00007fafb8c80dc6: mov     %rdx,0x68(%rsp)
  0x00007fafb8c80dcb: mov     %rbx,0x60(%rsp)
  0x00007fafb8c80dd0: mov     %rbp,0x50(%rsp)
  0x00007fafb8c80dd5: mov     %rsi,0x48(%rsp)
  0x00007fafb8c80dda: mov     %rdi,0x40(%rsp)
  0x00007fafb8c80ddf: mov     %r8,0x38(%rsp)
  0x00007fafb8c80de4: mov     %r9,0x30(%rsp)
  0x00007fafb8c80de9: mov     %r10,0x28(%rsp)
  0x00007fafb8c80dee: mov     %r11,0x20(%rsp)
  0x00007fafb8c80df3: mov     %r12,0x18(%rsp)
  0x00007fafb8c80df8: mov     %r13,0x10(%rsp)
  0x00007fafb8c80dfd: mov     %r14,0x8(%rsp)
  0x00007fafb8c80e02: mov     %r15,(%rsp)
  0x00007fafb8c80e06: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c80e10: movabs  $0x7fafb8c80db0,%rsi
  0x00007fafb8c80e1a: mov     %rsp,%rdx
  0x00007fafb8c80e1d: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c80e21: callq   0x7fafd7fdd230
  0x00007fafb8c80e26: hlt
  0x00007fafb8c80e27: movzbl  0x4(%r13),%ebx
  0x00007fafb8c80e2c: add     $0x4,%r13
  0x00007fafb8c80e30: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c80e3a: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c80e3e: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c80e46: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c80e4a: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c80e4e: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c80e56: je      0x7fafb8c80f6f
  0x00007fafb8c80e5c: callq   0x7fafb8c80e66
  0x00007fafb8c80e61: jmpq    0x7fafb8c80ef8
  0x00007fafb8c80e66: lea     0x8(%rsp),%rax
  0x00007fafb8c80e6b: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c80e6f: mov     %r15,%rdi
  0x00007fafb8c80e72: vzeroupper
  0x00007fafb8c80e75: mov     %rbp,0x330(%r15)
  0x00007fafb8c80e7c: mov     %rax,0x320(%r15)
  0x00007fafb8c80e83: test    $0xf,%esp
  0x00007fafb8c80e89: je      0x7fafb8c80ea1
  0x00007fafb8c80e8f: sub     $0x8,%rsp
  0x00007fafb8c80e93: callq   0x7fafd7d80970
  0x00007fafb8c80e98: add     $0x8,%rsp
  0x00007fafb8c80e9c: jmpq    0x7fafb8c80ea6
  0x00007fafb8c80ea1: callq   0x7fafd7d80970
  0x00007fafb8c80ea6: movabs  $0x0,%r10
  0x00007fafb8c80eb0: mov     %r10,0x320(%r15)
  0x00007fafb8c80eb7: movabs  $0x0,%r10
  0x00007fafb8c80ec1: mov     %r10,0x330(%r15)
  0x00007fafb8c80ec8: movabs  $0x0,%r10
  0x00007fafb8c80ed2: mov     %r10,0x328(%r15)
  0x00007fafb8c80ed9: vzeroupper
  0x00007fafb8c80edc: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c80ee4: je      0x7fafb8c80eef
  0x00007fafb8c80eea: jmpq    0x7fafb8c5c780
  0x00007fafb8c80eef: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c80ef3: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c80ef7: retq
  0x00007fafb8c80ef8: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c80efd: sub     $0x80,%rsp
  0x00007fafb8c80f04: mov     %rax,0x78(%rsp)
  0x00007fafb8c80f09: mov     %rcx,0x70(%rsp)
  0x00007fafb8c80f0e: mov     %rdx,0x68(%rsp)
  0x00007fafb8c80f13: mov     %rbx,0x60(%rsp)
  0x00007fafb8c80f18: mov     %rbp,0x50(%rsp)
  0x00007fafb8c80f1d: mov     %rsi,0x48(%rsp)
  0x00007fafb8c80f22: mov     %rdi,0x40(%rsp)
  0x00007fafb8c80f27: mov     %r8,0x38(%rsp)
  0x00007fafb8c80f2c: mov     %r9,0x30(%rsp)
  0x00007fafb8c80f31: mov     %r10,0x28(%rsp)
  0x00007fafb8c80f36: mov     %r11,0x20(%rsp)
  0x00007fafb8c80f3b: mov     %r12,0x18(%rsp)
  0x00007fafb8c80f40: mov     %r13,0x10(%rsp)
  0x00007fafb8c80f45: mov     %r14,0x8(%rsp)
  0x00007fafb8c80f4a: mov     %r15,(%rsp)
  0x00007fafb8c80f4e: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c80f58: movabs  $0x7fafb8c80ef8,%rsi
  0x00007fafb8c80f62: mov     %rsp,%rdx
  0x00007fafb8c80f65: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c80f69: callq   0x7fafd7fdd230
  0x00007fafb8c80f6e: hlt
  0x00007fafb8c80f6f: movzbl  0x4(%r13),%ebx
  0x00007fafb8c80f74: add     $0x4,%r13
  0x00007fafb8c80f78: movabs  $0x7fafd89a7080,%r10
  0x00007fafb8c80f82: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c80f86: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c80f8e: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c80f92: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c80f96: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c80f9e: je      0x7fafb8c810b7
  0x00007fafb8c80fa4: callq   0x7fafb8c80fae
  0x00007fafb8c80fa9: jmpq    0x7fafb8c81040
  0x00007fafb8c80fae: lea     0x8(%rsp),%rax
  0x00007fafb8c80fb3: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c80fb7: mov     %r15,%rdi
  0x00007fafb8c80fba: vzeroupper
  0x00007fafb8c80fbd: mov     %rbp,0x330(%r15)
  0x00007fafb8c80fc4: mov     %rax,0x320(%r15)
  0x00007fafb8c80fcb: test    $0xf,%esp
  0x00007fafb8c80fd1: je      0x7fafb8c80fe9
  0x00007fafb8c80fd7: sub     $0x8,%rsp
  0x00007fafb8c80fdb: callq   0x7fafd7d80970
  0x00007fafb8c80fe0: add     $0x8,%rsp
  0x00007fafb8c80fe4: jmpq    0x7fafb8c80fee
  0x00007fafb8c80fe9: callq   0x7fafd7d80970
  0x00007fafb8c80fee: movabs  $0x0,%r10
  0x00007fafb8c80ff8: mov     %r10,0x320(%r15)
  0x00007fafb8c80fff: movabs  $0x0,%r10
  0x00007fafb8c81009: mov     %r10,0x330(%r15)
  0x00007fafb8c81010: movabs  $0x0,%r10
  0x00007fafb8c8101a: mov     %r10,0x328(%r15)
  0x00007fafb8c81021: vzeroupper
  0x00007fafb8c81024: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c8102c: je      0x7fafb8c81037
  0x00007fafb8c81032: jmpq    0x7fafb8c5c780
  0x00007fafb8c81037: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c8103b: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c8103f: retq
  0x00007fafb8c81040: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c81045: sub     $0x80,%rsp
  0x00007fafb8c8104c: mov     %rax,0x78(%rsp)
  0x00007fafb8c81051: mov     %rcx,0x70(%rsp)
  0x00007fafb8c81056: mov     %rdx,0x68(%rsp)
  0x00007fafb8c8105b: mov     %rbx,0x60(%rsp)
  0x00007fafb8c81060: mov     %rbp,0x50(%rsp)
  0x00007fafb8c81065: mov     %rsi,0x48(%rsp)
  0x00007fafb8c8106a: mov     %rdi,0x40(%rsp)
  0x00007fafb8c8106f: mov     %r8,0x38(%rsp)
  0x00007fafb8c81074: mov     %r9,0x30(%rsp)
  0x00007fafb8c81079: mov     %r10,0x28(%rsp)
  0x00007fafb8c8107e: mov     %r11,0x20(%rsp)
  0x00007fafb8c81083: mov     %r12,0x18(%rsp)
  0x00007fafb8c81088: mov     %r13,0x10(%rsp)
  0x00007fafb8c8108d: mov     %r14,0x8(%rsp)
  0x00007fafb8c81092: mov     %r15,(%rsp)
  0x00007fafb8c81096: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c810a0: movabs  $0x7fafb8c81040,%rsi
  0x00007fafb8c810aa: mov     %rsp,%rdx
  0x00007fafb8c810ad: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c810b1: callq   0x7fafd7fdd230
  0x00007fafb8c810b6: hlt
  0x00007fafb8c810b7: movzbl  0x4(%r13),%ebx
  0x00007fafb8c810bc: add     $0x4,%r13
  0x00007fafb8c810c0: movabs  $0x7fafd89a6880,%r10
  0x00007fafb8c810ca: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c810ce: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c810d6: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c810da: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c810de: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c810e6: je      0x7fafb8c811ff
  0x00007fafb8c810ec: callq   0x7fafb8c810f6
  0x00007fafb8c810f1: jmpq    0x7fafb8c81188
  0x00007fafb8c810f6: lea     0x8(%rsp),%rax
  0x00007fafb8c810fb: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c810ff: mov     %r15,%rdi
  0x00007fafb8c81102: vzeroupper
  0x00007fafb8c81105: mov     %rbp,0x330(%r15)
  0x00007fafb8c8110c: mov     %rax,0x320(%r15)
  0x00007fafb8c81113: test    $0xf,%esp
  0x00007fafb8c81119: je      0x7fafb8c81131
  0x00007fafb8c8111f: sub     $0x8,%rsp
  0x00007fafb8c81123: callq   0x7fafd7d80970
  0x00007fafb8c81128: add     $0x8,%rsp
  0x00007fafb8c8112c: jmpq    0x7fafb8c81136
  0x00007fafb8c81131: callq   0x7fafd7d80970
  0x00007fafb8c81136: movabs  $0x0,%r10
  0x00007fafb8c81140: mov     %r10,0x320(%r15)
  0x00007fafb8c81147: movabs  $0x0,%r10
  0x00007fafb8c81151: mov     %r10,0x330(%r15)
  0x00007fafb8c81158: movabs  $0x0,%r10
  0x00007fafb8c81162: mov     %r10,0x328(%r15)
  0x00007fafb8c81169: vzeroupper
  0x00007fafb8c8116c: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c81174: je      0x7fafb8c8117f
  0x00007fafb8c8117a: jmpq    0x7fafb8c5c780
  0x00007fafb8c8117f: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c81183: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c81187: retq
  0x00007fafb8c81188: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c8118d: sub     $0x80,%rsp
  0x00007fafb8c81194: mov     %rax,0x78(%rsp)
  0x00007fafb8c81199: mov     %rcx,0x70(%rsp)
  0x00007fafb8c8119e: mov     %rdx,0x68(%rsp)
  0x00007fafb8c811a3: mov     %rbx,0x60(%rsp)
  0x00007fafb8c811a8: mov     %rbp,0x50(%rsp)
  0x00007fafb8c811ad: mov     %rsi,0x48(%rsp)
  0x00007fafb8c811b2: mov     %rdi,0x40(%rsp)
  0x00007fafb8c811b7: mov     %r8,0x38(%rsp)
  0x00007fafb8c811bc: mov     %r9,0x30(%rsp)
  0x00007fafb8c811c1: mov     %r10,0x28(%rsp)
  0x00007fafb8c811c6: mov     %r11,0x20(%rsp)
  0x00007fafb8c811cb: mov     %r12,0x18(%rsp)
  0x00007fafb8c811d0: mov     %r13,0x10(%rsp)
  0x00007fafb8c811d5: mov     %r14,0x8(%rsp)
  0x00007fafb8c811da: mov     %r15,(%rsp)
  0x00007fafb8c811de: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c811e8: movabs  $0x7fafb8c81188,%rsi
  0x00007fafb8c811f2: mov     %rsp,%rdx
  0x00007fafb8c811f5: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c811f9: callq   0x7fafd7fdd230
  0x00007fafb8c811fe: hlt
  0x00007fafb8c811ff: movzbl  0x4(%r13),%ebx
  0x00007fafb8c81204: add     $0x4,%r13
  0x00007fafb8c81208: movabs  $0x7fafd89a6080,%r10
  0x00007fafb8c81212: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c81216: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c8121e: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c81222: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c81226: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c8122e: je      0x7fafb8c81347
  0x00007fafb8c81234: callq   0x7fafb8c8123e
  0x00007fafb8c81239: jmpq    0x7fafb8c812d0
  0x00007fafb8c8123e: lea     0x8(%rsp),%rax
  0x00007fafb8c81243: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c81247: mov     %r15,%rdi
  0x00007fafb8c8124a: vzeroupper
  0x00007fafb8c8124d: mov     %rbp,0x330(%r15)
  0x00007fafb8c81254: mov     %rax,0x320(%r15)
  0x00007fafb8c8125b: test    $0xf,%esp
  0x00007fafb8c81261: je      0x7fafb8c81279
  0x00007fafb8c81267: sub     $0x8,%rsp
  0x00007fafb8c8126b: callq   0x7fafd7d80970
  0x00007fafb8c81270: add     $0x8,%rsp
  0x00007fafb8c81274: jmpq    0x7fafb8c8127e
  0x00007fafb8c81279: callq   0x7fafd7d80970
  0x00007fafb8c8127e: movabs  $0x0,%r10
  0x00007fafb8c81288: mov     %r10,0x320(%r15)
  0x00007fafb8c8128f: movabs  $0x0,%r10
  0x00007fafb8c81299: mov     %r10,0x330(%r15)
  0x00007fafb8c812a0: movabs  $0x0,%r10
  0x00007fafb8c812aa: mov     %r10,0x328(%r15)
  0x00007fafb8c812b1: vzeroupper
  0x00007fafb8c812b4: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c812bc: je      0x7fafb8c812c7
  0x00007fafb8c812c2: jmpq    0x7fafb8c5c780
  0x00007fafb8c812c7: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c812cb: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c812cf: retq
  0x00007fafb8c812d0: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c812d5: sub     $0x80,%rsp
  0x00007fafb8c812dc: mov     %rax,0x78(%rsp)
  0x00007fafb8c812e1: mov     %rcx,0x70(%rsp)
  0x00007fafb8c812e6: mov     %rdx,0x68(%rsp)
  0x00007fafb8c812eb: mov     %rbx,0x60(%rsp)
  0x00007fafb8c812f0: mov     %rbp,0x50(%rsp)
  0x00007fafb8c812f5: mov     %rsi,0x48(%rsp)
  0x00007fafb8c812fa: mov     %rdi,0x40(%rsp)
  0x00007fafb8c812ff: mov     %r8,0x38(%rsp)
  0x00007fafb8c81304: mov     %r9,0x30(%rsp)
  0x00007fafb8c81309: mov     %r10,0x28(%rsp)
  0x00007fafb8c8130e: mov     %r11,0x20(%rsp)
  0x00007fafb8c81313: mov     %r12,0x18(%rsp)
  0x00007fafb8c81318: mov     %r13,0x10(%rsp)
  0x00007fafb8c8131d: mov     %r14,0x8(%rsp)
  0x00007fafb8c81322: mov     %r15,(%rsp)
  0x00007fafb8c81326: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c81330: movabs  $0x7fafb8c812d0,%rsi
  0x00007fafb8c8133a: mov     %rsp,%rdx
  0x00007fafb8c8133d: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c81341: callq   0x7fafd7fdd230
  0x00007fafb8c81346: hlt
  0x00007fafb8c81347: movzbl  0x4(%r13),%ebx
  0x00007fafb8c8134c: add     $0x4,%r13
  0x00007fafb8c81350: movabs  $0x7fafd89a7880,%r10
  0x00007fafb8c8135a: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c8135e: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c81366: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c8136a: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c8136e: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c81376: je      0x7fafb8c8148f
  0x00007fafb8c8137c: callq   0x7fafb8c81386
  0x00007fafb8c81381: jmpq    0x7fafb8c81418
  0x00007fafb8c81386: lea     0x8(%rsp),%rax
  0x00007fafb8c8138b: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c8138f: mov     %r15,%rdi
  0x00007fafb8c81392: vzeroupper
  0x00007fafb8c81395: mov     %rbp,0x330(%r15)
  0x00007fafb8c8139c: mov     %rax,0x320(%r15)
  0x00007fafb8c813a3: test    $0xf,%esp
  0x00007fafb8c813a9: je      0x7fafb8c813c1
  0x00007fafb8c813af: sub     $0x8,%rsp
  0x00007fafb8c813b3: callq   0x7fafd7d80970
  0x00007fafb8c813b8: add     $0x8,%rsp
  0x00007fafb8c813bc: jmpq    0x7fafb8c813c6
  0x00007fafb8c813c1: callq   0x7fafd7d80970
  0x00007fafb8c813c6: movabs  $0x0,%r10
  0x00007fafb8c813d0: mov     %r10,0x320(%r15)
  0x00007fafb8c813d7: movabs  $0x0,%r10
  0x00007fafb8c813e1: mov     %r10,0x330(%r15)
  0x00007fafb8c813e8: movabs  $0x0,%r10
  0x00007fafb8c813f2: mov     %r10,0x328(%r15)
  0x00007fafb8c813f9: vzeroupper
  0x00007fafb8c813fc: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c81404: je      0x7fafb8c8140f
  0x00007fafb8c8140a: jmpq    0x7fafb8c5c780
  0x00007fafb8c8140f: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c81413: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c81417: retq
  0x00007fafb8c81418: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c8141d: sub     $0x80,%rsp
  0x00007fafb8c81424: mov     %rax,0x78(%rsp)
  0x00007fafb8c81429: mov     %rcx,0x70(%rsp)
  0x00007fafb8c8142e: mov     %rdx,0x68(%rsp)
  0x00007fafb8c81433: mov     %rbx,0x60(%rsp)
  0x00007fafb8c81438: mov     %rbp,0x50(%rsp)
  0x00007fafb8c8143d: mov     %rsi,0x48(%rsp)
  0x00007fafb8c81442: mov     %rdi,0x40(%rsp)
  0x00007fafb8c81447: mov     %r8,0x38(%rsp)
  0x00007fafb8c8144c: mov     %r9,0x30(%rsp)
  0x00007fafb8c81451: mov     %r10,0x28(%rsp)
  0x00007fafb8c81456: mov     %r11,0x20(%rsp)
  0x00007fafb8c8145b: mov     %r12,0x18(%rsp)
  0x00007fafb8c81460: mov     %r13,0x10(%rsp)
  0x00007fafb8c81465: mov     %r14,0x8(%rsp)
  0x00007fafb8c8146a: mov     %r15,(%rsp)
  0x00007fafb8c8146e: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c81478: movabs  $0x7fafb8c81418,%rsi
  0x00007fafb8c81482: mov     %rsp,%rdx
  0x00007fafb8c81485: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c81489: callq   0x7fafd7fdd230
  0x00007fafb8c8148e: hlt
  0x00007fafb8c8148f: movzbl  0x5(%r13),%ebx
  0x00007fafb8c81494: add     $0x5,%r13
  0x00007fafb8c81498: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c814a2: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c814a6: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c814ae: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c814b2: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c814b6: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c814be: je      0x7fafb8c815d7
  0x00007fafb8c814c4: callq   0x7fafb8c814ce
  0x00007fafb8c814c9: jmpq    0x7fafb8c81560
  0x00007fafb8c814ce: lea     0x8(%rsp),%rax
  0x00007fafb8c814d3: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c814d7: mov     %r15,%rdi
  0x00007fafb8c814da: vzeroupper
  0x00007fafb8c814dd: mov     %rbp,0x330(%r15)
  0x00007fafb8c814e4: mov     %rax,0x320(%r15)
  0x00007fafb8c814eb: test    $0xf,%esp
  0x00007fafb8c814f1: je      0x7fafb8c81509
  0x00007fafb8c814f7: sub     $0x8,%rsp
  0x00007fafb8c814fb: callq   0x7fafd7d80970
  0x00007fafb8c81500: add     $0x8,%rsp
  0x00007fafb8c81504: jmpq    0x7fafb8c8150e
  0x00007fafb8c81509: callq   0x7fafd7d80970
  0x00007fafb8c8150e: movabs  $0x0,%r10
  0x00007fafb8c81518: mov     %r10,0x320(%r15)
  0x00007fafb8c8151f: movabs  $0x0,%r10
  0x00007fafb8c81529: mov     %r10,0x330(%r15)
  0x00007fafb8c81530: movabs  $0x0,%r10
  0x00007fafb8c8153a: mov     %r10,0x328(%r15)
  0x00007fafb8c81541: vzeroupper
  0x00007fafb8c81544: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c8154c: je      0x7fafb8c81557
  0x00007fafb8c81552: jmpq    0x7fafb8c5c780
  0x00007fafb8c81557: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c8155b: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c8155f: retq
  0x00007fafb8c81560: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c81565: sub     $0x80,%rsp
  0x00007fafb8c8156c: mov     %rax,0x78(%rsp)
  0x00007fafb8c81571: mov     %rcx,0x70(%rsp)
  0x00007fafb8c81576: mov     %rdx,0x68(%rsp)
  0x00007fafb8c8157b: mov     %rbx,0x60(%rsp)
  0x00007fafb8c81580: mov     %rbp,0x50(%rsp)
  0x00007fafb8c81585: mov     %rsi,0x48(%rsp)
  0x00007fafb8c8158a: mov     %rdi,0x40(%rsp)
  0x00007fafb8c8158f: mov     %r8,0x38(%rsp)
  0x00007fafb8c81594: mov     %r9,0x30(%rsp)
  0x00007fafb8c81599: mov     %r10,0x28(%rsp)
  0x00007fafb8c8159e: mov     %r11,0x20(%rsp)
  0x00007fafb8c815a3: mov     %r12,0x18(%rsp)
  0x00007fafb8c815a8: mov     %r13,0x10(%rsp)
  0x00007fafb8c815ad: mov     %r14,0x8(%rsp)
  0x00007fafb8c815b2: mov     %r15,(%rsp)
  0x00007fafb8c815b6: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c815c0: movabs  $0x7fafb8c81560,%rsi
  0x00007fafb8c815ca: mov     %rsp,%rdx
  0x00007fafb8c815cd: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c815d1: callq   0x7fafd7fdd230
  0x00007fafb8c815d6: hlt
  0x00007fafb8c815d7: movzbl  0x5(%r13),%ebx
  0x00007fafb8c815dc: add     $0x5,%r13
  0x00007fafb8c815e0: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c815ea: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c815ee: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c815f6: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c815fa: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c815fe: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c81606: je      0x7fafb8c8171f
  0x00007fafb8c8160c: callq   0x7fafb8c81616
  0x00007fafb8c81611: jmpq    0x7fafb8c816a8
  0x00007fafb8c81616: lea     0x8(%rsp),%rax
  0x00007fafb8c8161b: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c8161f: mov     %r15,%rdi
  0x00007fafb8c81622: vzeroupper
  0x00007fafb8c81625: mov     %rbp,0x330(%r15)
  0x00007fafb8c8162c: mov     %rax,0x320(%r15)
  0x00007fafb8c81633: test    $0xf,%esp
  0x00007fafb8c81639: je      0x7fafb8c81651
  0x00007fafb8c8163f: sub     $0x8,%rsp
  0x00007fafb8c81643: callq   0x7fafd7d80970
  0x00007fafb8c81648: add     $0x8,%rsp
  0x00007fafb8c8164c: jmpq    0x7fafb8c81656
  0x00007fafb8c81651: callq   0x7fafd7d80970
  0x00007fafb8c81656: movabs  $0x0,%r10
  0x00007fafb8c81660: mov     %r10,0x320(%r15)
  0x00007fafb8c81667: movabs  $0x0,%r10
  0x00007fafb8c81671: mov     %r10,0x330(%r15)
  0x00007fafb8c81678: movabs  $0x0,%r10
  0x00007fafb8c81682: mov     %r10,0x328(%r15)
  0x00007fafb8c81689: vzeroupper
  0x00007fafb8c8168c: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c81694: je      0x7fafb8c8169f
  0x00007fafb8c8169a: jmpq    0x7fafb8c5c780
  0x00007fafb8c8169f: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c816a3: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c816a7: retq
  0x00007fafb8c816a8: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c816ad: sub     $0x80,%rsp
  0x00007fafb8c816b4: mov     %rax,0x78(%rsp)
  0x00007fafb8c816b9: mov     %rcx,0x70(%rsp)
  0x00007fafb8c816be: mov     %rdx,0x68(%rsp)
  0x00007fafb8c816c3: mov     %rbx,0x60(%rsp)
  0x00007fafb8c816c8: mov     %rbp,0x50(%rsp)
  0x00007fafb8c816cd: mov     %rsi,0x48(%rsp)
  0x00007fafb8c816d2: mov     %rdi,0x40(%rsp)
  0x00007fafb8c816d7: mov     %r8,0x38(%rsp)
  0x00007fafb8c816dc: mov     %r9,0x30(%rsp)
  0x00007fafb8c816e1: mov     %r10,0x28(%rsp)
  0x00007fafb8c816e6: mov     %r11,0x20(%rsp)
  0x00007fafb8c816eb: mov     %r12,0x18(%rsp)
  0x00007fafb8c816f0: mov     %r13,0x10(%rsp)
  0x00007fafb8c816f5: mov     %r14,0x8(%rsp)
  0x00007fafb8c816fa: mov     %r15,(%rsp)
  0x00007fafb8c816fe: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c81708: movabs  $0x7fafb8c816a8,%rsi
  0x00007fafb8c81712: mov     %rsp,%rdx
  0x00007fafb8c81715: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c81719: callq   0x7fafd7fdd230
  0x00007fafb8c8171e: hlt
  0x00007fafb8c8171f: movzbl  0x5(%r13),%ebx
  0x00007fafb8c81724: add     $0x5,%r13
  0x00007fafb8c81728: movabs  $0x7fafd89a7080,%r10
  0x00007fafb8c81732: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c81736: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c8173e: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c81742: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c81746: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c8174e: je      0x7fafb8c81867
  0x00007fafb8c81754: callq   0x7fafb8c8175e
  0x00007fafb8c81759: jmpq    0x7fafb8c817f0
  0x00007fafb8c8175e: lea     0x8(%rsp),%rax
  0x00007fafb8c81763: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c81767: mov     %r15,%rdi
  0x00007fafb8c8176a: vzeroupper
  0x00007fafb8c8176d: mov     %rbp,0x330(%r15)
  0x00007fafb8c81774: mov     %rax,0x320(%r15)
  0x00007fafb8c8177b: test    $0xf,%esp
  0x00007fafb8c81781: je      0x7fafb8c81799
  0x00007fafb8c81787: sub     $0x8,%rsp
  0x00007fafb8c8178b: callq   0x7fafd7d80970
  0x00007fafb8c81790: add     $0x8,%rsp
  0x00007fafb8c81794: jmpq    0x7fafb8c8179e
  0x00007fafb8c81799: callq   0x7fafd7d80970
  0x00007fafb8c8179e: movabs  $0x0,%r10
  0x00007fafb8c817a8: mov     %r10,0x320(%r15)
  0x00007fafb8c817af: movabs  $0x0,%r10
  0x00007fafb8c817b9: mov     %r10,0x330(%r15)
  0x00007fafb8c817c0: movabs  $0x0,%r10
  0x00007fafb8c817ca: mov     %r10,0x328(%r15)
  0x00007fafb8c817d1: vzeroupper
  0x00007fafb8c817d4: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c817dc: je      0x7fafb8c817e7
  0x00007fafb8c817e2: jmpq    0x7fafb8c5c780
  0x00007fafb8c817e7: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c817eb: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c817ef: retq
  0x00007fafb8c817f0: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c817f5: sub     $0x80,%rsp
  0x00007fafb8c817fc: mov     %rax,0x78(%rsp)
  0x00007fafb8c81801: mov     %rcx,0x70(%rsp)
  0x00007fafb8c81806: mov     %rdx,0x68(%rsp)
  0x00007fafb8c8180b: mov     %rbx,0x60(%rsp)
  0x00007fafb8c81810: mov     %rbp,0x50(%rsp)
  0x00007fafb8c81815: mov     %rsi,0x48(%rsp)
  0x00007fafb8c8181a: mov     %rdi,0x40(%rsp)
  0x00007fafb8c8181f: mov     %r8,0x38(%rsp)
  0x00007fafb8c81824: mov     %r9,0x30(%rsp)
  0x00007fafb8c81829: mov     %r10,0x28(%rsp)
  0x00007fafb8c8182e: mov     %r11,0x20(%rsp)
  0x00007fafb8c81833: mov     %r12,0x18(%rsp)
  0x00007fafb8c81838: mov     %r13,0x10(%rsp)
  0x00007fafb8c8183d: mov     %r14,0x8(%rsp)
  0x00007fafb8c81842: mov     %r15,(%rsp)
  0x00007fafb8c81846: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c81850: movabs  $0x7fafb8c817f0,%rsi
  0x00007fafb8c8185a: mov     %rsp,%rdx
  0x00007fafb8c8185d: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c81861: callq   0x7fafd7fdd230
  0x00007fafb8c81866: hlt
  0x00007fafb8c81867: movzbl  0x5(%r13),%ebx
  0x00007fafb8c8186c: add     $0x5,%r13
  0x00007fafb8c81870: movabs  $0x7fafd89a6880,%r10
  0x00007fafb8c8187a: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c8187e: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c81886: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c8188a: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c8188e: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c81896: je      0x7fafb8c819af
  0x00007fafb8c8189c: callq   0x7fafb8c818a6
  0x00007fafb8c818a1: jmpq    0x7fafb8c81938
  0x00007fafb8c818a6: lea     0x8(%rsp),%rax
  0x00007fafb8c818ab: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c818af: mov     %r15,%rdi
  0x00007fafb8c818b2: vzeroupper
  0x00007fafb8c818b5: mov     %rbp,0x330(%r15)
  0x00007fafb8c818bc: mov     %rax,0x320(%r15)
  0x00007fafb8c818c3: test    $0xf,%esp
  0x00007fafb8c818c9: je      0x7fafb8c818e1
  0x00007fafb8c818cf: sub     $0x8,%rsp
  0x00007fafb8c818d3: callq   0x7fafd7d80970
  0x00007fafb8c818d8: add     $0x8,%rsp
  0x00007fafb8c818dc: jmpq    0x7fafb8c818e6
  0x00007fafb8c818e1: callq   0x7fafd7d80970
  0x00007fafb8c818e6: movabs  $0x0,%r10
  0x00007fafb8c818f0: mov     %r10,0x320(%r15)
  0x00007fafb8c818f7: movabs  $0x0,%r10
  0x00007fafb8c81901: mov     %r10,0x330(%r15)
  0x00007fafb8c81908: movabs  $0x0,%r10
  0x00007fafb8c81912: mov     %r10,0x328(%r15)
  0x00007fafb8c81919: vzeroupper
  0x00007fafb8c8191c: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c81924: je      0x7fafb8c8192f
  0x00007fafb8c8192a: jmpq    0x7fafb8c5c780
  0x00007fafb8c8192f: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c81933: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c81937: retq
  0x00007fafb8c81938: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c8193d: sub     $0x80,%rsp
  0x00007fafb8c81944: mov     %rax,0x78(%rsp)
  0x00007fafb8c81949: mov     %rcx,0x70(%rsp)
  0x00007fafb8c8194e: mov     %rdx,0x68(%rsp)
  0x00007fafb8c81953: mov     %rbx,0x60(%rsp)
  0x00007fafb8c81958: mov     %rbp,0x50(%rsp)
  0x00007fafb8c8195d: mov     %rsi,0x48(%rsp)
  0x00007fafb8c81962: mov     %rdi,0x40(%rsp)
  0x00007fafb8c81967: mov     %r8,0x38(%rsp)
  0x00007fafb8c8196c: mov     %r9,0x30(%rsp)
  0x00007fafb8c81971: mov     %r10,0x28(%rsp)
  0x00007fafb8c81976: mov     %r11,0x20(%rsp)
  0x00007fafb8c8197b: mov     %r12,0x18(%rsp)
  0x00007fafb8c81980: mov     %r13,0x10(%rsp)
  0x00007fafb8c81985: mov     %r14,0x8(%rsp)
  0x00007fafb8c8198a: mov     %r15,(%rsp)
  0x00007fafb8c8198e: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c81998: movabs  $0x7fafb8c81938,%rsi
  0x00007fafb8c819a2: mov     %rsp,%rdx
  0x00007fafb8c819a5: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c819a9: callq   0x7fafd7fdd230
  0x00007fafb8c819ae: hlt
  0x00007fafb8c819af: movzbl  0x5(%r13),%ebx
  0x00007fafb8c819b4: add     $0x5,%r13
  0x00007fafb8c819b8: movabs  $0x7fafd89a6080,%r10
  0x00007fafb8c819c2: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c819c6: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c819ce: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c819d2: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c819d6: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c819de: je      0x7fafb8c81af7
  0x00007fafb8c819e4: callq   0x7fafb8c819ee
  0x00007fafb8c819e9: jmpq    0x7fafb8c81a80
  0x00007fafb8c819ee: lea     0x8(%rsp),%rax
  0x00007fafb8c819f3: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c819f7: mov     %r15,%rdi
  0x00007fafb8c819fa: vzeroupper
  0x00007fafb8c819fd: mov     %rbp,0x330(%r15)
  0x00007fafb8c81a04: mov     %rax,0x320(%r15)
  0x00007fafb8c81a0b: test    $0xf,%esp
  0x00007fafb8c81a11: je      0x7fafb8c81a29
  0x00007fafb8c81a17: sub     $0x8,%rsp
  0x00007fafb8c81a1b: callq   0x7fafd7d80970
  0x00007fafb8c81a20: add     $0x8,%rsp
  0x00007fafb8c81a24: jmpq    0x7fafb8c81a2e
  0x00007fafb8c81a29: callq   0x7fafd7d80970
  0x00007fafb8c81a2e: movabs  $0x0,%r10
  0x00007fafb8c81a38: mov     %r10,0x320(%r15)
  0x00007fafb8c81a3f: movabs  $0x0,%r10
  0x00007fafb8c81a49: mov     %r10,0x330(%r15)
  0x00007fafb8c81a50: movabs  $0x0,%r10
  0x00007fafb8c81a5a: mov     %r10,0x328(%r15)
  0x00007fafb8c81a61: vzeroupper
  0x00007fafb8c81a64: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c81a6c: je      0x7fafb8c81a77
  0x00007fafb8c81a72: jmpq    0x7fafb8c5c780
  0x00007fafb8c81a77: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c81a7b: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c81a7f: retq
  0x00007fafb8c81a80: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c81a85: sub     $0x80,%rsp
  0x00007fafb8c81a8c: mov     %rax,0x78(%rsp)
  0x00007fafb8c81a91: mov     %rcx,0x70(%rsp)
  0x00007fafb8c81a96: mov     %rdx,0x68(%rsp)
  0x00007fafb8c81a9b: mov     %rbx,0x60(%rsp)
  0x00007fafb8c81aa0: mov     %rbp,0x50(%rsp)
  0x00007fafb8c81aa5: mov     %rsi,0x48(%rsp)
  0x00007fafb8c81aaa: mov     %rdi,0x40(%rsp)
  0x00007fafb8c81aaf: mov     %r8,0x38(%rsp)
  0x00007fafb8c81ab4: mov     %r9,0x30(%rsp)
  0x00007fafb8c81ab9: mov     %r10,0x28(%rsp)
  0x00007fafb8c81abe: mov     %r11,0x20(%rsp)
  0x00007fafb8c81ac3: mov     %r12,0x18(%rsp)
  0x00007fafb8c81ac8: mov     %r13,0x10(%rsp)
  0x00007fafb8c81acd: mov     %r14,0x8(%rsp)
  0x00007fafb8c81ad2: mov     %r15,(%rsp)
  0x00007fafb8c81ad6: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c81ae0: movabs  $0x7fafb8c81a80,%rsi
  0x00007fafb8c81aea: mov     %rsp,%rdx
  0x00007fafb8c81aed: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c81af1: callq   0x7fafd7fdd230
  0x00007fafb8c81af6: hlt
  0x00007fafb8c81af7: movzbl  0x5(%r13),%ebx
  0x00007fafb8c81afc: add     $0x5,%r13
  0x00007fafb8c81b00: movabs  $0x7fafd89a7880,%r10
  0x00007fafb8c81b0a: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c81b0e: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c81b16: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c81b1a: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c81b1e: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c81b26: je      0x7fafb8c81c3f
  0x00007fafb8c81b2c: callq   0x7fafb8c81b36
  0x00007fafb8c81b31: jmpq    0x7fafb8c81bc8
  0x00007fafb8c81b36: lea     0x8(%rsp),%rax
  0x00007fafb8c81b3b: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c81b3f: mov     %r15,%rdi
  0x00007fafb8c81b42: vzeroupper
  0x00007fafb8c81b45: mov     %rbp,0x330(%r15)
  0x00007fafb8c81b4c: mov     %rax,0x320(%r15)
  0x00007fafb8c81b53: test    $0xf,%esp
  0x00007fafb8c81b59: je      0x7fafb8c81b71
  0x00007fafb8c81b5f: sub     $0x8,%rsp
  0x00007fafb8c81b63: callq   0x7fafd7d80970
  0x00007fafb8c81b68: add     $0x8,%rsp
  0x00007fafb8c81b6c: jmpq    0x7fafb8c81b76
  0x00007fafb8c81b71: callq   0x7fafd7d80970
  0x00007fafb8c81b76: movabs  $0x0,%r10
  0x00007fafb8c81b80: mov     %r10,0x320(%r15)
  0x00007fafb8c81b87: movabs  $0x0,%r10
  0x00007fafb8c81b91: mov     %r10,0x330(%r15)
  0x00007fafb8c81b98: movabs  $0x0,%r10
  0x00007fafb8c81ba2: mov     %r10,0x328(%r15)
  0x00007fafb8c81ba9: vzeroupper
  0x00007fafb8c81bac: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c81bb4: je      0x7fafb8c81bbf
  0x00007fafb8c81bba: jmpq    0x7fafb8c5c780
  0x00007fafb8c81bbf: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c81bc3: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c81bc7: retq
  0x00007fafb8c81bc8: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c81bcd: sub     $0x80,%rsp
  0x00007fafb8c81bd4: mov     %rax,0x78(%rsp)
  0x00007fafb8c81bd9: mov     %rcx,0x70(%rsp)
  0x00007fafb8c81bde: mov     %rdx,0x68(%rsp)
  0x00007fafb8c81be3: mov     %rbx,0x60(%rsp)
  0x00007fafb8c81be8: mov     %rbp,0x50(%rsp)
  0x00007fafb8c81bed: mov     %rsi,0x48(%rsp)
  0x00007fafb8c81bf2: mov     %rdi,0x40(%rsp)
  0x00007fafb8c81bf7: mov     %r8,0x38(%rsp)
  0x00007fafb8c81bfc: mov     %r9,0x30(%rsp)
  0x00007fafb8c81c01: mov     %r10,0x28(%rsp)
  0x00007fafb8c81c06: mov     %r11,0x20(%rsp)
  0x00007fafb8c81c0b: mov     %r12,0x18(%rsp)
  0x00007fafb8c81c10: mov     %r13,0x10(%rsp)
  0x00007fafb8c81c15: mov     %r14,0x8(%rsp)
  0x00007fafb8c81c1a: mov     %r15,(%rsp)
  0x00007fafb8c81c1e: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c81c28: movabs  $0x7fafb8c81bc8,%rsi
  0x00007fafb8c81c32: mov     %rsp,%rdx
  0x00007fafb8c81c35: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c81c39: callq   0x7fafd7fdd230
  0x00007fafb8c81c3e: hlt
  0x00007fafb8c81c3f: movzbl  0x6(%r13),%ebx
  0x00007fafb8c81c44: add     $0x6,%r13
  0x00007fafb8c81c48: movabs  $0x7fafd89a5880,%r10
  0x00007fafb8c81c52: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c81c56: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c81c5e: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c81c62: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c81c66: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c81c6e: je      0x7fafb8c81d87
  0x00007fafb8c81c74: callq   0x7fafb8c81c7e
  0x00007fafb8c81c79: jmpq    0x7fafb8c81d10
  0x00007fafb8c81c7e: lea     0x8(%rsp),%rax
  0x00007fafb8c81c83: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c81c87: mov     %r15,%rdi
  0x00007fafb8c81c8a: vzeroupper
  0x00007fafb8c81c8d: mov     %rbp,0x330(%r15)
  0x00007fafb8c81c94: mov     %rax,0x320(%r15)
  0x00007fafb8c81c9b: test    $0xf,%esp
  0x00007fafb8c81ca1: je      0x7fafb8c81cb9
  0x00007fafb8c81ca7: sub     $0x8,%rsp
  0x00007fafb8c81cab: callq   0x7fafd7d80970
  0x00007fafb8c81cb0: add     $0x8,%rsp
  0x00007fafb8c81cb4: jmpq    0x7fafb8c81cbe
  0x00007fafb8c81cb9: callq   0x7fafd7d80970
  0x00007fafb8c81cbe: movabs  $0x0,%r10
  0x00007fafb8c81cc8: mov     %r10,0x320(%r15)
  0x00007fafb8c81ccf: movabs  $0x0,%r10
  0x00007fafb8c81cd9: mov     %r10,0x330(%r15)
  0x00007fafb8c81ce0: movabs  $0x0,%r10
  0x00007fafb8c81cea: mov     %r10,0x328(%r15)
  0x00007fafb8c81cf1: vzeroupper
  0x00007fafb8c81cf4: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c81cfc: je      0x7fafb8c81d07
  0x00007fafb8c81d02: jmpq    0x7fafb8c5c780
  0x00007fafb8c81d07: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c81d0b: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c81d0f: retq
  0x00007fafb8c81d10: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c81d15: sub     $0x80,%rsp
  0x00007fafb8c81d1c: mov     %rax,0x78(%rsp)
  0x00007fafb8c81d21: mov     %rcx,0x70(%rsp)
  0x00007fafb8c81d26: mov     %rdx,0x68(%rsp)
  0x00007fafb8c81d2b: mov     %rbx,0x60(%rsp)
  0x00007fafb8c81d30: mov     %rbp,0x50(%rsp)
  0x00007fafb8c81d35: mov     %rsi,0x48(%rsp)
  0x00007fafb8c81d3a: mov     %rdi,0x40(%rsp)
  0x00007fafb8c81d3f: mov     %r8,0x38(%rsp)
  0x00007fafb8c81d44: mov     %r9,0x30(%rsp)
  0x00007fafb8c81d49: mov     %r10,0x28(%rsp)
  0x00007fafb8c81d4e: mov     %r11,0x20(%rsp)
  0x00007fafb8c81d53: mov     %r12,0x18(%rsp)
  0x00007fafb8c81d58: mov     %r13,0x10(%rsp)
  0x00007fafb8c81d5d: mov     %r14,0x8(%rsp)
  0x00007fafb8c81d62: mov     %r15,(%rsp)
  0x00007fafb8c81d66: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c81d70: movabs  $0x7fafb8c81d10,%rsi
  0x00007fafb8c81d7a: mov     %rsp,%rdx
  0x00007fafb8c81d7d: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c81d81: callq   0x7fafd7fdd230
  0x00007fafb8c81d86: hlt
  0x00007fafb8c81d87: movzbl  0x6(%r13),%ebx
  0x00007fafb8c81d8c: add     $0x6,%r13
  0x00007fafb8c81d90: movabs  $0x7fafd89a8080,%r10
  0x00007fafb8c81d9a: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c81d9e: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c81da6: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c81daa: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c81dae: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c81db6: je      0x7fafb8c81ecf
  0x00007fafb8c81dbc: callq   0x7fafb8c81dc6
  0x00007fafb8c81dc1: jmpq    0x7fafb8c81e58
  0x00007fafb8c81dc6: lea     0x8(%rsp),%rax
  0x00007fafb8c81dcb: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c81dcf: mov     %r15,%rdi
  0x00007fafb8c81dd2: vzeroupper
  0x00007fafb8c81dd5: mov     %rbp,0x330(%r15)
  0x00007fafb8c81ddc: mov     %rax,0x320(%r15)
  0x00007fafb8c81de3: test    $0xf,%esp
  0x00007fafb8c81de9: je      0x7fafb8c81e01
  0x00007fafb8c81def: sub     $0x8,%rsp
  0x00007fafb8c81df3: callq   0x7fafd7d80970
  0x00007fafb8c81df8: add     $0x8,%rsp
  0x00007fafb8c81dfc: jmpq    0x7fafb8c81e06
  0x00007fafb8c81e01: callq   0x7fafd7d80970
  0x00007fafb8c81e06: movabs  $0x0,%r10
  0x00007fafb8c81e10: mov     %r10,0x320(%r15)
  0x00007fafb8c81e17: movabs  $0x0,%r10
  0x00007fafb8c81e21: mov     %r10,0x330(%r15)
  0x00007fafb8c81e28: movabs  $0x0,%r10
  0x00007fafb8c81e32: mov     %r10,0x328(%r15)
  0x00007fafb8c81e39: vzeroupper
  0x00007fafb8c81e3c: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c81e44: je      0x7fafb8c81e4f
  0x00007fafb8c81e4a: jmpq    0x7fafb8c5c780
  0x00007fafb8c81e4f: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c81e53: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c81e57: retq
  0x00007fafb8c81e58: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c81e5d: sub     $0x80,%rsp
  0x00007fafb8c81e64: mov     %rax,0x78(%rsp)
  0x00007fafb8c81e69: mov     %rcx,0x70(%rsp)
  0x00007fafb8c81e6e: mov     %rdx,0x68(%rsp)
  0x00007fafb8c81e73: mov     %rbx,0x60(%rsp)
  0x00007fafb8c81e78: mov     %rbp,0x50(%rsp)
  0x00007fafb8c81e7d: mov     %rsi,0x48(%rsp)
  0x00007fafb8c81e82: mov     %rdi,0x40(%rsp)
  0x00007fafb8c81e87: mov     %r8,0x38(%rsp)
  0x00007fafb8c81e8c: mov     %r9,0x30(%rsp)
  0x00007fafb8c81e91: mov     %r10,0x28(%rsp)
  0x00007fafb8c81e96: mov     %r11,0x20(%rsp)
  0x00007fafb8c81e9b: mov     %r12,0x18(%rsp)
  0x00007fafb8c81ea0: mov     %r13,0x10(%rsp)
  0x00007fafb8c81ea5: mov     %r14,0x8(%rsp)
  0x00007fafb8c81eaa: mov     %r15,(%rsp)
  0x00007fafb8c81eae: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c81eb8: movabs  $0x7fafb8c81e58,%rsi
  0x00007fafb8c81ec2: mov     %rsp,%rdx
  0x00007fafb8c81ec5: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c81ec9: callq   0x7fafd7fdd230
  0x00007fafb8c81ece: hlt
  0x00007fafb8c81ecf: movzbl  0x6(%r13),%ebx
  0x00007fafb8c81ed4: add     $0x6,%r13
  0x00007fafb8c81ed8: movabs  $0x7fafd89a7080,%r10
  0x00007fafb8c81ee2: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c81ee6: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c81eee: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c81ef2: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c81ef6: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c81efe: je      0x7fafb8c82017
  0x00007fafb8c81f04: callq   0x7fafb8c81f0e
  0x00007fafb8c81f09: jmpq    0x7fafb8c81fa0
  0x00007fafb8c81f0e: lea     0x8(%rsp),%rax
  0x00007fafb8c81f13: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c81f17: mov     %r15,%rdi
  0x00007fafb8c81f1a: vzeroupper
  0x00007fafb8c81f1d: mov     %rbp,0x330(%r15)
  0x00007fafb8c81f24: mov     %rax,0x320(%r15)
  0x00007fafb8c81f2b: test    $0xf,%esp
  0x00007fafb8c81f31: je      0x7fafb8c81f49
  0x00007fafb8c81f37: sub     $0x8,%rsp
  0x00007fafb8c81f3b: callq   0x7fafd7d80970
  0x00007fafb8c81f40: add     $0x8,%rsp
  0x00007fafb8c81f44: jmpq    0x7fafb8c81f4e
  0x00007fafb8c81f49: callq   0x7fafd7d80970
  0x00007fafb8c81f4e: movabs  $0x0,%r10
  0x00007fafb8c81f58: mov     %r10,0x320(%r15)
  0x00007fafb8c81f5f: movabs  $0x0,%r10
  0x00007fafb8c81f69: mov     %r10,0x330(%r15)
  0x00007fafb8c81f70: movabs  $0x0,%r10
  0x00007fafb8c81f7a: mov     %r10,0x328(%r15)
  0x00007fafb8c81f81: vzeroupper
  0x00007fafb8c81f84: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c81f8c: je      0x7fafb8c81f97
  0x00007fafb8c81f92: jmpq    0x7fafb8c5c780
  0x00007fafb8c81f97: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c81f9b: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c81f9f: retq
  0x00007fafb8c81fa0: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c81fa5: sub     $0x80,%rsp
  0x00007fafb8c81fac: mov     %rax,0x78(%rsp)
  0x00007fafb8c81fb1: mov     %rcx,0x70(%rsp)
  0x00007fafb8c81fb6: mov     %rdx,0x68(%rsp)
  0x00007fafb8c81fbb: mov     %rbx,0x60(%rsp)
  0x00007fafb8c81fc0: mov     %rbp,0x50(%rsp)
  0x00007fafb8c81fc5: mov     %rsi,0x48(%rsp)
  0x00007fafb8c81fca: mov     %rdi,0x40(%rsp)
  0x00007fafb8c81fcf: mov     %r8,0x38(%rsp)
  0x00007fafb8c81fd4: mov     %r9,0x30(%rsp)
  0x00007fafb8c81fd9: mov     %r10,0x28(%rsp)
  0x00007fafb8c81fde: mov     %r11,0x20(%rsp)
  0x00007fafb8c81fe3: mov     %r12,0x18(%rsp)
  0x00007fafb8c81fe8: mov     %r13,0x10(%rsp)
  0x00007fafb8c81fed: mov     %r14,0x8(%rsp)
  0x00007fafb8c81ff2: mov     %r15,(%rsp)
  0x00007fafb8c81ff6: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c82000: movabs  $0x7fafb8c81fa0,%rsi
  0x00007fafb8c8200a: mov     %rsp,%rdx
  0x00007fafb8c8200d: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c82011: callq   0x7fafd7fdd230
  0x00007fafb8c82016: hlt
  0x00007fafb8c82017: movzbl  0x6(%r13),%ebx
  0x00007fafb8c8201c: add     $0x6,%r13
  0x00007fafb8c82020: movabs  $0x7fafd89a6880,%r10
  0x00007fafb8c8202a: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c8202e: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c82036: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c8203a: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c8203e: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c82046: je      0x7fafb8c8215f
  0x00007fafb8c8204c: callq   0x7fafb8c82056
  0x00007fafb8c82051: jmpq    0x7fafb8c820e8
  0x00007fafb8c82056: lea     0x8(%rsp),%rax
  0x00007fafb8c8205b: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c8205f: mov     %r15,%rdi
  0x00007fafb8c82062: vzeroupper
  0x00007fafb8c82065: mov     %rbp,0x330(%r15)
  0x00007fafb8c8206c: mov     %rax,0x320(%r15)
  0x00007fafb8c82073: test    $0xf,%esp
  0x00007fafb8c82079: je      0x7fafb8c82091
  0x00007fafb8c8207f: sub     $0x8,%rsp
  0x00007fafb8c82083: callq   0x7fafd7d80970
  0x00007fafb8c82088: add     $0x8,%rsp
  0x00007fafb8c8208c: jmpq    0x7fafb8c82096
  0x00007fafb8c82091: callq   0x7fafd7d80970
  0x00007fafb8c82096: movabs  $0x0,%r10
  0x00007fafb8c820a0: mov     %r10,0x320(%r15)
  0x00007fafb8c820a7: movabs  $0x0,%r10
  0x00007fafb8c820b1: mov     %r10,0x330(%r15)
  0x00007fafb8c820b8: movabs  $0x0,%r10
  0x00007fafb8c820c2: mov     %r10,0x328(%r15)
  0x00007fafb8c820c9: vzeroupper
  0x00007fafb8c820cc: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c820d4: je      0x7fafb8c820df
  0x00007fafb8c820da: jmpq    0x7fafb8c5c780
  0x00007fafb8c820df: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c820e3: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c820e7: retq
  0x00007fafb8c820e8: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c820ed: sub     $0x80,%rsp
  0x00007fafb8c820f4: mov     %rax,0x78(%rsp)
  0x00007fafb8c820f9: mov     %rcx,0x70(%rsp)
  0x00007fafb8c820fe: mov     %rdx,0x68(%rsp)
  0x00007fafb8c82103: mov     %rbx,0x60(%rsp)
  0x00007fafb8c82108: mov     %rbp,0x50(%rsp)
  0x00007fafb8c8210d: mov     %rsi,0x48(%rsp)
  0x00007fafb8c82112: mov     %rdi,0x40(%rsp)
  0x00007fafb8c82117: mov     %r8,0x38(%rsp)
  0x00007fafb8c8211c: mov     %r9,0x30(%rsp)
  0x00007fafb8c82121: mov     %r10,0x28(%rsp)
  0x00007fafb8c82126: mov     %r11,0x20(%rsp)
  0x00007fafb8c8212b: mov     %r12,0x18(%rsp)
  0x00007fafb8c82130: mov     %r13,0x10(%rsp)
  0x00007fafb8c82135: mov     %r14,0x8(%rsp)
  0x00007fafb8c8213a: mov     %r15,(%rsp)
  0x00007fafb8c8213e: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c82148: movabs  $0x7fafb8c820e8,%rsi
  0x00007fafb8c82152: mov     %rsp,%rdx
  0x00007fafb8c82155: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c82159: callq   0x7fafd7fdd230
  0x00007fafb8c8215e: hlt
  0x00007fafb8c8215f: movzbl  0x6(%r13),%ebx
  0x00007fafb8c82164: add     $0x6,%r13
  0x00007fafb8c82168: movabs  $0x7fafd89a6080,%r10
  0x00007fafb8c82172: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c82176: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c8217e: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c82182: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c82186: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c8218e: je      0x7fafb8c822a7
  0x00007fafb8c82194: callq   0x7fafb8c8219e
  0x00007fafb8c82199: jmpq    0x7fafb8c82230
  0x00007fafb8c8219e: lea     0x8(%rsp),%rax
  0x00007fafb8c821a3: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c821a7: mov     %r15,%rdi
  0x00007fafb8c821aa: vzeroupper
  0x00007fafb8c821ad: mov     %rbp,0x330(%r15)
  0x00007fafb8c821b4: mov     %rax,0x320(%r15)
  0x00007fafb8c821bb: test    $0xf,%esp
  0x00007fafb8c821c1: je      0x7fafb8c821d9
  0x00007fafb8c821c7: sub     $0x8,%rsp
  0x00007fafb8c821cb: callq   0x7fafd7d80970
  0x00007fafb8c821d0: add     $0x8,%rsp
  0x00007fafb8c821d4: jmpq    0x7fafb8c821de
  0x00007fafb8c821d9: callq   0x7fafd7d80970
  0x00007fafb8c821de: movabs  $0x0,%r10
  0x00007fafb8c821e8: mov     %r10,0x320(%r15)
  0x00007fafb8c821ef: movabs  $0x0,%r10
  0x00007fafb8c821f9: mov     %r10,0x330(%r15)
  0x00007fafb8c82200: movabs  $0x0,%r10
  0x00007fafb8c8220a: mov     %r10,0x328(%r15)
  0x00007fafb8c82211: vzeroupper
  0x00007fafb8c82214: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c8221c: je      0x7fafb8c82227
  0x00007fafb8c82222: jmpq    0x7fafb8c5c780
  0x00007fafb8c82227: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c8222b: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c8222f: retq
  0x00007fafb8c82230: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c82235: sub     $0x80,%rsp
  0x00007fafb8c8223c: mov     %rax,0x78(%rsp)
  0x00007fafb8c82241: mov     %rcx,0x70(%rsp)
  0x00007fafb8c82246: mov     %rdx,0x68(%rsp)
  0x00007fafb8c8224b: mov     %rbx,0x60(%rsp)
  0x00007fafb8c82250: mov     %rbp,0x50(%rsp)
  0x00007fafb8c82255: mov     %rsi,0x48(%rsp)
  0x00007fafb8c8225a: mov     %rdi,0x40(%rsp)
  0x00007fafb8c8225f: mov     %r8,0x38(%rsp)
  0x00007fafb8c82264: mov     %r9,0x30(%rsp)
  0x00007fafb8c82269: mov     %r10,0x28(%rsp)
  0x00007fafb8c8226e: mov     %r11,0x20(%rsp)
  0x00007fafb8c82273: mov     %r12,0x18(%rsp)
  0x00007fafb8c82278: mov     %r13,0x10(%rsp)
  0x00007fafb8c8227d: mov     %r14,0x8(%rsp)
  0x00007fafb8c82282: mov     %r15,(%rsp)
  0x00007fafb8c82286: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c82290: movabs  $0x7fafb8c82230,%rsi
  0x00007fafb8c8229a: mov     %rsp,%rdx
  0x00007fafb8c8229d: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c822a1: callq   0x7fafd7fdd230
  0x00007fafb8c822a6: hlt
  0x00007fafb8c822a7: movzbl  0x6(%r13),%ebx
  0x00007fafb8c822ac: add     $0x6,%r13
  0x00007fafb8c822b0: movabs  $0x7fafd89a7880,%r10
  0x00007fafb8c822ba: jmpq    *(%r10,%rbx,8)
  0x00007fafb8c822be: movq    $0x0,0xfffffffffffffff0(%rbp)
  0x00007fafb8c822c6: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c822ca: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c822ce: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c822d6: je      0x7fafb8c823ef
  0x00007fafb8c822dc: callq   0x7fafb8c822e6
  0x00007fafb8c822e1: jmpq    0x7fafb8c82378
  0x00007fafb8c822e6: lea     0x8(%rsp),%rax
  0x00007fafb8c822eb: mov     %r13,0xffffffffffffffc0(%rbp)
  0x00007fafb8c822ef: mov     %r15,%rdi
  0x00007fafb8c822f2: vzeroupper
  0x00007fafb8c822f5: mov     %rbp,0x330(%r15)
  0x00007fafb8c822fc: mov     %rax,0x320(%r15)
  0x00007fafb8c82303: test    $0xf,%esp
  0x00007fafb8c82309: je      0x7fafb8c82321
  0x00007fafb8c8230f: sub     $0x8,%rsp
  0x00007fafb8c82313: callq   0x7fafd7d80970
  0x00007fafb8c82318: add     $0x8,%rsp
  0x00007fafb8c8231c: jmpq    0x7fafb8c82326
  0x00007fafb8c82321: callq   0x7fafd7d80970
  0x00007fafb8c82326: movabs  $0x0,%r10
  0x00007fafb8c82330: mov     %r10,0x320(%r15)
  0x00007fafb8c82337: movabs  $0x0,%r10
  0x00007fafb8c82341: mov     %r10,0x330(%r15)
  0x00007fafb8c82348: movabs  $0x0,%r10
  0x00007fafb8c82352: mov     %r10,0x328(%r15)
  0x00007fafb8c82359: vzeroupper
  0x00007fafb8c8235c: cmpq    $0x0,0x8(%r15)
  0x00007fafb8c82364: je      0x7fafb8c8236f
  0x00007fafb8c8236a: jmpq    0x7fafb8c5c780
  0x00007fafb8c8236f: mov     0xffffffffffffffc0(%rbp),%r13
  0x00007fafb8c82373: mov     0xffffffffffffffc8(%rbp),%r14
  0x00007fafb8c82377: retq
  0x00007fafb8c82378: mov     %rsp,0xffffffffffffffd8(%rsp)
  0x00007fafb8c8237d: sub     $0x80,%rsp
  0x00007fafb8c82384: mov     %rax,0x78(%rsp)
  0x00007fafb8c82389: mov     %rcx,0x70(%rsp)
  0x00007fafb8c8238e: mov     %rdx,0x68(%rsp)
  0x00007fafb8c82393: mov     %rbx,0x60(%rsp)
  0x00007fafb8c82398: mov     %rbp,0x50(%rsp)
  0x00007fafb8c8239d: mov     %rsi,0x48(%rsp)
  0x00007fafb8c823a2: mov     %rdi,0x40(%rsp)
  0x00007fafb8c823a7: mov     %r8,0x38(%rsp)
  0x00007fafb8c823ac: mov     %r9,0x30(%rsp)
  0x00007fafb8c823b1: mov     %r10,0x28(%rsp)
  0x00007fafb8c823b6: mov     %r11,0x20(%rsp)
  0x00007fafb8c823bb: mov     %r12,0x18(%rsp)
  0x00007fafb8c823c0: mov     %r13,0x10(%rsp)
  0x00007fafb8c823c5: mov     %r14,0x8(%rsp)
  0x00007fafb8c823ca: mov     %r15,(%rsp)
  0x00007fafb8c823ce: movabs  $0x7fafd83e15fe,%rdi
  0x00007fafb8c823d8: movabs  $0x7fafb8c82378,%rsi
  0x00007fafb8c823e2: mov     %rsp,%rdx
  0x00007fafb8c823e5: and     $0xfffffffffffffff0,%rsp
  0x00007fafb8c823e9: callq   0x7fafd7fdd230
  0x00007fafb8c823ee: hlt
  0x00007fafb8c823ef: jmpq    0x7fafb8c7823f
  0x00007fafb8c823f4: nopl    0x0(%rax)
  0x00007fafb8c823f8: add     %al,(%rax)
  0x00007fafb8c823fa: add     %al,(%rax)
  0x00007fafb8c823fc: add     %al,(%rax)
  0x00007fafb8c823fe: add     %al,(%rax)
----------------------------------------------------------------------

